<?php

session_start();
uses("server_DBConnection_dbLib");
uses("server_util_NodeNRC");
uses("server_util_arrayList");
uses("server_util_rfcLib");
// uses("services_financial_Budgeting");
global $ldaphost;
$ldaphost = "";

class bpc
{
	function __construct()
	{
		$this->db = $this->getDb("oramantis");
		// $rs = $this->db->execute("select value1 from spro where kode_spro = 'TELKOMLOK' ");
		// if ($row = $rs->FetchNextObject(false))
		// 	$this->lokasi = $row->value1;
		// else $this->lokasi = "10";
		
		$user = $_SESSION["user"];

		// $rs = $this->db->execute("select cfu from exs_karyawan where nik = '$user' ");
		// if ($row = $rs->FetchNextObject(false))
		// 	$this->cfu = $row->cfu;
		// else $this->cfu = "CFU0";

		$this->cleanUp();
		// $this->budgetService = new services_financial_Budgeting();
	}
	
	function hello($param)
	{
		$result = "Hello $param ";
		
		return $result;
	}
	function setId($userid, $session = null){
		error_log("setId $userid $session");

		//if (!isset($userid))
		{
			error_log("select username from bpc_sessions where sessions = '$session' and last_update > sysdate - INTERVAL '24' hour ");
			$db = new server_DBConnection_dbLib("oramantis");
			$rs = $db->execute("select username from bpc_sessions where sessions = :0 and last_update > sysdate - INTERVAL '24' hour ", array($session));
			error_log("Done Execute");
			if ($row = $rs->FetchNextObject(false)) {
				error_log("setId OKs");
				$userid = $row->username;
			} else return 0;

		}
		$this->userid = $userid;
		$this->session = $session;
		error_log("setId Here $userid $userid");
		// $rs = $this->db->execute("select cfu from exs_karyawan where nik = '$userid' ");
		// if ($row = $rs->FetchNextObject(false))
		// 	$this->cfu = $row->cfu;
		// else $this->cfu = "CFU0";
		

		$this->db->execute("update bpc_sessions set last_update = sysdate where sessions = '$session' and last_update > sysdate - INTERVAL '24' hour  ");
		// if (isset($this->budgetService))
		// 		$this->budgetService->setUserId($userid);
		return 1;
		
	}
	private function getDb()
	{
	
		if ($this->db == null)
		{
			$this->db = new server_DBConnection_dbLib("oramantis");
		}
		
		$this->dbLib = $this->db;
		return $this->db;
	}

	private function getSAPConnection($compCode, $isDev = null){
		$db = $this->getDb();
		if (isset($isDev)){
			$rs = $db->execute("select a.kode_lokasi, b.ip, b.sys_id, b.ins_num, b.sap_router, a.sapuser, a.sappwd  
									from bpc_conn a 
									inner join bpc_sapconn b on b.kode = a.KODE_SERVER_DEV
							where a.kode_lokasi ='$compCode' ");
		}else
			$rs = $db->execute("select a.kode_lokasi, b.ip, b.sys_id, b.ins_num, b.sap_router, a.sapuser, a.sappwd  
									from bpc_conn a 
									inner join bpc_sapconn b on b.kode = a.KODE_SERVER
							where a.kode_lokasi ='$compCode' ");

		if ($row = $rs->FetchNextObject(false)){
			//error_log("SAP ". json_encode($row));
			$router = $row->sap_router;
			$host = $row->ip;
			$sysnr = $row->sys_id;
			$clientid = $row->ins_num;
			$codePage = "1100";
			$this->sapuser = $row->sapuser;
			$this->sappwd = $row->sappwd;
			$rfc = new server_util_rfcLib();
			if ($router == "-")
				$router = "";
			$rfc->setConfig($router . $host, $sysnr, $clientid, $codePage);
		}else {
			$rfc = new server_util_rfcLib("rra/sap");
		}
		return $rfc;
	}

	function getDetailUserInfoFromPortal($nik){
        $db = new server_DBConnection_dbLib("orarra2");
		$periode = date('Ymd');
		$rs = $db->execute("select * from rra_karyawan_log where nik = '$nik' and endperiode > '$periode' order by periode desc");
        
        if ($row = $rs->FetchNextObject(false)){
            $result = json_encode((array)$row) ;
            error_log($result);
            return $result;
        }else return "{}";
		//return file_get_contents("http://10.65.10.184/organisasi/index.php?c=org&m=cariorg&key=$nik");
	}
	function createKlpAkses($klp, $data, $userid){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_klp_akses_m where kode_klp_akses = '$klp' ");
		foreach ($data as $key => $value) {
			 $sql->add("insert into bpc_klp_akses_m(kode_klp_akses, kode_form, user_id, tgl_input)
			 		values('". $klp."','". $value."', '$userid', now() ) ");
		}
		$ret = $db->execArraySQL($sql);
		return $ret;
	}
	function getListFormForKlp($klp){

	}
	function getCompCodeConsol(){
		$db = $this->getDb();

		$rs = $db->execute("select cocd from bpc_lokasi where flag_konsol = '1' ");
		if ($row = $rs->FetchNextObject(false)){
			return $row->cocd;
		}
		return "-";
	}
	function loginAP($user, $pass){
		$sql = "select  a.kode_klp_menu, a.nik, a.nama, a.pass, a.status_admin, a.klp_akses, a.kode_lokasi,b.nama as nmlok 
									, c.kode_ubis, d.kode_induk, c.kode_kota, c.kode_ba, c.kode_cc, c.status, c.cfu,  c.cocd 
							from exs_hakakses a 
								inner join bpc_lokasi b on b.kode_lokasi = a.kode_lokasi 
								inner join exs_karyawan c on c.nik = a.nik and c.kode_lokasi = a.kode_lokasi 
								left outer join (select kode_ubis, nama, kode_lokasi, kode_induk from exs_ubis union select kode_cc, nama, kode_lokasi, kode_induk from exs_cc) d on d.kode_ubis = c.kode_ubis and d.kode_lokasi = a.kode_lokasi
						where a.nik = '$user' ";
		error_log($sql);
		$rs = $this->db->execute($sql);
		/*
		$rs = $this->db->execute("select kode_klp_menu, nama, nik,  kode_lokasi, kode_ubis, kode_gubis,'-' as jabatan, pass
							from bpc_hakakses where nik = '$user' 
							union 
							select kode_klp_menu, nama, nik,  kode_lokasi, '-' as kode_ubis, '-' as kode_gubis,'-' as jabatan , pass
							from exs_hakakses where nik = '$user'  ");
		*/
		if ($row = $rs->FetchNextObject(false)){
			error_log($row->pass . " : ". md5($pass));
			if ($row->pass == $pass || $row->pass == md5($pass)){
				error_log("Masuk ");
				$row->pass = "-";
				return $row;
			}else return false;
		}else return false;
	}
	function get_client_ip() {
		$ipaddress = '';
		if (isset($_SERVER['HTTP_CLIENT_IP']))
			$ipaddress = $_SERVER['HTTP_CLIENT_IP'];
		else if(isset($_SERVER['HTTP_X_FORWARDED_FOR']))
			$ipaddress = $_SERVER['HTTP_X_FORWARDED_FOR'];
		else if(isset($_SERVER['HTTP_X_FORWARDED']))
			$ipaddress = $_SERVER['HTTP_X_FORWARDED'];
		else if(isset($_SERVER['HTTP_FORWARDED_FOR']))
			$ipaddress = $_SERVER['HTTP_FORWARDED_FOR'];
		else if(isset($_SERVER['HTTP_FORWARDED']))
			$ipaddress = $_SERVER['HTTP_FORWARDED'];
		else if(isset($_SERVER['REMOTE_ADDR']))
			$ipaddress = $_SERVER['REMOTE_ADDR'];
		else
			$ipaddress = 'UNKNOWN';
		return $ipaddress;
	}
	function login($user, $pass){
		try{
			global $ldaphost;
			$ldaphost = "";
			

			$this->cleanUp();
			$result = array("userdata" => "", "type" => 0, "msg" => "","periode" => "", "serverinfo" => array(),"portalinfo" =>array());
			$db = $this->getDb();
			//$ret = $this->db->connect();
			//if ($ret != "success") throw new Exception($ret);
		
			session_regenerate_id();  	
			
			$auth = $db->LDAP_auth($user, $pass, $ldaphost);	
			//error_log("LDAP Auht $auth "  );	

			if ($auth == 1){//$auth == 1
				//$detailPortal = json_decode($this->getDetailUserInfoFromPortal($user));
				//if (count($detailPortal->items) > 0)
                {
					/*
                    foreach ($detailPortal->items as $value){
						if ($value->NIK == $user){
							$kd_unit = strtoupper($value->KD_UNIT);
							$nama = $value->NAMA;
						}
						if ($value->NIK_POH == $user){
							$kd_unit = strtoupper($value->KD_UNIT);
						}
						$jabatanid = $value->OBJ_POSISI;
						$jabatan = str_replace("'","''", $value->VS_POSISI);
						$divisi  = $value->VS_DIVISI;
						$kota 	 = $value->KOTA_GEDUNG;
					}
                    */
                    //$jabatan = $detailPortal->jabatan;
                    //$loker = $detailPortal->loker;
                    //$divisi = $detailPortal->divisi;
					//$result["portalinfo"] = $detailPortal;
				}
				/*$rs = $this->db->db->execute("select distinct b.nama as nama, b.telkomnik as nik, a.KODE_KLP_MENU , C.kode_ubis, b.TELKOMOFFICECITY,'10'as kode_lokasi, '$jabatan' as jabatan,'-' as kode_gubis
									from BPC_USERAKSES a 
									inner join sppd_karyawan b on b.short_posisi = a.jabatan
									inner join jabatan c on c.telkomdivision = b.telkomdivision
								where b.telkomnik = '$user'");
					*/
               //error_log(json_encode($detailPortal));
			   /*
               $rs = $this->db->execute("select distinct b.nama as nama, b.telkomnik as nik, a.KODE_KLP_MENU , c.kode_ubis as kode_ubis, '$loker' as telkomofficecity, '10' as kode_lokasi, '$jabatan' as jabatan,'-' as kode_gubis
									from BPC_USERAKSES a 
                                    inner join sppd_karyawan b on b.short_posisi = a.jabatan
                                    inner join jabatan c on c.telkomdivision = b.telkomdivision
								where a.jabatan  = '$jabatan'");	
				*/
				$sql = "select  a.kode_klp_menu, a.nik, a.nama, '-' as pass, a.status_admin, a.klp_akses, a.kode_lokasi,b.nama as nmlok 
									, c.kode_ubis, d.kode_induk, c.kode_kota, c.kode_ba, c.cfu, c.status , c.cocd 
							from exs_hakakses a 
								inner join bpc_lokasi b on b.kode_lokasi = a.kode_lokasi 
								inner join exs_karyawan c on c.nik = a.nik and c.kode_lokasi = a.kode_lokasi 
								left outer join (select kode_ubis, nama, kode_lokasi, kode_induk from exs_ubis union select kode_cc, nama, kode_lokasi, kode_induk from exs_cc) d on d.kode_ubis = c.kode_ubis and d.kode_lokasi = a.kode_lokasi
						where a.nik = '$user' ";
				
				$rs = $this->db->execute($sql);
				if ($row = $rs->FetchNextObject(false))
				{
					$dit = $this->getDirektorat($row->kode_ubis);
					$row->kode_gubis = $dit;
					$result["userdata"] = (array) $row;
					//error_log(json_encode($row));
				}else {
					{		
						$result["msg"] = "User Profile tidak ditemukan di BPC";		
						$result["type"] = 1;
						throw new Exception("User Profile tidak ditemukan di BPC");
					}
				}
					
				$loginOk = true;
				
			}else {
				 $row = $this->loginAP($user, $pass);
				 error_log(json_encode($row));
				 if ($row){
				 	
				 	$result["userdata"] = (array) $row;
				 	$loginOk = true;
				 }else 	{			
				  $result["msg"] = "Password atau UserId anda salah";		
				  $result["type"] = 1;
				}
			}				
			
			if ($loginOk){

				$rs = $this->db->execute("select to_char(sysdate,'YYYYMM') as periode, to_char(sysdate,'YYYYMM') as periode_sys from dual");
				if ($row = $rs->FetchNextObject(false))
					$result["periode"] = $row->periode;				
				
				// $rs = $this->db->execute("select value1 from bpc_rules where kode_rules = 'MODELREP'");
				// if ($row = $rs->FetchNextObject(false))
				// 	$result["modelreport"] = $row->value1;

				// $rs = $this->db->execute("select value1 from bpc_rules where kode_rules = 'MODELUNC'");
				// if ($row = $rs->FetchNextObject(false))
				// 	$result["modelreportuncons"] = $row->value1;
				$rs = $this->db->execute("select nama from spro where kode_spro = 'MODELREP'");
				if ($row = $rs->FetchNextObject(false))
					$result["modelreport"] = $row->nama;

				$rs = $this->db->execute("select nama from spro where kode_spro = 'REPCONS'");
				if ($row = $rs->FetchNextObject(false))
					$result["modelreportuncons"] = $row->nama;
				$rs = $this->db->execute("select nama from spro where kode_spro = 'LOKKONSOL'");
				if ($row = $rs->FetchNextObject(false))
					$result["lokkonsol"] = $row->nama;
					
				$result["session"] = session_id();
				$_SESSION["pass"] = $pass;
				$_SESSION["username"] = $user;
				
				$session = $result["session"];//md5(date("r"));
				$path = $_SERVER["REQUEST_URI"];
				global $dirSeparator;
				global $serverDir;			
				$rootPath = substr($serverDir,0,strpos($serverDir,"server") - 1);
				for ($i = 0; $i < 2; $i++){
					  $path = substr($path,0,strrpos($path,"/"));		
				} 
				$ip = $this->get_client_ip();
				global $dbConnection;
				$serverinfo = array("ip" => $ip, "host" => GetHostByName($ip),
									//"dbname" => $dbConnection->dbName . "-" . $dbConnection->dbDriver,
									//"dbhost" => $dbConnection->dbHost, "driver" => $dbConnection->dbDriver,
									"path" => $path, "http_host" => $_SERVER["HTTP_HOST"], "root" => $rootPath,
									"url" => $_SERVER["REQUEST_URI"] );
				$result["serverinfo"] = $serverinfo;
				$this->db->execute("insert into bpc_sessions(username, tgl, ip,  tgl_logout, sessions, last_update)
									values('$user',sysdate,'$ip', sysdate, '$session', sysdate)");
			}
			
			
		}catch(Exception $e){
			$result["msg"] = $e->getMessage();		
			$result["type"] = 1;
		}
		error_log(json_encode($result));
		return $result;
	}
	
	function logout($user){
		$this->getDb();
		$session = session_id();
		error_log("Session $session " . $this->userid ." " . $this->session);
		$this->db->execute("update bpc_sessions set tgl_logout = sysdate where sessions = '$this->session'");
		session_unset();
		session_destroy();
		return true;
	}
	function getNoBuktiOtomatis($table, $field, $format, $formatNumber, $addFilter = null, $reverse = null){
		$this->getDb();
		$db = $this->db;
		$nb = $format . $formatNumber;
		$formatTmp = "";
		for ($i = 0; $i < strlen($formatNumber); $i++)
			$formatTmp .= "_";
		if ($reverse)
			$rs =$db->execute("select max($field) as no_bukti from $table where $field like '".$formatTmp.$format."' $addFilter");
		else 
			$rs =$db->execute("select max($field) as no_bukti from $table where $field like '".$format.$formatTmp."' $addFilter");
	
		while ($row = $rs->FetchNextObject(false)){
			$nb = $row->no_bukti;
		}
		if ($reverse)
			$no = floatval(substr($nb,0,strlen($formatNumber)));
		else 
			$no = floatval(substr($nb,strlen($format)));
		$no ++;
		$noStr = (string) $no;
		$len = strlen($noStr);
	
		for ($i = $len; $i < strlen($formatNumber); $i++){
			$noStr = "0" . $noStr;	
		}
		if ($reverse)
			$nb = $noStr . $format;	
		else 
			$nb = $format . $noStr;	
		return $nb;
	}
	function saveUser($data, $user){
		try{
			$db = $this->getDb();	
			$sql = new server_util_arrayList();
			$sql->add("delete from exs_karyawan where nik= '$data->nik' ");//and ( kode_lokasi='$data->lokasi' or kode_lokasi in (select kode_lokasi from bpc_lokasi where cocd = '$data->lokasi' ) )  
			$sql->add("delete from exs_userubis where nik= '$data->nik' ");
			$sql->add("delete from exs_useraksescfu where nik= '$data->nik' ");
			$sql->add("delete from exs_hakakses where nik= '$data->nik' ");

			$sql->add("insert into exs_karyawan(nik,nama,jabatan, kode_gubis, kode_ubis, kode_ba, kode_lokasi, email, no_telp, cfu) values 
						('$data->nik','$data->nama','$data->jabatan','-','$data->ubis','-','$data->lokasi','$data->email','$data->telp','$data->cfu')");
			$pass = $data->pass;
			$pass = md5($pass);	

			$sql->add("insert into exs_hakakses (nik, nama, pass, status_admin, kode_lokasi, kode_klp_menu, klp_akses) values 
						('$data->nik','$data->nama','$pass','A','$data->lokasi','$data->menu','A')");
			
			foreach ($data->listUbis as $val){	
				$sql->add("insert into exs_userubis(nik, kode_ubis, kode_lokasi, nik_user, tgl_update)values 
						('$data->nik','$val','$data->lokasi','$user',sysdate)");
			}
			foreach ($data->listCFU as $val){
				$sql->add("insert into exs_useraksescfu(nik, kode_cfu, kode_lokasi, nik_user, tgl_update)values 
						('$data->nik','$val','$data->lokasi','$user',sysdate)");
			}

			return $db->execArraySQL($sql);
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}
	function findUser($search){
		//error_log($search);
		$db = $this->getDb();	
		$search = strtoupper($search);
		$rs = $db->execute("select a.nik,a.nama,a.jabatan, 
				  a.kode_lokasi, 	a.cfu, a.kode_ubis,  d.nama as nmubis, a.status, a.email, a.no_telp, c.kode_klp_menu  
					from exs_karyawan a 
					left outer join exs_ubis d on d.kode_ubis = a.kode_ubis and d.kode_lokasi = a.kode_lokasi 
					left outer join exs_hakakses c on c.nik = a.nik and c.kode_lokasi = a.kode_lokasi 
				 where ( upper(a.nama) like '%$search%' or 
				   upper(a.nik) like '%$search%' or 
				   upper(a.kode_ba) like '%$search%' or 
				   upper(a.kode_ubis) like '%$search%' or 
				   upper(d.nama) like '%$search%' or 
				   upper(a.cfu) like '%$search%' or 
				   upper(c.kode_klp_menu) like '%$search%' or 
				 	upper(a.jabatan) like '%$search%' ) order by a.nik");
		$result = array();
		while ($row = $rs->FetchNextObject(false)){
			$result[] = (array) $row;
		}
		return $result;

	}
	function updatePassword($nik, $pwd){
		$db = $this->getDb();	
		$sql = new server_util_arrayList();
		$sql->add("update exs_hakakses set pass = '". md5($pwd) ."' where nik= '$nik' ");
		return $db->execArraySQL($sql);
	}
	function deleteUser($nik, $lokasi = null){
		$db =  $this->getDb();	
		$sql = new server_util_arrayList();
		$sql->add("delete from exs_karyawan where nik= '$nik' ");//and ( kode_lokasi='$data->lokasi' or kode_lokasi in (select kode_lokasi from bpc_lokasi where cocd = '$data->lokasi' ) )  
		$sql->add("delete from exs_userubis where nik= '$nik' ");
		$sql->add("delete from exs_useraksescfu where nik= '$nik' ");
		$sql->add("delete from exs_hakakses where nik= '$nik' ");
		return $db->execArraySQL($sql);

	}
	//search pake array_search(textToSearch, array); 
	function getUserAkses($nik){
		$db = $this->getDb();
		$rs = $db->execute("select distinct kode_ubis from exs_userubis where nik = '$nik'");
		$result = array();
		while ($row = $rs->FetchNextObject(false)){
			$result[] = $row->kode_ubis;
		}	
		return $result;
	}
	function getUserCFUAkses($nik){
		$db = $this->getDb();
		$rs = $db->execute("select distinct kode_cfu from exs_useraksescfu where nik = '$nik'");
		$result = array();
		while ($row = $rs->FetchNextObject(false)){
			$result[] =  $row->kode_cfu;
		}	
		return $result;
	}

	function getUserMenuAkses($nik){
		$db = $this->getDb();
		$rs = $db->execute("select distinct kode_form from exs_menu a 
							inner join exs_hakakses b on b.kode_klp_menu = a.kode_klp
							where a.kode_klp  = '$nik'");
		$result = array();
		while ($row = $rs->FetchNextObject(false)){
			$result[] = $row->kode_form;
		}	
		return $result;	
	}

	function cekMenu($menu){
		$db = $this->getDb();
		$user = $this->userid;//$_SESSION["user"];;
		if (isset($user)){
			$listMenu = $this->getUserMenuAkses($user);
			if (in_array($menu, $listMenu)){
				return true;
			}else return false;
		}else return false;
	}

	function getSBU($compCode){
		$db = $this->getDb();
		$rs = $db->execute("select kode_ubis, nama, level_spasi, sts, rowindex from ( 
							select kode_ubis, left_pad(nama,level_spasi) as nama, level_spasi, 'FALSE' as sts, rowindex from exs_ubis
							where kode_lokasi = '$compCode' or kode_lokasi in (select kode_lokasi from bpc_lokasi where cocd = '$compCode' ) 
							) a order by rowindex, kode_ubis" );
		$result = array("rs" => array("rows" => array() ) );
		while ($row = $rs->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array) $row;
		}
		return $result;
	}
	function getCFU(){
		$db = $this->getDb();
		$rs = $db->execute("select kode_cfu, left_pad(nama,level_spasi) as nama, level_spasi, 'FALSE' as sts, rowindex from bpc_cfu order by rowindex" );
		$result = array("rs" => array("rows" => array() ) );
		while ($row = $rs->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array) $row;
		}
		return $result;
	}
	function getUser($nik, $lokasi = null){
		$this->getDb();
		$rs = $this->db->execute("select a.kode_lokasi, a.nama,a.kode_jab,a.jabatan, a.kode_gubis, a.kode_ubis, a.kode_ba, a.kode_kota, a.status, email, no_telp, sts_email, sts_telp, a.cfu, b.pass,b.status_admin, b.kode_klp_menu  
							    from exs_karyawan a inner join exs_hakakses b on b.nik = a.nik 
							    where a.nik ='$nik' ");//and ( kode_lokasi  = '$lokasi' or kode_lokasi in ( '$lokasi' ) )
		$result = array();
		if  ($row = $rs->FetchNextObject(false)) {
			return (array) $row;
		}
		return $result;
	}
	function listTelkomDivision(){
		$this->getDb();
		$rs = $this->db->execute("select distinct telkomdivision as uraian ,telkomdivision as nama, '-' as pejabat from jabatan order by telkomdivision");
		$result = array("rs" => array("rows" => array()) );
		while ($row = $rs->FetchNextObject(false)) {
			$result["rs"]["rows"][] = (array) $row;
		}
		return ($result);
	}
	function listDirektorat(){
		$this->getDb();
		$rs = $this->db->execute("select kode_ubis, nama from exs_ubis where level_spasi = '1' ");
		$result = array("rs" => array("rows" => array()) );
		while ($row = $rs->FetchNextObject(false)) {
			$result["rs"]["rows"][] = (array) $row;
		}
		return ($result);
	}
	function listUbisDit($dit){
		$this->getDb();
		$rs = $this->db->execute("select kode_ubis, nama from exs_ubis where kode_induk = '$ubis' ");
		$result = array("rs" => array("rows" => array()) );
		while ($row = $rs->FetchNextObject(false)) {
			$result["rs"]["rows"][] = (array) $row;
		}
		return ($result);
	}
	function listCategory($telkomdivision){
		$this->getDb();
		$telkomdivision = str_replace("'","''",$telkomdivision);
		$rs = $this->db->execute("select distinct category as uraian, substr(category,LENGTH(telkomdivision) + 2,length(category) - LENGTH(telkomdivision)) as nama, '-' as pejabat 
									from jabatan where not members is null and telkomdivision = '$telkomdivision' order by category");
		$result = array("rs" => array("rows" => array()) );
		while ($row = $rs->FetchNextObject(false)) {
			if ($row->nama == "") $row->nama = $telkomdivision;
			$row->nama = "&nbsp;&nbsp;&nbsp;&nbsp;" . $row->nama;
			$result["rs"]["rows"][] = (array) $row;
		}
		return ($result);
	}
	function listDepartemen($category){
		$this->getDb();
		/*select distinct telkomdepartment as nama, jabatan, members, telkomnik, '-' as namapegawai,'-' as poh , '-' namapoh
									from jabatan where not members is null and category = '$category' order by telkomdepartment*/
		$category = str_replace("'","''",$category);
		$rs = $this->db->execute("select distinct a.telkomdepartment as nama, a.SHORT_POSISI as jabatan, a.fullname as members, a.telkomnik, a.nama as namapegawai
									,'-' as poh , '-' namapoh
									from sppd_karyawan a 
										inner join jabatan b on b.TELKOMDEPARTMENT = a.TELKOMDEPARTMENT 
									where not b.members is null and b.category = '$category' order by a.telkomdepartment");
									
									
		$result = array("rs" => array("rows" => array()) );
		while ($row = $rs->FetchNextObject(false)) {
			$members = explode(",",$row->members);//CN=NAMA/OU=NIK/O=Telkom, CN=NAMAPOH/OU=NIKPOH/O=Telkom
			$item = explode("/",$members[0]);//CN=NAMA/OU=NIK/O=Telkom
			$nama = explode("=",$item[0]);
			$nama = $nama[1];
			$row->uraian = $row->nama;
			$row->nama = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" . $row->nama;
			$row->namapegawai = $nama;
			$row->pejabat = $row->jabatan .":".$row->namapegawai."/".$row->telkomnik;
			if (isset($members[1])) {
				$item = explode("/",$members[1]);//CN=NAMA/OU=NIK/O=Telkom
				$nama = explode("=",$item[0]);
				$nama = $nama[1];
				$nik = explode("=",$item[1]);
				$nik = $nik[1];
				$row->poh = $nik;
				$row->namapoh = $nama;
			}
			$result["rs"]["rows"][] = (array) $row;
		}
		return ($result);
	}
	function cariPegawai($item){
		$this->getDb();
		$rs = $this->db->execute("select distinct telkomdepartment as nama, short_posisi as jabatan, fullname as members, telkomnik, '-' as namapegawai,'-' as poh , '-' namapoh
							from sppd_karyawan where  (jabatan like '%$item%' or lower(nama) like '%$item%'or lower(fullname) like '%$item%' or telkomdepartment like '%$item%' or telkomnik like '%$item%' ) order by telkomdepartment");
		$result = array("rs" => array("rows" => array()) );
		while ($row = $rs->FetchNextObject(false)) {
			$members = explode(",",$row->members);//CN=NAMA/OU=NIK/O=Telkom, CN=NAMAPOH/OU=NIKPOH/O=Telkom
			$item = explode("/",$members[0]);//CN=NAMA/OU=NIK/O=Telkom
			$nama = explode("=",$item[0]);
			$nama = $nama[1];
			$row->uraian = $row->nama;
			$row->nama = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" . $row->nama;
			$row->namapegawai = $nama;
			$row->pejabat = $row->jabatan .":".$row->namapegawai."/".$row->telkomnik;
			if (isset($members[1])) {
				$item = explode("/",$members[1]);//CN=NAMA/OU=NIK/O=Telkom
				$nama = explode("=",$item[0]);
				$nama = $nama[1];
				$nik = explode("=",$item[1]);
				$nik = $nik[1];
				$row->poh = $nik;
				$row->namapoh = $nama;
			}
			$result["rs"]["rows"][] = (array) $row;
		}
		return ($result);
	}
	function getPenetapanTelkomConsole($cfu, $tahun, $model, $pembagi = 1000000000){
		return $this->budgetService->getPenetapanTelkomConsole($cfu, $tahun, $model, $pembagi);
	}
	function getPenetapan($tahun, $ubis, $divre, $witel, $lokasi){
		$this->getDb();
		$rs = $this->db->execute("select value1 from bpc_rules where kode_rules = 'MODELREP'");
		if ($row = $rs->FetchNextObject(false)){
			$model = $row->value1;
		}
		$resultSet = $this->db->execute("select a.kode_neraca, b.nama, b.rowindex, b.level_spasi,b.kode_induk, a.nilai
													from bpc_penetapan a  
													inner join bpc_neraca b on b.kode_neraca = a.kode_neraca and b.kode_fs=  '$model' and a.kode_lokasi = b.kode_lokasi
													where a.kode_lokasi = '$lokasi' and a.tahun ='$tahun' and a.kode_ubis ='$ubis' and a.kode_area = '$divre' and a.kode_witel = '$witel'
													 
													order by rowindex");
		$result = array("rs" => array("rows" => array(), "fields" =>array()) );
		try{
			$first = true;
				while ($row = $resultSet->FetchNextObject(false))
				{			
					$values = (array) $row;			
					$result["rs"]["rows"][] = $values;
					if ($first){					
						for ($i = 0; $i < $resultSet->FieldCount(); $i++)
						{							
							if ($resultSet->FetchField($i)->type == "N" || $resultSet->FetchField($i)->type == "real" || $resultSet->FetchField($i)->type == "I" || $resultSet->FetchField($i)->type == "i" || $resultSet->FetchField($i)->type == "decimal" || $resultSet->FetchField($i)->type == "NUMBER" )
								$length = 100;
							else{
								$length = $resultSet->FetchField($i)->max_length * 6;
								if ($length > 250) $length = 250;					
							}
							$result["rs"]["fields"][strtolower($resultSet->FetchField($i)->name)] = array("type" => $resultSet->FetchField($i)->type, "length" => $length,"nama" => $resultSet->FetchField($i)->name ); 
							
						}						
					}	
					$first = false;
				}			
		}catch(Exception $e){
			error_log($e->getMessage());
		}
		return ($result);
	}
	function lockPenetapan($ubis, $area, $witel, $tahun, $userlog, $lokasi){
		$this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("update bpc_penetapan set data_lock ='1' where kode_lokasi = '$lokasi' and kode_ubis = '$ubis' and kode_area = '$area' and kode_witel = '$witel' and tahun = '$tahun'");
		return $this->db->execArraySQL($sql);
	}
	function saveApproval($ubis, $area, $witel, $tahun, $kpd, $flowApp, $catatan, $userlog, $lokasi){
		$this->getDb();
		$noApp = $this->getNoBuktiOtomatis("bpc_approval","appid",$tahun,"000000");
		$sql = new server_util_arrayList();
		$rs = $this->db->execute("select short_posisi from sppd_karyawan where telkomnik='$userlog'");
		if ($row = $rs->FetchNextObject(false)){
			$jabatan = $row->short_posisi;
		}else $jabatan = "-";
		$sql->add("update bpc_penetapan set data_lock ='1' where kode_lokasi = '$lokasi' and kode_ubis = '$ubis' and kode_area = '$area' and kode_witel = '$witel' and tahun = '$tahun'");
		$sql->add("insert into bpc_approval(appid, kode_lokasi, kode_ubis, nik_buat, jabatan, tgl_buat, nik_tujuan, jabatan_tujuan, progress, catatan, proses)
					values('$noApp','$lokasi','$ubis','$userlog', '$jabatan', sysdate, '-','$kpd','0',null,'PENETAPAN')");
			$clob = new server_util_Map();
			$clob->set("tipe","clob");
			$clob->set("table","bpc_approval");
			$clob->set("field","catatan");
			$clob->set("filter"," appid = '$noApp'");
			$clob->set("value",$catatan);
		$sql->add($clob);
		$flowApproval = explode("\n", $flowApp);
		$ix = 0;
		foreach ($flowApproval as $val){
			if ($val !=""){
				$ix++;
				if ($ix == 1) {
					$progress = '1';
					$nextApp = $val;
				}else $progress = '0'; 
				$sql->add("insert into bpc_flowapp(appid, jabatan, nik, tgl_app, catatan, no_urut, progress)values('$noApp','$val','-',null, null, $ix, '$progress')");
			}
		}
		$ret =  $this->db->execArraySQL($sql);
		if ($ret == "process completed"){
				$content = $catatan;
				$rs = $this->db->execute("select telkomnik from sppd_karyawan where short_posisi = '$nextApp' ");
				if ($row = $rs->FetchNextObject(false)){
					$nextNIK = $row->telkomnik;
					$this->sendMail("",$nextNIK . "@telkom.co.id", "Approval RKAP",  $content);
				}
		}
		return $ret;
	}
	function saveDraft($ubis, $area, $witel, $tahun, $kpd, $flowApp, $catatan, $userlog, $lokasi){
		$this->getDb();
		$noApp = $this->getNoBuktiOtomatis("bpc_draftapproval","appid","DRAFT".$tahun,"000000");
		$sql = new server_util_arrayList();
		$rs = $this->db->execute("select short_posisi from sppd_karyawan where telkomnik='$userlog'");
		if ($row = $rs->FetchNextObject(false)){
			$jabatan = $row->short_posisi;
		}else $jabatan = "-";
		$sql->add("insert into bpc_draftapproval(appid, tahun, kode_lokasi, kode_ubis, nik_buat, jabatan, tgl_buat, nik_tujuan, jabatan_tujuan, progress, catatan, proses)
					values('$noApp','$tahun','$lokasi','$ubis','$userlog', '$jabatan', sysdate, '-','$kpd','0',null,'RKAP')");
			$clob = new server_util_Map();
			$clob->set("tipe","clob");
			$clob->set("table","bpc_draftapproval");
			$clob->set("field","catatan");
			$clob->set("filter"," appid = '$noApp'");
			$clob->set("value",$catatan);
		$sql->add($clob);
		$flowApproval = explode("\n", $flowApp);
		$ix = 0;
		foreach ($flowApproval as $val){
			if ($val !=""){
				$ix++;
				$progress = '0'; 
				$sql->add("insert into bpc_flowapp(appid, jabatan, nik, tgl_app, catatan, no_urut, progress)values('$noApp','$val','-',null, null, $ix, '$progress')");
			}
		}
		return $this->db->execArraySQL($sql);
	}
	function editDraft($noApp,$ubis, $area, $witel, $tahun, $kpd, $flowApp, $catatan, $userlog, $lokasi){
		$this->getDb();
		$sql = new server_util_arrayList();
		$appid = $noApp;
		$sql->add("delete from bpc_draftapproval where appid = '$appid'");
		$sql->add("delete from bpc_flowapp where appid = '$appid'");
		$sql->add("insert into bpc_draftapproval(appid, kode_lokasi, kode_ubis, nik_buat, jabatan, tgl_buat, nik_tujuan, jabatan_tujuan, progress, catatan, proses)
					values('$noApp','$lokasi','$ubis','$userlog', '-', sysdate, '-','$kpd','0',null,'RKAP')");
			$clob = new server_util_Map();
			$clob->set("tipe","clob");
			$clob->set("table","bpc_draftapproval");
			$clob->set("field","catatan");
			$clob->set("filter"," appid = '$noApp'");
			$clob->set("value",$catatan);
		$sql->add($clob);
		$flowApproval = explode("\n", $flowApp);
		$ix = 0;
		foreach ($flowApproval as $val){
			if ($val !=""){
				$ix++;
				$progress = '0'; 
				$sql->add("insert into bpc_flowapp(appid, jabatan, nik, tgl_app, catatan, no_urut, progress)values('$noApp','$val','-',null, null, $ix, '$progress')");
			}
		}
		return $this->db->execArraySQL($sql);
	}
	function delDraft($noApp){
		$this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_draftapproval where appid = '$noApp'");
		$sql->add("delete from bpc_flowapp where appid = '$noApp'");
		return $this->db->execArraySQL($sql);
	}
	function listDraft($jabatan){
		$this->getDb();
		$jabatan =  str_replace("'","''",$jabatan);
		$rs = $this->db->execute("select * from bpc_draftapproval where (jabatanid = '$jabatan' or jabatan = '$jabatan') and progress = '0' ");
		$result = array("rs" => array("rows" => array()) );
		while ($row = $rs->FetchNextObject(false)) {
			$rs2 = $this->db->execute("select jabatan from bpc_flowapp where appid = '".$row->appid."' ");
			while ($row2 = $rs2->FetchNextObject(false)){
				$row->flow .= $row2->jabatan ."\r\n";
			}
			$result["rs"]["rows"][] = (array) $row;
		}
		//error_log(json_encode($result));
		return ($result);
	}
	function getDefaultApp($dit){
		$this->getDb();
		$rs = $this->db->execute("select * from bpc_rules where kode_rules in ('APPDEFAULT','$dit') order by kode_rules");
		$result = array("rs" => array("rows" => array()) );
		while ($row = $rs->FetchNextObject(false)) {
			$result["rs"]["rows"][] = (array) $row;
		}
		return ($result);
	}
	function updateProgressDraft($noDraft){
		$this->getDb();
		//update draft yg terkirim
		$sql = new server_util_arrayList();
		$sql->add("update bpc_draftapproval set progress = '1' where appid = '$noDraft'");
		return $this->db->execArraySQL($sql);
	}
	function approve($appid, $catatan, $user){
		$this->getDb();
		$rs = $this->db->execute("select no_urut from bpc_flowapp a 
					where a.appid = '$appid' and a.progress = '1' ");
		$sql = new server_util_arrayList();
			
		if ($row = $rs->FetchNextObject(false)){
			//find Next
			$nu = $row->no_urut - 1;
			$rs = $this->db->execute("select * from bpc_flowapp a 
					inner join sppd_karyawan b on b.short_posisi = a.JABATAN
					inner join bpc_approval c on c.appid = a.appid		
					where a.appid = '$appid' and a.no_urut = '".$nu."' ");
			if ($row = $rs->FetchNextObject(false))
			{			
				$ubis = $row->kode_ubis;
				$lokasi = $row->kode_lokasi;
				$tahun = substr($row->appid,0,4);
				if ($nu >= 1)
				{
					$nextApproval = $row->jabatan;
					$nextNIK = $row->telkomnik;
					$sql->add("update bpc_flowapp set progress = '2', nik = '$user' where appid = '$appid' and progress = '1' ");
					$clob = new server_util_Map();
					$clob->set("tipe","clob");
					$clob->set("table","bpc_flowapp");
					$clob->set("field","catatan");
					$clob->set("filter"," appid = '$appid' and progress = '1'");
					$clob->set("value",$catatan);
					$sql->add($clob);
					$sql->add("insert into bpc_appcatatan(appid, nik, tgl, catatan)values('$appid', '$user', sysdate,'$catatan') ");
					$sql->add("update bpc_flowapp set progress = '1' where appid = '$appid' and no_urut = '".$nu."' ");
					$ret = $this->db->execArraySQL($sql);
				}else {
					$filter =$this->getFilterUbis("",$ubis);
					$sql->add("update bpc_mbudget_rkm set progress ='2' where kode_lokasi = '$lokasi' and $filter and kode_witel = '-' and tahun = '$tahun'");
					$sql->add("insert into bpc_appcatatan(appid, nik, tgl, catatan)values('$appid', '$user', sysdate,'$catatan') ");
					$sql->add("update bpc_flowapp set progress = '2', nik = '$user' where appid = '$appid' and progress = '1' ");
					$sql->add("update bpc_approval set progress = '1' where appid = '$appid' ");
					$ret =  $this->db->execArraySQL($sql);
					$rs = $this->db->execute("select * from bpc_approval a 
						inner join sppd_karyawan b on b.short_posisi = a.jabatan_tujuan		
						where a.appid = '$appid'  ");
					if ($row = $rs->FetchNextObject(false)){
						//notifikasi user berikutnya... sent via email
						$nextApproval = $row->jabatan;
						$nextNIK = $row->telkomnik;
					}
				}
			}
			if ($ret == "process completed"){
				$rs = $this->db->execute("select catatan from bpc_approval a
					where a.appid = '$appid'  ");
				$row = $rs->FetchNextObject(false);
				$content = $row->catatan;
				$this->sendMail("",$nextNIK ."@telkom.co.id", "Approval RKAP",  $content);
				return "$appid approved. Next Approval $nextApproval";
			}else return $ret;
		}else {
			$sql->add("update bpc_approval set progress = '2' where appid = '$appid' ");
			$ret =  $this->db->execArraySQL($sql);
			if ($ret == "process completed")
				return "$appid approved. ";
			else return $ret;
		}			
		
	}
	function reject($appid, $catatan, $user){
		$this->getDb();
		$rs = $this->db->execute("select no_urut, b.kode_ubis, b.kode_lokasi, a.appid from bpc_flowapp a 
					inner join bpc_approval b on b.appid = a.appid
					where a.appid = '$appid' and a.progress = '1' ");
		if ($row = $rs->FetchNextObject(false)){
			//find Next
			$ubis = $row->kode_ubis;
			$tahun = substr($row->appid, 0,4);
			$lokasi = $row->kode_lokasi;
			$filter = $this->getFilterUbis("",$ubis);
			$sql = new server_util_arrayList();
			{
				$sql->add("update bpc_approval set progress = 'R' where appid = '$appid' ");
				$sql->add("update bpc_mbudget_rkm set progress ='R' where kode_lokasi = '$lokasi' and $filter  and kode_witel = '-' and tahun = '$tahun'");//
				$sql->add("insert into bpc_appcatatan(appid, nik, tgl, catatan)values('$appid', '$user', sysdate,'$catatan') ");
				$ret =  $this->db->execArraySQL($sql);
				//notifikasi user berikutnya... sent via email
			}
			if ($ret == "process completed")
				return "$appid rejected";
			else return $ret;
		}			
	}
	function getInbox($jabatan){
		$this->getDb();
		$jabatan = str_replace("'","''",$jabatan);
		$rs = $this->db->execute("select count(*) as total from (
								 select appid, jabatan from bpc_flowapp where (jabatanid = '$jabatan' or jabatan = '$jabatan') and progress = '1' 
									union 
								select appid, jabatan from bpc_approval where (jabatanid_tujuan = '$jabatan' or jabatan_tujuan = '$jabatan') and progress = '1'
									union
								select appid, jabatan from bpc_approval where (jabatanid = '$jabatan' or jabatan = '$jabatan') and progress = 'R'
								) a");
		if ($row = $rs->FetchNextObject(false))
			return $row->total;
		else return 0;
	}
	function listInbox($jabatan){
		$this->getDb();
		$jabatan = str_replace("'","''",$jabatan);
		$rs = $this->db->execute("select b.tgl_buat, b.appid, b.kode_ubis, b.jabatan, b.jabatan_tujuan, b.proses, b.jabatanid, DBMS_LOB.substr(b.catatan,4000,1) as catatan from bpc_flowapp a 
					inner join bpc_approval b on b.appid = a.appid
					where (a.jabatanid = '$jabatan' or a.jabatan = '$jabatan') and a.progress = '1'
					union 
					select a.tgl_buat, a.appid, a.kode_ubis, a.jabatan, a.jabatan_tujuan, a.proses, a.jabatanid, DBMS_LOB.substr(a.catatan,4000,1) as catatan from bpc_approval a 
					where (a.jabatanid_tujuan = '$jabatan' or a.jabatan_tujuan = '$jabatan') and a.progress = '1' ");
		$result = array("rs" => array("rows" => array()) );
		while ($row = $rs->FetchNextObject(false)) {
			$rs2 = $this->db->execute("select jabatan from bpc_flowapp where appid = '".$row->appid."' ");
			while ($row2 = $rs2->FetchNextObject(false)){
				$row->flow .= $row2->jabatan ."\r\n";
			}
			$rs2 = $this->db->execute("select a.nik, a.tgl, a.catatan, b.nama 
										from bpc_appcatatan a 
										inner join sppd_karyawan b on b.telkomnik = a.nik
										where appid = '".$row->appid."' order by tgl");
			while ($row2 = $rs2->FetchNextObject(false)){
				$row->logCatatan .= "<div style='height:auto;padding:10px'><b>from : ".$row2->nama."</b><p>" . urldecode($row2->catatan) ."</p></div><div style='width:100%;height:1;border-bottom:1px solid #888'><ul></div<br>";
			}
			$result["rs"]["rows"][] = (array) $row;
		}
		//error_log(json_encode($result));
		return ($result);
	}
	function getSentItem($nik){
		$this->getDb();
		$rs = $this->db->execute("select count(*) as total from bpc_flowapp where nik = '$nik' and progress = '2' ");
		if ($row = $rs->FetchNextObject(false))
			return $row->total;
		else return 0;
	}
	function ListSentItem($nik){
		$this->getDb();
		$rs = $this->db->execute("select * from bpc_flowapp where nik = '$nik' and progress = '2' ");
		$result = array("rs" => array("rows" => array()) );
		while ($row = $rs->FetchNextObject(false)) {
			$result["rs"]["rows"][] = (array) $row;
		}
		return ($result);
	}
	function ListApproved($ubis){
		$this->getDb();
		$rs = $this->db->execute("select * from bpc_flowapp where nik = '$nik' and progress = '2' ");
		$result = array("rs" => array("rows" => array()) );
		while ($row = $rs->FetchNextObject(false)) {
			$result["rs"]["rows"][] = (array) $row;
		}
		return ($result);
	}
	function getApproved($nik){
		$this->getDb();
		$rs = $this->db->execute("select count(*) as total from bpc_approval where nik_buat = '$nik' and progress = '1' ");
		if ($row = $rs->FetchNextObject(false))
			return $row->total;
		else return 0;
	}
	function getJabatanId($jabatan){
		$jabatan = str_replace("'","''",$jabatan);
		$rs = $this->db->execute("select jabatanid from jabatan where jabatan = '$jabatan'");
		if ($row = $rs->FetchNextObject(false))
			return $row->jabatanid;
		else return '-';
	}
	function lockRKAP($ubis, $area, $tahun, $userlog, $lokasi){
		$this->getDb();
		$sql = new server_util_arrayList();
		$filter = $this->getFilterUbis("",$ubis);
		$sql->add("update bpc_mbudget_rkm set progress ='1' where kode_lokasi = '$lokasi' and $filter and kode_witel = '$area' and tahun = '$tahun'");
		return $this->db->execArraySQL($sql);
	}
	function submitRKAP($ubis, $area, $tahun, $kpd, $flowApp, $catatan, $userlog, $lokasi){
		$this->getDb();
		$noApp = $this->getNoBuktiOtomatis("bpc_approval","appid",$tahun,"000000");
		$jabatanid = $this->getJabatanId($kpd);
		$sql = new server_util_arrayList();
		$filter = $this->getFilterUbis("",$ubis);
		$sql->add("update bpc_mbudget_rkm set progress ='1' where kode_lokasi = '$lokasi' and $filter  and kode_witel = '$area' and tahun = '$tahun'");//
		
		$sql->add("insert into bpc_approval(appid, kode_lokasi, kode_ubis, nik_buat, jabatan, tgl_buat, nik_tujuan, jabatan_tujuan, progress, catatan, proses, jabatanid_tujuan)
					values('$noApp','$lokasi','$ubis','$userlog', '-', sysdate, '-','$kpd','0',null, 'RKAP','$jabatanid')");
			$clob = new server_util_Map();
			$clob->set("tipe","clob");
			$clob->set("table","bpc_approval");
			$clob->set("field","catatan");
			$clob->set("filter"," appid = '$noApp'");
			$clob->set("value",$catatan);
		$sql->add($clob);
		$flowApproval = explode("\n", $flowApp);
		$tmp = array();
		foreach ($flowApproval as $val){
			if ($val !=""){
				$tmp[] = $val;
			}
		}
		$flowApproval = $tmp;
		$ix = 0;
		foreach ($flowApproval as $val){
			if ($val !=""){
				$ix++;
				if ($ix == count($flowApproval)) 
					$progress = '1';
				else $progress = '0'; 
				$jabatanid = $this->getJabatanId($val);
				$val = addslashes($val);
				$sql->add("insert into bpc_flowapp(appid, jabatan, nik, tgl_app, catatan, no_urut, jabatanid, progress)
				values('$noApp','$val','-',null, null, $ix, '$jabatanid','$progress')");
			}
		}
		return $this->db->execArraySQL($sql);
	}
	function listSI($si, $tahun){
		return $this->budgetService->listSI($si, $tahun);
	}
	function listStrukturSI($tahun){
		return $this->budgetService->listStrukturSI($tahun);
	}
	function listProgram($lokasi, $dit, $tahun){
		return $this->budgetService->listProgram($lokasi, $dit, $tahun);
	}
	function deleteProgramDit($lokasi, $dit, $tahun){
		return $this->budgetService->deleteProgramDit($lokasi, $dit, $tahun);
	}
	function deleteRKMUbis($lokasi, $ubis, $tahun){
		return $this->budgetService->deleteRKMUbis($lokasi, $ubis, $tahun);
	}
	function searchProgram($lokasi, $programId, $ubis, $tahun){
		return $this->budgetService->searchProgram($lokasi, $programId, $ubis, $tahun);
	}
	function listStrukturProgram($lokasi, $ubis, $tahun){
		return $this->budgetService->listStrukturProgram($lokasi, $ubis, $tahun);
	}
	function listRKM($lokasi, $ubis, $tahun){
		return $this->budgetService->listRKM($lokasi, $ubis, $tahun);
	}
	function listRKMWithKey($lokasi, $ubis, $tahun){
		return $this->budgetService->listRKMWithKey($lokasi, $ubis, $tahun);
	}
	function listAkun($lokasi = null){
		return $this->budgetService->listAkun($lokasi);
	}
	function listCC($lokasi = null){
		return $this->budgetService->listCC($lokasi);
	}
    function listCCRecordset($lokasi = null){
        $this->getDb();
		$rs = $this->db->execute("select a.kode_cc, a.nama, a.kode_ubis , nvl(b.nama, '-') as nama_ubis from exs_cc a 
                    left outer join exs_ubis b on b.kode_ubis = a.kode_ubis and b.kode_lokasi = a.kode_lokasi
                    where a.kode_lokasi = '$lokasi'");
		$result = array("rs"=>array("rows"=>array()));
		while ($row = $rs->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array) $row;
		}
		return $result;
	}
	function getDirektorat($ubis){
		$rs = $this->db->execute("select kode_induk from exs_ubis where kode_ubis = '$ubis' and level_spasi = '2'
								 union
								 select b.kode_induk from exs_ubis a 
								 		inner join exs_ubis b on b.kode_ubis = a.kode_induk	and b.level_spasi = '2'	
								 	where a.kode_ubis = '$ubis'
								 union 
								 select kode_ubis from exs_ubis where kode_ubis = '$ubis' and level_spasi = '1' ");
		if ($row = $rs->FetchNextObject(false)){
			return $row->kode_induk;
		}else return '-';
		
	}
	function getUbisInitial($cfu){
		$this->getDb();
		//$rs = $this->db->execute("select kode_lokfa2 from exs_ubis where kode_ubis = '$ubis'");
		//$rs = $this->db->execute("select kode_cfu from exs_ubis where kode_ubis = '$ubis'");
		if ($row = $rs->FetchNextObject(false)){
			return $row->kode_lokfa2;
		}else return "-";
	}
	function listProgramWithKey($lokasi, $dit, $tahun){
		$listProgram = $this->listProgram($lokasi, $dit, $tahun);
		$result = new server_util_Map();
		foreach ($listProgram["rs"]["rows"] as $key => $val){
			$result->set($val["kode_si"], $val);
		}
		return $result;
	}
	function addRKM($cfu, $tahun, $data){
		try{
			return $this->budgetService->addRKM($cfu, $tahun, $data );
		}catch(Exception $e){
			return $e->getMessage();
		}
	}
	function uploadRKM($cfu, $tahun, $data){
		try{
			return $this->budgetService->uploadRKM($cfu, $tahun, $data );
		}catch(Exception $e){
			return $e->getMessage();
		}
	}
	function listSIWithKey($tahun){
		return $this->budgetService->listSIWithKey($$tahun);
	}
	function saveProgramDit($tahun, $dit,$lokasi, $userlog, $data){
		try{
			$this->getDb();
			$sql = new server_util_arrayList();
			if (count($data) > 0){
                $sql->add("delete from bpc_si where tahun = '$tahun' and kode_ubis = '$dit' and kode_lokasi = '$lokasi'  ");
				$listSI = $this->listSIWithKey($tahun);
				foreach ($data as $val){
					if ($listSI->get($val->si))
					{
						//if (strlen($val->kode) == 4)
                        {
							$sql->add("insert into bpc_si(kode_si, nama, kode_lokasi, tipe, rowindex, kode_induk, level_spasi, nik_user, tgl_input, tahun, kode_ubis, flag_utama ) 
										values('".$val->kode."','".$val->nama."','$lokasi','PROGRAM',100,'".$val->si."',3,'$userlog',sysdate,'$tahun','$dit','". $val->utama ."')" );
							//cek Program lama
							if ($val->kode_lama != "-" && $val->kode_lama != ""){
								$sql->add("update bpc_rkm set kode_program = '".$val->kode."', kode_rkm=concat ('".$val->kode."', substr(kode_rkm, 5,2)) where kode_program = '".$val->kode_lama."' and kode_ubis in ( select kode_ubis from exs_ubis where kode_induk = '$dit') ");
							}
						}//else throw new Exception("Kode Program ".$val->kode ." harus 4 Digit ");
					}else throw new Exception("SI ".$val->si ." tidak di temukan ");
				}
				return $this->db->execArraySQL($sql);
			}else throw new Exception("tidak ada Data Program yang di entry");
		}catch(Exception $e){
			return $e->getMessage();
		}
	}
	function listUbis($dit){
		$rsUbis = $this->db->execute("select distinct kode_ubis,nama,rowindex, tipe from exs_ubis where kode_ubis ='$ubis' ");

		if ($row = $rsUbis->FetchNextObject(false)){
			return $row->tipe == "UBIS";
		} else return false;
	}
	function listGubis(){
	}
	function listDivre(){
	}
	function listWitel($divre){
	}
	function komparasiDataRKAPPenetapan($tahun, $ubis){
		
	}
	//** BPC
	/**
	 * summariesJejer function.
	 * digunakan untuk menghitung summary untuk report jejer bulanan
	 * @access public
	 * @param mixed &$item	: item yang akan di proses
	 * @return void
	 */
	function summariesJejer(&$item){
		return $this->budgetService->summariesJejer($item);
	}

	/**
	 * generateResultJejer function.
	 * digunakan untuk generate data jejer bulanan per record
	 * @access public
	 * @param mixed $item	: item yang akan di proses
	 * @param mixed &$result	: array penampung prosess generate
	 * @return void
	 */
	function generateResultJejer($item, &$result){
		return $this->budgetService->generateResultJejer($item, $result);
	}
	/**
     *  <#digunakan untuk menghitung summari dari struktur report #>
     *
     *  @param $item <#$item item summary beserta child yang di bawahnya#>
     *
     *  @return <#return value description#>
     */
     
	function summariesRKM(&$item){
		return $this->budgetService->summariesRKM($item);
	}
    /**
     *  <#digunakan untuk menghitung rumus growth dan achievment serta mengkonversi tanda minus untuk pendapatan agar di report menampilkan nilai standar report keuangan.#>
     *
     *  @param $item   <#$item record data yang akan di proses#>
     *  @param $result <#$result array penampung hasil proses#>
     *  @param $neraca <#$neraca filter neraca untuk kasus tertentu#>
     *
     *  @return <#return value description#>
     */
	function generateResultRKM($item, &$result, $neraca, $pembagi){
		return $this->budgetService->generateResultRKM($item, $result, $neraca, $pembagi);
	}
	
	function summariesJejerRKAP(&$item){
		return $this->budgetService->summariesJejerRKAP($item);
	}
	function getDataTemplateBPC($model, $periode, $divisi = null, $pembagi = 1000000000){
		global $satuan;
		if ($ubis == "NAS") $ubis = '';
 		if (!isset($pembagi)) $pembagi = 1000000000;
 		$satuan = $pembagi;
 		
		$thn1 = substr($periode,0,4);
		$thn2 = floatval(substr($periode,0,4)) - 1;
		$bln = substr($periode,4,2);

		if (floatval($bln) == 1){
			$thn3 = floatval(substr($periode,0,4)) - 1;
			$bln2 = "12";
		}else {
			$thn3 = $thn1;
			$bln2 = floatval($bln) - 1;
			$bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
		}
		$rs = $this->dbLib->execute("select kode_ubis from exs_grouping_ubis where group_ubis = '$ubis'");
		$ada = false;
		while ($row = $rs->FetchNextObject()){
			$ada = true;
		}
		if ($ada){
			$filter = " and z.kode_ubis in (select kode_ubis from exs_grouping_ubis where group_ubis='$ubis') ";
		}else if (substr($ubis,0,5) == "FINOP")
			$filter = " and z.kode_ubis in (select kode_ubis from exs_finop_ubis where kode_finop='".substr($ubis,5,2)."') ";
		else if (strlen($ubis) > 4)
			$filter = " and a.kode_cc like '$ubis%' ";
		else if ($this->isGubis($ubis))
			$filter = " and z.kode_induk like '$ubis%' ";
		else $filter = " and z.kode_ubis like '$ubis%' ";
		$sql = "select a.kode_akun, b.tahun, b.aggthn, b.aggbln, b.aggsd, c.actall as actthnini, c.actbln, c.actsd, d.actblnlalu, d.actsdlalu as actall, e.actblnlalu as trend
				   from bpc_masakun a
					left outer join (
							select a.kode_akun, tahun,
												sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn ,
												sum(case '$bln' when '01' then jan
														 when '02' then (jan + feb  )
														 when '03' then (jan + feb + mar  )
														 when '04' then (jan + feb + mar + apr  )
														 when '05' then (jan + feb + mar + apr + mei )
														 when '06' then (jan + feb + mar + apr + mei + jun  )
														 when '07' then (jan + feb + mar + apr + mei + jun + jul )
														 when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
														 when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
														 when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
														 when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
														 when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
												end) as aggsd,
												sum(case '$bln' when '01' then jan
														 when '02' then feb
														 when '03' then MAR
														 when '04' then APR
														 when '05' then MEI
														 when '06' then jun
														 when '07' then jul
														 when '08' then aug
														 when '09' then sep
														 when '10' then okt
														 when '11' then nop
														 when '12' then des
												end) as aggbln
									from exs_mbudget a
									inner join exs_cc b on b.kode_cc = a.kode_cc
									inner join exs_ubis z on z.kode_ubis = b.kode_ubis
									where tahun = '$thn1' and a.jenis = 'S' $filter group by a.kode_akun, tahun  ) b on b.kode_akun = a.kode_akun
					left outer join (
							select a.kode_akun,
												sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as actall ,
												sum(case '$bln' when '01' then jan
														 when '02' then (jan + feb  )
														 when '03' then (jan + feb + mar  )
														 when '04' then (jan + feb + mar + apr  )
														 when '05' then (jan + feb + mar + apr + mei )
														 when '06' then (jan + feb + mar + apr + mei + jun  )
														 when '07' then (jan + feb + mar + apr + mei + jun + jul )
														 when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
														 when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
														 when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
														 when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
														 when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
												end) as actsd,
												sum(case '$bln' when '01' then jan
														 when '02' then feb
														 when '03' then MAR
														 when '04' then APR
														 when '05' then MEI
														 when '06' then jun
														 when '07' then jul
														 when '08' then aug
														 when '09' then sep
														 when '10' then okt
														 when '11' then nop
														 when '12' then des
												end) as actbln
									from exs_mactual a
									inner join exs_cc b on b.kode_cc = a.kode_cc
									inner join exs_ubis z on z.kode_ubis = b.kode_ubis
									where tahun = '$thn1' and a.jenis = 'S' $filter  group by a.kode_akun, tahun ) c on c.kode_akun = a.kode_akun

					left outer join (
							select a.kode_akun,
												sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as actthn ,
												sum(case '$bln' when '01' then jan
														 when '02' then (jan + feb  )
														 when '03' then (jan + feb + mar  )
														 when '04' then (jan + feb + mar + apr  )
														 when '05' then (jan + feb + mar + apr + mei )
														 when '06' then (jan + feb + mar + apr + mei + jun  )
														 when '07' then (jan + feb + mar + apr + mei + jun + jul )
														 when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
														 when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
														 when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
														 when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
														 when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
												end) as actsdlalu,
												sum(case '$bln' when '01' then jan
														 when '02' then feb
														 when '03' then MAR
														 when '04' then APR
														 when '05' then MEI
														 when '06' then jun
														 when '07' then jul
														 when '08' then aug
														 when '09' then sep
														 when '10' then okt
														 when '11' then nop
														 when '12' then des
												end) as actblnlalu
									from exs_mactual a
									inner join exs_cc b on b.kode_cc = a.kode_cc
									inner join exs_ubis z on z.kode_ubis = b.kode_ubis
									where tahun = '$thn2' and a.jenis = 'S' $filter group by a.kode_akun, tahun ) d on  d.kode_akun = a.kode_akun
					left outer join (
							select a.kode_akun,
												sum(case '$bln2' when '01' then jan
														 when '02' then feb
														 when '03' then MAR
														 when '04' then APR
														 when '05' then MEI
														 when '06' then jun
														 when '07' then jul
														 when '08' then aug
														 when '09' then sep
														 when '10' then okt
														 when '11' then nop
														 when '12' then des
												end) as actblnlalu
									from exs_mactual a
									inner join exs_cc b on b.kode_cc = a.kode_cc
									inner join exs_ubis z on z.kode_ubis = b.kode_ubis
									where tahun = '$thn3' and a.jenis = 'S' $filter   group by a.kode_akun, tahun ) e on  e.kode_akun = a.kode_akun
				 ";
		$sql2 = "select distinct a.kode_neraca, left_pad(a.nama,level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
												, (nvl(b.aggthn,0))  as aggthn,( nvl(b.aggbln,0) ) as aggbln,( nvl(b.aggsd,0) ) as aggsd
												, ( nvl(b.actbln,0) ) as actbln,( nvl(b.actsd,0)) as actsd,( nvl(b.actblnlalu,0) ) as actblnlalu
												, ( nvl(b.actall,0) ) as actall
												, (nvl(b.trend,0)) as trend
												, round(case when b.aggbln <> 0 then nvl(b.actbln,0) / nvl(b.aggbln,0) * 100 else 0 end,0) as acvpsn
												, nvl(b.actbln,0) - nvl(b.aggbln,0)   as acvgap
												, round(case when b.trend <> 0 then (nvl(b.actbln,0) -  nvl(b.trend,0) )/ nvl(b.trend,0) * 100 else 0 end,0 ) as growthpsn
												, nvl(b.actbln,0) -  nvl(b.trend,0) as growthgap
												, round(case when b.aggsd <> 0 then nvl(b.actsd,0) / nvl(b.aggsd,0) * 100 else 0 end,0) as acvytdpsn
												, nvl(b.actsd,0) - nvl(b.aggsd,0) as acvytdrp
												, round(case when b.aggthn <> 0 then nvl(b.actsd,0) / nvl(b.aggthn,0) * 100 else 0 end,0)  as ytdpsn
												, round(case when b.actall <> 0 then (nvl(b.actsd,0) -  nvl(b.actall,0) )/ nvl(b.actall,0) * 100 else 0 end,0) as growthytypsn
												, nvl(b.actsd,0) -  nvl(b.actall,0) as growthytyrp
												, 0 as contrib
												, 0 as nilai_rev
												, 0 as nilai_exp
												, 0 as contrib2
										from bpc_neraca a
										left outer join (select x.kode_neraca, sum(nvl(aggthn,0)) as aggthn, sum(nvl(aggbln,0) ) as aggbln, sum(nvl(aggsd,0)) as aggsd,
																sum(nvl(actbln,0)) as actbln, sum(nvl(actsd,0)) as actsd, sum(nvl(actblnlalu,0)) as actblnlalu, sum(nvl(actall,0)) as actall, sum(nvl(trend,0)) as trend
														from bpc_relakun x left outer join ($sql) y on y.kode_akun = x.kode_akun
														where x.kode_fs = '$model' group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca

									where a.kode_fs = '$model' order by  rowindex";
		$rs = $this->dbLib->execute($sql2);

		$node = "";
		$rootNode = new server_util_NodeNRC("00");
		$this->sumHeader = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){

			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$node->setData($row);
			if ($row->tipe == "SUMMARY")
				$this->sumHeader->set($row->kode_neraca, $node);

		}
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			$this->summaries($val);
			if ($val->data->sum_header != "-"){
				$summaryHeader = explode(",",$val->data->sum_header);

				foreach ($summaryHeader as $header){
					$nodeHeader = $this->sumHeader->get($header);
					if ($nodeHeader){
						$nodeHeader->data->aggthn += $val->data->aggthn;
						$nodeHeader->data->aggbln += $val->data->aggbln;
						$nodeHeader->data->trend += $val->data->trend;
						$nodeHeader->data->aggsd += $val->data->aggsd;
						$nodeHeader->data->actbln += $val->data->actbln;
						$nodeHeader->data->actsd += $val->data->actsd;
						$nodeHeader->data->actblnlalu += $val->data->actblnlalu;
						//$nodeHeader->data->actsdlalu += $val->data->actsdlalu;
						$nodeHeader->data->actall += $val->data->actall;
					}
				}
			}
		}
		//perlu hitung ke summary
		$result = array('rs' => array('rows' => array() ) );
		$this->generateResult($rootNode, $result, $neraca);
		return json_encode($result);
	}
	//** simulasi BPC
	function getDataSimulasiSIBPC($model, $periode, $ubis = null, $pembagi = 1000000000){
		return $this->budgetService->getDataSimulasiSIBPC($model, $periode, $ubis, $pembagi );
	}
	function getDataSimulasiBPC($cfu, $model, $periode, $ubis = null, $pembagi = 1000000000){
		return $this->budgetService->getDataSimulasiBPC($cfu, $model, $periode, $ubis, $pembagi );
	}
	function loadPenetapan($cfu, $tahun, $lokasi, $modelRep){
		return $this->budgetService->loadPenetapan($cfu, $tahun, $lokasi, $modelRep);
	}
	/**
	 * getDataJejerAggRKAP function.
	 * digunakan untuk mendapatkan jejer anggaran per bulan
	 * @access public
	 * @param mixed $model		: model report
	 * @param mixed $periode	: periode report
	 * @param mixed $ubis (default: null)	: filter divisi
	 * @param int $pembagi (default: 1000000000)	: nilai pembagi untuk satuan milliar, juta, ribu, atau mutlak
	 * @return void
	 */
	function isGroupUbis($ubis){
		return $this->budgetService->isGroupUbis($ubis);
	}
	function getFilterUbis($tableAlias, $ubis, $lokasi = null){
		return $this->budgetService->getFilterUbis($tableAlias, $ubis, $lokasi);
	}
	function getRKAPSI($lokasi, $model, $tahun, $ubis, $segmen = null, $pembagi = 1000000000){
		return $this->budgetService->getRKAPSI($lokasi, $model, $tahun, $ubis, $segmen, $pembagi);
	}
	function summariesSI(&$item){
		return $this->budgetService->summariesSI($item);
	}
	function generateResultSI($item, &$result){
		return $this->budgetService->generateResultSI($item, $result);
	}
    function getDataJejerAggRKAPAP($lokasi, $model, $periode, $ubis = null, $pembagi = 1000000000){
        return $this->budgetService->getDataJejerAggRKAPAP($lokasi, $model, $periode, $ubis, $pembagi);
    }
	function getDataJejerAggRKAPAPDetail($lokasi, $model, $periode, $ubis = null, $neraca= null, $pembagi = 1000000000){
        return $this->budgetService->getDataJejerAggRKAPAPDetail($lokasi, $model, $periode, $ubis, $neraca, $pembagi);
    }
	function getDataJejerAggRKAP($lokasi, $model, $periode, $ubis = null, $pembagi = 1000000000){
		global $satuan;
		return $this->budgetService->getDataJejerAggRKAP($lokasi, $model, $periode, $ubis, $pembagi);
	}
	function getDataJejerAggRKAPDetail($lokasi, $model, $periode, $ubis = null, $neraca = null, $pembagi = 1000000000){
		global $satuan;
		return $this->budgetService->getDataJejerAggRKAPDetail($lokasi, $model, $periode, $ubis, $neraca, $pembagi);

	}
	function downloadDataRKAPAP($lokasi, $model, $periode, $ubis = null, $pembagi = 1000000000){
		global $satuan;
		return $this->budgetService->downloadDataRKAPAP($lokasi, $model, $periode, $ubis, $pembagi);
	}

	function getDataJejerAggRKAPCC($lokasi, $model, $periode, $ubis = null, $pembagi = 1000000000){
		global $satuan;
		return $this->budgetService->getDataJejerAggRKAPCC($lokasi, $model, $periode, $ubis, $pembagi);
	}
	function getDataJejerAggRKAPCCDetail($lokasi, $model, $periode, $ubis = null, $neraca = null, $pembagi = 1000000000){
		global $satuan;
		return $this->budgetService->getDataJejerAggRKAPCCDetail($lokasi, $model, $periode, $ubis,$neraca, $pembagi);

	}
	
	function getDataJejerAggRKAPDivre($lokasi, $model, $periode, $divre = null, $ubis = null, $pembagi = 1000000000){
		global $satuan;
		return $this->budgetService->getDataJejerAggRKAPDivre($lokasi, $model, $periode,$divre, $ubis, $pembagi);


	}
	function getDataJejerAggRKAPDivreDetail($lokasi, $model, $periode, $divre = null, $ubis = null, $neraca = null, $pembagi = 1000000000){
		global $satuan;
		return $this->budgetService->getDataJejerAggRKAPDivreDetail($lokasi, $model, $periode,$divre, $ubis,$neraca, $pembagi);


	}
	
	function getDataJejerBulanAggRKAP($lokasi, $model, $periode, $ubis = null, $pembagi = 1000000000){
		global $satuan;
		return $this->budgetService->getDataJejerBulanAggRKAP($lokasi, $model, $periode,$ubis, $pembagi);

	}
	function getDataJejerBulanAggRKAPDetail($lokasi, $model, $periode, $ubis = null, $neraca = null, $pembagi = 1000000000){
		global $satuan;
		return $this->budgetService->getDataJejerBulanAggRKAPDetail($lokasi, $model, $periode,$ubis,$neraca, $pembagi);


	}
	function getDataJejerSemesterAggRKAP($lokasi, $model, $periode, $ubis = null, $pembagi = 1000000000){
		global $satuan;
		return $this->budgetService->getDataJejerSemesterAggRKAP($lokasi, $model, $periode,$ubis, $pembagi);


	}
	function getDataJejerSemesterAggRKAPDetail($lokasi, $model, $periode, $ubis = null, $neraca = null, $pembagi = 1000000000){
		global $satuan;
		return $this->budgetService->getDataJejerSemesterAggRKAPDetail($lokasi, $model, $periode,$ubis,$neraca, $pembagi);


	}
	
	function isUbis($ubis){
		$rsUbis = $this->db->execute("select distinct kode_ubis,nama,rowindex, tipe from exs_ubis where kode_ubis ='$ubis' and level_spasi > 1 ");

		if ($row = $rsUbis->FetchNextObject(false)){
			return true;
		} else return false;
		
	}
	function isGubis($ubis){
		$rsUbis = $this->db->execute("select distinct kode_ubis,nama,rowindex, tipe from exs_ubis where kode_ubis ='$ubis' and level_spasi = 1 ");

		if ($row = $rsUbis->FetchNextObject(false)){
			return $row->level_spasi == 1;
		} else return false;
		
	}
	function isDivre($ubis){
		$rsUbis = $this->db->execute("select distinct kode_ubis  from exs_divre where kode_ubis ='$ubis' ");

		if ($row = $rsUbis->FetchNextObject(false)){
			return true;
		} else return false;
	}
	function isWitel($ubis){
		$rsUbis = $this->db->execute("select distinct kode_witel2  from exs_mappc where kode_witel2 ='$ubis' 
									union 
									select distinct kode_witel from exs_mappc where kode_witel ='$ubis' 
									");

		if ($row = $rsUbis->FetchNextObject(false)){
			return true;
		} else return false;
	}
	function getWitel($ubis){
		$rsUbis = $this->db->execute("select distinct kode_witel2  from exs_mappc where kode_witel2 ='$ubis' 
									union 
									select distinct kode_witel2 from exs_mappc where kode_witel ='$ubis' 
									");

		if ($row = $rsUbis->FetchNextObject(false)){
			return $row->kode_witel2;
		}
	}
	function getDataJejerPenetapan($lokasi, $model, $periode, $ubis = null, $pembagi = 1000000000){
		try{
			global $satuan;
			$this->getDB();
			$this->dbLib = $this->db;
			if (!isset($pembagi)) $pembagi = 1000000000;
			$satuan = $pembagi;
			$thn1 = substr($periode,0,4);
			$thn2 = floatval(substr($periode,0,4)) - 1;
			$dataUbis = new server_util_Map();
			if ($lokasi != "10"){
				$rs = $this->dbLib->execute("select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
														, nvl(c.nilai, 0)  as aggthn 
												from bpc_neraca a
												left outer join bpc_penetapan c on c.kode_lokasi = '$lokasi' and c.kode_neraca = a.kode_neraca and c.tahun = '$thn1' and c.kode_ubis = 'NAS' and c.model = a.kode_fs
											where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' order by  rowindex");
			}else if ($ubis == null || $ubis == "" || $ubis == "NAS") {

				$ubis = "";
				$rsUbis = $this->dbLib->execute("select distinct kode_ubis,nama,rowindex from exs_ubis where level_spasi = '1' and kode_lokasi = '$lokasi' order by rowindex");
				$sql = "";
				$field = "";
				$dataUbis = new server_util_Map();
				while ($row = $rsUbis->FetchNextObject(false)){
					$field .= ", 0  as \"$row->kode_ubis\"";
					$sql = " select c.kode_neraca, c.nilai as aggthn
								from bpc_penetapan c
								where c.tahun = '$thn1' and c.kode_ubis = '$row->kode_ubis' and c.kode_lokasi = '$lokasi' and c.model = '$model' ";
					$rs = $this->dbLib->execute($sql);
					$itemUbis = new server_util_Map();

					while ($line = $rs->FetchNextObject(false)){
						$itemUbis->set($line->kode_neraca, $line->aggthn );
					}
					$dataUbis->set($row->kode_ubis, $itemUbis);
				}
				$rs = $this->dbLib->execute("select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
														, nvl(c.nilai, 0)  as aggthn $field
												from bpc_neraca a
												left outer join bpc_penetapan c on c.kode_lokasi = a.kode_lokasi and c.kode_neraca = a.kode_neraca and c.tahun = '$thn1' and c.kode_ubis = 'NAS' and c.model = a.kode_fs
											where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' order by  rowindex");
			}else if ($this->isDivre($ubis)){
				$rsUbis = $this->dbLib->execute("select distinct a.kode_witel2 as kode_ubis, c.nama  from exs_mappc a 
									 inner join exs_divre b on b.witel = a.kode_witel 
									 inner join exs_cc c on c.kode_cc = a.kode_witel
									 where b.kode_ubis = '$ubis' and c.kode_lokasi  = '$lokasi' order by	kode_ubis ");
				$sql = "";
				$field = "";
				$dataUbis = new server_util_Map();
				while ($row = $rsUbis->FetchNextObject(false)){
					$field .= ", 0  as \"$row->kode_ubis\"";
					$sql = " select c.kode_neraca, sum(c.nilai) as aggthn
								from bpc_penetapan c
								where c.tahun = '$thn1' and c.kode_lokasi = '$lokasi' and c.kode_witel = '$row->kode_ubis' and kode_area = '$ubis' and c.model = '$model' group by kode_neraca ";
					$rs = $this->dbLib->execute($sql);
					$itemUbis = new server_util_Map();

					while ($line = $rs->FetchNextObject(false)){
						$itemUbis->set($line->kode_neraca, $line->aggthn );
					}
					$dataUbis->set($row->kode_ubis, $itemUbis);
				}
				$rs = $this->dbLib->execute("select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(c.nilai, 0) as aggthn, 0 as total, 0 as selisih $field
												from bpc_neraca a
												left outer join (select c.kode_neraca, sum(c.nilai) as nilai
																	from bpc_penetapan c 
																	where c.tahun = '$thn1' and c.kode_lokasi = '$lokasi' and c.kode_area = '$ubis' and c.model = '$model' and kode_witel = '-' group by kode_neraca) c on c.kode_neraca = a.kode_neraca 
											where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' order by  rowindex");
			
			}else if ($this->isUbis($ubis)){
				$rsUbis = $this->dbLib->execute("select distinct kode_ubis,nama,rowindex from exs_ubis where (kode_ubis = '$ubis' or kode_ubis in (select distinct kode_ubis from exs_divre )) and kode_lokasi = '$lokasi' order by rowindex");
				$sql = "";
				$field = "";
				$dataUbis = new server_util_Map();
				while ($row = $rsUbis->FetchNextObject(false)){
					$field .= ", 0  as \"$row->kode_ubis\"";
					$sql = " select c.kode_neraca, c.nilai as aggthn
								from bpc_penetapan c
								where c.tahun = '$thn1' and c.kode_area = '$row->kode_ubis' and c.kode_lokasi = '$lokasi' and c.kode_ubis = '$ubis' and c.model = '$model' ";
					$rs = $this->dbLib->execute($sql);
					$itemUbis = new server_util_Map();

					while ($line = $rs->FetchNextObject(false)){
						$itemUbis->set($line->kode_neraca, $line->aggthn );
					}
					$dataUbis->set($row->kode_ubis, $itemUbis);
				}
				$rs = $this->dbLib->execute("select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(c.nilai, 0) as aggthn, 0 as total, 0 as selisih $field
												from bpc_neraca a
												left outer join bpc_penetapan c on c.kode_lokasi = a.kode_lokasi and  c.kode_neraca = a.kode_neraca and c.tahun = '$thn1' and c.model = '$model' and c.kode_ubis = '$ubis' and c.kode_area = '-'
											where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' order by  rowindex");
			
			}else{
				$rsUbis = $this->dbLib->execute("select distinct kode_ubis,nama,rowindex from exs_ubis where kode_induk = '$ubis' and kode_lokasi = '$lokasi'  order by rowindex");
				$sql = "";
				$field = "";
				$dataUbis = new server_util_Map();
				while ($row = $rsUbis->FetchNextObject(false)){
					$field .= ", 0  as \"$row->kode_ubis\"";
					$sql = " select c.kode_neraca, c.nilai as aggthn
								from bpc_penetapan c
								where c.tahun = '$thn1' and c.kode_ubis = '$row->kode_ubis' and c.model ='$model' and c.kode_lokasi ='$lokasi' and c.kode_area= '-' ";
					$rs = $this->dbLib->execute($sql);
					$itemUbis = new server_util_Map();

					while ($line = $rs->FetchNextObject(false)){
						$itemUbis->set($line->kode_neraca, $line->aggthn );
					}
					$dataUbis->set($row->kode_ubis, $itemUbis);
				}
				$rs = $this->dbLib->execute("select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(c.nilai, 0) as aggthn, 0 as total, 0 as selisih $field
												from bpc_neraca a
												left outer join bpc_penetapan c on c.kode_neraca = a.kode_neraca and c.tahun = '$thn1' and c.kode_ubis = '$ubis' and a.kode_fs = c.model and c.kode_area= '-'
											where a.kode_fs = '$model' and a.kode_lokasi ='$lokasi' order by  rowindex");
			

			}

			$node = "";
			$rootNode = new server_util_NodeNRC("00");
			$this->sumHeader = new server_util_Map();
			while ($row = $rs->FetchNextObject(false)){
				if (strtoupper($row->jenis_akun == "PENDAPATAN")){
					foreach ($dataUbis->getArray() as $key => $itemUbis){
						eval ("\$row->$key = \$itemUbis->get(\$row->kode_neraca) * -1;");
						eval ("\$row->total += \$itemUbis->get(\$row->kode_neraca) * -1;");
					}
					$row->penetapan = $row->penetapan * -1;
					$row->aggthn = $row->aggthn * -1;

				}else {
					foreach ($dataUbis->getArray() as $key => $itemUbis){
						eval ("\$row->$key = \$itemUbis->get(\$row->kode_neraca);");
						eval ("\$row->total += \$itemUbis->get(\$row->kode_neraca);");
					}
				}
				$row->selisih = $row->aggthn - $row->total;
				if ($node == ""){
					$node = new server_util_NodeNRC($rootNode);
				}else if ($node->level == floatval($row->level_spasi) - 1 ){
					$node = new server_util_NodeNRC($node);
				}else if ($node->level == floatval($row->level_spasi) ){
					$node = new server_util_NodeNRC($node->owner);
				}else if ($node->level > floatval($row->level_spasi) ){
					while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
						$node = $node->owner;
					}
					$node = new server_util_NodeNRC($node->owner);
				}
				$node->setData($row);
				if ($row->tipe == "SUMMARY")
					$this->sumHeader->set($row->kode_neraca, $node);

			}
			//error_log($this->sumHeader->getLength());
			foreach ($rootNode->childs as $key => $val){
				if ($lokasi == "10"){
					$this->summariesJejerRKAP($val);
					if ($val->data->sum_header != "-"){
						$summaryHeader = explode(",",$val->data->sum_header);

						foreach ($summaryHeader as $header){
							$nodeHeader = $this->sumHeader->get($header);
							if ($nodeHeader){
								foreach ($val->dataArray as $key => $value) {
									if ($key != "kode_neraca" && $key != "nama" && $key != "tipe" && $key != "sum_header" && $key != "level_spasi" && $key != "rowindex")
										$nodeHeader->dataArray[$key] += $value;
								}
								$nodeHeader->data =(object) $nodeHeader->dataArray;
							}
						}
					}
				}
			}
			//perlu hitung ke summary
			$result = array('rs' => array('rows' => array() ) );
			$this->generateResultJejer($rootNode, $result);
			return ($result);
		}catch(Exception $e){
			error_log($e->getMessage());
			return $e->getMessage();
		}

	}
	function getDataKompRKAPWitel($model, $tahun, $witel, $pembagi = null){
		try{
			global $satuan;
			$this->getDb();
			if (!isset($pembagi)) $pembagi = 1000000000;
			$satuan = $pembagi;
			$thn1 = $tahun;
			$this->dbLib  = $this->db;
			$rsUbis = $this->dbLib->execute("select distinct b.nama, a.kode_ubis, a.urut_ubis from exs_mappc a
						inner join exs_ubis b on b.kode_ubis = a.kode_ubis
						where a.kode_witel2 like '".$witel."%' or a.kode_witel in (select witel from exs_divre where kode_ubis like'".$witel."%' )
						order by a.urut_ubis");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as \"$row->kode_ubis\"";
				$sql = " select x.kode_neraca, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
							from bpc_relakun x
							inner join bpc_mbudget_rkm y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' and jenis = 'S'
							inner join exs_cc z on z.kode_cc = y.kode_cc
							where x.kode_fs = '$model' 
										  and y.kode_cc in (select distinct kode_pc from exs_mappc a
														inner join exs_divre b on b.witel = a.kode_witel
														inner join exs_ubis c on c.kode_ubis = b.kode_ubis
													 where a.kode_witel2 like '".$witel."%' and a.kode_ubis = '". $row->kode_ubis ."'
										  union
										  select distinct kode_pc from exs_mappc a where kode_witel2 like '".$witel."%' and a.kode_ubis = '". $row->kode_ubis ."') 
							group by x.kode_neraca";
				$rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_neraca, $line->aggthn);
				}
				$dataUbis->set($row->kode_ubis, $itemUbis);
			}
			$rs = $this->dbLib->execute("select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(c.nilai, 0) as penetapan, (nvl(b.aggthn,0))  as aggthn $field
											from bpc_neraca a
											left outer join (select x.kode_neraca,sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
															from bpc_relakun x
															inner join bpc_mbudget_rkm y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' and y.jenis = 'S'
															inner join exs_cc z on z.kode_cc = y.kode_cc
															where x.kode_fs = '$model'
															 and y.kode_cc in (select distinct kode_pc from exs_mappc a
																			inner join exs_divre b on b.witel = a.kode_witel
																			inner join exs_ubis c on c.kode_ubis = b.kode_ubis
																		 where a.kode_witel2 like '".$witel."%' 
															  union
															  select distinct kode_pc from exs_mappc a where kode_witel2 like '".$witel."%' )  
															group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
											left outer join (select kode_neraca, sum(nilai) as nilai from bpc_penetapan where tahun = '$thn1' and kode_area = '".$witel."'
															group by kode_neraca)  c on c.kode_neraca = a.kode_neraca 
										where a.kode_fs = '$model' order by  rowindex");
		
			$node = "";
			$rootNode = new server_util_NodeNRC("00");
			$this->sumHeader = new server_util_Map();
			while ($row = $rs->FetchNextObject(false)){
				if (strtoupper($row->jenis_akun) == "PENDAPATAN"){
					foreach ($dataUbis->getArray() as $key => $itemUbis){
						eval ("\$row->$key = \$itemUbis->get(\$row->kode_neraca) * -1;");
					}
					$row->penetapan = $row->penetapan * -1;
					$row->aggthn = $row->aggthn * -1;
				}else {
					foreach ($dataUbis->getArray() as $key => $itemUbis){
						eval ("\$row->$key = \$itemUbis->get(\$row->kode_neraca);");
					}
				}
				if ($node == ""){
					$node = new server_util_NodeNRC($rootNode);
				}else if ($node->level == floatval($row->level_spasi) - 1 ){
					$node = new server_util_NodeNRC($node);
				}else if ($node->level == floatval($row->level_spasi) ){
					$node = new server_util_NodeNRC($node->owner);
				}else if ($node->level > floatval($row->level_spasi) ){
					while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
						$node = $node->owner;
					}
					$node = new server_util_NodeNRC($node->owner);
				}
				$node->setData($row);
				if ($row->tipe == "SUMMARY")
					$this->sumHeader->set($row->kode_neraca, $node);

			}
			//error_log($this->sumHeader->getLength());
			foreach ($rootNode->childs as $key => $val){
				$this->summariesJejer($val);
				if ($val->data->sum_header != "-"){
					$summaryHeader = explode(",",$val->data->sum_header);

					foreach ($summaryHeader as $header){
						$nodeHeader = $this->sumHeader->get($header);
						if ($nodeHeader){
							foreach ($val->dataArray as $key => $value) {
								if ($key != "kode_neraca" && $key != "nama" && $key != "tipe" && $key != "sum_header" && $key != "level_spasi" && $key != "rowindex")
									$nodeHeader->dataArray[$key] += $value;
							}
							$nodeHeader->data =(object) $nodeHeader->dataArray;
						}
					}
				}
			}
			//perlu hitung ke summary
			$result = array('rs' => array('rows' => array() ) );
			$this->generateResultJejer($rootNode, $result);
			return json_encode($result);
		}catch(Exception $e){
			error_log($e->getMessage());	
		}
	}
	function listNeraca($model, $lokasi){
		try{
			$rs = $this->db->execute("select kode_fs, kode_neraca from bpc_neraca where kode_fs  = '$model' and kode_lokasi = '$lokasi' order by kode_fs, kode_neraca");
			$fs = "";
			$result = new server_util_Map();
			while ($row = $rs->FetchNextObject(false)){
				$fs = $row->kode_fs;
				$value = $result->get($fs);
				if ($value == null){
					$value = new server_util_Map();
					$result->set($fs, $value);
				}
				$value->set($row->kode_neraca, $row->kode_neraca);
			}
			error_log(json_encode($result));
			return $result;
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}
	function uploadDataRKAPAP($lokasi, $tahun, $userlog, $listItem){
		try{
			$this->getDb();
			$rs = $this->db->execute("select distinct progress from bpc_mbudget where kode_lokasi = '$lokasi' and tahun = '$tahun' and progress in ('1','2') ");
			if ($row = $rs->FetchNextObject(false)){
				return "Data Upload sudah tersubmit ke Approval. Tidak bisa di ubah";
			}
			$rs = $this->db->execute("select distinct versi from bpc_mbudget where kode_lokasi = '$lokasi' and tahun = '$tahun' ");
			if ($row = $rs->FetchNextObject(false)){
				$versi = $row->versi + 1;
			}else $versi = 1;
			$listAkun = $this->listNeraca("",$lokasi);
			$result = array("akun" => array());
			
			{
				$sql = new server_util_arrayList();
				$sql->add("insert into bpc_mbudget_log select * from bpc_mbudget where tahun = '$tahun' and kode_lokasi = '$lokasi' ");
				$sql->add("delete from bpc_mbudget where tahun = '$tahun' and kode_lokasi = '$lokasi' ");
				foreach ($listItem as $val){
					$ok = true;
					/*if ($listAkun->get($val->model) === null ){
						array_push($result["akun"], $val);
						$ok = false;
					}else if ($listAkun->get($val->model)->get($val->kode) === null ){
						array_push($result["akun"], $val);
						$ok = false;
					}*/
					
					if ($ok)
						$sql->add("insert into bpc_mbudget(tahun, kode_cc, kode_akun, jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des, jenis,kode_witel, nik_user, tgl_upd, kode_lokasi,versi) 
								values('$tahun','-','".$val->kode."'
								,".$val->jan."
								,".$val->feb."
								,".$val->mar."
								,".$val->apr."
								,".$val->mei."
								,".$val->jun."
								,".$val->jul."
								,".$val->aug."
								,".$val->sep."
								,".$val->okt."
								,".$val->nop."
								,".$val->des."
								,'".$val->model."','-','$userlog',sysdate, '$lokasi','$versi') ");
				}
				
			}
			
			$ret = $this->db->execArraySQL($sql);
			if (!$ok){
				if ($ret == "process completed"){
					error_log(json_encode($result));
					return $result;
				}else {
					error_log($ret);
					return $ret;
				}
			}else {
				error_log($ret);
				return $ret;
			}
			
				
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}
	function downloadRKAPAP($lokasi, $tahun){
		$this->getDb();
		
		
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 
 
		// Add Data in your file
		$rsPL = $this->db->execute("select kode_fs from bpc_fs where kode_lokasi = '9000'");
		$first = true;
		while ($rowPL = $rsPL->FetchNextObject(false)){
			$sql1 = "select x.kode_neraca, x.nama, y.jan, y.feb, y.mar, y.apr, y.mei, y.jun, y.jul, y.aug, y.sep. y.okt, y.nop, y.des, x.rowindex
					from bpc_neraca x
					inner join bpc_mbudget y on y.kode_akun = x.kode_neraca and y.tahun = '$tahun' and y.jenis = x.kode_fs
					where x.kode_fs = '$rowPL->kode_fs' and y.kode_lokasi = '$lokasi' order by x.rowindex";
					
			$rs = $this->db->execute($sql1);
			
			$first = false;
			
		}
		
					
		
			
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$column = array("Account","Uraian","Jan","Feb","Mar","Apr","Mei","Jun","Jul","Agt","Sep","Okt","Nop","Des");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
			
	
		// Rename worksheet
		$objPHPExcel->getActiveSheet()->setTitle('NW PL');
 		
 		$sheet = $objPHPExcel->createSheet();
 		$sheet->setTitle('Standard PL');
 		
 		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
		// Rename worksheet
		
		
		$sheet = $objPHPExcel->createSheet();
		$sheet->setTitle('TIME PL');
 		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
			
	
		// Rename worksheet
		
		
 
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/templateRKAPAP.xlsx");
	
 
		return "/tmp/templateRKAPAP.xlsx";
	}
	
	function uploadDataRKAP($cfu, $lokasi, $ubis, $tahun, $userlog, $listItem){
		return $this->budgetService->uploadDataRKAP($cfu, $lokasi, $ubis, $tahun, $userlog, $listItem);
	}
    function uploadDataRKAPALL($lokasi, $tahun, $userlog, $listItem){
		return $this->budgetService->uploadDataRKAPALL($lokasi, $tahun, $userlog, $listItem);
	}
	
	function resetUploadDataRKAP($lokasi, $ubis, $tahun, $userlog){
		return $this->budgetService->resetUploadDataRKAP($lokasi, $ubis, $tahun, $userlog);
	}
	function getDataRKAP($lokasi, $model, $tahun, $ubis, $pembagi = 1000000000){
		return $this->budgetService->getDataRKAP($lokasi, $model, $tahun, $ubis, $pembagi);
	}
	function getSummaryUploadDataRKAP($ubis, $tahun, $userlog){
		return $this->budgetService->getSummaryUploadDataRKAP($ubis, $tahun, $userlog);
	}
	function downloadListDataRKAP($lokasi, $tahun, $ubis, $pembagi = 1000000000){
		return $this->budgetService->downloadListDataRKAP($lokasi, $tahun, $ubis, $pembagi);	
		
	}
	function downloadListDataRKAPUpload($lokasi, $tahun, $ubis, $pembagi = 1000000000){
		return $this->budgetService->downloadListDataRKAPUpload($lokasi, $tahun, $ubis, $pembagi);	
		
	}
	function downloadListDataRKAPJejerUbis($lokasi, $tahun, $pembagi = 1000000000){
		return $this->budgetService->downloadListDataRKAPJejerUbis($lokasi, $tahun, $pembagi);	
		
	}
	
	function getListDataRKAP($lokasi, $tahun, $ubis, $pembagi = 1000000000){
		return $this->budgetService->getListDataRKAP($lokasi, $tahun, $ubis, $pembagi);
	}
	
	function downloadDataRKAP($lokasi, $model, $tahun, $ubis, $pembagi){
		return $this->budgetService->downloadDataRKAP($lokasi, $model, $tahun, $ubis, $pembagi);
	}
	function downloadDataPenetapan($lokasi, $tahun, $ubis){
		return $this->budgetService->downloadDataPenetapan($lokasi, $tahun, $ubis);
	}
	function getVersiPenetapan($tahun, $lokasi, $ubis, $divre, $witel){
		return $this->budgetService->getVersiPenetapan($tahun, $cfu, $lokasi, $ubis, $divre, $witel);
	}
	function uploadPenetapan($tahun, $cfu, $lokasi, $model, $ubis, $divre, $witel, $userlog, $data, $dataAkun){
		return $this->budgetService->uploadPenetapan($tahun, $cfu, $lokasi, $model, $ubis, $divre, $witel, $userlog, $data, $dataAkun);
	}
	/** Clean Up unused file on tmp folder
	**/
	function cleanUp()
    {
    	global $serverDir;
        uses("server_util_File");
        $tmpDir = new server_util_File($serverDir . "/tmp");
        
        $oldest = strtotime("-1 day");
        
        if ($tmpDir->isDir())
        {
            $fileList = $tmpDir->listDir();
            
            foreach ($fileList->getArray() as $key => $value)
            {
                if ($value->isFile() )//&& (substr($value->getBaseFileName(), 0, 4) == "ses_")
                {
                    if ($value->getModifTime() < $oldest)
                        $value->delete();
                }                             
            }
        }
    }
    /*
    	download client data with xlsx Excel Format
    */
	function download($data){
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Data Gagal Upload")
						 ->setSubject("RKAP")
						 ->setDescription("Gagal Upload untuk RKAP")
						  ->setKeywords("RKAP RKM")
							 ->setCategory("RKAP");
 
 
		// Add Data in your file
 
		$objPHPExcel->setActiveSheetIndex(0);
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$row = 1;
		$first = true;
		$sheet = $objPHPExcel->getActiveSheet();
		foreach ($data as $val){
			$line = (array) $val;
			if ($first){
				//write col title
				$col = 0;
				foreach ($line as $key => $value){	
					$sheet->setCellValueByColumnAndRow($col, $row, $key);
					$col++;
				}
				$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
				$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
				$row++;
			}
			$col = 0;
			foreach ($line as $key => $value){	
				$sheet->setCellValueByColumnAndRow($col, $row, $value);
				$col++;
			}
			$row++;
			$first = false;
		}
	
		// Rename worksheet
		$objPHPExcel->getActiveSheet()->setTitle('Upload Gagal');
 
 
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/$namafile.xlsx");
		$callEndTime = microtime(true);
		$callTime = $callEndTime - $callStartTime;
 
		return "/tmp/$namafile.xlsx";
	}
	function downloadTemplateRKAP(){
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 
 
		// Add Data in your file
 
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$column = array("RKM","CC","Account","Jan","Feb","Mar","Apr","Mei","Jun","Jul","Agt","Sep","Okt","Nop","Des");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
			
	
		// Rename worksheet
		$objPHPExcel->getActiveSheet()->setTitle('RKAP');
		
		$sheet = $objPHPExcel->createSheet();
 		$sheet->setTitle('List CFU');
 		
		$db = $this->getDb();
		$rs = $db->execute("select concat (substr(kode_cfu,4,1),substr(kode_cfu,6,1)) as kode, nama, rowindex from bpc_cfu order by rowindex");
 		
		$sheet->setCellValueByColumnAndRow(0, 1, "Kode");
		$sheet->setCellValueByColumnAndRow(1, 1, "Nama");
		$sheet->setSharedStyle($sharedStyle1,"A1:B1");
		$row = 2;
		$col = 0;
		while ($line= $rs->FetchNextObject(false)){	
			$sheet->setCellValueByColumnAndRow(0, $row, $line->kode);
			$sheet->setCellValueByColumnAndRow(1, $row, $line->nama);
			$row++;
		}
		

 
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/templateRKAP.xlsx");
	
 
		return "/tmp/templateRKAP.xlsx";
	}
	function downloadTemplateRKAPAP(){
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 
 
		// Add Data in your file
 
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$column = array("Account","Uraian","Jan","Feb","Mar","Apr","Mei","Jun","Jul","Agt","Sep","Okt","Nop","Des");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
			
	
		// Rename worksheet
		$objPHPExcel->getActiveSheet()->setTitle('NW PL');
 		
 		$sheet = $objPHPExcel->createSheet();
 		$sheet->setTitle('Standard PL');
 		
 		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
		// Rename worksheet
		
		
		$sheet = $objPHPExcel->createSheet();
		$sheet->setTitle('TIME PL');
 		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
			
	
		// Rename worksheet
		
		
 
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/templateRKAPAP.xlsx");
	
 
		return "/tmp/templateRKAPAP.xlsx";
	}
	
	function downloadTemplatePenetapan($model){
		try{
			$this->cleanUp();
			uses("server_modules_codeplex_PHPExcel",false);
			$objPHPExcel = new PHPExcel();
 
 
			// Set document properties
			$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
							 ->setLastModifiedBy("MA")
							 ->setTitle("Template Penetapan")
							 ->setSubject("Penetapan")
							 ->setDescription("Template Penetapan")
							  ->setKeywords("RKAP Template Penetapan")
								 ->setCategory("RKAP");
 
 
			// Add Data in your file
 
			$objPHPExcel->setActiveSheetIndex(0);
			$sheet = $objPHPExcel->getActiveSheet();
			$sharedStyle1 = new PHPExcel_Style();
			$sharedStyle1->applyFromArray(
				array('fill' 	=> array(
											'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
											'color'		=> array('argb' => 'FFCCFFCC')
										),
					  'borders' => array(
											'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
											'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
										)
					 ));
			$row = 1;
			$first = true;
			///write Col Title
			$column = array("Kode","Deskripsi","level","Nilai");
			$col = 0;
			$row = 1;
			foreach ($column as $value){	
				$sheet->setCellValueByColumnAndRow($col, $row, $value);
				$col++;
			}
			$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
			$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
			$row++;	
			//Write Data 
			$this->getDb();
			$rs = $this->db->execute("select kode_neraca, nama, rowindex, level_spasi from bpc_neraca where kode_fs = '$model' order by rowindex ");
			while ($rowData = $rs->FetchNextObject(false)){
				$sheet->setCellValueByColumnAndRow(0, $row, $rowData->kode_neraca);
				$sheet->setCellValueByColumnAndRow(1, $row, $rowData->nama);
				$sheet->setCellValueByColumnAndRow(2, $row, $rowData->level_spasi);	
				$sheet->setCellValueByColumnAndRow(3, $row, 0);	
				$row++;
			}
		
			// Rename worksheet
			$objPHPExcel->getActiveSheet()->setTitle('RKAP');
 
 
			// Set active sheet index to the first sheet, so Excel opens this as the first sheet
			$objPHPExcel->setActiveSheetIndex(0);
 
 
			// Save Excel 2007 file
			$namafile = MD5(date("r"));
			global $serverDir;
			$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
			$objWriter->save($serverDir . "/tmp/templateRKAP.xlsx");
			
 
			return "/tmp/templateRKAP.xlsx";
		}catch(Exception $e){
			return $e->getMessage();
		}
	}
	/* Email */
	function sendMail($from,$to, $subject, $content){
		uses("server_util_mail");
		if ($this->mail == null)
			$this->mail = new server_util_mail();
		$pass = $_SESSION["pass"];
		$from = $_SESSION["username"]."@telkom.co.id";
		$ret = $this->mail->sendMail($from, $to, $subject, urldecode($content), null, $pass);
		error_log($ret);
		return $ret;
	}
	function sendSMS($telp, $content){
		$no = $telp . md5(data("r"));
		$this->db->execute("insert into sms_outbox(no_outbox, tanggal, pesan, no_telp, flag_kirim)values('$no', sysdate, '$content', '$telp','0')");
	}
	function getDataJejerBulanAggRKAPDetailReport($lokasi, $model, $periode, $ubis = null, $pembagi = 1000000000){
		return $this->budgetService->getDataJejerBulanAggRKAPDetailReport($lokasi, $model, $periode, $ubis, $pembagi);
	}
	function getDataJejerBulanAggRKM($lokasi, $periode, $ubis = null, $pembagi = 1000000000){
		return $this->budgetService->getDataJejerBulanAggRKM($lokasi, $periode, $ubis, $pembagi);
	}
	function previewRKAPSummary($lokasi, $tahun,$model,  $ubis, $level = 2, $pembagi = 1){
		return $this->budgetService->previewRKAPSummary($lokasi, $tahun,$model,  $ubis, $level, $pembagi);
	}
	function isCFU($ubis){
        return $this->budgetService->isCFU($ubis);
    }
	function previewRKAP($lokasi, $tahun, $model,  $ubis, $pembagi = 1){
		return $this->budgetService->previewRKAP($lokasi, $tahun, $model,  $ubis, $pembagi);
	}
	function previewRKAPCFU($cfu, $tahun, $model,  $pembagi = 1){
		return $this->budgetService->previewRKAPCFU($cfu, $tahun, $model,  $pembagi);
	}
	function previewRKAPRKM($lokasi, $tahun, $ubis, $pembagi = 1){
		return $this->budgetService->previewRKAPRKM($lokasi, $tahun, $ubis, $pembagi);
	}
	function previewRKAPRKMCFU($cfu, $tahun, $ubis, $pembagi = 1){
		return $this->budgetService->previewRKAPRKMCFU($cfu, $tahun,  $pembagi);
	}
	function setDataRKAP(&$sheet, $lokasi, $tahun, $model, $ubis, $pembagi = 1){
		return $this->budgetService->setDataRKAP($sheet, $lokasi, $tahun, $model, $ubis, $pembagi);
	}
	function previewRKAPAll($lokasi, $tahun, $model, $ubis, $pembagi = 1){
		return $this->budgetService->previewRKAPAll($lokasi, $tahun, $model, $ubis, $pembagi);
	}
	function previewRKAPRKMAll($lokasi, $tahun, $ubis, $pembagi = 1){
		return $this->budgetService->previewRKAPRKMAll($lokasi, $tahun, $ubis, $pembagi);
	}
	function previewRKAPPDF($lokasi, $tahun, $ubis, $pembagi = 1){
		return $this->budgetService->previewRKAPPDF($lokasi, $tahun, $ubis, $pembagi);
	}
	function getDataCFU($induk,$model, $tahun, $pembagi){
		return $this->budgetService->getDataCFU($induk,$model, $tahun, $pembagi);
    }
    function getDataCFUDetail($cfu,$model,$tahun,$induk,  $pembagi){
        return $this->budgetService->getDataCFUDetail($cfu,$model,$tahun,$induk,  $pembagi);   
    }
    function getDataCFUDetailReport($cfu,$model,$tahun, $pembagi){
        return $this->budgetService->getDataCFUDetailReport($cfu,$model,$tahun,$induk,  $pembagi); 
    }
	
	function getTBCC($login, $tahun, $ubis, $compCode = null){
		$this->rfc = new server_util_rfcLib("sap/rra");
		$sapImp = new server_util_Map(array(
								"IM_GJAHR" => $tahun ,
								"IM_KOKRS" => $compCode,
								"IM_VERSN" => "000",
								"IM_RLDNR"	=> "N1"
								));
		$dataAkun = new server_util_arrayList();
		$dataAkun->add(array("SIGN"=>"I","OPTION"=>"BT","LOW"=>"0040000000","HIGH"=>"0079999999"));

		$dataCC = new server_util_arrayList();
		if ($ubis->get("low") == "")
				;
		else if ($ubis->get("high") == "")
			$dataCC->add(array("SIGN"=>"I","OPTION"=>"CP","LOW"=>$ubis->get("low"),"HIGH"=>$ubis->get("high")));
		else
			$dataCC->add(array("SIGN"=>"I","OPTION"=>"BT","LOW"=>$ubis->get("low"),"HIGH"=>$ubis->get("high")));
		$sapExpTable = new server_util_Map(array("T_OUTPUT"));
		$sapImpTable = new server_util_Map(array("IT_PRCTR" => $dataCC,"IT_RACCT" => $dataAkun));
		return $this->rfc->callRFC($login,"ZFMFI_PLAN_ACT_MONTHLY_REPORT", $sapImp, $sapExpTable, $sapImpTable, null, true);
	}
    function transportKeSAP($lokasi, $modelRKAP, $ubis, $tahun, $user, $pass ){
		$this->getDb();
		/*
        $rs = $this->db->execute("select value1 from bpc_rules where kode_rules = 'MODELREP'");
		if ($row = $rs->FetchNextObject(false))
			$modelRKAP = $row->value1;
		else $modelRKAP = "TIMERKAP";
        */
		
		$filter = $this->getFilterUbis("a", $ubis, $lokasi);
        /*
        $sql = "select e.kode_neraca, a.kode_akun, b.nama, a.kode_cc, c.nama as nmcc, a.kode_rkm, d.nama as nmrkm
								, sum(round(case when b.jenis ='PENDAPATAN' or a.kode_akun like '52%' then -jan else jan end)) as jan
								, sum(round(case when b.jenis ='PENDAPATAN' or a.kode_akun like '52%' then -feb else feb end)) as feb
								, sum(round(case when b.jenis ='PENDAPATAN' or a.kode_akun like '52%' then -mar else mar end)) as mar
								, sum(round(case when b.jenis ='PENDAPATAN' or a.kode_akun like '52%' then -apr else apr end)) as apr
								, sum(round(case when b.jenis ='PENDAPATAN' or a.kode_akun like '52%' then -mei else mei end)) as mei
								, sum(round(case when b.jenis ='PENDAPATAN' or a.kode_akun like '52%' then -jun else jun end)) as jun
								, sum(round(case when b.jenis ='PENDAPATAN' or a.kode_akun like '52%' then -jul else jul end)) as jul
								, sum(round(case when b.jenis ='PENDAPATAN' or a.kode_akun like '52%' then -aug else aug end)) as aug
								, sum(round(case when b.jenis ='PENDAPATAN' or a.kode_akun like '52%' then -sep else sep end)) as sep
								, sum(round(case when b.jenis ='PENDAPATAN' or a.kode_akun like '52%' then -okt else okt end)) as okt
								, sum(round(case when b.jenis ='PENDAPATAN' or a.kode_akun like '52%' then -nop else nop end)) as nop
								, sum(round(case when b.jenis ='PENDAPATAN' or a.kode_akun like '52%' then -des else des end)) as des
								, a.kode_group as kode_ubis, d.kode_program
						from bpc_mbudget_rkm a 
						 inner join bpc_masakun b on b.kode_akun = a.kode_akun and b.kode_lokasi = a.kode_lokasi
						 inner join bpc_relakun e on e.kode_akun = a.kode_akun and e.kode_lokasi = a.kode_lokasi and e.kode_fs = '$modelRKAP'
						 inner join exs_cc c on c.kode_cc = a.kode_cc and c.kode_lokasi = a.kode_lokasi 
						 inner join bpc_rkm d on d.kode_rkm = a.kode_rkm and d.tahun = a.tahun  and d.kode_lokasi = a.kode_lokasi
						where  a.tahun ='$tahun' and a.kode_lokasi = '$lokasi'  and $filter
						group by e.kode_neraca, a.kode_akun, b.nama, a.kode_cc, c.nama, a.kode_rkm, d.nama, a.kode_group, d.kode_program";
		*/
        $sql = "select e.kode_neraca, b.kode_akun, b.nama, a.kode_cc, c.nama as nmcc, a.kode_rkm, d.nama as nmrkm
								, sum(round(case when b.jenis ='PENDAPATAN' or substr(a.kode_akun,1,1) = '4' then -jan else jan end)) as jan
								, sum(round(case when b.jenis ='PENDAPATAN' or substr(a.kode_akun,1,1) = '4' then -feb else feb end)) as feb
								, sum(round(case when b.jenis ='PENDAPATAN' or substr(a.kode_akun,1,1) = '4' then -mar else mar end)) as mar
								, sum(round(case when b.jenis ='PENDAPATAN' or substr(a.kode_akun,1,1) = '4' then -apr else apr end)) as apr
								, sum(round(case when b.jenis ='PENDAPATAN' or substr(a.kode_akun,1,1) = '4' then -mei else mei end)) as mei
								, sum(round(case when b.jenis ='PENDAPATAN' or substr(a.kode_akun,1,1) = '4' then -jun else jun end)) as jun
								, sum(round(case when b.jenis ='PENDAPATAN' or substr(a.kode_akun,1,1) = '4' then -jul else jul end)) as jul
								, sum(round(case when b.jenis ='PENDAPATAN' or substr(a.kode_akun,1,1) = '4' then -aug else aug end)) as aug
								, sum(round(case when b.jenis ='PENDAPATAN' or substr(a.kode_akun,1,1) = '4' then -sep else sep end)) as sep
								, sum(round(case when b.jenis ='PENDAPATAN' or substr(a.kode_akun,1,1) = '4' then -okt else okt end)) as okt
								, sum(round(case when b.jenis ='PENDAPATAN' or substr(a.kode_akun,1,1) = '4' then -nop else nop end)) as nop
								, sum(round(case when b.jenis ='PENDAPATAN' or substr(a.kode_akun,1,1) = '4' then -des else des end)) as des
								, substr(a.kode_rkm,2,2) as kode_ubis, d.kode_program
						from bpc_mbudget_rkm a 
						 inner join exs_masakun b on b.kode_akun = a.kode_akun and a.kode_lokasi = b.kode_lokasi
						 inner join exs_relakun e on e.kode_akun = b.kode_akun and e.kode_lokasi = b.kode_lokasi and e.kode_fs = '$modelRKAP'
						 inner join exs_cc c on c.kode_cc = a.kode_cc and c.kode_lokasi = a.kode_lokasi 
						 inner join bpc_rkm d on d.kode_rkm = a.kode_rkm and d.tahun = a.tahun  and d.kode_lokasi = a.kode_lokasi
						where  a.tahun ='$tahun' and a.kode_lokasi = '$lokasi'  and $filter
						group by e.kode_neraca, b.kode_akun, b.nama, a.kode_cc, c.nama, a.kode_rkm, d.nama, a.kode_group, d.kode_program";
        error_log("transport SAP $sql");
        $rs = $this->db->execute($sql);// jika base on Ubis yang upload pake field ubis_upload = '$ubis'
        
		$fields = array("MANDT","FYEAR","VERSN","ORGGROUP","ORGS","RKMDIR","RKMUB","ACTV","ACCT","PRODUK","SEQ","DESCRIPT"
						,"JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DES","DATUM","UZEIT","OPERATOR","RKMUBDESC");
		$first = true;
		$this->rfc = new server_util_rfcLib("rra/sap");
		$dataRKAP = new server_util_arrayList();
		$login = new server_util_Map();
		$login->set("user", $user);
		$login->set("passwd", $pass);
		
		while ($rowData = $rs->FetchNextObject(false)){
			$line = array( 
							"MANDT" 	=> "100",
							"FYEAR" 	=> $tahun,
							"VERSN"		=> "001",
							"ORGGROUP" 	=> $rowData->kode_ubis,
							"ORGS" 		=> $rowData->kode_cc,
							"RKMDIR" 	=> $rowData->kode_program,
							"RKMUB" 	=> $rowData->kode_rkm,
							"ACTV"		=> "",
							"ACCT"		=> "00" . $rowData->kode_akun,
							"PRODUK" 	=> $rowData->kode_neraca,
							"SEQ"		=> 1,
							"DESCRIPT"	=> "",
							"JAN" 		=> number_format($rowData->jan,0,'.',''),
							"FEB" 		=> number_format($rowData->feb,0,'.',''),
							"MAR" 		=> number_format($rowData->mar,0,'.',''),
							"APR" 		=> number_format($rowData->apr,0,'.',''),
							"MAY" 		=> number_format($rowData->mei,0,'.',''),
							"JUN" 		=> number_format($rowData->jun,0,'.',''),
							"JUL" 		=> number_format($rowData->jul,0,'.',''),
							"AUG" 		=> number_format($rowData->aug,0,'.',''),
							"SEP" 		=> number_format($rowData->sep,0,'.',''),
							"OCT" 		=> number_format($rowData->okt,0,'.',''),
							"NOV"		=> number_format($rowData->nop,0,'.',''),
							"DES" 		=> number_format($rowData->des,0,'.',''),
							"DATUM"		=> "",
							"UZEIT"		=> "",
							"OPERATOR"	=> "",
							"RKMUBDESC"	=> $rowData->nmrkm
							
						);
			//error_log(json_encode($line));
			$dataRKAP->add($line);
			
		}
		error_log("Transfer Done :" . $dataRKAP->getLength());
		$sapImpTable = new server_util_Map(array("ITAB" => $dataRKAP));
		$ret = $this->rfc->callRFC($login,"ZFM_BPC_GL_PRCTR", null, null, $sapImpTable, null, true);
		return $ret;
	
	}
	//GJAHR 	VERSN 	CCTR 	SAKNR 	GEBER 	RTCUR 	BEKNZ 	TSLVT_P 	TSL01_P 	TSL02_P 	TSL03_P 	TSL04_P 	TSL05_P 	TSL06_P 	TSL07_P 	TSL08_P 	TSL09_P 	TSL10_P 	TSL11_P 	TSL12_P
	function getSAPCOExport($lokasi, $ubis, $tahun, $user, $pass, $version ){
		try{
			error_log("SAP CO $lokasi, $ubis, $tahun  $version");
			$this->getDb();
			$this->rfc = new server_util_rfcLib("rra/sap");
			$dataRKAP = new server_util_arrayList();
			$login = new server_util_Map();
			$login->set("user", $user);
			$login->set("passwd", $pass);
			
			$rs = $this->db->execute("select distinct cocd from bpc_lokasi where kode_lokasi  ='$lokasi' ");
			if ($row = $rs->FetchNextObject(false))
				$cocd = $row->cocd;
			else $cocd = '1000';
			//VERSN = '001'
			error_log("Prepare $lokasi $ubis $tahun $cocd");
			$sapImp = new server_util_Map(array(
									'ACTUAL' => 'X',
									"BUKRS" => $cocd,
									"CURRENCYTYPE" => '10',
									'FINSTAT'	=> '2011',
									//'FINSTATVERS' => '2011',
									'FYEAR' => $tahun,
									//'LEDGER' => 'N1',
									'LINEITEMS' => ' ',
									//'OUTLOOK' => ' ',
									'PLAN' =>'X',
									//'PLANVERS' =>'001',
									'REP_VERS' =>'RKAPS',
									'VERSN' => $version
									));
			$dataAkun = new server_util_Map();
			$dataCC = new server_util_Map();
			$rs = $this->db->execute("select distinct kode_akun,nama, jenis from exs_masakun where kode_lokasi  ='$lokasi' ");
			while ($row = $rs->FetchNextObject(false)){
				$dataAkun->set($row->kode_akun, $row);
			}
			$rs = $this->db->execute("select  distinct  kode_cc, nama from exs_cc where kode_lokasi = '$lokasi' ");
			while ($row = $rs->FetchNextObject(false)){
				$dataCC->set($row->kode_cc, $row->nama);
			}
			error_log("Prepare 2");
			$sapExpTable = new server_util_Map(array("ACTTABLE","PLANTABLE"));
			$sapExp = new server_util_Map(array("CMESSAGE"));
			$dataSAP = $this->rfc->callRFC($login,"ZRFC_RKAP_GET_PLAN_ACTUAL_ACCT", $sapImp, $sapExpTable, null, $sapExp, true);
			
			$output = $dataSAP->get("PLANTABLE");
			//error_log("SAPCO => " . print_r($output->getArray(), true));

			$result = array("rs" => array("rows" => array(), "total" =>0, "total2" => 0));
			$sql = new server_util_arrayList();
			$filter = " and " . $this->getFilterUbis("",$ubis, $lokasi);
			$sql->add("delete from bpc_mbudget_co where tahun ='$tahun' ");
			foreach ($output->getArray() as $val){
				$line = $val->get(0);
				$akun = $dataAkun->get(substr($line->get("SAKNR"),2,8));
				$row = array(
								"kode_cc" => $line->get("CCTR"), "nama_cc" => $dataCC->get($line->get("CCTR")),
								"kode_akun" => $line->get("SAKNR"),"nama_akun" => $akun->nama,
								
							);
				$pdpt = 0;
				$beban = 0;
				$values1 = "'$tahun', '".$line->get("CCTR")."','".substr($line->get("SAKNR"),2,8)."'";
				$items = array();
				for ($i = 1; $i <= 12; $i++){
					if ($i < 10) $prd = "0$i";
					else $prd = $i;
					$items[] = $line->get("TSL$prd");
					$value = floatval($line->get("TSL$prd"));
					if (strpos($line->get("TSL$prd"),"-") > 0 ) $value = floatval($line->get("TSL$prd")) * -1;
					$row["n$i"] = $value;
					if ($akun->jenis == "PENDAPATAN") $pdpt += $value;
					else $beban += $value;
					$values1 .= ",$value";
				}
				//error_log(json_encode($items));
				//error_log($values1);
				$values1 .= ",'S',sysdate,'$lokasi'";
				$sql->add("insert into bpc_mbudget_co(tahun, kode_cc, kode_akun, jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des, jenis, tgl_upd, kode_lokasi)values($values1)");
				$result["rs"]["total"] = $result["rs"]["total"] + $pdpt;
				$result["rs"]["total2"] = $result["rs"]["total2"] + $beban; 
				$result["rs"]["rows"][] = $row;
			}
			$ret = $this->db->execArraySQL($sql);
			if ($ret == "process completed"){
				error_log($sql->getLength());
			}
			return $result;
		}catch(Exception $e){
			error_log($e->getMessage());
		}
		
	}
	function getSAPStaging($lokasi, $ubis, $tahun, $user, $pass ){
		try{
			$this->getDb();
			$this->rfc = new server_util_rfcLib("rra/sap");
			$dataRKAP = new server_util_arrayList();
			$login = new server_util_Map();
			$login->set("user", $user);
			$login->set("passwd", $pass);
			error_log("Prepare");
			if ($ubis == "") $ubis = " ";
			$sapImp = new server_util_Map(array(
									'FYEAR' => $tahun,
									'VERSN' => '001',
									'ORGGROUP' => $ubis
									));
			$dataAkun = new server_util_Map();
			$dataCC = new server_util_Map();
			$rs = $this->db->execute("select distinct kode_akun,nama, jenis from exs_masakun where kode_lokasi = '$lokasi'");
			while ($row = $rs->FetchNextObject(false)){
				$dataAkun->set($row->kode_akun, $row);
			}
			$rs = $this->db->execute("select  distinct  kode_cc, nama from exs_cc where kode_lokasi = '$lokasi'");
			while ($row = $rs->FetchNextObject(false)){
				$dataCC->set($row->kode_cc, $row->nama);
			}
			$sapExpTable = new server_util_Map(array("DATATAB"));
			$dataSAP = $this->rfc->callRFC($login,"ZRFC_RKAP_GET_SSPB", $sapImp, $sapExpTable, null, null, true);
			$output = $dataSAP->get("DATATAB");
			$result = array("rs" => array("rows" => array(), "total" =>0, "total2" => 0));
			$sql = new server_util_arrayList();
			$sql->add("delete from bpc_mbudget_rkm_staging_sap where tahun ='$tahun'");
		
			$bulan = array("JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DES");
			foreach ($output->getArray() as $val){
				$line = $val->get(0);
				$akun = $dataAkun->get(substr($line->get("ACCT"),2,8));
				$row = array(
								"kode_cc" => $line->get("ORGS"), "nama_cc" => $dataCC->get($line->get("ORGS")),
								"kode_akun" => $line->get("ACCT"),"nama_akun" => $akun->nama,
								"kode_rkm" => $line->get("RKMUB"), "nama_rkm" => $line->get("RKMUBDESC"),
							);
				$pdpt = 0;
				$beban = 0;
				$values1 = "'$tahun', '".$line->get("ORGS")."','".substr($line->get("ACCT"),2,8)."','".$line->get("RKMUB")."','".$line->get("ORGGROUP")."'";
			
				for ($i = 0; $i <= 11; $i++){
					$value = floatval($line->get($bulan[$i]));
					if (strpos($line->get($bulan[$i]),"-") > 0 ) $value = floatval($line->get($bulan[$i])) * -1;
					$row["n$i"] = $value;
					if ($akun->jenis == "PENDAPATAN") $pdpt += $value;
					else $beban += $value;
					$values1 .= ",$value";
				}
				$sql->add("insert into bpc_mbudget_rkm_staging_sap(tahun, kode_cc, kode_akun, kode_rkm, kode_ubis, jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des)values($values1)");
				$result["rs"]["total"] = $result["rs"]["total"] + $pdpt;
				$result["rs"]["total2"] = $result["rs"]["total2"] + $beban; 
				$result["rs"]["rows"][] = $row;
			}
			$ret = $this->db->execArraySQL($sql);
			error_log("Done $ret");
			if ($ret == "process completed"){
				error_log($sql->getLength());
			}
			return $result;
		}catch(Exception $e){
			error_log($e->getMessage());
		}		
	}
	function listDir($ubis, $sububis, $dir, &$result){
		global $serverDir;
		global $loadUbis;
		global $loadDir;
		$tmpDir = new server_util_File($dir);
        if ($tmpDir->isDir())
        {
            $fileList = $tmpDir->listDir();
            
            foreach ($fileList->getArray() as $key => $value)
            {	
            	
				if (basename($value->fileName) != "." && basename($value->fileName) != ".." && basename($value->fileName) != ".DS_Store" && basename($value->fileName) != ".htaccess"){
					$nama = $value->fileName;

					$path = substr($nama, strlen($serverDir . "/media/dok/10"), strlen($nama) - strlen($serverDir . "/media/dok/10") + 1);
					$tmp = array("nama" => basename($nama), "path" => $path , "childs" => array() );
					if ($ubis == "" || $ubis == "RKAP"){
						if ($value->isDir())
						{
							$this->listDir($ubis, $sububis, $value->fileName, $tmp["childs"]);   
						}   
						$result[] = $tmp;
					}else if ($ubis == $sububis){
						$loadDir = true;
						if ($value->isDir())
						{
							$this->listDir($ubis, $sububis, $value->fileName, $tmp["childs"]);   
							$loadDir = false;
						}
						$result[] = $tmp;
					}else if ($sububis ==  substr(basename($nama),0,strlen($sububis)) || $loadUbis || $loadDir){
						if ($sububis ==  substr(basename($nama),0,strlen($sububis)))
							$loadUbis = true;
							
						if ($value->isDir() && ($loadUbis || $loadDir))
						{
							$this->listDir($ubis, $sububis, $value->fileName, $tmp["childs"]);   
							$loadUbis = false;
						}
						$result[] = $tmp;
						
					}else if ($loadUbis || $loadDir)
						$result[] = $tmp; 
				}
				
            }
        }
	}
	function listDokumen($lokasi, $ubis, $sububis){
		try{
			global $serverDir;
			global $dirSeparator;
			global $otorizeFile;
			global $loadUbis;
			global $loadDir;
			$loadUbis = false;
			$loadDir = false;
			$otorizeFile = false;
			uses("server_util_File");
			if ($lokasi != "9000"){
				$lokasi = "9000/$lokasi";
			}
			error_log($ubis . ":".$sububis);
			$tmpDir = new server_util_File($serverDir . "/media/dok/$lokasi");
			
			$result = array("list" => array());
			if ($tmpDir->isDir())
			{	
				$fileList = $tmpDir->listDir();
				foreach ($fileList->getArray() as $key => $value)
				{	
					if (basename($value->fileName) != "." && basename($value->fileName) != ".." && basename($value->fileName) != ".DS_Store" && basename($value->fileName) != ".htaccess"){
						$nama = $value->fileName;
						$path = substr($nama, strlen($serverDir . "/media/dok/$lokasi"), strlen($nama) - strlen($serverDir . "/media/dok/$lokasi") + 1);
						$tmp = array("nama" => basename($nama), "path" => $path, "childs" => array() );
						if ($value->isDir())
						{
							if ($ubis == ""){
								$this->listDir($ubis, $sububis, $value->fileName, $tmp["childs"]);   
								$result["list"][] = $tmp;
							}else if ($ubis == basename($nama) ){
								$this->listDir($ubis, $sububis, $value->fileName, $tmp["childs"]);   
								$result["list"][] = $tmp;
							}else if (basename($nama) == "KD RKAP"){
							    $this->listDir("RKAP", "RKAP", $value->fileName, $tmp["childs"]);   
								$result["list"][] = $tmp;
							}
						}else 
							$result["list"][] = $tmp;
							
					}                       
					
				}
			}
			return $result;
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}
	function getDataCompareActBudget($lokasi, $model, $periode, $ubis, $pembagi = 1000000000){
		$this->getDb();
		global $satuan;
		$satuan = $pembagi;
		$bln = substr($periode, 4,2);
		$tahun = floatval(substr($periode,0,4)) - 1;
		$tahunBudget = floatval(substr($periode,0,4)); 
		$filter = $this->getFilterUbis("w", $ubis);
		//getData Tahun 2014
		
		$rs = $this->db->execute("select x.kode_neraca, 
												sum(case '$bln' when '01' then jan
														 when '02' then (jan + feb  )
														 when '03' then (jan + feb + mar  )
														 when '04' then (jan + feb + mar + apr  )
														 when '05' then (jan + feb + mar + apr + mei )
														 when '06' then (jan + feb + mar + apr + mei + jun  )
														 when '07' then (jan + feb + mar + apr + mei + jun + jul )
														 when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
														 when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
														 when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
														 when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
														 when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
												end) as aggsd,  sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0) ) as total
															from bpc_relakun x
															inner join bpc_mbudget_rkm y on y.kode_akun = x.kode_akun and y.tahun = '$tahunBudget' and y.jenis = 'S' and x.kode_lokasi = y.kode_lokasi
															inner join exs_cc z on z.kode_cc = y.kode_cc and z.kode_lokasi = y.kode_lokasi 
															inner join exs_ubis w on w.kode_ubis = z.kode_ubis and w.kode_lokasi = y.kode_lokasi and ( $filter or y.kode_cc in (select kode_pc from exs_mappc a inner join exs_ubis b on b.kode_ubis = a.kode_ubis3 where b.kode_induk ='$ubis') )
															where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca");
		
		$field = "";
		$dataUbis = new server_util_Map();
		$field .= ", 0  as budgetp1, 0 as budgetp2";
		$itemUbis = new server_util_Map();
		while ($line = $rs->FetchNextObject(false)){
			$itemUbis->set($line->kode_neraca, array($line->aggsd, $line->total ));
		}
		$dataUbis->set("budgetp", $itemUbis);
				
		$rs2 = $this->db->execute("select x.kode_neraca, 
												sum(case '$bln' when '01' then jan
														 when '02' then (jan + feb  )
														 when '03' then (jan + feb + mar  )
														 when '04' then (jan + feb + mar + apr  )
														 when '05' then (jan + feb + mar + apr + mei )
														 when '06' then (jan + feb + mar + apr + mei + jun  )
														 when '07' then (jan + feb + mar + apr + mei + jun + jul )
														 when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
														 when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
														 when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
														 when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
														 when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
												end) as aggsd, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0) ) as total
															from bpc_relakun x
															inner join bpc_mbudget_rkm_bfr_revisi15 y on y.kode_akun = x.kode_akun and y.tahun = '$tahunBudget' and y.jenis = 'S' and y.kode_lokasi = x.kode_lokasi 
															inner join exs_cc z on z.kode_cc = y.kode_cc and z.kode_lokasi = y.kode_lokasi
															inner join exs_ubis w on w.kode_ubis = z.kode_ubis and w.kode_lokasi = x.kode_lokasi and ( $filter or y.kode_cc in (select kode_pc from exs_mappc a inner join exs_ubis b on b.kode_ubis = a.kode_ubis3 where b.kode_induk ='$ubis') )
															where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca");
		$itemUbis = new server_util_Map();
		$field .= ", 0  as budgetori1, 0 as budgetori2";
		while ($line = $rs2->FetchNextObject(false)){
			$itemUbis->set($line->kode_neraca, array($line->aggsd, $line->total ));
		}
		$dataUbis->set("budgetori", $itemUbis);
		$rs3 = $this->db->execute("select x.kode_neraca, 
												sum(case '$bln' when '01' then -jan
														 when '02' then -(jan + feb  )
														 when '03' then -(jan + feb + mar  )
														 when '04' then -(jan + feb + mar + apr  )
														 when '05' then -(jan + feb + mar + apr + mei )
														 when '06' then -(jan + feb + mar + apr + mei + jun  )
														 when '07' then -(jan + feb + mar + apr + mei + jun + jul )
														 when '08' then -(jan + feb + mar + apr + mei + jun + jul + aug )
														 when '09' then -(jan + feb + mar + apr + mei + jun + jul + aug + sep )
														 when '10' then -(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
														 when '11' then -(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
														 when '12' then -(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
												end) as actsd, sum(nvl(-(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des),0) ) as total
															from bpc_relakun x
															inner join exs_mactual y on y.kode_akun = x.kode_akun and y.tahun = '$tahun' and y.jenis = 'S' 
															inner join exs_cc z on z.kode_cc = y.kode_cc and z.kode_lokasi = x.kode_lokasi 
															inner join exs_ubis w on w.kode_ubis = z.kode_ubis and w.kode_lokasi = x.kode_lokasi and ( $filter or y.kode_cc in (select kode_pc from exs_mappc a inner join exs_ubis b on b.kode_ubis = a.kode_ubis3 where b.kode_induk ='$ubis') )
															where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca");		
		$itemUbis = new server_util_Map();
		$field .= ", 0  as actcurr1, 0 as actcurr2";
		while ($line = $rs3->FetchNextObject(false)){
			$itemUbis->set($line->kode_neraca, array($line->actsd, $line->total ));
		}
		$dataUbis->set("actcurr", $itemUbis);
		$rs4 = $this->db->execute("select x.kode_neraca, 
												sum(case '$bln' when '01' then -jan
														 when '02' then -(jan + feb  )
														 when '03' then -(jan + feb + mar  )
														 when '04' then -(jan + feb + mar + apr  )
														 when '05' then -(jan + feb + mar + apr + mei )
														 when '06' then -(jan + feb + mar + apr + mei + jun  )
														 when '07' then -(jan + feb + mar + apr + mei + jun + jul )
														 when '08' then -(jan + feb + mar + apr + mei + jun + jul + aug )
														 when '09' then -(jan + feb + mar + apr + mei + jun + jul + aug + sep )
														 when '10' then -(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
														 when '11' then -(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
														 when '12' then -(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
												end) as actsd,  sum(nvl(-(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des),0) ) as total
															from bpc_relakun x
															inner join exs_mactual y on y.kode_akun = x.kode_akun and y.tahun = '$tahun' and y.jenis = 'S'
															inner join exs_cc z on z.kode_cc = y.kode_cc
															inner join exs_ubis w on w.kode_ubis = z.kode_ubis and ( $filter or y.kode_cc in (select kode_pc from exs_mappc a inner join exs_ubis b on b.kode_ubis = a.kode_ubis3 where b.kode_induk ='$ubis') )
															where x.kode_fs = '$model' and x.kode_lokasi = '$this->lokasi' group by x.kode_neraca");		
		$itemUbis = new server_util_Map();
		$field .= ", 0  as actbgt1, 0 as actbgt2";
		while ($line = $rs4->FetchNextObject(false)){
			$itemUbis->set($line->kode_neraca, array($line->actsd, $line->total ));
		}
		$dataUbis->set("actbgt", $itemUbis);
		if ($ubis == "") $ubis = "NAS";
		$rs = $this->db->execute("select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													$field
													
											from bpc_neraca a
											left outer join bpc_penetapan c on c.kode_neraca = a.kode_neraca and a.kode_lokasi = c.kode_lokasi and c.tahun = '$tahunBudget' and c.kode_ubis = '$ubis' and c.model ='$model'
										where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi'
										order by  rowindex");

		

		$node = "";
		$rootNode = new server_util_NodeNRC("00");
		$this->sumHeader = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			if ($row->jenis_akun == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
					$key1 = $key . "1";
					$key2 = $key . "2";
					$script = "\$tmp = \$itemUbis->get(\$row->kode_neraca);";
					$script .= "\$row->$key1 = floatval(\$tmp[0]) * -1;";
					$script .= "\$row->$key2 = floatval(\$tmp[1]) * -1;";
					eval ($script);
				}
				
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
					$key1 = $key . "1";
					$key2 = $key . "2";
					$script = "\$tmp = \$itemUbis->get(\$row->kode_neraca);";
					$script .= "\$row->$key1 = floatval(\$tmp[0]);";
					$script .= "\$row->$key2 = floatval(\$tmp[1]);";
					eval ($script);
				}
			}
			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$node->setData($row);
			if ($row->tipe == "SUMMARY")
				$this->sumHeader->set($row->kode_neraca, $node);

		}
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			//if ($lokasi == "10")
            {
				$this->summariesJejer($val);
				
				//$val->dataArray["selisih"] = $val->dataArray["penetapan"] - $val->dataArray["aggthn"];
				if ($val->data->sum_header != "-"){
					$summaryHeader = explode(",",$val->data->sum_header);

					foreach ($summaryHeader as $header){
						$nodeHeader = $this->sumHeader->get($header);
						if ($nodeHeader){
							foreach ($val->dataArray as $key => $value) {
								if ($key != "kode_neraca" && $key != "nama" && $key != "tipe" && $key != "sum_header" && $key != "level_spasi" && $key != "rowindex"){
									$nodeHeader->dataArray[$key] += $value;
								}
							}
							$nodeHeader->data =(object) $nodeHeader->dataArray;
						}
					}
				}
			}
		}
		//perlu hitung ke summary
		$result = array('rs' => array('rows' => array() ) );
		$this->generateResultJejer($rootNode, $result);
		//{"kode_neraca":"P_R1111","nama":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Installment & Monthly Fee","tipe":"-","jenis_akun":"PENDAPATAN","sum_header":"-","level_spasi":"4","kode_induk":"P_R111","rowindex":"4","budgetp1":-227112584796,"budgetp2":-2753432210450,"budgetori1":-221170714564,"budgetori2":-2743886166290,"actcurr1":231980676860,"actcurr2":2741610583950,"actbgt1":231980676860,"actbgt2":2741610583950}
		//error_log(json_encode($result));
		return ($result);
		
	}
	function getDataJejerAggRKAPGAB($lokasi, $model, $periode, $ubis = null, $pembagi = 1000000000){
		global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
		$thn1 = substr($periode,0,4);
		$thn2 = floatval(substr($periode,0,4)) - 1;
		if ($lokasi != "10"){
			$dataUbis = new server_util_Map();
			$rs = $this->dbLib->execute("select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(c.nilai, 0) as penetapan, (nvl(b.aggthn,0)) as aggthn,nvl(c.nilai, 0) - (nvl(b.aggthn,0))   as selisih 
											from bpc_neraca a
											left outer join (select y.kode_akun as kode_neraca,sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
															from  bpc_mbudget y 
															where y.tahun = '$thn1' and y.jenis = '$model' and y.kode_lokasi = '$lokasi' group by y.kode_akun) b on b.kode_neraca = a.kode_neraca
											left outer join bpc_penetapan c on c.kode_lokasi = '$lokasi' and c.kode_neraca = a.kode_neraca and c.tahun = '$thn1' and c.kode_ubis = 'NAS' and 'TIMERKAP' = c.model
										where a.kode_fs = '$model'   order by  rowindex");
		}else if ($ubis == null || $ubis == "" || $ubis == "NAS") {
			$ubis = "";
			$rsUbis = $this->dbLib->execute("select distinct kode_ubis,nama,rowindex from exs_ubis where level_spasi = '1' and kode_lokasi = '$lokasi' order by rowindex");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as \"$row->kode_ubis\"";
				$filter = $this->getFilterUbis("w",$row->kode_ubis);
				$sql = " select x.kode_neraca, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
							from bpc_relakun x
							inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1'
							inner join exs_cc z on z.kode_cc = y.kode_cc
							inner join exs_ubis w on w.kode_ubis = z.kode_ubis and $filter
							where x.kode_fs = '$model' and y.kode_lokasi = '$lokasi' group by x.kode_neraca
							union
							select '999999', sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
								from  bpc_mbudget_gab y 
								inner join exs_cc z on z.kode_cc = y.kode_cc
								inner join exs_ubis w on w.kode_ubis = z.kode_ubis and $filter
								left outer join bpc_relakun x on y.kode_akun = x.kode_akun and x.kode_fs = '$model'
								where y.tahun = '$thn1'  and x.kode_akun is null";
				$rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_neraca, $line->aggthn);
				}
				$dataUbis->set($row->kode_ubis, $itemUbis);
			}
			$rs = $this->dbLib->execute("select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(c.nilai, 0) as penetapan, (nvl(b.aggthn,0)) as aggthn,nvl(c.nilai, 0) - (nvl(b.aggthn,0))   as selisih $field
											from bpc_neraca a
											left outer join (select x.kode_neraca,sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
															from bpc_relakun x
															inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' 
															inner join exs_cc z on z.kode_cc = y.kode_cc
															where x.kode_fs = '$model' and y.kode_lokasi = '$lokasi' group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
											left outer join bpc_penetapan c on c.kode_lokasi = '$lokasi' and c.kode_neraca = a.kode_neraca and c.tahun = '$thn1' and c.kode_ubis = 'NAS' and a.kode_fs = c.model
										where a.kode_fs = '$model' 
										union 
										select '999999','Unmapped', '-','PENDAPATAN','-',0,'00',10000,
												0 as penetapan,  sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn, -sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as selisih
												$field	
												from bpc_mbudget_gab  y
															inner join exs_cc z on z.kode_cc = y.kode_cc
															inner join exs_ubis w on w.kode_ubis = z.kode_ubis
															left outer join bpc_relakun x on x.kode_fs = '$model' and y.kode_akun = x.kode_akun 
															where  y.tahun = '$thn1' and x.kode_akun is null
										 order by  rowindex");
		}else if ($this->isDivre($ubis)){
			$rsUbis = $this->dbLib->execute("select distinct a.kode_witel2 as kode_ubis, c.nama  from exs_mappc a 
								 inner join exs_divre b on b.witel = a.kode_witel 
								 inner join exs_cc c on c.kode_cc = a.kode_witel
								 where b.kode_ubis = '$ubis' order by	kode_ubis ");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as \"$row->kode_ubis\"";
				$sql = " select x.kode_neraca, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
							from bpc_relakun x
							inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' 
							inner join exs_cc z on z.kode_cc = y.kode_cc
							where x.kode_fs = '$model' and y.kode_cc in (select distinct kode_pc from exs_mappc a
																				where a.kode_witel2 = '$row->kode_ubis' )
											group by x.kode_neraca";
				$rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_neraca, $line->aggthn );
				}
				$dataUbis->set($row->kode_ubis, $itemUbis);
			}
			$rs = $this->dbLib->execute("select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
												, nvl(c.nilai, 0)  as penetapan, nvl(b.aggthn,0) as aggthn, nvl(b.aggthn,0) - (nvl(c.nilai, 0) ) as selisih $field
											from bpc_neraca a
											left outer join (select x.kode_neraca,sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
															from bpc_relakun x
															inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' 
															inner join exs_cc z on z.kode_cc = y.kode_cc
															where x.kode_fs = '$model' and 
																	y.kode_cc in (select distinct kode_pc from exs_mappc a
																				inner join exs_divre b on b.witel = a.kode_witel
																				inner join exs_ubis c on c.kode_ubis = b.kode_ubis
																			 where c.kode_ubis = '$ubis'
																	union
																		select distinct kode_pc from exs_mappc a
																				 where a.kode_ubis = '$ubis'	
																  union
																  select distinct kode_pc from exs_mappc a where kode_witel = '$ubis')
									   								group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
											
											left outer join (select c.kode_neraca, sum(c.nilai) as nilai
																from bpc_penetapan c 
																where c.tahun = '$thn1' and c.kode_area = '$ubis' and c.kode_witel = '-' and c.model ='$model' group by kode_neraca) c on c.kode_neraca = a.kode_neraca 
										where a.kode_fs = '$model' order by  rowindex");
				
			
		}else if ($this->isWitel($ubis)){
			$ubis = $this->getWitel($ubis);
			$rsUbis = $this->dbLib->execute("select distinct a.kode_ubis  from exs_mappc a 
								 inner join exs_divre b on b.witel = a.kode_witel 
								 where a.kode_witel2 = '$ubis' order by	kode_ubis ");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as \"$row->kode_ubis\"";
				$sql = " select x.kode_neraca, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
							from bpc_relakun x
							inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' 
							inner join exs_cc z on z.kode_cc = y.kode_cc
							inner join exs_ubis w on w.kode_ubis = z.kode_ubis 
							inner join exs_mappc u on u.kode_pc = y.kode_cc and u.kode_witel2 = '$ubis' and u.kode_ubis = '$row->kode_ubis'
							where x.kode_fs = '$model' group by x.kode_neraca";
				$rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_neraca, $line->aggthn );
				}
				$dataUbis->set($row->kode_ubis, $itemUbis);
			}
			$rs = $this->dbLib->execute("select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
												, nvl(c.nilai, 0) as penetapan, nvl(b.aggthn,0) as aggthn 
												, 0 as total,nvl(c.nilai, 0) - (nvl(b.aggthn,0))   as selisih $field
											from bpc_neraca a
											left outer join (select x.kode_neraca, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
															from bpc_relakun x
															inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' 
															inner join exs_cc z on z.kode_cc = y.kode_cc
															inner join exs_ubis w on w.kode_ubis = z.kode_ubis 
															inner join exs_mappc u on u.kode_pc = y.kode_cc and u.kode_witel2 = '$ubis'
															where x.kode_fs = '$model' group by x.kode_neraca
													) b on b.kode_neraca = a.kode_neraca
											left outer join (select c.kode_neraca, sum(c.nilai) as nilai
																from bpc_penetapan c 
																where c.tahun = '$thn1' and c.kode_witel= '$ubis' and c.model ='$model' group by kode_neraca) c on c.kode_neraca = a.kode_neraca 
										where a.kode_fs = '$model' order by  rowindex");
			
		}else if ($this->isUbis($ubis)){
		
			/*if ($this->isGroupUbis($ubis)){
				$filter = " and y.kode_ubis in (select kode_ubis from exs_grouping_ubis where group_ubis = '$ubis' ) ";
				$rsUbis = $this->dbLib->execute("select distinct kode_ubis,nama,rowindex from exs_ubis where kode_ubis in (select kode_ubis from exs_grouping_ubis where group_ubis = '$ubis' )  or kode_ubis in (select distinct kode_ubis from exs_divre ) order by rowindex");
				$isGroupUbis = true;
			}else*/ 
			{
				$rsUbis = $this->dbLib->execute("select distinct kode_ubis,nama,rowindex from exs_ubis where (kode_ubis = '$ubis' or kode_induk ='$ubis') or kode_ubis in (select distinct kode_ubis from exs_divre ) order by rowindex");
				$filter = " and y.kode_ubis = '$ubis' ";
				$filter2 = "  ";
				$isGroupUbis = false;
			}
			
			$sql = "";
			$field = "";
			$listDivre = array();
			$rs = $this->dbLib->execute("select distinct kode_ubis from exs_divre");
			while ($row = $rs->FetchNextObject(false)){
				$listDivre[$row->kode_ubis] = $row->kode_ubis;
			}
			
			$dataUbis = new server_util_Map();
			
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as \"$row->kode_ubis\"";
				if ($listDivre[$row->kode_ubis])
					$sql = " select x.kode_neraca, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
							from bpc_relakun x
							inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' 
							inner join exs_cc z on z.kode_cc = y.kode_cc
							inner join exs_ubis w on w.kode_ubis = y.kode_ubis 
							where x.kode_fs = '$model'  and y.kode_cc in (select distinct kode_pc from exs_mappc a 
																				inner join exs_divre b on b.witel = a.kode_witel 
																				where b.kode_ubis = '$row->kode_ubis' and (a.kode_ubis = '$ubis' or a.kode_ubis3 = '$ubis' )
																		  union 
																		  select distinct kode_pc from exs_mappc a 
																				where a.kode_ubis3 = '$ubis' and a.kode_ubis = '$row->kode_ubis'
																		) 
									 group by x.kode_neraca
							union
							select '999999', sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
								from  bpc_mbudget_gab y 
								inner join exs_cc z on z.kode_cc = y.kode_cc
								inner join exs_ubis w on w.kode_ubis = y.kode_ubis $filter
								left outer join bpc_relakun x on y.kode_akun = x.kode_akun and x.kode_fs = '$model'
								where y.tahun = '$thn1'  and x.kode_akun is null and y.kode_cc in (select distinct kode_pc from exs_mappc a 
																				inner join exs_divre b on b.witel = a.kode_witel 
																				where b.kode_ubis = '$row->kode_ubis' and (a.kode_ubis = '$ubis' or a.kode_ubis3 = '$ubis' )
																				union 
																		  select distinct kode_pc from exs_mappc a 
																				where a.kode_ubis3 = '$ubis' and a.kode_ubis = '$row->kode_ubis' )";
				else {
					$filter2 = $this->getFilterUbis("w",$row->kode_ubis );
					$sql = " select x.kode_neraca, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
							from bpc_relakun x
							inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' 
							inner join exs_cc z on z.kode_cc = y.kode_cc
							inner join exs_ubis w on w.kode_ubis = y.kode_ubis and $filter2
							where x.kode_fs = '$model' and not y.kode_cc in (select distinct kode_pc from exs_mappc a 
																				inner join exs_divre b on b.witel = a.kode_witel 
																				
																			) 
							group by x.kode_neraca
							union
							select '999999', sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
								from  bpc_mbudget_gab y 
								inner join exs_cc z on z.kode_cc = y.kode_cc
								inner join exs_ubis w on w.kode_ubis = y.kode_ubis and $filter2
								left outer join bpc_relakun x on y.kode_akun = x.kode_akun and x.kode_fs = '$model'
								where y.tahun = '$thn1'  and x.kode_akun is null and not y.kode_cc in (select distinct kode_pc from exs_mappc a 
																				inner join exs_divre b on b.witel = a.kode_witel 
																			) ";
					
				}
				//error_log($sql);
				$rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_neraca, $line->aggthn );
				}
				$dataUbis->set($row->kode_ubis, $itemUbis);
			}
			$filter = $this->getFilterUbis("y", $ubis );
			$rs = $this->dbLib->execute("select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(c.nilai, 0) as penetapan, (nvl(b.aggthn,0))  as aggthn,nvl(c.nilai, 0) - (nvl(b.aggthn,0))   as selisih $field
											from bpc_neraca a
											left outer join (select x.kode_neraca,sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
															from bpc_relakun x
															inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' 
															inner join exs_cc z on z.kode_cc = y.kode_cc
															where x.kode_fs = '$model' and ($filter or y.kode_cc in (select kode_pc from exs_mappc where kode_ubis3 = '$ubis') ) group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
											left outer join bpc_penetapan c on c.kode_neraca = a.kode_neraca and c.tahun = '$thn1' and c.kode_ubis = '$ubis' and c.kode_area = '-' and c.model ='$model'
										where a.kode_fs = '$model'
										union 
										select '999999','Unmapped', '-','PENDAPATAN','-',0,'00',10000,
												0 as penetapan,  sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn, -sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as selisih
												$field	
												from bpc_mbudget_gab  y
															inner join exs_cc z on z.kode_cc = y.kode_cc
															inner join exs_ubis w on w.kode_ubis = z.kode_ubis and $filter
															left outer join bpc_relakun x on x.kode_fs = '$model' and y.kode_akun = x.kode_akun 
															where  y.tahun = '$thn1'  and x.kode_akun is null
										 order by  rowindex");
			
		}else{
			$rsUbis = $this->dbLib->execute("select distinct kode_ubis,nama,rowindex from exs_ubis where kode_induk = '$ubis' order by rowindex");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			try{
				while ($row = $rsUbis->FetchNextObject(false)){
					$field .= ", 0  as \"$row->kode_ubis\"";
					$filter2 = $this->getFilterUbis("y",$row->kode_ubis );
					$filter3 = "kode_ubis3 in (
												select kode_ubis from exs_ubis where kode_ubis = '".$row->kode_ubis."'
												union
												select kode_ubis from exs_ubis where kode_induk = '".$row->kode_ubis."'
											 )";
					$sql = " select x.kode_neraca, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
								from bpc_relakun x
								inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' 
								inner join exs_cc z on z.kode_cc = y.kode_cc
								inner join exs_ubis w on w.kode_ubis = y.kode_ubis and ($filter2 or y.kode_cc in (select kode_pc from exs_mappc where $filter3))
								where x.kode_fs = '$model' group by x.kode_neraca
							union
							select '999999', sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
								from  bpc_mbudget_gab y 
								inner join exs_cc z on z.kode_cc = y.kode_cc
								inner join exs_ubis w on w.kode_ubis = y.kode_ubis and ($filter2 or y.kode_cc in (select kode_pc from exs_mappc where $filter3))
								left outer join bpc_relakun x on y.kode_akun = x.kode_akun and x.kode_fs = '$model'
								where y.tahun = '$thn1'  and x.kode_akun is null";
					$rs = $this->dbLib->execute($sql);
					$itemUbis = new server_util_Map();

					while ($line = $rs->FetchNextObject(false)){
						$itemUbis->set($line->kode_neraca, $line->aggthn);
					}
					$dataUbis->set($row->kode_ubis, $itemUbis);
				}
			}catch(Exception $e){
				error_log($e->getMessage());
			}
			$filter = $this->getFilterUbis("y",$ubis );
			$filter2 = $this->getFilterUbis("b",$ubis );
			$rs = $this->dbLib->execute("select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(c.nilai, 0) as penetapan, (nvl(b.aggthn,0))   as aggthn,nvl(c.nilai, 0) - (nvl(b.aggthn,0))   as selisih
													 $field
											from bpc_neraca a
											left outer join (select x.kode_neraca,sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
															from bpc_relakun x
															inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' 
															inner join exs_cc z on z.kode_cc = y.kode_cc
															inner join exs_ubis w on w.kode_ubis = y.kode_ubis and ($filter or y.kode_cc in (select kode_pc from exs_mappc a inner join exs_ubis b on b.kode_ubis = a.kode_ubis3 where $filter2 ) )
															where x.kode_fs = '$model' group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
											left outer join bpc_penetapan c on c.kode_neraca = a.kode_neraca and c.tahun = '$thn1' and c.kode_ubis = '$ubis' and c.model ='$model'
										where a.kode_fs = '$model'
										union 
										select '999999','Unmapped', '-','PENDAPATAN','-',0,'00',10000,
												0 as penetapan,  sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn, -sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as selisih
												$field	
												from bpc_mbudget_gab  y
															inner join exs_cc z on z.kode_cc = y.kode_cc
															inner join exs_ubis w on w.kode_ubis = y.kode_ubis and ($filter or y.kode_cc in (select kode_pc from exs_mappc a inner join exs_ubis b on b.kode_ubis = a.kode_ubis3 where $filter2 ) )
															left outer join bpc_relakun x on x.kode_fs = '$model' and y.kode_akun = x.kode_akun 
															where  y.tahun = '$thn1'  and x.kode_akun is null
										 order by  rowindex");

		}

		$node = "";
		$rootNode = new server_util_NodeNRC("00");
		$this->sumHeader = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			if ($row->jenis_akun == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
					eval ("\$row->$key = \$itemUbis->get(\$row->kode_neraca) * -1 ;");
				}
				$row->penetapan = $row->penetapan * -1  ;
				$row->aggthn = $row->aggthn * -1 ;
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
					eval ("\$row->$key = \$itemUbis->get(\$row->kode_neraca);");
				}
			}
			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$node->setData($row);
			if ($row->tipe == "SUMMARY")
				$this->sumHeader->set($row->kode_neraca, $node);

		}
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			if ($lokasi == "10"){
				$this->summariesJejer($val);
				
				$val->dataArray["selisih"] = $val->dataArray["penetapan"] - $val->dataArray["aggthn"];
				if ($val->data->sum_header != "-"){
					$summaryHeader = explode(",",$val->data->sum_header);

					foreach ($summaryHeader as $header){
						$nodeHeader = $this->sumHeader->get($header);
						if ($nodeHeader){
							foreach ($val->dataArray as $key => $value) {
								if ($key != "kode_neraca" && $key != "nama" && $key != "tipe" && $key != "sum_header" && $key != "level_spasi" && $key != "rowindex"){
									$nodeHeader->dataArray[$key] += $value;
								}
							}
							$nodeHeader->data =(object) $nodeHeader->dataArray;
						}
					}
				}
			}
		}
		//perlu hitung ke summary
		$result = array('rs' => array('rows' => array() ) );
		$this->generateResultJejer($rootNode, $result);
		return ($result);


	}
	function getDataJejerAggRKAPDetailGAB($lokasi, $model, $periode, $ubis = null, $neraca = null, $pembagi = 1000000000){
		global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
		$thn1 = substr($periode,0,4);
		$thn2 = floatval(substr($periode,0,4)) - 1;
		if ($lokasi != "10"){
			$dataUbis = new server_util_Map();
			$rs = $this->dbLib->execute("select distinct a.kode_neraca, b.kode_akun, left_pad(c.nama,a.level_spasi + 1) as nama, a.tipe,d.jenis as jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(c.nilai, 0) as penetapan, (nvl(b.aggthn,0)) as aggthn,nvl(c.nilai, 0) - (nvl(b.aggthn,0))   as selisih $field
											from bpc_neraca a
											inner join (select x.kode_neraca, x.kode_akun,sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
															from bpc_relakun x
															inner join bpc_mbudget y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' and y.jenis = '$model'
															inner join exs_cc z on z.kode_cc = y.kode_cc
															where x.kode_fs = '$model' and y.kode_lokasi = '$lokasi' group by x.kode_neraca, x.kode_akun) b on b.kode_neraca = a.kode_neraca
											inner join bpc_masakun d on d.kode_akun = b.kode_akun 
											left outer join bpc_penetapan c on c.kode_lokasi = '$lokasi' and c.kode_neraca = b.kode_akun and c.tahun = '$thn1' and c.kode_ubis = 'NAS' and a.kode_fs = c.model
										where a.kode_fs = '$model'  and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$neraca' order by  rowindex");
		}else if ($ubis == null || $ubis == "" || $ubis == "NAS") {
			$ubis = "";
			$rsUbis = $this->dbLib->execute("select distinct kode_ubis,nama,rowindex from exs_ubis where level_spasi = '1' and kode_lokasi = '$lokasi' order by rowindex");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as \"$row->kode_ubis\"";
				$filter = $this->getFilterUbis("w",$row->kode_ubis);
				$sql = " select x.kode_neraca, x.kode_akun, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
							from bpc_relakun x
							inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' and jenis = 'S'
							inner join exs_cc z on z.kode_cc = y.kode_cc
							inner join exs_ubis w on w.kode_ubis = z.kode_ubis and $filter
							where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and y.kode_lokasi = '$lokasi' group by x.kode_neraca, x.kode_akun
						union
							select '999999', y.kode_akun,  sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
								from  bpc_mbudget_gab y 
								inner join exs_cc z on z.kode_cc = y.kode_cc
								inner join exs_ubis w on w.kode_ubis = z.kode_ubis and $filter
								left outer join bpc_relakun x on y.kode_akun = x.kode_akun and x.kode_fs = '$model'
								where y.tahun = '$thn1' and jenis = 'S' and '999999' = '$neraca' and x.kode_akun is null group by y.kode_akun ";
				$rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_akun, $line->aggthn);
				}
				$dataUbis->set($row->kode_ubis, $itemUbis);
			}
			$rs = $this->dbLib->execute("select distinct a.kode_neraca, b.kode_akun, left_pad(concat(b.kode_akun,'-',d.nama),a.level_spasi) as nama, a.tipe,d.jenis as jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(c.nilai, 0) as penetapan, (nvl(b.aggthn,0)) as aggthn,nvl(c.nilai, 0) - (nvl(b.aggthn,0))   as selisih $field
											from bpc_neraca a
											inner join (select x.kode_neraca, x.kode_akun, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
															from bpc_relakun x
															inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' and y.jenis = 'S'
															inner join exs_cc z on z.kode_cc = y.kode_cc
															where x.kode_fs = '$model' and x.kode_neraca ='$neraca' and y.kode_lokasi = '$lokasi' group by x.kode_neraca, x.kode_akun) b on b.kode_neraca = a.kode_neraca
											inner join bpc_masakun d on d.kode_akun = b.kode_akun
											left outer join bpc_penetapan c on c.kode_lokasi = '$lokasi' and c.kode_neraca = b.kode_akun and c.tahun = '$thn1' and c.kode_ubis = 'NAS' and a.kode_fs = c.model
										where a.kode_fs = '$model'  
										union 
										select '999999', y.kode_akun, left_pad(concat(y.kode_akun,'-',d.nama),1) as nama, '-','PENDAPATAN','-',0,'00',10000,
												0 as penetapan,  sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn, -sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as selisih
												$field	
												from bpc_mbudget_gab  y
															inner join exs_cc z on z.kode_cc = y.kode_cc
															inner join exs_ubis w on w.kode_ubis = z.kode_ubis 
															inner join bpc_masakun d on d.kode_akun = y.kode_akun
															left outer join bpc_relakun x on x.kode_fs = '$model' and y.kode_akun = x.kode_akun 
															where  y.tahun = '$thn1' and y.jenis = 'S' and '999999' = '$neraca' and x.kode_akun is null group by y.kode_akun, d.nama
										 order by  rowindex");
		}else if ($this->isDivre($ubis)){
			$rsUbis = $this->dbLib->execute("select distinct a.kode_witel2 as kode_ubis, c.nama  from exs_mappc a 
								 inner join exs_divre b on b.witel = a.kode_witel 
								 inner join exs_cc c on c.kode_cc = a.kode_witel
								 where b.kode_ubis = '$ubis' order by	kode_ubis ");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as \"$row->kode_ubis\"";
				$sql = " select x.kode_neraca, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
							from bpc_relakun x
							inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' and jenis = 'S'
							inner join exs_cc z on z.kode_cc = y.kode_cc
							where x.kode_fs = '$model' and y.kode_cc in (select distinct kode_pc from exs_mappc a
																				where a.kode_witel2 = '$row->kode_ubis' )
											group by x.kode_neraca";
				$rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_neraca, $line->aggthn );
				}
				$dataUbis->set($row->kode_ubis, $itemUbis);
			}
			$rs = $this->dbLib->execute("select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
												, nvl(c.nilai, 0)  as penetapan, nvl(b.aggthn,0) as aggthn, nvl(b.aggthn,0) - (nvl(c.nilai, 0) ) as selisih $field
											from bpc_neraca a
											left outer join (select x.kode_neraca,sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
															from bpc_relakun x
															inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' and y.jenis = 'S'
															inner join exs_cc z on z.kode_cc = y.kode_cc
															where x.kode_fs = '$model' and 
																	y.kode_cc in (select distinct kode_pc from exs_mappc a
																				inner join exs_divre b on b.witel = a.kode_witel
																				inner join exs_ubis c on c.kode_ubis = b.kode_ubis
																			 where c.kode_ubis = '$ubis'
																  union
																  select distinct kode_pc from exs_mappc a where kode_witel = '$ubis')
									   								group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
											
											left outer join (select c.kode_neraca, sum(c.nilai) as nilai
																from bpc_penetapan c 
																where c.tahun = '$thn1' and c.kode_area = '$ubis' and c.kode_witel = '-' and c.model ='$model' group by kode_neraca) c on c.kode_neraca = a.kode_neraca 
										where a.kode_fs = '$model' order by  rowindex");
				
			
		}else if ($this->isWitel($ubis)){
			$ubis = $this->getWitel($ubis);
			$rsUbis = $this->dbLib->execute("select distinct a.kode_ubis  from exs_mappc a 
								 inner join exs_divre b on b.witel = a.kode_witel 
								 where a.kode_witel2 = '$ubis' order by	kode_ubis ");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as \"$row->kode_ubis\"";
				$sql = " select x.kode_neraca, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
							from bpc_relakun x
							inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' and jenis = 'S'
							inner join exs_cc z on z.kode_cc = y.kode_cc
							inner join exs_ubis w on w.kode_ubis = z.kode_ubis 
							inner join exs_mappc u on u.kode_pc = y.kode_cc and u.kode_witel2 = '$ubis' and u.kode_ubis = '$row->kode_ubis'
							where x.kode_fs = '$model' group by x.kode_neraca";
				$rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_neraca, $line->aggthn );
				}
				$dataUbis->set($row->kode_ubis, $itemUbis);
			}
			$rs = $this->dbLib->execute("select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
												, nvl(c.nilai, 0) as penetapan, nvl(b.aggthn,0) as aggthn 
												, 0 as total,nvl(c.nilai, 0) - (nvl(b.aggthn,0))   as selisih $field
											from bpc_neraca a
											left outer join (select x.kode_neraca, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
															from bpc_relakun x
															inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' and jenis = 'S'
															inner join exs_cc z on z.kode_cc = y.kode_cc
															inner join exs_ubis w on w.kode_ubis = z.kode_ubis 
															inner join exs_mappc u on u.kode_pc = y.kode_cc and u.kode_witel2 = '$ubis'
															where x.kode_fs = '$model' group by x.kode_neraca
													) b on b.kode_neraca = a.kode_neraca
											left outer join (select c.kode_neraca, sum(c.nilai) as nilai
																from bpc_penetapan c 
																where c.tahun = '$thn1' and c.kode_witel= '$ubis' and c.model ='$model' group by kode_neraca) c on c.kode_neraca = a.kode_neraca 
										where a.kode_fs = '$model' order by  rowindex");
			
		}else if ($this->isUbis($ubis)){
		
			/*if ($this->isGroupUbis($ubis)){
				$filter = " and y.kode_ubis in (select kode_ubis from exs_grouping_ubis where group_ubis = '$ubis' ) ";
				$rsUbis = $this->dbLib->execute("select distinct kode_ubis,nama,rowindex from exs_ubis where kode_ubis in (select kode_ubis from exs_grouping_ubis where group_ubis = '$ubis' )  or kode_ubis in (select distinct kode_ubis from exs_divre ) order by rowindex");
				$isGroupUbis = true;
			}else*/ 
			{
				$rsUbis = $this->dbLib->execute("select distinct kode_ubis,nama,rowindex from exs_ubis where kode_ubis = '$ubis' or kode_ubis in (select distinct kode_ubis from exs_divre ) order by rowindex");
				$filter = " and y.kode_ubis = '$ubis' ";
				$isGroupUbis = false;
			}
			
			$sql = "";
			$field = "";
			$listDivre = array();
			$rs = $this->dbLib->execute("select distinct kode_ubis from exs_divre");
			while ($row = $rs->FetchNextObject(false)){
				$listDivre[$row->kode_ubis] = $row->kode_ubis;
			}
			
			$dataUbis = new server_util_Map();
			
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as \"$row->kode_ubis\"";
				if ($listDivre[$row->kode_ubis])
					$sql = " select x.kode_neraca, x.kode_akun, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
							from bpc_relakun x
							inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' and jenis = 'S'
							inner join exs_cc z on z.kode_cc = y.kode_cc
							inner join exs_ubis w on w.kode_ubis = z.kode_ubis 
							where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and y.kode_cc in  (select distinct kode_pc from exs_mappc a 
																				inner join exs_divre b on b.witel = a.kode_witel 
																				where b.kode_ubis = '$row->kode_ubis' and (a.kode_ubis = '$ubis' or a.kode_ubis3 = '$ubis' )
																		  union 
																		  select distinct kode_pc from exs_mappc a 
																				where a.kode_ubis3 = '$ubis' and a.kode_ubis = '$row->kode_ubis'
																		) 
							group by x.kode_neraca, x.kode_akun";
				else {
					$filter2 = $this->getFilterUbis("w",$row->kode_ubis );
					$sql = " select x.kode_neraca,x.kode_akun, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
							from bpc_relakun x
							inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' and jenis = 'S'
							inner join exs_cc z on z.kode_cc = y.kode_cc
							inner join exs_ubis w on w.kode_ubis = z.kode_ubis and $filter2
							where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and not y.kode_cc in (select distinct kode_pc from exs_mappc a 
																				inner join exs_divre b on b.witel = a.kode_witel 
																			) 
							group by x.kode_neraca, x.kode_akun";
					
				}
				//error_log($sql);
				$rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_akun, $line->aggthn );
				}
				$dataUbis->set($row->kode_ubis, $itemUbis);
			}
			$filter = $this->getFilterUbis("y", $ubis );
			$rs = $this->dbLib->execute("select distinct a.kode_neraca, b.kode_akun, left_pad(concat(b.kode_akun,'-',d.nama),a.level_spasi) as nama, a.tipe,d.jenis as jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(c.nilai, 0) as penetapan, (nvl(b.aggthn,0))  as aggthn,nvl(c.nilai, 0) - (nvl(b.aggthn,0))   as selisih $field
											from bpc_neraca a
											inner join (select x.kode_neraca, x.kode_akun, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
															from bpc_relakun x
															inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' and y.jenis = 'S'
															inner join exs_cc z on z.kode_cc = y.kode_cc
															where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and ($filter or y.kode_cc in (select kode_pc from exs_mappc where kode_ubis3 = '$ubis') ) 
															group by x.kode_neraca, x.kode_akun) b on b.kode_neraca = a.kode_neraca
											inner join bpc_masakun d on d.kode_akun = b.kode_akun
											left outer join bpc_penetapan c on c.kode_neraca = a.kode_neraca and c.tahun = '$thn1' and c.kode_ubis = '$ubis' and c.kode_area = '-' and c.model ='$model'
										where a.kode_fs = '$model' and a.kode_neraca = '$neraca' order by  rowindex");
			
		}else{
			$rsUbis = $this->dbLib->execute("select distinct kode_ubis,nama,rowindex from exs_ubis where kode_induk = '$ubis' order by rowindex");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			try{
				while ($row = $rsUbis->FetchNextObject(false)){
					$field .= ", 0  as \"$row->kode_ubis\"";
					$filter2 = $this->getFilterUbis("w",$row->kode_ubis );
					$sql = " select x.kode_neraca, x.kode_akun, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
								from bpc_relakun x
								inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' and jenis = 'S'
								inner join exs_cc z on z.kode_cc = y.kode_cc
								inner join exs_ubis w on w.kode_ubis = z.kode_ubis and ($filter2 or y.kode_cc in (select kode_pc from exs_mappc a  where kode_ubis3 ='".$row->kode_ubis."' ) )
								where x.kode_fs = '$model' and x.kode_neraca= '$neraca' group by x.kode_neraca, x.kode_akun
							union
							select '999999', y.kode_akun,  sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
								from  bpc_mbudget_gab y 
								inner join exs_cc z on z.kode_cc = y.kode_cc
								inner join exs_ubis w on w.kode_ubis = z.kode_ubis and ($filter2 or y.kode_cc in (select kode_pc from exs_mappc a  where kode_ubis3 ='".$row->kode_ubis."' ) )
								left outer join bpc_relakun x on y.kode_akun = x.kode_akun and x.kode_fs = '$model'
								where y.tahun = '$thn1' and jenis = 'S' and '999999' = '$neraca' and x.kode_akun is null group by y.kode_akun ";
					$rs = $this->dbLib->execute($sql);
					$itemUbis = new server_util_Map();

					while ($line = $rs->FetchNextObject(false)){
						$itemUbis->set($line->kode_akun, $line->aggthn);
					}
					$dataUbis->set($row->kode_ubis, $itemUbis);
				}
			}catch(Exception $e){
				error_log($e->getMessage());
			}
			$filter = $this->getFilterUbis("w",$ubis );
			$rs = $this->dbLib->execute("select distinct a.kode_neraca, b.kode_akun, left_pad(concat(b.kode_akun,'-',d.nama),a.level_spasi + 1) as nama, a.tipe,d.jenis as jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(c.nilai, 0) as penetapan, (nvl(b.aggthn,0))   as aggthn,nvl(c.nilai, 0) - (nvl(b.aggthn,0))   as selisih
													 $field
											from bpc_neraca a
											inner join (select x.kode_neraca, x.kode_akun, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
															from bpc_relakun x
															inner join bpc_mbudget_gab y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' and y.jenis = 'S'
															inner join exs_cc z on z.kode_cc = y.kode_cc
															inner join exs_ubis w on w.kode_ubis = z.kode_ubis and ($filter or y.kode_cc in (select kode_pc from exs_mappc a inner join exs_ubis b on b.kode_ubis = a.kode_ubis3 where b.kode_induk ='$ubis' ) )
															where x.kode_fs = '$model' and x.kode_neraca = '$neraca' group by x.kode_neraca, x.kode_akun) b on b.kode_neraca = a.kode_neraca
											inner join bpc_masakun d on d.kode_akun = b.kode_akun
											left outer join bpc_penetapan c on c.kode_neraca = b.kode_akun and c.tahun = '$thn1' and c.kode_ubis = '$ubis' and c.model ='$model'
										where a.kode_fs = '$model' and a.kode_neraca = '$neraca'
										union 
										select '999999', y.kode_akun, left_pad(concat(y.kode_akun,'-',d.nama),1) as nama, '-','PENDAPATAN','-',0,'00',10000,
												0 as penetapan,  sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn, -sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as selisih
												$field	
												from bpc_mbudget_rkm  y
															inner join exs_cc z on z.kode_cc = y.kode_cc
															inner join exs_ubis w on w.kode_ubis = z.kode_ubis and ($filter or y.kode_cc in (select kode_pc from exs_mappc a inner join exs_ubis b on b.kode_ubis = a.kode_ubis3 where b.kode_induk ='$ubis' ) )
															inner join bpc_masakun d on d.kode_akun = y.kode_akun
															left outer join bpc_relakun x on x.kode_fs = '$model' and y.kode_akun = x.kode_akun 
															where  y.tahun = '$thn1' and y.jenis = 'S' and '999999' = '$neraca' and x.kode_akun is null group by y.kode_akun, d.nama
										 order by  rowindex");

		}

		$node = "";
		$rootNode = new server_util_NodeNRC("00");
		$this->sumHeader = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			if ($row->jenis_akun == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
					eval ("\$row->$key = \$itemUbis->get(\$row->kode_akun) * -1;");
				}
				$row->penetapan = $row->penetapan * -1;
				$row->aggthn = $row->aggthn * -1;
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
					eval ("\$row->$key = \$itemUbis->get(\$row->kode_akun);");
				}
			}
			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$node->setData($row);
			if ($row->tipe == "SUMMARY")
				$this->sumHeader->set($row->kode_neraca, $node);

		}
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			$this->summariesJejer($val);
			if ($val->data->sum_header != "-"){
				$summaryHeader = explode(",",$val->data->sum_header);

				foreach ($summaryHeader as $header){
					$nodeHeader = $this->sumHeader->get($header);
					if ($nodeHeader){
						foreach ($val->dataArray as $key => $value) {
							if ($key != "kode_neraca" && $key != "nama" && $key != "tipe" && $key != "sum_header" && $key != "level_spasi" && $key != "rowindex")
								$nodeHeader->dataArray[$key] += $value;
						}
						$nodeHeader->data =(object) $nodeHeader->dataArray;
					}
				}
			}
		}
		//perlu hitung ke summary
		$result = array('rs' => array('rows' => array() ) );
		$this->generateResultJejer($rootNode, $result);
		return ($result);


	}
	
    

    //------ jejer actual CFU AP
    function getDataEXSUMCFUDecode($induk, $model, $periode, $tipe, $pembagi){
        global $satuan;
        
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
        if ($induk == "") $induk = $this->cfu;//"CFU0"
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		///$thn2 = floatval(substr($periode,0,4)) - 1;
        if (strtoupper($tipe) == "GROSS" || $tipe == ""){
            $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
            $jenis = " and t.jenis in ('TB')";
            $filterBudget = " and not kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
        }else if (strtoupper($tipe) == "NETT"){
            $jenis = " and (t.jenis in ('TB') or (t.jenis = 'RL' and  t.kode_cfu = t.kode_cfu2 ) )";///,'AD' 
            $filterBudget = " and not kode_cfu in ('CFUE')  ";
        }else {
            $jenis = "  ";
			//$jenis = " and t.jenis in ('TB') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";
            $filterBudget = "  ";
        }
        	if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0 ";//instr(z.kode_ubis_cons,t.kode_ubis) > 0
				$forSubCFU = "and t.kode_cfu = substr('$induk', 0,length(t.kode_cfu)) "; 
            }else {
                //$join1 = "";
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi  ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                //$join2 = "left outer join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
                $filterCons = "and  instr(z.kode_ubis_cons,t.kode_ubis) > 0 ";
				$forSubCFU = " ";
            }

			$filterCFU = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU";

            $ubis = "";
			/*
			 where t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' 
							CONNECT BY kode_induk = PRIOR kode_cfu) 
			*/
			$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu t where kode_induk like '$induk%' or kode_cfu in ('CFUF','CFUG','CFUD')   order by rowindex");
			$sql = "";
			$field = "";
			$listCFU = array();
			$dataUbis = new server_util_Map();
			$fieldDecode = "";
			while ($row = $rsUbis->FetchNextObject(false)){
				$filter3 = "";
				if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
					$query = 1;
					$jenis2 = " and t.jenis = 'IJ' ";
				}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
					$query = 1;
					$jenis2 = " and  t.jenis = 'RL' ";
					if (strtoupper($tipe) == "NETT")
						$jenis2  .= " and  t.kode_cfu = t.kode_cfu2  ";
				}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) <> "GROSS" && $tipe != ""){
					$query = 1;
					$jenis2 = " and t.jenis = 'AD' ";
				}else {
					$query = 0;
					$jenis2 = $jenis;
				} 
				$forSubCFU2 = " and t.kode_cfu = substr('$row->kode_cfu', 0,length(t.kode_cfu)) ";
				//$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
				$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='". $row->kode_cfu. "' or kode_cfu = '". $row->kode_cfu. "'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU2";
				//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,1,length(t.kode_cfu)) $filterCons
                //inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,1,length(t.kode_cfu)) $filterCons
                                        
				if ($query == 0) {
					$listCFU[] = $row->kode_cfu;
					$field .= ", nvl(t.actsd_". $row->kode_cfu. ",0) as actsd_". $row->kode_cfu. " ";
					$field2 .= ", sum(nvl(t.actsd_". $row->kode_cfu. ",0)) as actsd_". $row->kode_cfu ." ";
					$fieldDecode .= ", sum( case when t.kode_cfu = substr('$row->kode_cfu', 0,length(t.kode_cfu)) and periode <= '$periode' then nilai else 0 end) as actsd_". $row->kode_cfu. " ";
                	$sql = " select x.kode_neraca, nvl(v.actsd, 0) as actsd
							from bpc_neraca x
                            left outer join (select x.kode_neraca
                                        , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                        , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                from bpc_relakun x
                                inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_neraca
                               ) v on v.kode_neraca = x.kode_neraca
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
							union
							select '999999',  sum(nvl(v.actsd, 0)) as actsd
							from bpc_masakun a
                            left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis 
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterCFU2
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            having sum(nvl(v.actsd, 0)) <> 0
                            ";
					//error_log($sql);
				}else if ($induk == "CFU0"){
					$listCFU[] = $row->kode_cfu;
					$field .= ", nvl(t.actsd_". $row->kode_cfu. ",0) as actsd_". $row->kode_cfu. " ";
					$field2 .= ",  sum(nvl(t.actsd_". $row->kode_cfu. ",0)) as actsd_". $row->kode_cfu ." ";
					$fieldDecode .= ", sum(case when periode <= '$periode'  $jenis2 then nilai else 0 end) as actsd_". $row->kode_cfu. " ";
					$sql = " select x.kode_neraca, nvl(v.actsd, 0) as actsd
							from bpc_neraca x
                            left outer join (select x.kode_neraca
                                        , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                        , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                from bpc_relakun x
                                inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2 $filter3
                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_neraca
                               ) v on v.kode_neraca = x.kode_neraca
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
							union
							select '999999',  sum(nvl(v.actsd, 0)) as actsd
							from bpc_masakun a
                            left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2 $filter3
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi'
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            having sum(nvl(v.actsd, 0)) <> 0
                            ";
				}
                //error_log($sql);
				/*
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_neraca, $line);
				}
				$dataUbis->set($row->kode_cfu, $itemUbis);
				*/
			}
            
			if ($induk != "CFU0"){
				$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_cfu in ('CFUF','CFUG','CFUD') order by rowindex");
				while ($row = $rsUbis->FetchNextObject(false)){
					if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'IJ' ";
					}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
						$query = 1;
						$jenis2 = " and t.jenis = 'RL' ";
						if (strtoupper($tipe) == "NETT")
							$jenis2 .= " and t.kode_cfu = t.kode_cfu2";
					}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) <> "GROSS" && $tipe != ""){
						$query = 1;
						$jenis2 = " and t.jenis = 'AD' ";
					}else {
						$query = 0;
						$jenis2 = " and t.jenis ='-' ";
					} 
					$listCFU[] = $row->kode_cfu;
					$field .= ",  nvl(t.actsd_". $row->kode_cfu. ",0) as actsd_". $row->kode_cfu. " ";
					$field2 .= ",  sum(nvl(t.actsd_". $row->kode_cfu. ",0)) as actsd_". $row->kode_cfu ." ";
					$fieldDecode .= ", sum( case when t.kode_cfu = '$cfu' $jenis2 and periode <= '$periode' then nilai else 0 end) as actsd_". $row->kode_cfu. " ";
					
					{
						$sql = " select x.kode_neraca, sum(nvl(v.actsd, 0)) as actsd
								from bpc_neraca x
								left outer join (select x.kode_neraca
											, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
											, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
									from bpc_relakun x
									inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
									where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$induk'  
									group by x.kode_neraca
								) v on v.kode_neraca = x.kode_neraca
													
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca
								union
								select '999999',  sum(nvl(v.actsd, 0)) as actsd
								from bpc_masakun a
								left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
								left outer join (select x.kode_akun
													, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
													, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
											from bpc_masakun x
											inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
											left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
											where b.kode_akun is null and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$induk'
											group by x.kode_akun
											having sum(nvl(t.nilai,0)) <> 0
								) v on v.kode_akun = a.kode_akun
								where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
								having sum(nvl(v.actsd, 0)) <> 0
								";
					}
					///error_log("Update ".  strtoupper($tipe) . " : " .  $row->kode_cfu  .":".  $sql);
					/*
					$rs = $this->dbLib->execute($sql);
					$itemUbis = new server_util_Map();

					while ($line = $rs->FetchNextObject(false)){
						$itemUbis->set($line->kode_neraca, $line);
					}
					$dataUbis->set($row->kode_cfu, $itemUbis);
					*/
				}
			}
        
            // /inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,1,length(t.kode_cfu)) $filterCons
			//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,1,length(t.kode_cfu)) $filterCons
            $sql = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(t.actsd,0) as actsd
                                                     $field
											from bpc_neraca a
											left outer join (select x.kode_neraca
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
																			$fieldDecode
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU group by x.kode_neraca
                                                                ) t on t.kode_neraca = a.kode_neraca
                                         where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
										union 
										select '999999','UNMAPPED','-','BEBAN','-',0,'00',1000
                                            , sum(nvl(t.actsd, 0)) as actsd
                                             $field2
                                        from bpc_masakun a
                                        left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun
                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
															$fieldDecode
                                                    from bpc_masakun x
                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis
                                                    left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                                    where  b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterCFU
                                                    group by x.kode_akun
                                                    having sum(nvl(t.nilai,0)) <> 0
                                        ) t on t.kode_akun = a.kode_akun
                                        where x.kode_akun is null and a.kode_lokasi ='$lokasi'
										 order by  rowindex";
            //error_log("LineUpCFU => " . $sql);
            $rs = $this->dbLib->execute($sql);
            $node = "";
		$rootNode = new server_util_NodeNRC("00");
		$this->sumHeader = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			if (strtoupper($row->jenis_akun) == "PENDAPATAN"){
				//foreach ($dataUbis->getArray() as $key => $itemUbis){
				foreach ($listCFU as $key){
                    //$tmp = $itemUbis->get($row->kode_neraca);
                    eval ("\$row->actsd_$key = \$tmp->actsd_$key * -1;");
				}
				$row->jenis = "INC";
			}else {
				//foreach ($dataUbis->getArray() as $key => $itemUbis){
				/*
				foreach ($listCFU as $key){
                    //$tmp = $itemUbis->get($row->kode_neraca);
                    eval ("\$row->actsd_$key = \$tmp->actsd_$key ;");
				}*/
                $row->jenis = "EXP";
			}
			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$node->setData($row);
			if ($row->tipe == "SUMMARY")
				$this->sumHeader->set($row->kode_neraca, $node);

		}
		//error_log("Done Summmary");
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			//if ($lokasi == "10")
            {
				$this->summariesJejer($val);
				
				if ($val->data->sum_header != "-"){
					$summaryHeader = explode(",",$val->data->sum_header);

					foreach ($summaryHeader as $header){
						$nodeHeader = $this->sumHeader->get($header);
						if ($nodeHeader){
							foreach ($val->dataArray as $key => $value) {
								if ($key != "jenis_akun" && $key != "jenis" && $key != "kode_neraca" && $key != "nama" && $key != "tipe" && $key != "sum_header" && $key != "level_spasi" && $key != "rowindex"){
									$nodeHeader->dataArray[$key] += $value;
								}
							}
							$nodeHeader->data =(object) $nodeHeader->dataArray;
						}
					}
				}
			}
		}
		//error_log("Done Leveing");
		//perlu hitung ke summary
		$result = array('rs' => array('rows' => array() ) );
		$this->generateResultJejer($rootNode, $result);
        ///error_log("pembagi $pembagi ");
        //error_log(json_encode($result));
		return ($result);   
    }
    function getDataEXSUMCFUDetailDecode($cfu, $model, $periode, $induk, $tipe,  $pembagi){
		try{
			global $satuan;
			$this->getDB();
			$this->dbLib = $this->db;
			if (!isset($pembagi)) $pembagi = 1000000000;
			$satuan = $pembagi;
			$lokasi = "9000";
			$thn1 = substr($periode,0,4);
			$bln = substr($periode,4,2);
			///$thn2 = floatval(substr($periode,0,4)) - 1;
			if (strtoupper($tipe) == "GROSS" || $tipe == ""){
				$addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
				$jenis = " and t.jenis in ('TB')";
				$filterBudget = " and not kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
			}else if (strtoupper($tipe) == "NETT"){
				$jenis = " and (t.jenis in ('TB') or (t.jenis = 'RL' and  t.kode_cfu = t.kode_cfu2 ) )";//,'AD'
				$filterBudget = " and not kode_cfu in ('CFUE')  ";
			}else {
				$jenis = "  ";
				$filterBudget = "  ";
			}
				if ($cfu != "CFU0"){
					$join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$cfu' ) ";
					$join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
																and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
					$filterCons = " and   z.kode_lokasi = t.kode_lokasi ";//instr(z.kode_ubis_cons,t.kode_ubis) > 0
					$forSubCFU = "and t.kode_cfu = substr('$cfu', 0,length(t.kode_cfu)) "; 
				}else {
					//$join1 = "";
					$join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi  ";
					$join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
																and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
					//$join2 = "left outer join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
					$filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0";
					$forSubCFU = " ";
				}
				$filterCFU = " and t.kode_lokasi in ( SELECT kode_lokasi
								FROM bpc_cfu
								start with kode_induk ='$cfu' or kode_cfu = '$cfu'
								CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU";

				$ubis = "";
				//$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$cfu'  order by rowindex");
				$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu t where kode_induk like '$induk%' or kode_cfu in ('CFUF','CFUG','CFUD') order by rowindex");
				$sql = "";
				$field = "";
				$dataUbis = new server_util_Map();
				
				//error_log("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu t where kode_induk like '$induk%' or kode_cfu in ('CFUF','CFUG','CFUD') order by rowindex");
				$fieldDecode = "";
				$listCFU = array();
				while ($row = $rsUbis->FetchNextObject(false)){
					if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'IJ' ";
					}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
						$query = 1;
						$jenis2 = " and t.jenis = 'RL' ";
						if (strtoupper($tipe) == "NETT")
							$jenis2 .= " and t.kode_cfu = t.kode_cfu2";
					}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) <> "GROSS" && $tipe != ""){
						$query = 1;
						$jenis2 = " and t.jenis = 'AD' ";
					}else {
						$query = 0;
						$jenis2 = " and t.jenis ='-' ";
					} 
					$forSubCFU2 = "and t.kode_cfu = substr('$row->kode_cfu', 0,length(t.kode_cfu)) ";
					$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
								FROM bpc_cfu
								start with kode_induk ='". $row->kode_cfu ."' or kode_cfu = '". $row->kode_cfu."'
								CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU2";

					
					//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,1,length(t.kode_cfu)) $filterCons
					
					if ($query == 0) {
						$listCFU[] = $row->kode_cfu;
						$field .= ", 0  as ". $row->kode_cfu. ", nvl(t.actsd_". $row->kode_cfu. ",0) as actsd_". $row->kode_cfu ." ";
						$field2 .= ", 0  as ". $row->kode_cfu. ", sum(nvl(t.actsd_". $row->kode_cfu. ",0)) as actsd_". $row->kode_cfu ." ";
						$fieldDecode .= ", sum( case when t.kode_cfu = substr('$row->kode_cfu', 0,length(t.kode_cfu)) and periode <= '$periode' then nilai else 0 end) as actsd_". $row->kode_cfu. " ";
						$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd
								from bpc_relakun x
								left outer join (select x.kode_akun
																				, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
																				, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
																		from bpc_relakun x
																		inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
																		where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2
																		group by x.kode_akun
																	) v on v.kode_akun = x.kode_akun
													
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$induk'
								union
								select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd
								from bpc_masakun a
								left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
								left outer join (select x.kode_akun
													, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
													, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
											from bpc_masakun x
											inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis
											left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
											where b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterCFU2 
											group by x.kode_akun
											having sum(nvl(t.nilai,0)) <> 0
								) v on v.kode_akun = a.kode_akun
								where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$induk'
								group by a.kode_akun
								having sum(nvl(v.actsd, 0)) <> 0";
					}else if ($cfu == "CFU0"){
						$listCFU[] = $row->kode_cfu;
						$field .= ", 0  as ". $row->kode_cfu. ", nvl(t.actsd_". $row->kode_cfu. ",0) as actsd_". $row->kode_cfu. " ";
						$field2 .= ", 0  as ". $row->kode_cfu. ", sum(nvl(t.actsd_". $row->kode_cfu. ",0)) as actsd_". $row->kode_cfu ." ";
						$fieldDecode .= ", sum( case when t.kode_cfu = substr('$row->kode_cfu', 0,length(t.kode_cfu)) $jenis2 and periode <= '$periode' then nilai else 0 end) as actsd_". $row->kode_cfu. " ";
						$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd
								from bpc_relakun x
								left outer join (select x.kode_akun
																				, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
																				, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
																		from bpc_relakun x
																		inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis2
																		where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
																		group by x.kode_akun
																	) v on v.kode_akun = x.kode_akun
													
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$induk'
								union
								select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd
								from bpc_masakun a
								left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
								left outer join (select x.kode_akun
													, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
													, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
											from bpc_masakun x
											inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis2
											left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
											where b.kode_akun is null and x.kode_lokasi = '$lokasi'  
											group by x.kode_akun
											having sum(nvl(t.nilai,0)) <> 0
								) v on v.kode_akun = a.kode_akun
								where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$induk'
								group by a.kode_akun
								having sum(nvl(v.actsd, 0)) <> 0";
					}
					//error_log("detail " .$sql);
					/*
					if ($sql != ""){
						$rs = $this->dbLib->execute($sql);
						$itemUbis = new server_util_Map();

						while ($line = $rs->FetchNextObject(false)){
							$itemUbis->set($line->kode_akun, $line);
						}
						$dataUbis->set($row->kode_cfu, $itemUbis);
					}
					*/
					
				}
				
				if ($cfu != "CFU0"){
					$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_cfu in ('CFUF','CFUG','CFUD') order by rowindex");
					while ($row = $rsUbis->FetchNextObject(false)){
						if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
							$query = 1;
							$jenis2 = " and t.jenis = 'IJ' ";
						}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
							$query = 1;
							$jenis2 = " and t.jenis = 'RL' ";
							if (strtoupper($tipe) == "NETT")
								$jenis2 .= " and t.kode_cfu = t.kode_cfu2";
						}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) <> "GROSS" && $tipe != ""){
							$query = 1;
							$jenis2 = " and t.jenis = 'AD' ";
						}else {
							$query = 0;
							$jenis2 = " and t.jenis ='-' ";
						} 
						$listCFU[] = $row->kode_cfu;
						$field .= ", 0  as ". $row->kode_cfu. ", nvl(t.actsd_". $row->kode_cfu. ",0) as actsd_". $row->kode_cfu. " ";
						$field2 .= ", 0  as ". $row->kode_cfu. ", sum(nvl(t.actsd_". $row->kode_cfu. ",0)) as actsd_". $row->kode_cfu ." ";
						$fieldDecode .= ", sum( case when t.kode_cfu = '$cfu' $jenis2 and periode <= '$periode' then nilai else 0 end) as actsd_". $row->kode_cfu. " ";
						/*
						{
							$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd
								from bpc_relakun x
								left outer join (select x.kode_akun
																				, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
																				, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
																		from bpc_relakun x
																		inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
																		where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$cfu'
																		group by x.kode_akun
																	) v on v.kode_akun = x.kode_akun
													
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$induk'
								union
								select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd
								from bpc_masakun a
								left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
								left outer join (select x.kode_akun
													, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
													, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
											from bpc_masakun x
											inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
											left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
											where b.kode_akun is null and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$cfu'
											group by x.kode_akun
											having sum(nvl(t.nilai,0)) <> 0
								) v on v.kode_akun = a.kode_akun
								where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$induk'
								group by a.kode_akun
								having sum(nvl(v.actsd, 0)) <> 0";
								
							
						}
						error_log("detail akun " . $sql);
						
						$rs = $this->dbLib->execute($sql);
						$itemUbis = new server_util_Map();

						while ($line = $rs->FetchNextObject(false)){
							$itemUbis->set($line->kode_neraca, $line);
						}
						$dataUbis->set($row->kode_cfu, $itemUbis);
						*/
					}

				}
			
				$sql = "select distinct d.kode_akun as kode_neraca, left_pad(concat(d.kode_akun,concat('-',e.nama)),a.level_spasi + 1) as nama, a.tipe,e.jenis as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex
														, nvl(t.actsd,0) as actsd
														$field
												from bpc_neraca a
												inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and a.kode_lokasi = d.kode_lokasi and d.kode_fs = a.kode_fs
												inner join bpc_masakun e on e.kode_akun = d.kode_akun and e.kode_lokasi = a.kode_lokasi 
												left outer join (select x.kode_akun
																				, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
																				, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
																				$fieldDecode
																		from bpc_relakun x
																		inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
																		where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU group by x.kode_akun
																	) t on t.kode_akun = d.kode_akun
												where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$induk' 
												
											union
											select a.kode_akun, concat(a.kode_akun, concat('-',a.nama)) as nama,'-',a.jenis,'-',0,'00',1000
												, sum(nvl(t.actsd, 0)) as actsd
												$field2
											from bpc_masakun a
											left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
											left outer join (select x.kode_akun
																, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
																, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
																$fieldDecode
														from bpc_masakun x
														inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
														left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
														where  b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterCFU
														group by x.kode_akun
														having sum(nvl(t.nilai,0)) <> 0
											) t on t.kode_akun = a.kode_akun
											where x.kode_akun is null and a.kode_lokasi ='$lokasi' and '999999' = '$induk'
											group by a.kode_akun, a.nama, a.jenis
											order by kode_neraca";
				//error_log("getDataEXSUMCFUDetail => " . $sql);
				$rs = $this->dbLib->execute($sql);
				$node = "";
			$rootNode = new server_util_NodeNRC("00");
			$this->sumHeader = new server_util_Map();
			$result = array('rs' => array('rows' => array() ) );
			while ($row = $rs->FetchNextObject(false)){
				if ($row->jenis_akun == "PENDAPATAN"){
					/*
					foreach ($dataUbis->getArray() as $key => $itemUbis){
						//$key = strtoupper($key);
						$tmp = $itemUbis->get($row->kode_neraca);
						if ($tmp == null){
							eval ("\$row->$key = 0;");
							eval ("\$row->actsd_$key = 0;");
						}else {
							eval ("\$row->$key = round( \$tmp->aggsd / $pembagi) ;");
							eval ("\$row->actsd_$key = round(\$tmp->actsd / $pembagi) * -1;");
							
						}
						
					}*/
					foreach ($listCFU as $val){
						eval ("\$row->actsd_$val = round(\$tmp->actsd_$val / $pembagi) * -1;");
					}
					$row->jenis = "INC";
					$row->actsd = round($row->actsd / $pembagi) * -1;
					//error_log("PDRPT " . json_encode($row));
				}else {
					/*
					foreach ($dataUbis->getArray() as $key => $itemUbis){
						//$key = strtoupper($key);
						$tmp = $itemUbis->get($row->kode_neraca);
						if ($tmp == null){
							eval ("\$row->$key = 0;");
							eval ("\$row->actsd_$key = 0;");
						}else {
							eval ("\$row->$key = \$tmp->aggsd / $pembagi;");
							eval ("\$row->actsd_$key = \$tmp->actsd / $pembagi;");
						}
					}*/
					foreach ($listCFU as $val){
						eval ("\$row->actsd_$val = round(\$tmp->actsd_$val / $pembagi);");
					}
					$row->aggsd = $row->aggsd  / $pembagi;
					$row->actsd = round($row->actsd / $pembagi);
					$row->jenis = "EXP";
				}
					//if ($row->aggsd != 0 || $row->actsd != 0)
				
				//a.kode_neraca, d.kode_akun, e.nama as nama, a.tipe, '-' as jenis, upper(e.jenis) as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex
				$allZero = true;
				$item = (array)$row;
				foreach ($item as $key => $value) {
					if ($key != "kode_neraca" && $key != "kode_akun" && $key != "nama" && $key != "tipe" && $key != "jenis_akun" && $key != "sum_header" && $key != "level_spasi" && $key != "kode_induk" && $key != "rowindex"){
						//error_log("getDataEXSUMCFUDetail $key = $value;");
						if (abs($value) != 0){
							$allZero = false;
						}
					}
						
				}
				if (!$allZero)
					$result["rs"]["rows"][] = (array)$row;
				
			}
			error_log("pembagi $pembagi");
			error_log(json_encode($result));
			return ($result);   
		}catch(Exception $e){
			console.log($e->getMessage());
		}
    }
    function getDataEXSUMCFUDetailReportDecode($cfu,$model,$periode, $tipe, $pembagi){
        
        global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = $tahun;//substr($periode,0,4);
		///$thn2 = floatval(substr($periode,0,4)) - 1;
        
            $ubis = "";
			$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$cfu' order by rowindex");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as ". $row->kode_cfu. "";
                $sql = " select x.kode_akun,  sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
							from bpc_relakun x
                            inner join bpc_mapakun z on z.akun_konsol = x.kode_akun 
							inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$row->kode_cfu' or t.kode_cfu = '$row->kode_cfu' ) 
                            where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_akun";
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_akun, $line->aggthn);
				}
				$dataUbis->set($row->kode_cfu, $itemUbis);
			}
            if ($cfu != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$cfu' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
            }else {
                $join1 = "";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
            }
        
            $sql = "select distinct a.kode_neraca, c.kode_akun,left_pad(c.nama,a.level_spasi + 1) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(c.nilai, 0) as penetapan, (nvl(b.aggthn,0)) as aggthn,nvl(c.nilai, 0) - (nvl(b.aggthn,0))   as selisih $field
											from bpc_neraca a
                                            inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and d.kode_fs = a.kode_fs and d.kode_lokasi = a.kode_lokasi
                                            inner join bpc_masakun c on c.kode_akun = d.kode_akun and c.kode_lokasi = a.kode_lokasi 
											left outer join (select x.kode_neraca, x.kode_akun, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
															from bpc_relakun x
															inner join bpc_mapakun z on z.akun_konsol = x.kode_akun 
                                                            $join1
							                                inner join bpc_mbudget_rkm y on y.kode_akun = z.kode_akun and y.tahun = '$thn1' and jenis = 'S' and z.kode_lokasi = y.kode_lokasi
															$join2
															where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
                                                            group by x.kode_neraca, x.kode_akun) b on b.kode_neraca = a.kode_neraca and b.kode_akun = c.kode_akun 
											left outer join bpc_penetapan c on c.kode_lokasi = '$lokasi' and c.kode_neraca = a.kode_neraca and c.tahun = '$thn1' and c.kode_ubis = 'NAS' and a.kode_fs = c.model
										where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
										order by c.kode_akun";
            //error_log($sql);
            $rs = $this->dbLib->execute($sql);
            $node = "";
		$result = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
            if ($row->jenis_akun == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $key = strtoupper($key);
					eval ("\$tmp = \$itemUbis->get(\$row->kode_akun) * -1 ;");
                    if ($tmp == null)
                        eval ("\$row->$key = 0;" );
                    else eval ("\$row->$key = $tmp;" );
				}
				$row->penetapan = $row->penetapan * -1  ;
				$row->aggthn = $row->aggthn * -1 ;
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $key = strtoupper($key);
					eval ("\$tmp = \$itemUbis->get(\$row->kode_akun);");
                    if ($tmp == null)
                        eval ("\$row->$key = 0;" );
                    else eval ("\$row->$key = $tmp;" );
				}
			}
            if ($row->aggthn != 0){
                $tmp = $result->get($row->kode_neraca);
                if ($tmp == null){
                    $tmp = new server_util_arrayList();
                }
                //error_log(json_encode($row));
                $tmp->add($row);
                $result->set($row->kode_neraca, $tmp);    
            }
			
		}
		
		return ($result);   
    }
	function getDataAkunJejerCFUDecode($induk,$model, $periode, $tipe, $pembagi){
        global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		
		///$thn2 = floatval(substr($periode,0,4)) - 1;
        if (strtoupper($tipe) == "GROSS" || $tipe == ""){
            $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
            $jenis = " and t.jenis in ('TB')";
            $filterBudget = " and not kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
        }else if (strtoupper($tipe) == "NETT"){
            $jenis = " and (t.jenis in ('TB') or (t.jenis = 'RL' and  t.kode_cfu = t.kode_cfu2 ) )";////,'AD'
            $filterBudget = " and not kode_cfu in ('CFUE')  ";
        }else {
            $jenis = "  ";
            $filterBudget = "  ";
        }
        	if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $filterCons = " and instr(z.kode_ubis_cons,t.kode_ubis) > 0";//instr(z.kode_ubis_cons,t.kode_ubis) > 0
				$forSubCFU = "and t.kode_cfu = substr('$induk', 0,length(t.kode_cfu)) "; 
            }else {
                //$join1 = "";
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi  ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                //$join2 = "left outer join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
                $filterCons = "and instr(z.kode_ubis_cons,t.kode_ubis) > 0";
				$forSubCFU = " ";
            }
			$filterCFU = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU ";
            $ubis = "";
			//$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$induk' or kode_cfu in ('CFUF','CFUD','CFUG')  order by rowindex");
			$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu t where kode_induk like '$induk%'  or kode_cfu in ('CFUF','CFUG','CFUD') order by rowindex");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
					if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'IJ' ";
					}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
						$query = 1;
						$jenis2 = " and t.jenis = 'RL' ";
						if (strtoupper($tipe) == "NETT")
							$jenis2 .= " and t.kode_cfu = t.kode_cfu2";
					}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) <> "GROSS" && $tipe != ""){
						$query = 1;
						$jenis2 = " and t.jenis = 'AD' ";
					}else {
						$query = 0;
						$jenis2 = " and t.jenis ='-' ";
					} 
				$field .= ", 0  as actsd_". $row->kode_cfu. " ";
				$forSubCFU2 = "and t.kode_cfu = substr('$row->kode_cfu', 0,length(t.kode_cfu)) ";

				$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='". $row->kode_cfu. "' or kode_cfu = '". $row->kode_cfu. "'
							CONNECT BY kode_induk = PRIOR kode_cfu)$forSubCFU2";

				$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
				//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,1,length(t.kode_cfu)) $filterCons
				if ($query == 0)
                	$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd
							from bpc_relakun x
                            left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd
							from bpc_masakun a
                            left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterCFU2 
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0";
                else if ($induk == "CFU0") {
					$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd
							from bpc_relakun x
                            left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'    group by x.kode_akun
                                                                ) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd
							from bpc_masakun a
                            left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis2
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi'  
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0";
					//error_log($sql);
				}
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_akun, $line);
				}
				$dataUbis->set($row->kode_cfu, $itemUbis);
			}

			if ($induk != "CFU0"){
				$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_cfu in ('CFUF','CFUG','CFUD') order by rowindex");
				while ($row = $rsUbis->FetchNextObject(false)){
					if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'IJ' ";
					}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
						$query = 1;
						$jenis2 = " and t.jenis = 'RL' ";
						if (strtoupper($tipe) == "NETT")
							$jenis2 .= " and t.kode_cfu = t.kode_cfu2";
					}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) <> "GROSS" && $tipe != ""){
						$query = 1;
						$jenis2 = " and t.jenis = 'AD' ";
					}else {
						$query = 0;
						$jenis2 = " and t.jenis ='-' ";
					} 
					$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
					
					{
						$sql = " select x.kode_akun, sum(nvl(v.actsd, 0)) as actsd
								from bpc_relakun x
								left outer join (select x.kode_akun
											, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
											, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
									from bpc_relakun x
									inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
									where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$induk'  
									group by x.kode_akun
								) v on v.kode_akun = x.kode_akun
													
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_akun
							union 
								select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd
							from bpc_masakun a
                            left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis2
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi'  and t.kode_cfu = '$induk'  
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0
								";
					}
					//error_log("Detail ".  strtoupper($tipe) . " : " .  $row->kode_cfu  .":".  $sql);
					
					$rs = $this->dbLib->execute($sql);
					$itemUbis = new server_util_Map();

					while ($line = $rs->FetchNextObject(false)){
						$itemUbis->set($line->kode_neraca, $line);
					}
					$dataUbis->set($row->kode_cfu, $itemUbis);
				}
			}
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
            }else {
                //$join1 = "";
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi ";//
                //$join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
            }
            $sql = "select distinct a.kode_neraca, d.kode_akun, e.nama as nama, a.tipe, '-' as jenis, upper(e.jenis) as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex 
                                        , nvl(t.actsd,0) as actsd
                                                    $field
											from bpc_neraca a
                                            inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and a.kode_lokasi = d.kode_lokasi and d.kode_fs = a.kode_fs
                                            inner join bpc_masakun e on e.kode_akun = d.kode_akun and e.kode_lokasi = a.kode_lokasi 
											left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU group by x.kode_akun
                                                                ) t on t.kode_akun = d.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi'
                                        union
                                        select '999999', a.kode_akun, concat(a.kode_akun, concat('-',a.nama)) as nama,'-','-',a.jenis,'-',0,'00',1000
                                            , sum(nvl(v.actsd, 0)) as actsd
                                              $field
                                        from bpc_masakun a
                                        left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun
                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                    from bpc_masakun x
                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                    left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                                    where  b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterCFU
                                                    group by x.kode_akun
                                        ) v on v.kode_akun = a.kode_akun
                                        where x.kode_akun is null and a.kode_lokasi ='$lokasi' and substr(a.kode_akun,1,1) in ('4','5','6','7','8')
                                        group by a.kode_akun, a.nama, a.jenis
                                        order by kode_neraca";
            //error_log("Deteail akun " . $sql );
			$rs = $this->dbLib->execute($sql);
            $node = "";
		    $result = new server_util_Map();        
            $neraca = "";
			
            while ($row = $rs->FetchNextObject(false)){
				//error_log(json_encode($row));
				
                if ($row->jenis_akun == "PENDAPATAN"){
                    foreach ($dataUbis->getArray() as $key => $itemUbis){
                        $tmp = $itemUbis->get($row->kode_akun);
						if ($tmp == null){
							eval("\$row->actsd_$key = 0;");
						}else 
							eval ("\$row->actsd_$key = round($tmp->actsd / $pembagi) * -1;");
                    }
                    $row->actsd = round($row->actsd / $pembagi) * -1;    
                    $row->jenis = "INC";
                }else {
                    foreach ($dataUbis->getArray() as $key => $itemUbis){
                        $tmp = $itemUbis->get($row->kode_akun);
						if ($tmp == null){
							eval("\$row->actsd_$key = 0;");
						}else
                        	eval ("\$row->actsd_$key = round($tmp->actsd / $pembagi);");
                    }
					$row->actsd = round($row->actsd / $pembagi );
                    $row->jenis = "EXP";
                }
                

                if ($neraca != $row->kode_neraca){
                    $neraca = $row->kode_neraca;
                    $item = array();
                }
				$allZero = true;
                $rowItem = (array)$row;
				//a.kode_neraca, d.kode_akun, e.nama as nama, a.tipe, '-' as jenis, upper(e.jenis) as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex
				foreach ($rowItem as $key => $value) {
					if ($key != "kode_neraca" && $key != "kode_akun" && $key != "nama" && $key != "tipe" && $key != "jenis_akun" && $key != "sum_header" && $key != "level_spasi" && $key != "kode_induk" && $key != "rowindex"){
						if ($value != 0)
							$allZero = false;
					}
						
				}
				if (!$allZero) {
					$item[] = (array) $row;
                	$result->set($neraca, $item);
				}
                
            }
            return $result;
    }
	//-- Jejer Actual CFU
	function getDataEXSUMCFU($induk, $model, $periode, $tipe, $pembagi){
        global $satuan;
        
		$db = $this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
        if ($induk == "") $induk = $this->cfu;//"CFU0"
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		
		$listCFUUbis = new server_util_Map();
		$rs = $db->execute("select * from bpc_cfu a 
									inner join exs_ubis b on b.kode_ubis = a.kode_ubis 
									where not a.kode_ubis_cons like 'TG%' order by kode_cfu ");
		
		while ($row = $rs->FetchNextObject(false)){
			$listCFUUbis->set($row->kode_cfu, $row);
		}

		///$thn2 = floatval(substr($periode,0,4)) - 1;
        if (strtoupper($tipe) == "GROSS" || $tipe == ""){
            $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
            $jenis = " and t.jenis in ('TB')";
            $filterBudget = " and not kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
        }else if (strtoupper($tipe) == "NETT"){
            $jenis = " and (t.jenis in ('TB') or (t.jenis = 'RL' and  t.kode_cfu = t.kode_cfu2 ) )";///,'AD' 
            $filterBudget = " and not kode_cfu in ('CFUE')  ";
        }else {
            $jenis = "  ";
			//$jenis = " and t.jenis in ('TB') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";
            $filterBudget = "  ";
        }
        	if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0 ";//instr(z.kode_ubis_cons,t.kode_ubis) > 0
				//if (strtoupper($tipe) == "CONSOL" )
				$forSubCFU = "and ( t.kode_cfu = substr('$induk', 0,length(t.kode_cfu)) )"; 
            }else {
                //$join1 = "";
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi  ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                //$join2 = "left outer join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
                $filterCons = "and  instr(z.kode_ubis_cons,t.kode_ubis) > 0 ";
				$forSubCFU = " ";
            }

			$filterCFU = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU";

            $ubis = "";
			/*
			 where t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' 
							CONNECT BY kode_induk = PRIOR kode_cfu) 
			*/
			$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu t where kode_induk like '$induk%' or kode_cfu in ('CFUF','CFUG','CFUD')   order by rowindex");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				$filter3 = "";
				if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
					$query = 1;
					$jenis2 = " and t.jenis = 'IJ' ";
				}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
					$query = 1;
					$jenis2 = " and t.jenis = 'RL' ";
					if (strtoupper($tipe) == "NETT")
						$jenis2  .= " and  t.kode_cfu = t.kode_cfu2  ";
				}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) == "CONSOL" && $tipe != ""){
					$query = 1;
					$jenis2 = " and t.jenis = 'AD' ";
					//if (strtoupper($tipe) == "NETT")
					//	$jenis2  .= " and t.kode_cfu = t.kode_cfu2 ";
				}else {
					$query = 0;
					$jenis2 = $jenis;
				} 

				$forSubCFU2 = " and t.kode_cfu = substr('$row->kode_cfu', 0,length(t.kode_cfu)) ";
				$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
				$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='". $row->kode_cfu. "' or kode_cfu = '". $row->kode_cfu. "'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU2";
				//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,1,length(t.kode_cfu)) $filterCons
                //inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,1,length(t.kode_cfu)) $filterCons
                                        
				if ($query == 0) {
					//berarti ubis
					
					$row2 = $listCFUUbis->get($row->kode_cfu);
					if (isset($row2) ){
						$lokasi2 = $row2->kode_lokasi;
						$filterUbis = $this->getFilterUbis("z", $row2->kode_ubis, $lokasi2);
						$sql = " select x.kode_neraca, sum(case '$bln' when '01' then jan
														 when '02' then (feb  )
														 when '03' then (mar  )
														 when '04' then (apr  )
														 when '05' then (mei )
														 when '06' then (jun  )
														 when '07' then (jul )
														 when '08' then (aug )
														 when '09' then (sep )
														 when '10' then (okt )
														 when '11' then (nop )
														 when '12' then (des)
													end) as actcm, sum(case '$bln' when '01' then jan
														 when '02' then (jan + feb  )
														 when '03' then (jan + feb + mar  )
														 when '04' then (jan + feb + mar + apr  )
														 when '05' then (jan + feb + mar + apr + mei )
														 when '06' then (jan + feb + mar + apr + mei + jun  )
														 when '07' then (jan + feb + mar + apr + mei + jun + jul )
														 when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
														 when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
														 when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
														 when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
														 when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
												end) as actsd
						from bpc_relakun x
						inner join exs_mactual y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' and jenis = 'S' and y.kode_lokasi = '$lokasi2'
						inner join exs_cc z on z.kode_cc = y.kode_cc and z.kode_lokasi = y.kode_lokasi  and $filterUbis
						where x.kode_fs = '$model'  and x.kode_lokasi = '$lokasi' group by x.kode_neraca";
					}else 
                		$sql = " select x.kode_neraca, nvl(v.actsd, 0) as actsd, nvl(v.actcm, 0) as actcm
							from bpc_neraca x
                            left outer join (select x.kode_neraca
                                        , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                        , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                from bpc_relakun x
                                inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_neraca
                               ) v on v.kode_neraca = x.kode_neraca
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
							union
							select '999999',  sum(nvl(v.actsd, 0)) as actsd,  sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis 
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterCFU2
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            having sum(nvl(v.actsd, 0)) <> 0
                            ";
					//error_log($sql);
				}else {
					$sql = " select x.kode_neraca, nvl(v.actsd, 0) as actsd, nvl(v.actcm, 0) as actcm
							from bpc_neraca x
                            left outer join (select x.kode_neraca
                                        , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                        , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                from bpc_relakun x
                                inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2 $filter3
                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_neraca
                               ) v on v.kode_neraca = x.kode_neraca
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
							union
							select '999999',  sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2 $filter3
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi'
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            having sum(nvl(v.actsd, 0)) <> 0
                            ";
				}
                //error_log("CFU => " . $row->kode_cfu .":". $sql);
				
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_neraca, $line);
				}
				$dataUbis->set($row->kode_cfu, $itemUbis);
			}
            
			if ($induk != "CFU0"){
				$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_cfu in ('CFUF','CFUG','CFUD') order by rowindex");
				while ($row = $rsUbis->FetchNextObject(false)){
					if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'IJ' ";
					}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
						$query = 1;
						$jenis2 = " and t.jenis = 'RL' ";
						if (strtoupper($tipe) == "NETT")
							$jenis2 .= " and t.kode_cfu = t.kode_cfu2";
					}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) == "CONSOL" && $tipe != ""){
						$query = 1;
						$jenis2 = " and t.jenis = 'AD' ";
					}else {
						$query = 0;
						$jenis2 = " and t.jenis ='-' ";
					} 
					$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
					
					{
						$sql = " select x.kode_neraca, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
								from bpc_neraca x
								left outer join (select x.kode_neraca
											, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
											, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
									from bpc_relakun x
									inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
									where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$induk'  
									group by x.kode_neraca
								) v on v.kode_neraca = x.kode_neraca
													
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca
								union
								select '999999',  sum(nvl(v.actsd, 0)) as actsd,  sum(nvl(v.actcm, 0)) as actcm
								from bpc_masakun a
								left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
								left outer join (select x.kode_akun
													, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
													, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
											from bpc_masakun x
											inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
											left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
											where b.kode_akun is null and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$induk'
											group by x.kode_akun
											having sum(nvl(t.nilai,0)) <> 0
								) v on v.kode_akun = a.kode_akun
								where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
								having sum(nvl(v.actsd, 0)) <> 0
								";
					}
					///error_log("Update ".  strtoupper($tipe) . " : " .  $row->kode_cfu  .":".  $sql);
					
					$rs = $this->dbLib->execute($sql);
					$itemUbis = new server_util_Map();

					while ($line = $rs->FetchNextObject(false)){
						$itemUbis->set($line->kode_neraca, $line);
					}
					$dataUbis->set($row->kode_cfu, $itemUbis);
				}
			}
        
            // /inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,1,length(t.kode_cfu)) $filterCons
			//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,1,length(t.kode_cfu)) $filterCons
            $sql = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(t.actsd,0) as actsd
													, nvl(t.actcm,0) as actcm
                                                     $field
											from bpc_neraca a
											left outer join (select x.kode_neraca
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU group by x.kode_neraca
                                                                ) t on t.kode_neraca = a.kode_neraca
                                         where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
										union 
										select '999999','UNMAPPED','-','BEBAN','-',0,'00',1000
                                            , sum(nvl(v.actsd, 0)) as actsd
											, sum(nvl(v.actcm, 0)) as actcm
                                             $field
                                        from bpc_masakun a
                                        left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun
                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                    from bpc_masakun x
                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis
                                                    left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                                    where  b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterCFU
                                                    group by x.kode_akun
                                                    having sum(nvl(t.nilai,0)) <> 0
                                        ) v on v.kode_akun = a.kode_akun
                                        where x.kode_akun is null and a.kode_lokasi ='$lokasi'
										 order by  rowindex";
            //error_log("LineUpCFU => " . $sql);
            $rs = $this->dbLib->execute($sql);
            $node = "";
		$rootNode = new server_util_NodeNRC("00");
		$this->sumHeader = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			if (strtoupper($row->jenis_akun) == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $tmp = $itemUbis->get($row->kode_neraca);
					$key = strtolower($key);
                    eval ("\$row->actsd_$key = \$tmp->actsd;");
					eval ("\$row->actcm_$key = \$tmp->actcm;");
				}
				$row->jenis = "INC";
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $tmp = $itemUbis->get($row->kode_neraca);
					$key = strtolower($key);
                    eval ("\$row->actsd_$key = \$tmp->actsd;");
					eval ("\$row->actcm_$key = \$tmp->actcm;");
				}
                $row->jenis = "EXP";
			}
			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$node->setData($row);
			if ($row->tipe == "SUMMARY")
				$this->sumHeader->set($row->kode_neraca, $node);

		}
		//error_log("Done Summmary");
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			//if ($lokasi == "10")
            {
				$this->summariesJejer($val);
				
				if ($val->data->sum_header != "-"){
					$summaryHeader = explode(",",$val->data->sum_header);

					foreach ($summaryHeader as $header){
						$nodeHeader = $this->sumHeader->get($header);
						if ($nodeHeader){
							foreach ($val->dataArray as $key => $value) {
								if ($key != "jenis_akun" && $key != "jenis" && $key != "kode_neraca" && $key != "nama" && $key != "tipe" && $key != "sum_header" && $key != "level_spasi" && $key != "rowindex"){
									$nodeHeader->dataArray[$key] += $value;
								}
							}
							$nodeHeader->data =(object) $nodeHeader->dataArray;
						}
					}
				}
			}
		}
		//error_log("Done Leveing");
		//perlu hitung ke summary
		$result = array('rs' => array('rows' => array() ) );
		$this->generateResultJejer($rootNode, $result);
        ///error_log("pembagi $pembagi ");
        //error_log(json_encode($result));
		return ($result);   
    }
    function getDataEXSUMCFUDetail($cfu, $model, $periode, $induk, $tipe,  $pembagi){
		try{
			global $satuan;
			$db = $this->getDB();
			$this->dbLib = $this->db;
			if (!isset($pembagi)) $pembagi = 1000000000;
			$satuan = $pembagi;
			$lokasi = "9000";
			$thn1 = substr($periode,0,4);
			$bln = substr($periode,4,2);
			$listCFUUbis = new server_util_Map();
			$rs = $db->execute("select * from bpc_cfu a 
									inner join exs_ubis b on b.kode_ubis = a.kode_ubis 
									where not a.kode_ubis_cons like 'TG%' 
										order by kode_cfu ");
			
			while ($row = $rs->FetchNextObject(false)){
				$listCFUUbis->set($row->kode_cfu, $row);
			}

			///$thn2 = floatval(substr($periode,0,4)) - 1;
			if (strtoupper($tipe) == "GROSS" || $tipe == ""){
				$addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
				$jenis = " and t.jenis in ('TB')";
				$filterBudget = " and not kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
			}else if (strtoupper($tipe) == "NETT"){
				$jenis = " and (t.jenis in ('TB') or (t.jenis = 'RL' and  t.kode_cfu = t.kode_cfu2 ) )";//,'AD'
				$filterBudget = " and not kode_cfu in ('CFUE')  ";
			}else {
				$jenis = "  ";
				$filterBudget = "  ";
			}
				if ($cfu != "CFU0"){
					$join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$cfu' ) ";
					$join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
																and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
					$filterCons = " and   z.kode_lokasi = t.kode_lokasi ";//instr(z.kode_ubis_cons,t.kode_ubis) > 0
					$forSubCFU = "and t.kode_cfu = substr('$cfu', 0,length(t.kode_cfu)) "; 
				}else {
					//$join1 = "";
					$join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi  ";
					$join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
																and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
					//$join2 = "left outer join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
					$filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0";
					$forSubCFU = " ";
				}
				$filterCFU = " and t.kode_lokasi in ( SELECT kode_lokasi
								FROM bpc_cfu
								start with kode_induk ='$cfu' or kode_cfu = '$cfu'
								CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU";

				$ubis = "";
				//$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$cfu'  order by rowindex");

				$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu t where kode_induk like '$cfu%' or kode_cfu in ('CFUF','CFUG','CFUD') order by rowindex");
				$sql = "";
				$field = "";
				$dataUbis = new server_util_Map();
				while ($row = $rsUbis->FetchNextObject(false)){
					/*if ($row->kode_cfu == 'CFUF'){
						$query = 1;
						$jenis2 = " and t.jenis = 'IJ' ";
					}else if ($row->kode_cfu == 'CFUG'){
						$query = 1;
						$jenis2 = " and t.jenis = 'RL' ";
					}else if ($row->kode_cfu == 'CFUD'){
						$query = 1;
						$jenis2 = " and t.jenis = 'AD' ";
					}else {
						$query = 0;
						$jenis2 = $jenis;
					} 
					*/
					if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'IJ' ";
					}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
						$query = 1;
						$jenis2 = " and t.jenis = 'RL' ";
						if (strtoupper($tipe) == "NETT")
							$jenis2  .= " and  t.kode_cfu = t.kode_cfu2  ";
					}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) == "CONSOL" && $tipe != ""){
						$query = 1;
						$jenis2 = " and t.jenis = 'AD' ";
						//if (strtoupper($tipe) == "NETT")
						//	$jenis2  .= " and t.kode_cfu = t.kode_cfu2 ";
					}else {
						$query = 0;
						$jenis2 = $jenis;
					} 
					$forSubCFU2 = " and t.kode_cfu = substr('$row->kode_cfu', 0,length(t.kode_cfu)) ";
					$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
					$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='". $row->kode_cfu. "' or kode_cfu = '". $row->kode_cfu. "'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU2";
					//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,1,length(t.kode_cfu)) $filterCons
					if ($query == 0){
						$row2 = $listCFUUbis->get($row->kode_cfu);
						if (isset($row2) ){
							$lokasi2 = $row2->kode_lokasi;
							$filterUbis = $this->getFilterUbis("z", $row2->kode_ubis, $lokasi2);
							$sql = " select x.kode_akun, sum(case '$bln' when '01' then jan
															when '02' then (feb  )
															when '03' then (mar  )
															when '04' then (apr  )
															when '05' then (mei )
															when '06' then (jun  )
															when '07' then (jul )
															when '08' then (aug )
															when '09' then (sep )
															when '10' then (okt )
															when '11' then (nop )
															when '12' then (des)
														end) as actcm, sum(case '$bln' when '01' then jan
															when '02' then (jan + feb  )
															when '03' then (jan + feb + mar  )
															when '04' then (jan + feb + mar + apr  )
															when '05' then (jan + feb + mar + apr + mei )
															when '06' then (jan + feb + mar + apr + mei + jun  )
															when '07' then (jan + feb + mar + apr + mei + jun + jul )
															when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
															when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
															when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
															when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
															when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
													end) as actsd
							from bpc_relakun x
							inner join exs_mactual y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' and jenis = 'S' and y.kode_lokasi = '$lokasi2'
							inner join exs_cc z on z.kode_cc = y.kode_cc and z.kode_lokasi = y.kode_lokasi  and $filterUbis
							where x.kode_fs = '$model'  and x.kode_lokasi = '$lokasi' group by x.kode_akun";
						}else 
							$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
								from bpc_relakun x
								left outer join (select x.kode_akun
																				, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
																				, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
																		from bpc_relakun x
																		inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
																		where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2
																		group by x.kode_akun
																	) v on v.kode_akun = x.kode_akun
													
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$induk'
								union
								select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
								from bpc_masakun a
								left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
								left outer join (select x.kode_akun
													, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
													, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
											from bpc_masakun x
											inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis
											left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
											where b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterCFU2 
											group by x.kode_akun
											having sum(nvl(t.nilai,0)) <> 0
								) v on v.kode_akun = a.kode_akun
								where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$induk'
								group by a.kode_akun
								having sum(nvl(v.actsd, 0)) <> 0";
					}else if ($cfu == "CFU0")
						$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
								from bpc_relakun x
								left outer join (select x.kode_akun
																				, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
																				, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
																		from bpc_relakun x
																		inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis2
																		where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
																		group by x.kode_akun
																	) v on v.kode_akun = x.kode_akun
													
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$induk'
								union
								select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
								from bpc_masakun a
								left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
								left outer join (select x.kode_akun
													, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
													, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
											from bpc_masakun x
											inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis2
											left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
											where b.kode_akun is null and x.kode_lokasi = '$lokasi'  
											group by x.kode_akun
											having sum(nvl(t.nilai,0)) <> 0
								) v on v.kode_akun = a.kode_akun
								where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$induk'
								group by a.kode_akun
								having sum(nvl(v.actsd, 0)) <> 0";
					//error_log("Detail CFU $sql");
					$rs = $this->dbLib->execute($sql);
					$itemUbis = new server_util_Map();

					while ($line = $rs->FetchNextObject(false)){
						$itemUbis->set($line->kode_akun, $line);
					}
					$dataUbis->set($row->kode_cfu, $itemUbis);
				}
				
				if ($cfu != "CFU0"){
					$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_cfu in ('CFUF','CFUG','CFUD') order by rowindex");
					while ($row = $rsUbis->FetchNextObject(false)){
						if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
							$query = 1;
							$jenis2 = " and t.jenis = 'IJ' ";
						}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
							$query = 1;
							$jenis2 = " and t.jenis = 'RL' ";
							if (strtoupper($tipe) == "NETT")
								$jenis2 .= " and t.kode_cfu = t.kode_cfu2";
						}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) == "CONSOL" && $tipe != ""){
							$query = 1;
							$jenis2 = " and t.jenis = 'AD' ";
						}else {
							$query = 0;
							$jenis2 = " and t.jenis ='-' ";
						} 
						$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
						
						{
							$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
								from bpc_relakun x
								left outer join (select x.kode_akun
																				, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
																				, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
																		from bpc_relakun x
																		inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
																		where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$cfu'
																		group by x.kode_akun
																	) v on v.kode_akun = x.kode_akun
													
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$induk'
								union
								select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd,  sum(nvl(v.actcm, 0)) as actcm
								from bpc_masakun a
								left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
								left outer join (select x.kode_akun
													, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
													, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
											from bpc_masakun x
											inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
											left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
											where b.kode_akun is null and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$cfu'
											group by x.kode_akun
											having sum(nvl(t.nilai,0)) <> 0
								) v on v.kode_akun = a.kode_akun
								where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$induk'
								group by a.kode_akun
								having sum(nvl(v.actsd, 0)) <> 0";
								
							
						}
						//error_log("detail akun " .  $row->kode_cfu ." => " . $sql);
						
						$rs = $this->dbLib->execute($sql);
						$itemUbis = new server_util_Map();

						while ($line = $rs->FetchNextObject(false)){
							$itemUbis->set($line->kode_akun, $line);
						}
						$dataUbis->set($row->kode_cfu, $itemUbis);
					}
				}
			
				$sql = "select distinct d.kode_akun as kode_neraca, left_pad(concat(d.kode_akun,concat('-',e.nama)),a.level_spasi + 1) as nama, a.tipe,e.jenis as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex
														, nvl(t.actsd,0) as actsd
														, nvl(t.actcm,0) as actcm
														$field
												from bpc_neraca a
												inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and a.kode_lokasi = d.kode_lokasi and d.kode_fs = a.kode_fs
												inner join bpc_masakun e on e.kode_akun = d.kode_akun and e.kode_lokasi = a.kode_lokasi 
												left outer join (select x.kode_akun
																				, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
																				, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
																		from bpc_relakun x
																		inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
																		where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU group by x.kode_akun
																	) t on t.kode_akun = d.kode_akun
												where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$induk' 
												
											union
											select a.kode_akun, concat(a.kode_akun, concat('-',a.nama)) as nama,'-',a.jenis,'-',0,'00',1000
												, sum(nvl(v.actsd, 0)) as actsd
												, sum(nvl(v.actcm, 0)) as actcm
												$field
											from bpc_masakun a
											left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
											left outer join (select x.kode_akun
																, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
																, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
														from bpc_masakun x
														inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
														left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
														where  b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterCFU
														group by x.kode_akun
														having sum(nvl(t.nilai,0)) <> 0
											) v on v.kode_akun = a.kode_akun
											where x.kode_akun is null and a.kode_lokasi ='$lokasi' and '999999' = '$induk'
											group by a.kode_akun, a.nama, a.jenis
											order by kode_neraca";
				//error_log("getDataEXSUMCFUDetail => " . $sql);
				$rs = $this->dbLib->execute($sql);
				$node = "";
			$rootNode = new server_util_NodeNRC("00");
			$this->sumHeader = new server_util_Map();
			$result = array('rs' => array('rows' => array() ) );
			while ($row = $rs->FetchNextObject(false)){
				if ($row->jenis_akun == "PENDAPATAN"){
					foreach ($dataUbis->getArray() as $key => $itemUbis){
						$key = strtolower($key);
						$tmp = $itemUbis->get($row->kode_neraca);
						if ($tmp == null){
							eval ("\$row->$key = 0;");
							eval ("\$row->actsd_$key = 0;");
							eval ("\$row->actcm_$key = 0;");
						}else {
							eval ("\$row->$key = round( \$tmp->aggsd / $pembagi) ;");
							eval ("\$row->actsd_$key = round(\$tmp->actsd / $pembagi) * -1;");
							eval ("\$row->actcm_$key = round(\$tmp->actcm / $pembagi) * -1;");
							
						}
						
					}
					$row->jenis = "INC";
					$row->actsd = round($row->actsd / $pembagi) * -1;
					$row->actcm = round($row->actcm / $pembagi) * -1;
					//error_log("PDRPT " . json_encode($row));
				}else {
					foreach ($dataUbis->getArray() as $key => $itemUbis){
						$key = strtolower($key);
						$tmp = $itemUbis->get($row->kode_neraca);
						if ($tmp == null){
							eval ("\$row->$key = 0;");
							eval ("\$row->actsd_$key = 0;");
							eval ("\$row->actcm_$key = 0;");
						}else {
							eval ("\$row->$key = round(\$tmp->aggsd / $pembagi);");
							eval ("\$row->actsd_$key = round(\$tmp->actsd / $pembagi);");
							eval ("\$row->actcm_$key = round(\$tmp->actcm / $pembagi);");
						}
					}
					$row->aggsd = $row->aggsd  / $pembagi;
					$row->actsd = round($row->actsd / $pembagi);
					$row->actcm = round($row->actcm / $pembagi);
					$row->jenis = "EXP";
				}
					//if ($row->aggsd != 0 || $row->actsd != 0)
				
				//a.kode_neraca, d.kode_akun, e.nama as nama, a.tipe, '-' as jenis, upper(e.jenis) as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex
				$allZero = true;
				$item = (array)$row;
				//error_log("$row->kode_neraca => " . json_encode($item));
				foreach ($item as $key => $value) {
					if ($key != "kode_neraca" && $key != "kode_akun" && $key != "nama" && $key != "tipe" && $key != "jenis_akun" && $key != "sum_header" && $key != "level_spasi" && $key != "kode_induk" && $key != "rowindex"){
						//error_log("getDataEXSUMCFUDetail $key = $value;");
						if (abs($value) != 0){
							$allZero = false;
						}
					}
						
				}
				if (!$allZero)
					$result["rs"]["rows"][] = (array)$row;
				
			}
			//error_log("result " . print_r($result, true));
			//error_log(json_encode($result));
			return ($result);   
		}catch(Exception $e){
			console.log($e->getMessage());
		}
    }
    function getDataEXSUMCFUDetailReport($cfu,$model,$periode, $tipe, $pembagi){
        
        global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = $tahun;//substr($periode,0,4);
		///$thn2 = floatval(substr($periode,0,4)) - 1;
        
            $ubis = "";
			$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$cfu' order by rowindex");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as ". $row->kode_cfu. "";
                $sql = " select x.kode_akun,  sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
							from bpc_relakun x
                            inner join bpc_mapakun z on z.akun_konsol = x.kode_akun 
							inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$row->kode_cfu' or t.kode_cfu = '$row->kode_cfu' ) 
                            where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_akun";
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_akun, $line->aggthn);
				}
				$dataUbis->set($row->kode_cfu, $itemUbis);
			}
            if ($cfu != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$cfu' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
            }else {
                $join1 = "";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
            }
        
            $sql = "select distinct a.kode_neraca, c.kode_akun,left_pad(c.nama,a.level_spasi + 1) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(c.nilai, 0) as penetapan, (nvl(b.aggthn,0)) as aggthn,nvl(c.nilai, 0) - (nvl(b.aggthn,0))   as selisih $field
											from bpc_neraca a
                                            inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and d.kode_fs = a.kode_fs and d.kode_lokasi = a.kode_lokasi
                                            inner join bpc_masakun c on c.kode_akun = d.kode_akun and c.kode_lokasi = a.kode_lokasi 
											left outer join (select x.kode_neraca, x.kode_akun, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
															from bpc_relakun x
															inner join bpc_mapakun z on z.akun_konsol = x.kode_akun 
                                                            $join1
							                                inner join bpc_mbudget_rkm y on y.kode_akun = z.kode_akun and y.tahun = '$thn1' and jenis = 'S' and z.kode_lokasi = y.kode_lokasi
															$join2
															where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
                                                            group by x.kode_neraca, x.kode_akun) b on b.kode_neraca = a.kode_neraca and b.kode_akun = c.kode_akun 
											left outer join bpc_penetapan c on c.kode_lokasi = '$lokasi' and c.kode_neraca = a.kode_neraca and c.tahun = '$thn1' and c.kode_ubis = 'NAS' and a.kode_fs = c.model
										where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
										order by c.kode_akun";
            //error_log($sql);
            $rs = $this->dbLib->execute($sql);
            $node = "";
		$result = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
            if ($row->jenis_akun == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $key = strtoupper($key);
					eval ("\$tmp = \$itemUbis->get(\$row->kode_akun) * -1 ;");
                    if ($tmp == null)
                        eval ("\$row->$key = 0;" );
                    else eval ("\$row->$key = $tmp;" );
				}
				$row->penetapan = $row->penetapan * -1  ;
				$row->aggthn = $row->aggthn * -1 ;
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $key = strtoupper($key);
					eval ("\$tmp = \$itemUbis->get(\$row->kode_akun);");
                    if ($tmp == null)
                        eval ("\$row->$key = 0;" );
                    else eval ("\$row->$key = $tmp;" );
				}
			}
            if ($row->aggthn != 0){
                $tmp = $result->get($row->kode_neraca);
                if ($tmp == null){
                    $tmp = new server_util_arrayList();
                }
                //error_log(json_encode($row));
                $tmp->add($row);
                $result->set($row->kode_neraca, $tmp);    
            }
			
		}
		
		return ($result);   
    }
	function getDataAkunJejerCFU($induk,$model, $periode, $tipe, $pembagi){
        global $satuan;
		$db = $this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		$listCFUUbis = new server_util_Map();
		$rs = $db->execute("select * from bpc_cfu a 
									inner join exs_ubis b on b.kode_ubis = a.kode_ubis 
									where not a.kode_ubis_cons like 'TG%' 
									order by kode_cfu ");
		
		while ($row = $rs->FetchNextObject(false)){
			$listCFUUbis->set($row->kode_cfu, $row);
		}

		///$thn2 = floatval(substr($periode,0,4)) - 1;
        if (strtoupper($tipe) == "GROSS" || $tipe == ""){
            $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
            $jenis = " and t.jenis in ('TB')";
            $filterBudget = " and not kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
        }else if (strtoupper($tipe) == "NETT"){
            $jenis = " and (t.jenis in ('TB') or (t.jenis = 'RL' and  t.kode_cfu = t.kode_cfu2 ) )";//,'AD'
            $filterBudget = " and not kode_cfu in ('CFUE')  ";
        }else {
            $jenis = "  ";
            $filterBudget = "  ";
        }
        	if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $filterCons = " and instr(z.kode_ubis_cons,t.kode_ubis) > 0";//instr(z.kode_ubis_cons,t.kode_ubis) > 0
				$forSubCFU = "and t.kode_cfu = substr('$induk', 0,length(t.kode_cfu)) "; 
            }else {
                //$join1 = "";
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi  ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                //$join2 = "left outer join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
                $filterCons = "and instr(z.kode_ubis_cons,t.kode_ubis) > 0";
				$forSubCFU = " ";
            }
			
			$filterCFU = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU ";
            $ubis = "";
			//$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$induk' or kode_cfu in ('CFUF','CFUD','CFUG')  order by rowindex");
			$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu t where kode_induk like '$induk%'  or kode_cfu in ('CFUF','CFUG','CFUD') order by rowindex");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
					if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'IJ' ";
					}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
						$query = 1;
						$jenis2 = " and t.jenis = 'RL' ";
						if (strtoupper($tipe) == "NETT")
							$jenis2 .= " and t.kode_cfu = t.kode_cfu2";
					}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) == "CONSOL" && $tipe != ""){
						$query = 1;
						$jenis2 = " and t.jenis = 'AD' ";
					}else {
						$query = 0;
						$jenis2 = $jenis ;//" and t.jenis ='-' ";
					} 
				//$field .= ", 0  as actsd_". $row->kode_cfu. " ";
				$forSubCFU2 = "and t.kode_cfu = substr('$row->kode_cfu', 0,length(t.kode_cfu)) ";

				$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='". $row->kode_cfu. "' or kode_cfu = '". $row->kode_cfu. "'
							CONNECT BY kode_induk = PRIOR kode_cfu)$forSubCFU2";

				//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,1,length(t.kode_cfu)) $filterCons
				if ($query == 0){
					$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";

					$row2 = $listCFUUbis->get($row->kode_cfu);
					if (isset($row2) ){
						error_log("Enter Here $row2->kode_ubis");
						$lokasi2 = $row2->kode_lokasi;
						$filterUbis = $this->getFilterUbis("z", $row2->kode_ubis, $lokasi2);
						$sql = " select x.kode_akun, sum(case '$bln' when '01' then jan
														 when '02' then (feb  )
														 when '03' then (mar  )
														 when '04' then (apr  )
														 when '05' then (mei )
														 when '06' then (jun  )
														 when '07' then (jul )
														 when '08' then (aug )
														 when '09' then (sep )
														 when '10' then (okt )
														 when '11' then (nop )
														 when '12' then (des)
													end) as actcm
													, sum(case '$bln' when '01' then jan
														 when '02' then (jan + feb  )
														 when '03' then (jan + feb + mar  )
														 when '04' then (jan + feb + mar + apr  )
														 when '05' then (jan + feb + mar + apr + mei )
														 when '06' then (jan + feb + mar + apr + mei + jun  )
														 when '07' then (jan + feb + mar + apr + mei + jun + jul )
														 when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
														 when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
														 when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
														 when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
														 when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
												end) as actsd
						from bpc_relakun x
						inner join exs_mactual y on y.kode_akun = x.kode_akun and y.tahun = '$thn1' and jenis = 'S' and y.kode_lokasi = '$lokasi2'
						inner join exs_cc z on z.kode_cc = y.kode_cc and z.kode_lokasi = y.kode_lokasi  and $filterUbis
						where x.kode_fs = '$model'  and x.kode_lokasi = '$lokasi' group by x.kode_akun";
					}else 
						error_log("Enter Here $row->kode_cfu");
						$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
							from bpc_relakun x
                            left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterCFU2 
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0";
				}else if ($induk == "CFU0") {
					$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
				
					$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
							from bpc_relakun x
                            left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'     group by x.kode_akun
                                                                ) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis2
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi'  
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0";
					//error_log($sql);
				}
				//error_log("Sub CFU $sql");
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_akun, $line);
				}
				$dataUbis->set($row->kode_cfu, $itemUbis);
			}

			if ($induk != "CFU0"){
				
				$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_cfu in ('CFUF','CFUG','CFUD') order by rowindex");
				while ($row = $rsUbis->FetchNextObject(false)){
					if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'IJ' ";
					}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
						$query = 1;
						$jenis2 = " and t.jenis = 'RL' ";
						if (strtoupper($tipe) == "NETT")
							$jenis2 .= " and t.kode_cfu = t.kode_cfu2";
					}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) <> "GROSS" && $tipe != ""){
						$query = 1;
						$jenis2 = " and t.jenis = 'AD' ";
					}else {
						$query = 0;
						$jenis2 = " and t.jenis ='-' ";
					} 
					$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
					
					{
						$sql = " select  x.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
								from bpc_relakun x
								left outer join (select x.kode_akun
											, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
											, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
									from bpc_relakun x
									inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
									where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$induk'  
									group by x.kode_akun
								) v on v.kode_akun = x.kode_akun
													
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_akun
							union 
								select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis2
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi'  and t.kode_cfu = '$induk'  
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0
								";
					}
					
					
					$rs = $this->dbLib->execute($sql);
					$itemUbis = new server_util_Map();

					while ($line = $rs->FetchNextObject(false)){
						$itemUbis->set($line->kode_akun, $line);
					}
					$dataUbis->set($row->kode_cfu, $itemUbis);
				}
			}
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
            }else {
                //$join1 = "";
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi ";//
                //$join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
            }
            $sql = "select distinct a.kode_neraca, d.kode_akun, e.nama as nama, a.tipe, '-' as jenis, upper(e.jenis) as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex 
                                        , nvl(t.actsd,0) as actsd
										, nvl(t.actcm,0) as actcm
                                                    $field
											from bpc_neraca a
                                            inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and a.kode_lokasi = d.kode_lokasi and d.kode_fs = a.kode_fs
                                            inner join bpc_masakun e on e.kode_akun = d.kode_akun and e.kode_lokasi = a.kode_lokasi 
											left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU group by x.kode_akun
                                                                ) t on t.kode_akun = d.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi'
                                        union
                                        select '999999', a.kode_akun, concat(a.kode_akun, concat('-',a.nama)) as nama,'-','-',a.jenis,'-',0,'00',1000
                                            , sum(nvl(v.actsd, 0)) as actsd
											, sum(nvl(v.actcm, 0)) as actcm
                                              $field
                                        from bpc_masakun a
                                        left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun
                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                    from bpc_masakun x
                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                    left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                                    where  b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterCFU
                                                    group by x.kode_akun
                                        ) v on v.kode_akun = a.kode_akun
                                        where x.kode_akun is null and a.kode_lokasi ='$lokasi' and substr(a.kode_akun,1,1) in ('4','5','6','7','8')
                                        group by a.kode_akun, a.nama, a.jenis
                                        order by kode_neraca";
            //error_log("Deteail akun " . $sql );
			$rs = $this->dbLib->execute($sql);
            $node = "";
		    $result = new server_util_Map();        
            $neraca = "";
			$total = 0;
            while ($row = $rs->FetchNextObject(false)){
				//error_log(json_encode($row));
				
                if ($row->jenis_akun == "PENDAPATAN"){
                    foreach ($dataUbis->getArray() as $key => $itemUbis){
                        $tmp = $itemUbis->get($row->kode_akun);
						$key = strtolower($key);
						if ($tmp == null){
							eval("\$row->actsd_$key = 0;");
							eval("\$row->actcm_$key = 0;");
						}else {
							eval ("\$row->actsd_$key = round($tmp->actsd / $pembagi) * -1;");
							eval ("\$row->actcm_$key = round($tmp->actcm / $pembagi) * -1;");
						}
                    }
                    $row->actsd = round($row->actsd / $pembagi) * -1;    
					$row->actcm = round($row->actcm / $pembagi) * -1;    
                    $row->jenis = "INC";
                }else {
                    foreach ($dataUbis->getArray() as $key => $itemUbis){
                        $tmp = $itemUbis->get($row->kode_akun);
						$key = strtolower($key);
						if ($tmp == null){
							eval("\$row->actsd_$key = 0;");
							eval("\$row->actcm_$key = 0;");
						}else {
                        	eval ("\$row->actsd_$key = round($tmp->actsd / $pembagi);");
							eval ("\$row->actcm_$key = round($tmp->actcm / $pembagi);");
						}
                    }
					$row->actsd = round($row->actsd / $pembagi );
					$row->actcm = round($row->actcm / $pembagi );
                    $row->jenis = "EXP";
                }
                

                if ($neraca != $row->kode_neraca){
                    $neraca = $row->kode_neraca;
                    $item = array();
                }
				$allZero = true;
				$rowItem = (array)$row;
				
				//error_log("Detail Akun " . print_r($rowItem, true));
				//a.kode_neraca, d.kode_akun, e.nama as nama, a.tipe, '-' as jenis, upper(e.jenis) as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex
				foreach ($rowItem as $key => $value) {
					if ($key != "kode_neraca" && $key != "kode_akun" && $key != "nama" && $key != "tipe" && $key != "jenis_akun" && $key != "sum_header" && $key != "level_spasi" && $key != "kode_induk" && $key != "rowindex"){
						if ($value != 0)
							$allZero = false;
					}
						
				}
				if (!$allZero) {
					$item[] = (array) $row;
                	$result->set($neraca, $item);
				}
                
			}
			
            return $result;
    }
    function downloadJejerDataCFU($induk, $model, $periode, $tipe, $pembagi){
		$this->getDb();
		
		//if (!isset($induk) || $induk == "") $induk = "CFU0";
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("CFU")
						 ->setSubject("CFU")
						 ->setDescription("Jejer CFU ")
						  ->setKeywords("Jejer CFU")
							 ->setCategory("CFU");
 
        $data = $this->getDataEXSUMCFU($induk, $model, $periode, $tipe, $pembagi);					
		$akun = $this->getDataAkunJejerCFU($induk, $model,$periode, $tipe, $pembagi);
			
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
        
        $column = array("Account","Uraian","Tipe","Level","TOTAL");
		$field = array("kode_neraca","nama","jenis","level_spasi","actsd");
		$field2 = array("kode_neraca","nama","jenis","level_spasi","actcm");
        
		if ($induk == "CFU0")
			$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$induk' or kode_cfu in ('CFUF','CFUD','CFUG') order by rowindex");
        else 
			$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu t where kode_induk like '$induk%' or kode_cfu in ('CFUF','CFUD','CFUG')  order by rowindex");

		$field = array("kode_neraca","nama","jenis","level_spasi","actsd");
        while ($row = $rsUbis->FetchNextObject(false)){
            $column[] = $row->nama;
            $field[] = "actsd_". strtolower($row->kode_cfu);
			$field2[] = "actcm_". strtolower($row->kode_cfu);
        }
		
		//error_log("donloadXLS - select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu t where kode_induk like '$induk%' or kode_cfu in ('CFUF','CFUD','CFUG')  order by rowindex");
		$col = 0;
		$row = 1;
		
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        try{
            
			foreach ($data["rs"]["rows"] as $val){
                $row++;
                $col = 0;
                foreach ($field as $f){
                    if ($f == "nama")
                        $sheet->setCellValueByColumnAndRow($col, $row, str_replace("&nbsp;"," ",$val[$f]) );    
                    else 
                        $sheet->setCellValueByColumnAndRow($col, $row, $val[$f]);    
                    $col++;
                }
				
                $listAkun = $akun->get($val["kode_neraca"]);
                foreach ($listAkun as $item){
                    $row++;
                    $col = 0;
                    foreach ($field as $i => $f){
                        if ($i == 0)
                            $sheet->setCellValueByColumnAndRow($col, $row, $item["kode_akun"]);    
                        else
                            $sheet->setCellValueByColumnAndRow($col, $row, $item[$f]);    
                        $col++;
                    }
                }
				
			}
			
			
        }catch(Exception $e){
            error_log($e->getMessage);
        }
        
 		$sheet->setTitle("YTD");


		//CM
		$sheet = $objPHPExcel->createSheet();
		$col = 0;
		$row = 1;
		
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        try{
            
			foreach ($data["rs"]["rows"] as $val){
                $row++;
                $col = 0;
                foreach ($field2 as $f){
                    if ($f == "nama")
                        $sheet->setCellValueByColumnAndRow($col, $row, str_replace("&nbsp;"," ",$val[$f]) );    
                    else 
                        $sheet->setCellValueByColumnAndRow($col, $row, $val[$f]);    
                    $col++;
                }
				
                $listAkun = $akun->get($val["kode_neraca"]);
                foreach ($listAkun as $item){
                    $row++;
                    $col = 0;
                    foreach ($field2 as $i => $f){
                        if ($i == 0)
                            $sheet->setCellValueByColumnAndRow($col, $row, $item["kode_akun"]);    
                        else
                            $sheet->setCellValueByColumnAndRow($col, $row, $item[$f]);    
                        $col++;
                    }
                }
				
			}
			
			
        }catch(Exception $e){
            error_log($e->getMessage);
        }
        
 		$sheet->setTitle("CM");

		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 		// Save Excel 2007 file
		$namafile = MD5(date("r"));
		//error_log("Done Generate CFU line $namafile");
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/list_cfu_$namafile.xlsx");
 		
		return "/list_cfu_$namafile.xlsx";
	}
	
	//-- Jejer Actual CFU Elim
	function getDataEXSUMCFUElim($induk, $model, $periode, $tipe, $elimType, $pembagi){
        global $satuan;
        
		$db = $this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
        if ($induk == "") $induk = $this->cfu;//"CFU0"
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		
		$listCFUUbis = new server_util_Map();
		$rs = $db->execute("select * from bpc_cfu a 
									inner join exs_ubis b on b.kode_ubis = a.kode_ubis 
									where not a.kode_ubis_cons like 'TG%' order by kode_cfu ");
		
		while ($row = $rs->FetchNextObject(false)){
			$listCFUUbis->set($row->kode_cfu, $row);
		}

		if (strtoupper($tipe) == "NETT"){
            $jenis = " and t.kode_cfu = t.kode_cfu2";///,'AD' 
            $filterBudget = " ";
        }else {
            $jenis = "  ";
			//$jenis = " and t.jenis in ('TB') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";
            $filterBudget = "  ";
		}
		if (strtolower( $elimType ) == "ijpa") 
			$elimType = "IJ";
		else if (strtolower( $elimType ) == "adjusment") 
			$elimType = "AD";
		else $elimType = "RL";

			$jenis .= " and t.jenis = '$elimType' ";
        	if ($induk != "CFU0"){
                $filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0 ";//instr(z.kode_ubis_cons,t.kode_ubis) > 0
				$forSubCFU = "and ( t.kode_cfu = substr('$induk', 0,length(t.kode_cfu)) )"; 
            }else {
                $filterCons = "and  instr(z.kode_ubis_cons,t.kode_ubis) > 0 ";
				$forSubCFU = " ";
            }

			$filterCFU = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU";

            $ubis = "";
			/*
			 where t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' 
							CONNECT BY kode_induk = PRIOR kode_cfu) 
			*/
			if (strtoupper($tipe) == "NETT"){
				$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu t where kode_induk like '$induk' or kode_cfu in ('CFUF','CFUG','CFUD')   order by rowindex");
				$addTableCFU = "inner join (select distinct a.kode_sub, a.kode_cfu, a.kode_lokasi ,  c.kode_cfu as subcfu
								from bpc_sap_mapba_lawan a 
								inner join bpc_cfu b on b.SUM_HEADER = a.kode_cfu 
								left outer join bpc_cfu c on b.kode_cfu = substr(c.kode_cfu,1,length(b.kode_cfu)) and c.kode_lokasi = a.kode_lokasi
								where a.kode = '02' ) y on substr(y.subcfu,1,4) = t.kode_cfu2 and substr(t.kode_pc, 5, 3) = y.kode_sub 
								";
			}else {
				$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu t where kode_induk like 'CFU0' or kode_cfu in ('CFUF','CFUG','CFUD')   order by rowindex");
				$addTableCFU = "";
			}
				
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				$filter3 = "";
				if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
					$query = 1;
					$jenis2 = $jenis;
				}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
					$query = 1;
					$jenis2 = $jenis;
					if (strtoupper($tipe) == "NETT")
						$jenis2  .= " and  t.kode_cfu = t.kode_cfu2  ";
				}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) == "CONSOL" && $tipe != ""){
					$query = 1;
					$jenis2 = " and t.jenis = 'AD' ";
					//if (strtoupper($tipe) == "NETT")
					//	$jenis2  .= " and t.kode_cfu = t.kode_cfu2 ";
				}else {
					$query = 0;
					$jenis2 = $jenis;
				} 

			
				

				$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
				if ($induk == "CFU0"){
					$forSubCFU2 = " and t.kode_cfu = substr('$row->kode_cfu', 0,length(t.kode_cfu)) ";
					$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='". $row->kode_cfu. "' or kode_cfu = '". $row->kode_cfu. "'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU2";
				}else {
					$forSubCFU2 = " and t.kode_cfu2 = substr('$row->kode_cfu', 0,length(t.kode_cfu2)) ";
					$forSubCFU3 = " and t.kode_cfu = substr('$induk', 0,length(t.kode_cfu)) ";
					$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
						FROM bpc_cfu
						start with kode_induk ='". $induk. "' or kode_cfu = '". $induk. "'
						CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU2 $forSubCFU3";
				}
				//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,1,length(t.kode_cfu)) $filterCons
                //inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,1,length(t.kode_cfu)) $filterCons
                                        
				if ($query == 0) {
					//berarti ubis
					if (strtoupper($tipe) == "NETT"){
						$addFilterLawan = $addTableCFU . " and y.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='". $row->kode_cfu. "' or kode_cfu = '". $row->kode_cfu. "'
							CONNECT BY kode_induk = PRIOR kode_cfu) ";
					}
					$sql = " select x.kode_neraca, nvl(v.actsd, 0) as actsd, nvl(v.actcm, 0) as actcm
							from bpc_neraca x
                            left outer join (select x.kode_neraca
                                        , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                        , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                from bpc_relakun x
								inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
								$addFilterLawan
                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_neraca
                               ) v on v.kode_neraca = x.kode_neraca
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
							union
							select '999999',  sum(nvl(v.actsd, 0)) as actsd,  sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
										inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis 
										$addFilterLawan
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterCFU2
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            having sum(nvl(v.actsd, 0)) <> 0
                            ";
					//error_log($sql);
				}else {
					$sql = " select x.kode_neraca, nvl(v.actsd, 0) as actsd, nvl(v.actcm, 0) as actcm
							from bpc_neraca x
                            left outer join (select x.kode_neraca
                                        , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                        , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                from bpc_relakun x
                                inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2 $filter3
                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_neraca
                               ) v on v.kode_neraca = x.kode_neraca
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
							union
							select '999999',  sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2 $filter3
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi'
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            having sum(nvl(v.actsd, 0)) <> 0
                            ";
				}
                //error_log("CFU => " . $row->kode_cfu .":". $sql);
				
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_neraca, $line);
				}
				$dataUbis->set($row->kode_cfu, $itemUbis);
			}
            
			if ($induk != "CFU0"){
				$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_cfu in ('CFUF','CFUG','CFUD') order by rowindex");
				while ($row = $rsUbis->FetchNextObject(false)){
					if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'IJ' ";
					}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
						$query = 1;
						$jenis2 = " and t.jenis = 'RL' ";
						if (strtoupper($tipe) == "NETT")
							$jenis2 .= " and t.kode_cfu = t.kode_cfu2";
					}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) == "CONSOL" && $tipe != ""){
						$query = 1;
						$jenis2 = " and t.jenis = 'AD' ";
					}else {
						$query = 0;
						$jenis2 = " and t.jenis ='-' ";
					} 
					$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
					
					{
						$sql = " select x.kode_neraca, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
								from bpc_neraca x
								left outer join (select x.kode_neraca
											, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
											, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
									from bpc_relakun x
									inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
									where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$induk'  
									group by x.kode_neraca
								) v on v.kode_neraca = x.kode_neraca
													
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca
								union
								select '999999',  sum(nvl(v.actsd, 0)) as actsd,  sum(nvl(v.actcm, 0)) as actcm
								from bpc_masakun a
								left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
								left outer join (select x.kode_akun
													, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
													, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
											from bpc_masakun x
											inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
											left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
											where b.kode_akun is null and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$induk'
											group by x.kode_akun
											having sum(nvl(t.nilai,0)) <> 0
								) v on v.kode_akun = a.kode_akun
								where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
								having sum(nvl(v.actsd, 0)) <> 0
								";
					}
					///error_log("Update ".  strtoupper($tipe) . " : " .  $row->kode_cfu  .":".  $sql);
					
					$rs = $this->dbLib->execute($sql);
					$itemUbis = new server_util_Map();

					while ($line = $rs->FetchNextObject(false)){
						$itemUbis->set($line->kode_neraca, $line);
					}
					$dataUbis->set($row->kode_cfu, $itemUbis);
				}
			}
        
            // /inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,1,length(t.kode_cfu)) $filterCons
			//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,1,length(t.kode_cfu)) $filterCons
            $sql = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(t.actsd,0) as actsd
													, nvl(t.actcm,0) as actcm
                                                     $field
											from bpc_neraca a
											left outer join (select x.kode_neraca
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU group by x.kode_neraca
                                                                ) t on t.kode_neraca = a.kode_neraca
                                         where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
										union 
										select '999999','UNMAPPED','-','BEBAN','-',0,'00',1000
                                            , sum(nvl(v.actsd, 0)) as actsd
											, sum(nvl(v.actcm, 0)) as actcm
                                             $field
                                        from bpc_masakun a
                                        left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun
                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                    from bpc_masakun x
                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis
                                                    left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                                    where  b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterCFU
                                                    group by x.kode_akun
                                                    having sum(nvl(t.nilai,0)) <> 0
                                        ) v on v.kode_akun = a.kode_akun
                                        where x.kode_akun is null and a.kode_lokasi ='$lokasi'
										 order by  rowindex";
            //error_log("LineUpCFU => " . $sql);
            $rs = $this->dbLib->execute($sql);
            $node = "";
		$rootNode = new server_util_NodeNRC("00");
		$this->sumHeader = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			if (strtoupper($row->jenis_akun) == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $tmp = $itemUbis->get($row->kode_neraca);
					$key = strtolower($key);
                    eval ("\$row->actsd_$key = \$tmp->actsd;");
					eval ("\$row->actcm_$key = \$tmp->actcm;");
				}
				$row->jenis = "INC";
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $tmp = $itemUbis->get($row->kode_neraca);
					$key = strtolower($key);
                    eval ("\$row->actsd_$key = \$tmp->actsd;");
					eval ("\$row->actcm_$key = \$tmp->actcm;");
				}
                $row->jenis = "EXP";
			}
			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$node->setData($row);
			if ($row->tipe == "SUMMARY")
				$this->sumHeader->set($row->kode_neraca, $node);

		}
		//error_log("Done Summmary");
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			//if ($lokasi == "10")
            {
				$this->summariesJejer($val);
				
				if ($val->data->sum_header != "-"){
					$summaryHeader = explode(",",$val->data->sum_header);

					foreach ($summaryHeader as $header){
						$nodeHeader = $this->sumHeader->get($header);
						if ($nodeHeader){
							foreach ($val->dataArray as $key => $value) {
								if ($key != "jenis_akun" && $key != "jenis" && $key != "kode_neraca" && $key != "nama" && $key != "tipe" && $key != "sum_header" && $key != "level_spasi" && $key != "rowindex"){
									$nodeHeader->dataArray[$key] += $value;
								}
							}
							$nodeHeader->data =(object) $nodeHeader->dataArray;
						}
					}
				}
			}
		}
		//error_log("Done Leveing");
		//perlu hitung ke summary
		$result = array('rs' => array('rows' => array() ) );
		$this->generateResultJejer($rootNode, $result);
        ///error_log("pembagi $pembagi ");
        //error_log(json_encode($result));
		return ($result);   
    }
    function getDataEXSUMCFUElimDetail($cfu, $model, $periode, $induk, $tipe, $elimType, $pembagi){
		try{
			global $satuan;
			$db = $this->getDB();
			$this->dbLib = $this->db;
			if (!isset($pembagi)) $pembagi = 1000000000;
			$satuan = $pembagi;
			$lokasi = "9000";
			$thn1 = substr($periode,0,4);
			$bln = substr($periode,4,2);
			$listCFUUbis = new server_util_Map();
			$rs = $db->execute("select * from bpc_cfu a 
									inner join exs_ubis b on b.kode_ubis = a.kode_ubis 
									where not a.kode_ubis_cons like 'TG%' 
										order by kode_cfu ");
			
			while ($row = $rs->FetchNextObject(false)){
				$listCFUUbis->set($row->kode_cfu, $row);
			}

			if (strtoupper($tipe) == "NETT"){
				$jenis = " and t.kode_cfu = t.kode_cfu2";///,'AD' 
				$filterBudget = " ";
			}else {
				$jenis = "  ";
				//$jenis = " and t.jenis in ('TB') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";
				$filterBudget = "  ";
			}
			if (strtolower( $elimType ) == "ijpa") 
				$elimType = "IJ";
			else if (strtolower( $elimType ) == "adjusment") 
				$elimType = "AD";
			else $elimType = "RL";
	

			$jenis .= " and t.jenis = '$elimType' ";
				if ($cfu != "CFU0"){
					$filterCons = " and   z.kode_lokasi = t.kode_lokasi ";//instr(z.kode_ubis_cons,t.kode_ubis) > 0
					$forSubCFU = "and t.kode_cfu = substr('$cfu', 0,length(t.kode_cfu)) "; 
				}else {
					$filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0";
					$forSubCFU = " ";
				}
				$filterCFU = " and t.kode_lokasi in ( SELECT kode_lokasi
								FROM bpc_cfu
								start with kode_induk ='$cfu' or kode_cfu = '$cfu'
								CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU";

				$ubis = "";
				//$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$cfu'  order by rowindex");

				if (strtoupper($tipe) == "NETT"){
					$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu t where kode_induk like '$induk' or kode_cfu in ('CFUF','CFUG','CFUD')   order by rowindex");
					$addTableCFU = "inner join (select distinct a.kode_sub, a.kode_cfu, a.kode_lokasi ,  c.kode_cfu as subcfu
									from bpc_sap_mapba_lawan a 
									inner join bpc_cfu b on b.SUM_HEADER = a.kode_cfu 
									left outer join bpc_cfu c on b.kode_cfu = substr(c.kode_cfu,1,length(b.kode_cfu)) and c.kode_lokasi = a.kode_lokasi
									where a.kode = '02' ) y on substr(y.subcfu,1,4) = t.kode_cfu2 and substr(t.kode_pc, 5, 3) = y.kode_sub 
									";
				}else {
					$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu t where kode_induk like 'CFU0' or kode_cfu in ('CFUF','CFUG','CFUD')   order by rowindex");
					$addTableCFU = "";
				}
				$sql = "";
				$field = "";
				$dataUbis = new server_util_Map();
				while ($row = $rsUbis->FetchNextObject(false)){
					/*if ($row->kode_cfu == 'CFUF'){
						$query = 1;
						$jenis2 = " and t.jenis = 'IJ' ";
					}else if ($row->kode_cfu == 'CFUG'){
						$query = 1;
						$jenis2 = " and t.jenis = 'RL' ";
					}else if ($row->kode_cfu == 'CFUD'){
						$query = 1;
						$jenis2 = " and t.jenis = 'AD' ";
					}else {
						$query = 0;
						$jenis2 = $jenis;
					} 
					*/
					if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'IJ' ";
					}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
						$query = 1;
						$jenis2 = " and t.jenis = 'RL' ";
						if (strtoupper($tipe) == "NETT")
							$jenis2  .= " and  t.kode_cfu = t.kode_cfu2  ";
					}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) == "CONSOL" && $tipe != ""){
						$query = 1;
						$jenis2 = " and t.jenis = 'AD' ";
						//if (strtoupper($tipe) == "NETT")
						//	$jenis2  .= " and t.kode_cfu = t.kode_cfu2 ";
					}else {
						$query = 0;
						$jenis2 = $jenis;
					} 
					$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
					if ($induk == "CFU0"){
						$forSubCFU2 = " and t.kode_cfu = substr('$row->kode_cfu', 0,length(t.kode_cfu)) ";
						$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
								FROM bpc_cfu
								start with kode_induk ='". $row->kode_cfu. "' or kode_cfu = '". $row->kode_cfu. "'
								CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU2";
					}else {
						$forSubCFU2 = " and t.kode_cfu2 = substr('$row->kode_cfu', 0,length(t.kode_cfu2)) ";
						$forSubCFU3 = " and t.kode_cfu = substr('$induk', 0,length(t.kode_cfu)) ";
						$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='". $induk. "' or kode_cfu = '". $induk. "'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU2 $forSubCFU3";
					}
					//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,1,length(t.kode_cfu)) $filterCons
					if ($query == 0){
						if (strtoupper($tipe) == "NETT"){
							$addFilterLawan = $addTableCFU . " and y.kode_lokasi in ( SELECT kode_lokasi
								FROM bpc_cfu
								start with kode_induk ='". $row->kode_cfu. "' or kode_cfu = '". $row->kode_cfu. "'
								CONNECT BY kode_induk = PRIOR kode_cfu) ";
						}
						$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
								from bpc_relakun x
								left outer join (select x.kode_akun
												, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
												, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
										from bpc_relakun x
										inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
										$addFilterLawan
										where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2
										group by x.kode_akun
									) v on v.kode_akun = x.kode_akun
					
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$induk'
								union
								select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
								from bpc_masakun a
								left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
								left outer join (select x.kode_akun
													, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
													, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
											from bpc_masakun x
											inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis
											$addFilterLawan
											left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
											where b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterCFU2 
											group by x.kode_akun
											having sum(nvl(t.nilai,0)) <> 0
								) v on v.kode_akun = a.kode_akun
								where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$induk'
								group by a.kode_akun
								having sum(nvl(v.actsd, 0)) <> 0";
					}else if ($cfu == "CFU0")
						$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
								from bpc_relakun x
								left outer join (select x.kode_akun
																				, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
																				, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
																		from bpc_relakun x
																		inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis2
																		where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
																		group by x.kode_akun
																	) v on v.kode_akun = x.kode_akun
													
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$induk'
								union
								select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
								from bpc_masakun a
								left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
								left outer join (select x.kode_akun
													, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
													, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
											from bpc_masakun x
											inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis2
											left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
											where b.kode_akun is null and x.kode_lokasi = '$lokasi'  
											group by x.kode_akun
											having sum(nvl(t.nilai,0)) <> 0
								) v on v.kode_akun = a.kode_akun
								where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$induk'
								group by a.kode_akun
								having sum(nvl(v.actsd, 0)) <> 0";
					//error_log("Detail CFU $sql");
					$rs = $this->dbLib->execute($sql);
					$itemUbis = new server_util_Map();

					while ($line = $rs->FetchNextObject(false)){
						$itemUbis->set($line->kode_akun, $line);
					}
					$dataUbis->set($row->kode_cfu, $itemUbis);
				}
				
				if ($cfu != "CFU0"){
					$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_cfu in ('CFUF','CFUG','CFUD') order by rowindex");
					while ($row = $rsUbis->FetchNextObject(false)){
						if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
							$query = 1;
							$jenis2 = " and t.jenis = 'IJ' ";
						}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
							$query = 1;
							$jenis2 = " and t.jenis = 'RL' ";
							if (strtoupper($tipe) == "NETT")
								$jenis2 .= " and t.kode_cfu = t.kode_cfu2";
						}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) == "CONSOL" && $tipe != ""){
							$query = 1;
							$jenis2 = " and t.jenis = 'AD' ";
						}else {
							$query = 0;
							$jenis2 = " and t.jenis ='-' ";
						} 
						$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
						
						{
							$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
								from bpc_relakun x
								left outer join (select x.kode_akun
																				, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
																				, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
																		from bpc_relakun x
																		inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
																		where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$cfu'
																		group by x.kode_akun
																	) v on v.kode_akun = x.kode_akun
													
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$induk'
								union
								select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd,  sum(nvl(v.actcm, 0)) as actcm
								from bpc_masakun a
								left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
								left outer join (select x.kode_akun
													, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
													, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
											from bpc_masakun x
											inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
											left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
											where b.kode_akun is null and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$cfu'
											group by x.kode_akun
											having sum(nvl(t.nilai,0)) <> 0
								) v on v.kode_akun = a.kode_akun
								where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$induk'
								group by a.kode_akun
								having sum(nvl(v.actsd, 0)) <> 0";
								
							
						}
						//error_log("detail akun " .  $row->kode_cfu ." => " . $sql);
						
						$rs = $this->dbLib->execute($sql);
						$itemUbis = new server_util_Map();

						while ($line = $rs->FetchNextObject(false)){
							$itemUbis->set($line->kode_akun, $line);
						}
						$dataUbis->set($row->kode_cfu, $itemUbis);
					}
				}
			
				$sql = "select distinct d.kode_akun as kode_neraca, left_pad(concat(d.kode_akun,concat('-',e.nama)),a.level_spasi + 1) as nama, a.tipe,e.jenis as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex
														, nvl(t.actsd,0) as actsd
														, nvl(t.actcm,0) as actcm
														$field
												from bpc_neraca a
												inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and a.kode_lokasi = d.kode_lokasi and d.kode_fs = a.kode_fs
												inner join bpc_masakun e on e.kode_akun = d.kode_akun and e.kode_lokasi = a.kode_lokasi 
												left outer join (select x.kode_akun
																				, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
																				, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
																		from bpc_relakun x
																		inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
																		where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU group by x.kode_akun
																	) t on t.kode_akun = d.kode_akun
												where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$induk' 
												
											union
											select a.kode_akun, concat(a.kode_akun, concat('-',a.nama)) as nama,'-',a.jenis,'-',0,'00',1000
												, sum(nvl(v.actsd, 0)) as actsd
												, sum(nvl(v.actcm, 0)) as actcm
												$field
											from bpc_masakun a
											left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
											left outer join (select x.kode_akun
																, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
																, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
														from bpc_masakun x
														inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
														left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
														where  b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterCFU
														group by x.kode_akun
														having sum(nvl(t.nilai,0)) <> 0
											) v on v.kode_akun = a.kode_akun
											where x.kode_akun is null and a.kode_lokasi ='$lokasi' and '999999' = '$induk'
											group by a.kode_akun, a.nama, a.jenis
											order by kode_neraca";
				//error_log("getDataEXSUMCFUDetail => " . $sql);
				$rs = $this->dbLib->execute($sql);
				$node = "";
			$rootNode = new server_util_NodeNRC("00");
			$this->sumHeader = new server_util_Map();
			$result = array('rs' => array('rows' => array() ) );
			while ($row = $rs->FetchNextObject(false)){
				if ($row->jenis_akun == "PENDAPATAN"){
					foreach ($dataUbis->getArray() as $key => $itemUbis){
						$key = strtolower($key);
						$tmp = $itemUbis->get($row->kode_neraca);
						if ($tmp == null){
							eval ("\$row->$key = 0;");
							eval ("\$row->actsd_$key = 0;");
							eval ("\$row->actcm_$key = 0;");
						}else {
							eval ("\$row->$key = round( \$tmp->aggsd / $pembagi) ;");
							eval ("\$row->actsd_$key = round(\$tmp->actsd / $pembagi) * -1;");
							eval ("\$row->actcm_$key = round(\$tmp->actcm / $pembagi) * -1;");
							
						}
						
					}
					$row->jenis = "INC";
					$row->actsd = round($row->actsd / $pembagi) * -1;
					$row->actcm = round($row->actcm / $pembagi) * -1;
					//error_log("PDRPT " . json_encode($row));
				}else {
					foreach ($dataUbis->getArray() as $key => $itemUbis){
						$key = strtolower($key);
						$tmp = $itemUbis->get($row->kode_neraca);
						if ($tmp == null){
							eval ("\$row->$key = 0;");
							eval ("\$row->actsd_$key = 0;");
							eval ("\$row->actcm_$key = 0;");
						}else {
							eval ("\$row->$key = round(\$tmp->aggsd / $pembagi);");
							eval ("\$row->actsd_$key = round(\$tmp->actsd / $pembagi);");
							eval ("\$row->actcm_$key = round(\$tmp->actcm / $pembagi);");
						}
					}
					$row->aggsd = $row->aggsd  / $pembagi;
					$row->actsd = round($row->actsd / $pembagi);
					$row->actcm = round($row->actcm / $pembagi);
					$row->jenis = "EXP";
				}
					//if ($row->aggsd != 0 || $row->actsd != 0)
				
				//a.kode_neraca, d.kode_akun, e.nama as nama, a.tipe, '-' as jenis, upper(e.jenis) as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex
				$allZero = true;
				$item = (array)$row;
				//error_log("$row->kode_neraca => " . json_encode($item));
				foreach ($item as $key => $value) {
					if ($key != "kode_neraca" && $key != "kode_akun" && $key != "nama" && $key != "tipe" && $key != "jenis_akun" && $key != "sum_header" && $key != "level_spasi" && $key != "kode_induk" && $key != "rowindex"){
						//error_log("getDataEXSUMCFUDetail $key = $value;");
						if (abs($value) != 0){
							$allZero = false;
						}
					}
						
				}
				if (!$allZero)
					$result["rs"]["rows"][] = (array)$row;
				
			}
			//error_log("result " . print_r($result, true));
			//error_log(json_encode($result));
			return ($result);   
		}catch(Exception $e){
			console.log($e->getMessage());
		}
    }
    function getDataEXSUMCFUElimDetailReport($cfu,$model,$periode, $tipe, $elimType,$pembagi){
        
        global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = $tahun;//substr($periode,0,4);
		///$thn2 = floatval(substr($periode,0,4)) - 1;
        
            $ubis = "";
			$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$cfu' order by rowindex");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as ". $row->kode_cfu. "";
                $sql = " select x.kode_akun,  sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
							from bpc_relakun x
                            inner join bpc_mapakun z on z.akun_konsol = x.kode_akun 
							inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$row->kode_cfu' or t.kode_cfu = '$row->kode_cfu' ) 
                            where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_akun";
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_akun, $line->aggthn);
				}
				$dataUbis->set($row->kode_cfu, $itemUbis);
			}
            if ($cfu != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$cfu' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
            }else {
                $join1 = "";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
            }
        
            $sql = "select distinct a.kode_neraca, c.kode_akun,left_pad(c.nama,a.level_spasi + 1) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(c.nilai, 0) as penetapan, (nvl(b.aggthn,0)) as aggthn,nvl(c.nilai, 0) - (nvl(b.aggthn,0))   as selisih $field
											from bpc_neraca a
                                            inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and d.kode_fs = a.kode_fs and d.kode_lokasi = a.kode_lokasi
                                            inner join bpc_masakun c on c.kode_akun = d.kode_akun and c.kode_lokasi = a.kode_lokasi 
											left outer join (select x.kode_neraca, x.kode_akun, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
															from bpc_relakun x
															inner join bpc_mapakun z on z.akun_konsol = x.kode_akun 
                                                            $join1
							                                inner join bpc_mbudget_rkm y on y.kode_akun = z.kode_akun and y.tahun = '$thn1' and jenis = 'S' and z.kode_lokasi = y.kode_lokasi
															$join2
															where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
                                                            group by x.kode_neraca, x.kode_akun) b on b.kode_neraca = a.kode_neraca and b.kode_akun = c.kode_akun 
											left outer join bpc_penetapan c on c.kode_lokasi = '$lokasi' and c.kode_neraca = a.kode_neraca and c.tahun = '$thn1' and c.kode_ubis = 'NAS' and a.kode_fs = c.model
										where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
										order by c.kode_akun";
            //error_log($sql);
            $rs = $this->dbLib->execute($sql);
            $node = "";
		$result = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
            if ($row->jenis_akun == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $key = strtoupper($key);
					eval ("\$tmp = \$itemUbis->get(\$row->kode_akun) * -1 ;");
                    if ($tmp == null)
                        eval ("\$row->$key = 0;" );
                    else eval ("\$row->$key = $tmp;" );
				}
				$row->penetapan = $row->penetapan * -1  ;
				$row->aggthn = $row->aggthn * -1 ;
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $key = strtoupper($key);
					eval ("\$tmp = \$itemUbis->get(\$row->kode_akun);");
                    if ($tmp == null)
                        eval ("\$row->$key = 0;" );
                    else eval ("\$row->$key = $tmp;" );
				}
			}
            if ($row->aggthn != 0){
                $tmp = $result->get($row->kode_neraca);
                if ($tmp == null){
                    $tmp = new server_util_arrayList();
                }
                //error_log(json_encode($row));
                $tmp->add($row);
                $result->set($row->kode_neraca, $tmp);    
            }
			
		}
		
		return ($result);   
    }
	function getDataAkunJejerCFUElim($induk,$model, $periode, $tipe, $elimType, $pembagi){
        global $satuan;
		$db = $this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		$listCFUUbis = new server_util_Map();
		$rs = $db->execute("select * from bpc_cfu a 
									inner join exs_ubis b on b.kode_ubis = a.kode_ubis 
									where not a.kode_ubis_cons like 'TG%' 
									order by kode_cfu ");
		
		while ($row = $rs->FetchNextObject(false)){
			$listCFUUbis->set($row->kode_cfu, $row);
		}

		if (strtoupper($tipe) == "NETT"){
            $jenis = " and t.kode_cfu = t.kode_cfu2";///,'AD' 
            $filterBudget = " ";
        }else {
            $jenis = "  ";
			//$jenis = " and t.jenis in ('TB') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";
            $filterBudget = "  ";
		}
		if (strtolower( $elimType ) == "ijpa") 
			$elimType = "IJ";
		else if (strtolower( $elimType ) == "adjusment") 
			$elimType = "AD";
		else $elimType = "RL";


		$jenis .= " and t.jenis = '$elimType' ";
		$jenis .= " and t.jenis = '$elimType' ";
        	if ($induk != "CFU0"){
                $filterCons = " and instr(z.kode_ubis_cons,t.kode_ubis) > 0";//instr(z.kode_ubis_cons,t.kode_ubis) > 0
				$forSubCFU = "and t.kode_cfu = substr('$induk', 0,length(t.kode_cfu)) "; 
            }else {
                $filterCons = "and instr(z.kode_ubis_cons,t.kode_ubis) > 0";
				$forSubCFU = " ";
            }
			
			$filterCFU = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU ";
            $ubis = "";
			//$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$induk' or kode_cfu in ('CFUF','CFUD','CFUG')  order by rowindex");
			if (strtoupper($tipe) == "NETT"){
				$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu t where kode_induk like '$induk' or kode_cfu in ('CFUF','CFUG','CFUD')   order by rowindex");
				$addTableCFU = "inner join (select distinct a.kode_sub, a.kode_cfu, a.kode_lokasi ,  c.kode_cfu as subcfu
								from bpc_sap_mapba_lawan a 
								inner join bpc_cfu b on b.SUM_HEADER = a.kode_cfu 
								left outer join bpc_cfu c on b.kode_cfu = substr(c.kode_cfu,1,length(b.kode_cfu)) and c.kode_lokasi = a.kode_lokasi
								where a.kode = '02' ) y on substr(y.subcfu,1,4) = t.kode_cfu2 and substr(t.kode_pc, 5, 3) = y.kode_sub 
								";
			}else {
				$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu t where kode_induk like 'CFU0' or kode_cfu in ('CFUF','CFUG','CFUD')   order by rowindex");
				$addTableCFU = "";
			}
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
					if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'IJ' ";
					}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
						$query = 1;
						$jenis2 = " and t.jenis = 'RL' ";
						if (strtoupper($tipe) == "NETT")
							$jenis2 .= " and t.kode_cfu = t.kode_cfu2";
					}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) == "CONSOL" && $tipe != ""){
						$query = 1;
						$jenis2 = " and t.jenis = 'AD' ";
					}else {
						$query = 0;
						$jenis2 = $jenis ;//" and t.jenis ='-' ";
					} 
				//$field .= ", 0  as actsd_". $row->kode_cfu. " ";
				$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
				
				if ($induk == "CFU0"){
					$forSubCFU2 = " and t.kode_cfu = substr('$row->kode_cfu', 0,length(t.kode_cfu)) ";
					$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='". $row->kode_cfu. "' or kode_cfu = '". $row->kode_cfu. "'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU2";
				}else {
					$forSubCFU2 = " and t.kode_cfu2 = substr('$row->kode_cfu', 0,length(t.kode_cfu2)) ";
					$forSubCFU3 = " and t.kode_cfu = substr('$induk', 0,length(t.kode_cfu)) ";
					$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
						FROM bpc_cfu
						start with kode_induk ='". $induk. "' or kode_cfu = '". $induk. "'
						CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU2 $forSubCFU3";
				}
				//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,1,length(t.kode_cfu)) $filterCons
				if ($query == 0){
					
					$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
							from bpc_relakun x
                            left outer join (select x.kode_akun
											, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
											, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
									from bpc_relakun x
									inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
									$addFilterLawan
									where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
								) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
										inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis
										$addFilterLawan
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterCFU2 
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0";
				}else if ($induk == "CFU0") {
					$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
				
					$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
							from bpc_relakun x
                            left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'     group by x.kode_akun
                                                                ) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis2
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi'  
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0";
					//error_log($sql);
				}
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_akun, $line);
				}
				$dataUbis->set($row->kode_cfu, $itemUbis);
			}

			if ($induk != "CFU0"){
				
				$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_cfu in ('CFUF','CFUG','CFUD') order by rowindex");
				while ($row = $rsUbis->FetchNextObject(false)){
					if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'IJ' ";
					}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
						$query = 1;
						$jenis2 = " and t.jenis = 'RL' ";
						if (strtoupper($tipe) == "NETT")
							$jenis2 .= " and t.kode_cfu = t.kode_cfu2";
					}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) <> "GROSS" && $tipe != ""){
						$query = 1;
						$jenis2 = " and t.jenis = 'AD' ";
					}else {
						$query = 0;
						$jenis2 = " and t.jenis ='-' ";
					} 
					$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
					
					{
						$sql = " select  x.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
								from bpc_relakun x
								left outer join (select x.kode_akun
											, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
											, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
									from bpc_relakun x
									inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
									where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$induk'  
									group by x.kode_akun
								) v on v.kode_akun = x.kode_akun
													
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_akun
							union 
								select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis2
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi'  and t.kode_cfu = '$induk'  
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0
								";
					}
					
					
					$rs = $this->dbLib->execute($sql);
					$itemUbis = new server_util_Map();

					while ($line = $rs->FetchNextObject(false)){
						$itemUbis->set($line->kode_akun, $line);
					}
					$dataUbis->set($row->kode_cfu, $itemUbis);
				}
			}
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
            }else {
                //$join1 = "";
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi ";//
                //$join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
            }
            $sql = "select distinct a.kode_neraca, d.kode_akun, e.nama as nama, a.tipe, '-' as jenis, upper(e.jenis) as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex 
                                        , nvl(t.actsd,0) as actsd
										, nvl(t.actcm,0) as actcm
                                                    $field
											from bpc_neraca a
                                            inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and a.kode_lokasi = d.kode_lokasi and d.kode_fs = a.kode_fs
                                            inner join bpc_masakun e on e.kode_akun = d.kode_akun and e.kode_lokasi = a.kode_lokasi 
											left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU group by x.kode_akun
                                                                ) t on t.kode_akun = d.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi'
                                        union
                                        select '999999', a.kode_akun, concat(a.kode_akun, concat('-',a.nama)) as nama,'-','-',a.jenis,'-',0,'00',1000
                                            , sum(nvl(v.actsd, 0)) as actsd
											, sum(nvl(v.actcm, 0)) as actcm
                                              $field
                                        from bpc_masakun a
                                        left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun
                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                    from bpc_masakun x
                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                    left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                                    where  b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterCFU
                                                    group by x.kode_akun
                                        ) v on v.kode_akun = a.kode_akun
                                        where x.kode_akun is null and a.kode_lokasi ='$lokasi' and substr(a.kode_akun,1,1) in ('4','5','6','7','8')
                                        group by a.kode_akun, a.nama, a.jenis
                                        order by kode_neraca";
            //error_log("Deteail akun " . $sql );
			$rs = $this->dbLib->execute($sql);
            $node = "";
		    $result = new server_util_Map();        
            $neraca = "";
			
            while ($row = $rs->FetchNextObject(false)){
				//error_log(json_encode($row));
				
                if ($row->jenis_akun == "PENDAPATAN"){
                    foreach ($dataUbis->getArray() as $key => $itemUbis){
                        $tmp = $itemUbis->get($row->kode_akun);
						$key = strtolower($key);
						if ($tmp == null){
							eval("\$row->actsd_$key = 0;");
							eval("\$row->actcm_$key = 0;");
						}else {
							eval ("\$row->actsd_$key = round($tmp->actsd / $pembagi) * -1;");
							eval ("\$row->actcm_$key = round($tmp->actcm / $pembagi) * -1;");
						}
                    }
                    $row->actsd = round($row->actsd / $pembagi) * -1;    
					$row->actcm = round($row->actcm / $pembagi) * -1;    
                    $row->jenis = "INC";
                }else {
                    foreach ($dataUbis->getArray() as $key => $itemUbis){
                        $tmp = $itemUbis->get($row->kode_akun);
						$key = strtolower($key);
						if ($tmp == null){
							eval("\$row->actsd_$key = 0;");
							eval("\$row->actcm_$key = 0;");
						}else {
                        	eval ("\$row->actsd_$key = round($tmp->actsd / $pembagi);");
							eval ("\$row->actcm_$key = round($tmp->actcm / $pembagi);");
						}
                    }
					$row->actsd = round($row->actsd / $pembagi );
					$row->actcm = round($row->actcm / $pembagi );
                    $row->jenis = "EXP";
                }
                

                if ($neraca != $row->kode_neraca){
                    $neraca = $row->kode_neraca;
                    $item = array();
                }
				$allZero = true;
                $rowItem = (array)$row;
				//a.kode_neraca, d.kode_akun, e.nama as nama, a.tipe, '-' as jenis, upper(e.jenis) as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex
				foreach ($rowItem as $key => $value) {
					if ($key != "kode_neraca" && $key != "kode_akun" && $key != "nama" && $key != "tipe" && $key != "jenis_akun" && $key != "sum_header" && $key != "level_spasi" && $key != "kode_induk" && $key != "rowindex"){
						if ($value != 0)
							$allZero = false;
					}
						
				}
				if (!$allZero) {
					$item[] = (array) $row;
                	$result->set($neraca, $item);
				}
                
            }
            return $result;
    }
    function downloadJejerDataCFUElim($induk, $model, $periode, $tipe,$elimType, $pembagi){
		$this->getDb();
		
		//if (!isset($induk) || $induk == "") $induk = "CFU0";
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("CFU")
						 ->setSubject("CFU")
						 ->setDescription("Jejer CFU ")
						  ->setKeywords("Jejer CFU")
							 ->setCategory("CFU");
 
        $data = $this->getDataEXSUMCFUElim($induk, $model, $periode, $tipe,$elimType, $pembagi);					
		$akun = $this->getDataAkunJejerCFUElim($induk, $model,$periode, $tipe, $elimType,$pembagi);
			
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
        
        $column = array("Account","Uraian","Tipe","Level","TOTAL");
		$field = array("kode_neraca","nama","jenis","level_spasi","actsd");
		$field2 = array("kode_neraca","nama","jenis","level_spasi","actcm");
        
		if (strtoupper($tipe) == "NETT"){
			$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu t where kode_induk like '$induk' or kode_cfu in ('CFUF','CFUG','CFUD')   order by rowindex");
		}else 
			$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu t where kode_induk like 'CFU0' or kode_cfu in ('CFUF','CFUG','CFUD')   order by rowindex");

		$field = array("kode_neraca","nama","jenis","level_spasi","actsd");
        while ($row = $rsUbis->FetchNextObject(false)){
            $column[] = $row->nama;
            $field[] = "actsd_". strtolower($row->kode_cfu);
			$field2[] = "actcm_". strtolower($row->kode_cfu);
        }
		
		//error_log("donloadXLS - select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu t where kode_induk like '$induk%' or kode_cfu in ('CFUF','CFUD','CFUG')  order by rowindex");
		$col = 0;
		$row = 1;
		
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        try{
            
			foreach ($data["rs"]["rows"] as $val){
                $row++;
                $col = 0;
                foreach ($field as $f){
                    if ($f == "nama")
                        $sheet->setCellValueByColumnAndRow($col, $row, str_replace("&nbsp;"," ",$val[$f]) );    
                    else 
                        $sheet->setCellValueByColumnAndRow($col, $row, $val[$f]);    
                    $col++;
                }
				
                $listAkun = $akun->get($val["kode_neraca"]);
                foreach ($listAkun as $item){
                    $row++;
                    $col = 0;
                    foreach ($field as $i => $f){
                        if ($i == 0)
                            $sheet->setCellValueByColumnAndRow($col, $row, $item["kode_akun"]);    
                        else
                            $sheet->setCellValueByColumnAndRow($col, $row, $item[$f]);    
                        $col++;
                    }
                }
				
			}
			
			
        }catch(Exception $e){
            error_log($e->getMessage);
        }
        
 		$sheet->setTitle("YTD");


		//CM
		$sheet = $objPHPExcel->createSheet();
		$col = 0;
		$row = 1;
		
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        try{
            
			foreach ($data["rs"]["rows"] as $val){
                $row++;
                $col = 0;
                foreach ($field2 as $f){
                    if ($f == "nama")
                        $sheet->setCellValueByColumnAndRow($col, $row, str_replace("&nbsp;"," ",$val[$f]) );    
                    else 
                        $sheet->setCellValueByColumnAndRow($col, $row, $val[$f]);    
                    $col++;
                }
				
                $listAkun = $akun->get($val["kode_neraca"]);
                foreach ($listAkun as $item){
                    $row++;
                    $col = 0;
                    foreach ($field2 as $i => $f){
                        if ($i == 0)
                            $sheet->setCellValueByColumnAndRow($col, $row, $item["kode_akun"]);    
                        else
                            $sheet->setCellValueByColumnAndRow($col, $row, $item[$f]);    
                        $col++;
                    }
                }
				
			}
			
			
        }catch(Exception $e){
            error_log($e->getMessage);
        }
        
 		$sheet->setTitle("CM");

		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 		// Save Excel 2007 file
		$namafile = MD5(date("r"));
		//error_log("Done Generate CFU line $namafile");
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/list_cfu_$namafile.xlsx");
 		
		return "/list_cfu_$namafile.xlsx";
	}
	//------- Jejer Telkom Group
	//------ jejer actual AP
    function getDataJejerAP($induk, $model, $periode, $tipe, $pembagi){
        global $satuan;
        
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
        if ($induk == "") $induk = "9000";
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		///$thn2 = floatval(substr($periode,0,4)) - 1;
        if (strtoupper($tipe) == "GROSS" || $tipe == ""){
            $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
            $jenis = " and t.jenis in ('TB') ";
			$tipe = "GROSS";
        }else if (strtoupper($tipe) == "NETT"){
            $jenis = " and t.jenis in ('TB','RL','IJ') ";//,'AD'
        }else {
            $jenis = "  ";
			//$jenis = " and t.jenis in ('TB') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";
            $filterBudget = "  ";
        }

			
        	
            $ubis = "";
			$rsUbis = $this->dbLib->execute("select  nama, kode_lokasi, cocd, ba_consol, case when cocd = '9000' then 99 else no_urut end as no_urut from bpc_lokasi where kode_induk in (select kode_lokasi from bpc_lokasi where cocd = '$induk' ) or cocd = '$induk' order by no_urut ");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			$rs = $this->dbLib->execute("select ba_consol from bpc_lokasi start with cocd = '$induk' connect by kode_induk = prior kode_lokasi ");
			$ba_console = "";
			if ($induk != "9000"){
				while ($row =$rs->FetchNextObject(false)){
					if ($ba_console != "") $ba_console .= " or ";
					$ba_console .= " t.kode_ubis like '__" . trim($row->ba_consol) ."%' ";
				}
			}
			if ($ba_console != "")
			{
				$ba_console = " and ($ba_console)";
			}
			
			$filterBA = "";
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as actsd_". $row->cocd. "";
				
				if ($row->cocd != "9000"){
					$ba_console2 = "";
					if ($row->cocd != "9000"){
						$filterBA .= " or ( t.kode_ubis like '__$row->ba_consol%' ) ";
						$rs = $this->dbLib->execute("select ba_consol from bpc_lokasi start with kode_lokasi = '$row->kode_lokasi' connect by kode_induk = prior kode_lokasi ");
						while ($row2 =$rs->FetchNextObject(false)){
							if ($ba_console2 != "") $ba_console2 .= " or ";
							$ba_console2 .= " t.kode_ubis like '__" . trim($row2->ba_consol) ."%' ";
							$filterBA .= " or ( t.kode_ubis like '__$row2->ba_consol%' ) ";
						}
					}
					if ($ba_console2 != "")
					{
						$ba_console2 = " and ($ba_console2)";
					}
					if ( in_array($row->cocd, array("98","97","96") ) &&  strtoupper($tipe) == "GROSS" ){
						if ($row->cocd == "98" )
							$filterElim = " and t.jenis = 'AD'";
						else if ($row->cocd == "97")
							$filterElim = " and t.jenis = 'RL'";
						else if ($row->cocd == "96")
							$filterElim = " and t.jenis = 'IJ'";

						$sql = " select x.kode_neraca, nvl(v.actsd, 0) as actsd, nvl(v.actcm, 0) as actcm
							from bpc_neraca x
                            left outer join (select x.kode_neraca
                                        , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                        , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                from bpc_relakun x
                                inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' 
                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterElim $ba_console group by x.kode_neraca
                               ) v on v.kode_neraca = x.kode_neraca
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
							union
							select '999999',  sum(nvl(v.actsd, 0)) as actsd,  sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' 
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterElim $ba_console
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            having sum(nvl(v.actsd, 0)) <> 0
                            ";
						
						//if ($row->cocd == "1004")
						//	error_log($sql);
					}else {
						/*
						if ($row->ba_consol == "2") {
							$addMetra = " and ( t.kode_ubis like '__$row->ba_consol%' ) ";
							$filterBA .= " or ( t.kode_ubis like '__$row->ba_consol%' ) ";
						} else {
							$addMetra = " and ( t.kode_ubis like '__$row->ba_consol%')" ;
							$filterBA .= " or ( t.kode_ubis like '__$row->ba_consol%' ) ";
						}
						*/
						

			    		$sql = " select x.kode_neraca, nvl(v.actsd, 0) as actsd, nvl(v.actcm, 0) as actcm
							from bpc_neraca x
                            left outer join (select x.kode_neraca
                                        , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                        , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                from bpc_relakun x
                                inner join BPC_SAP_transcfu t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $ba_console2 group by x.kode_neraca
                               ) v on v.kode_neraca = x.kode_neraca
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
							union
							select '999999',  sum(nvl(v.actsd, 0)) as actsd,  sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' $ba_console2
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            having sum(nvl(v.actsd, 0)) <> 0
                            ";
						
						
					}
				}else {
					$jenis3 = "";//nampilin consol
					if (strtoupper($tipe) == "NETT")
						$jenis3 = " and t.jenis in  ('IJ','RL' )";//'AD',

					if ($filterBA != ""){
						$filtering = substr($filterBA, 4, strlen($filterBA));
						$filtering = " and ( $filtering )";
					}
					if ($induk == "9000"){
						$filtering = "  " ;
						
					}
						//error_log($filtering);
					$sql = " select x.kode_neraca, nvl(v.actsd, 0) as actsd, nvl(v.actcm, 0) as actcm
							from bpc_neraca x
                            left outer join (select x.kode_neraca
                                        , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                        , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                from bpc_relakun x
                                inner join BPC_SAP_transcfu t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%'
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  $filtering 
									 group by x.kode_neraca
                               ) v on v.kode_neraca = x.kode_neraca
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
							union
							select '999999',  sum(nvl(v.actsd, 0)) as actsd,  sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%'  and not t.kode_ubis in ('TE2A','TM2A')
										inner join bpc_lokasi z on z.kode_lokasi = t.kode_lokasi
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi'  $filtering and not t.kode_ubis in ('TE2A','TM2A')
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            having sum(nvl(v.actsd, 0)) <> 0
                            ";
					//error_log($sql);
					
				}
				
                
				
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_neraca, $line);
				}
				$dataUbis->set($row->cocd, $itemUbis);
			}
            /*
			if ($induk != "CFU0"){
				$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_cfu in ('CFUF','CFUG','CFUD') order by rowindex");
				while ($row = $rsUbis->FetchNextObject(false)){
					if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'IJ' ";
						$cfuElim = "96";
					}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
						$query = 1;
						$jenis2 = " and t.jenis = 'RL' ";
						if (strtoupper($tipe) == "NETT")
							$jenis2 .= " and t.kode_cfu = t.kode_cfu2";
						$cfuElim = "97";	
					}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'AD' ";
						$cfuElim = "98";
					}else {
						$query = 0;
						$jenis2 = " and t.jenis ='-' ";
					} 
					$field .= ",  0  as actsd_". $row->kode_cfu. "";
					
					{
						$sql = " select x.kode_neraca, sum(nvl(v.actsd, 0)) as actsd
								from bpc_neraca x
								left outer join (select x.kode_neraca
											, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
											, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
									from bpc_relakun x
									inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
									where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$cfuElim'  
									group by x.kode_neraca
								) v on v.kode_neraca = x.kode_neraca
													
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca
								union
								select '999999',  sum(nvl(v.actsd, 0)) as actsd
								from bpc_masakun a
								left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
								left outer join (select x.kode_akun
													, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
													, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
											from bpc_masakun x
											inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
											left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
											where b.kode_akun is null and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$cfuElim'
											group by x.kode_akun
											having sum(nvl(t.nilai,0)) <> 0
								) v on v.kode_akun = a.kode_akun
								where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
								having sum(nvl(v.actsd, 0)) <> 0
								";
					}
					//error_log($sql);
					
					$rs = $this->dbLib->execute($sql);
					$itemUbis = new server_util_Map();

					while ($line = $rs->FetchNextObject(false)){
						$itemUbis->set($line->kode_neraca, $line);
					}
					$dataUbis->set($cfuElim, $itemUbis);
				}
				
			}*/
        
            $filterLokasi = ""; 
            if ($induk != "9000")
            	$filterLokasi = " and z.kode_induk in ( select kode_lokasi from bpc_lokasi where cocd = '$induk' ) ";
            //combine TB
			if ($filterBA != ""){
				$filterBA = substr($filterBA, 4, strlen($filterBA));
				$filterBA = " and ( $filterBA )";
			}

            $sql = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(t.actsd,0) as actsd
													, nvl(t.actsd,0) as actcm
                                                     $field
											from bpc_neraca a
											left outer join (select x.kode_neraca
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_transcfu t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
																	where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBA 
                                                                     group by x.kode_neraca
                                                                ) t on t.kode_neraca = a.kode_neraca
                                         where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
										union 
										select '999999','UNMAPPED','-','BEBAN','-',0,'00',1000
                                            , sum(nvl(v.actsd, 0)) as actsd
											, sum(nvl(v.actcm, 0)) as actcm
                                             $field
                                        from bpc_masakun a
                                        left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun
                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                    from bpc_masakun x
                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis 
                                                    inner join bpc_lokasi z on z.kode_lokasi = t.kode_lokasi
                                                    left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                                    where  b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterBA
                                                    group by x.kode_akun
                                                    having sum(nvl(t.nilai,0)) <> 0
                                        ) v on v.kode_akun = a.kode_akun
                                        where x.kode_akun is null and a.kode_lokasi ='$lokasi'
                                         order by  rowindex";
            //error_log("console $sql ");
            $rs = $this->dbLib->execute($sql);
            $node = "";
		$rootNode = new server_util_NodeNRC("00");
		$this->sumHeader = new server_util_Map();
		$notOthers = array("1000","1008","96","97","98","99","9000");
		while ($row = $rs->FetchNextObject(false)){
			if ($row->jenis_akun == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $tmp = $itemUbis->get($row->kode_neraca);
                    eval ("\$row->actsd_$key = \$tmp->actsd;");
					eval ("\$row->actcm_$key = \$tmp->actcm;");
					if (!in_array($key."", $notOthers)){
						eval ("\$row->actsd_others += \$tmp->actsd;");
						eval ("\$row->actcm_others += \$tmp->actcm;");
					}
				}
				$row->jenis = "INC";
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $tmp = $itemUbis->get($row->kode_neraca);
                    eval ("\$row->actsd_$key = \$tmp->actsd;");
					eval ("\$row->actcm_$key = \$tmp->actcm;");
					if (!in_array($key."", $notOthers)){
						eval ("\$row->actsd_others += \$tmp->actsd;");
						eval ("\$row->actcm_others += \$tmp->actcm;");
					}
				}
                $row->jenis = "EXP";
			}
			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$node->setData($row);
			if ($row->tipe == "SUMMARY")
				$this->sumHeader->set($row->kode_neraca, $node);

		}
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			//if ($lokasi == "10")
            {
				$this->summariesJejer($val);
				
				if ($val->data->sum_header != "-"){
					$summaryHeader = explode(",",$val->data->sum_header);

					foreach ($summaryHeader as $header){
						$nodeHeader = $this->sumHeader->get($header);
						if ($nodeHeader){
							foreach ($val->dataArray as $key => $value) {
								if ($key != "jenis_akun" && $key != "jenis" && $key != "kode_neraca" && $key != "nama" && $key != "tipe" && $key != "sum_header" && $key != "level_spasi" && $key != "rowindex"){
									$nodeHeader->dataArray[$key] += $value;
								}
							}
							$nodeHeader->data =(object) $nodeHeader->dataArray;
						}
					}
				}
			}
		}
		//perlu hitung ke summary
		$result = array('rs' => array('rows' => array() ) );
		$this->generateResultJejer($rootNode, $result);
        ///error_log("pembagi $pembagi ");
        //error_log(json_encode($result));
		return ($result);   
    }
    function getDataJejerAPDetail($induk, $model, $periode, $neraca, $tipe,  $pembagi){
        global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		///$thn2 = floatval(substr($periode,0,4)) - 1;
        if (strtoupper($tipe) == "GROSS" || $tipe == ""){
            $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
            $jenis = " and t.jenis in ('TB')";
            
        }else {
            $jenis = "  ";
            
        }
        
        
            $ubis = "";
			$rsUbis = $this->dbLib->execute("select  nama, kode_lokasi, cocd, ba_consol, case when cocd = '9000' then 99 else no_urut end as no_urut from bpc_lokasi where kode_induk in (select kode_lokasi from bpc_lokasi where cocd = '$induk' ) or cocd = '$induk' order by no_urut");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			$filterBA = "";
			$rs = $this->dbLib->execute("select ba_consol from bpc_lokasi start with cocd = '$induk' connect by kode_induk = prior kode_lokasi ");
			$ba_console = "";
			if ($induk != "9000"){
				while ($row =$rs->FetchNextObject(false)){
					if ($ba_console != "") $ba_console .= " or ";
					$ba_console .= " t.kode_ubis like '__" . trim($row->ba_consol) ."%' ";
				}
			}
			if ($ba_console != "")
			{
				$ba_console = " and ($ba_console)";
			}
			
			$filterBA = "";
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as actsd_". $row->cocd. "";
				
				if ($row->cocd != "9000"){
					$ba_console2 = "";
					if ($row->cocd != "9000"){
						$filterBA .= " or ( t.kode_ubis like '__$row->ba_consol%' ) ";
						$rs = $this->dbLib->execute("select ba_consol from bpc_lokasi start with cocd = '$row->cocd' connect by kode_induk = prior kode_lokasi ");
						while ($row2 =$rs->FetchNextObject(false)){
							if ($ba_console2 != "") $ba_console2 .= " or ";
							$ba_console2 .= " t.kode_ubis like '__" . trim($row2->ba_consol) ."%' ";
							$filterBA .= " or ( t.kode_ubis like '__$row2->ba_consol%' ) ";
						}
					}
					if ($ba_console2 != "")
					{
						$ba_console2 = " and ($ba_console2)";
					}
					if ( in_array($row->cocd, array("98","97","96") ) &&  strtoupper($tipe) == "GROSS" ){
						if ($row->cocd == "98")
							$filterElim = " and t.jenis = 'AD'";
						else if ($row->cocd == "97")
							$filterElim = " and t.jenis = 'RL'";
						else if ($row->cocd == "96")
							$filterElim = " and t.jenis = 'IJ'";
						$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
							from bpc_relakun x
                            left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' 
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterElim $ba_console
																	group by x.kode_akun
                                                                ) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$neraca'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%'
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterElim $ba_console
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$induk'
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0";
							
					}else {
						//$filterBA .= " or ( t.kode_ubis like '__$row->ba_consol%' ) ";
						/*
						if ($row->ba_consol == "2") {
							$addMetra = " and ( t.kode_ubis like '__$row->ba_consol%' or t.kode_ubis like  'TE%' or t.kode_ubis like 'TM%' or t.kode_ubis like 'TD%' ) ";
							$filterBA .= " or ( t.kode_ubis like '__$row->ba_consol%' or t.kode_ubis like  'TE%' or t.kode_ubis like 'TM%' or t.kode_ubis like 'TD%' ) ";
						} else {
							$addMetra = " and ( t.kode_ubis like '__$row->ba_consol%')" ;
							$filterBA .= " or ( t.kode_ubis like '__$row->ba_consol%' ) ";
						}
						*/
						$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
							from bpc_relakun x
                            left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_transcfu t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $ba_console2
																	group by x.kode_akun
                                                                ) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$neraca'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' $ba_console2 
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$neraca'
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0";
					}
				}else {
					if ($filterBA != ""){
						$filtering = substr($filterBA, 4, strlen($filterBA));
						$filtering = " and ( $filterBA )";
					}

					if ($induk == "9000"){
						$filtering = " ";/* and not t.kode_ubis in (select concat('TG',a.ba_consol) as ba_consol from bpc_lokasi a 
											inner join bpc_lokasi b on b.kode_lokasi = a.KODE_INDUK
											where b.cocd ='1004') ";
						*/
					}
					$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
							from bpc_relakun x
                            left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join BPC_SAP_transcfu t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' 
																	inner join bpc_lokasi z on z.kode_lokasi = t.kode_lokasi
                                									where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  $filtering  
																	group by x.kode_akun
                                                                ) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$neraca'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' 
										inner join bpc_lokasi z on z.kode_lokasi = t.kode_lokasi
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi'  $filtering 
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$neraca'
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0";
				}
					
				
                
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_akun, $line);
				}
				$dataUbis->set($row->cocd, $itemUbis);
			}
            
			/*
			if ($induk != "CFU0"){
				$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_cfu in ('CFUF','CFUG','CFUD') order by rowindex");
				while ($row = $rsUbis->FetchNextObject(false)){
					if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'IJ' ";
					}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
						$query = 1;
						$jenis2 = " and t.jenis = 'RL' ";
						if (strtoupper($tipe) == "NETT")
							$jenis2 .= " and t.kode_cfu = t.kode_cfu2";
					}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'AD' ";
					}else {
						$query = 0;
						$jenis2 = " and t.jenis ='-' ";
					} 
					$field .= ",  0  as actsd_". $row->kode_cfu. "";
					
					{
						$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd
							from bpc_relakun x
                            left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
																	where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$induk'  
                                                                    group by x.kode_akun
                                                                ) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$induk'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
										left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
										where b.kode_akun is null and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$induk'
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$induk'
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0";
							
						
					}
					//error_log($sql);
					
					$rs = $this->dbLib->execute($sql);
					$itemUbis = new server_util_Map();

					while ($line = $rs->FetchNextObject(false)){
						$itemUbis->set($line->kode_neraca, $line);
					}
					$dataUbis->set($row->kode_cfu, $itemUbis);
				}
			}
			*/
            $filterLokasi = ""; 
            if ($induk != "9000")
            	$filterLokasi = " and z.kode_induk in ( select kode_lokasi from bpc_lokasi where cocd = '$induk' ) ";
			if ($filterBA != ""){
				$filterBA = substr($filterBA, 4, strlen($filterBA));
				$filterBA = " and ( $filterBA )";
			}

            $sql = "select distinct d.kode_akun as kode_neraca, left_pad(concat(d.kode_akun,concat('-',e.nama)),a.level_spasi + 1) as nama, a.tipe,e.jenis as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex
													, nvl(t.actsd,0) as actsd
													, nvl(t.actcm,0) as actcm
                                                    $field
											from bpc_neraca a
                                            inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and a.kode_lokasi = d.kode_lokasi and d.kode_fs = a.kode_fs
                                            inner join bpc_masakun e on e.kode_akun = d.kode_akun and e.kode_lokasi = a.kode_lokasi 
											left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_transcfu t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBA group by x.kode_akun
                                                                ) t on t.kode_akun = d.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$neraca' 
                                            
                                        union
                                        select a.kode_akun, concat(a.kode_akun, concat('-',a.nama)) as nama,'-',a.jenis,'-',0,'00',1000
                                            , sum(nvl(v.actsd, 0)) as actsd
											, sum(nvl(v.actcm, 0)) as actcm
                                              $field
                                        from bpc_masakun a
                                        left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun
                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                    from bpc_masakun x
                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                    inner join bpc_lokasi z on t.kode_lokasi = z.kode_lokasi
                                                    left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                                    where  b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterBA
                                                    group by x.kode_akun
                                                    having sum(nvl(t.nilai,0)) <> 0
                                        ) v on v.kode_akun = a.kode_akun
                                        where x.kode_akun is null and a.kode_lokasi ='$lokasi' and '999999' = '$neraca'
                                        group by a.kode_akun, a.nama, a.jenis
                                        having  sum(nvl(v.actsd, 0)) <> 0
                                        order by kode_neraca";
            $rs = $this->dbLib->execute($sql);
            $node = "";
		$rootNode = new server_util_NodeNRC("00");
		$this->sumHeader = new server_util_Map();
        $result = array('rs' => array('rows' => array() ) );
		$notOthers = array("1000","1008","96","97","98","99","9000");
		while ($row = $rs->FetchNextObject(false)){
            if ($row->jenis_akun == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    //$key = strtoupper($key);
                    $tmp = $itemUbis->get($row->kode_neraca);
                    if ($tmp == null){
                        eval ("\$row->$key = 0;");
                        eval ("\$row->actsd_$key = 0;");
						eval ("\$row->actcm_$key = 0;");
                    }else {
                        eval ("\$row->actsd_$key = round(\$tmp->actsd / $pembagi) * -1;");
                        eval ("\$row->actcm_$key = round(\$tmp->actcm / $pembagi) * -1;");
						if (!in_array($key ."", $notOthers)){
							eval ("\$row->actsd_others += round(\$tmp->actsd / $pembagi) * -1;");
							eval ("\$row->actcm_others += round(\$tmp->actcm / $pembagi) * -1;");
						}	
                    }
					
				}
				
				$row->jenis = "INC";
                $row->actsd = round($row->actsd / $pembagi) * -1;
                //error_log("PDRPT " . json_encode($row));
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    //$key = strtoupper($key);
					$tmp = $itemUbis->get($row->kode_neraca);
                    if ($tmp == null){
                        eval ("\$row->$key = 0;");
                        eval ("\$row->actsd_$key = 0;");
						eval ("\$row->actcm_$key = 0;");
                    }else {
                        eval ("\$row->actsd_$key = \$tmp->actsd / $pembagi;");
						eval ("\$row->actcm_$key = \$tmp->actcm / $pembagi;");
						if (!in_array($key."", $notOthers)){
							eval ("\$row->actsd_others += round(\$tmp->actsd / $pembagi) ;");
							eval ("\$row->actcm_others += round(\$tmp->actcm / $pembagi) ;");
						}	
                    }
				}
                $row->aggsd = $row->aggsd  / $pembagi;
                $row->actsd = round($row->actsd / $pembagi);
                $row->jenis = "EXP";
			}
            //if ($row->aggsd != 0 || $row->actsd != 0)
			//     $result["rs"]["rows"][] = (array)$row;
			$allZero = true;
			$item = (array)$row;
			//error_log("$row->kode_neraca => " . json_encode($item));
			foreach ($item as $key => $value) {
				if ($key != "kode_neraca" && $key != "kode_akun" && $key != "nama" && $key != "tipe" && $key != "jenis_akun" && $key != "sum_header" && $key != "level_spasi" && $key != "kode_induk" && $key != "rowindex"){
					//error_log("getDataEXSUMCFUDetail $key = $value;");
					if (abs($value) != 0){
						$allZero = false;
					}
				}
					
			}
			if (!$allZero)
				$result["rs"]["rows"][] = (array)$row;
			
		}
        //error_log($sql);
		return ($result);   
    }
    function getDataJejerAPDetailReport($cfu,$model,$periode, $tipe, $pembagi){
        
        global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = $tahun;//substr($periode,0,4);
		///$thn2 = floatval(substr($periode,0,4)) - 1;
        
            $ubis = "";
			$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$cfu' order by rowindex");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as ". $row->kode_cfu. "";
                $sql = " select x.kode_akun,  sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
							from bpc_relakun x
                            inner join bpc_mapakun z on z.akun_konsol = x.kode_akun 
							inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$row->kode_cfu' or t.kode_cfu = '$row->kode_cfu' ) 
                            where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_akun";
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_akun, $line->aggthn);
				}
				$dataUbis->set($row->kode_cfu, $itemUbis);
			}
            if ($cfu != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$cfu' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
            }else {
                $join1 = "";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
            }
        
            $sql = "select distinct a.kode_neraca, c.kode_akun,left_pad(c.nama,a.level_spasi + 1) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(c.nilai, 0) as penetapan, (nvl(b.aggthn,0)) as aggthn,nvl(c.nilai, 0) - (nvl(b.aggthn,0))   as selisih $field
											from bpc_neraca a
                                            inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and d.kode_fs = a.kode_fs and d.kode_lokasi = a.kode_lokasi
                                            inner join bpc_masakun c on c.kode_akun = d.kode_akun and c.kode_lokasi = a.kode_lokasi 
											left outer join (select x.kode_neraca, x.kode_akun, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
															from bpc_relakun x
															inner join bpc_mapakun z on z.akun_konsol = x.kode_akun 
                                                            $join1
							                                inner join bpc_mbudget_rkm y on y.kode_akun = z.kode_akun and y.tahun = '$thn1' and jenis = 'S' and z.kode_lokasi = y.kode_lokasi
															$join2
															where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
                                                            group by x.kode_neraca, x.kode_akun) b on b.kode_neraca = a.kode_neraca and b.kode_akun = c.kode_akun 
											left outer join bpc_penetapan c on c.kode_lokasi = '$lokasi' and c.kode_neraca = a.kode_neraca and c.tahun = '$thn1' and c.kode_ubis = 'NAS' and a.kode_fs = c.model
										where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
										order by c.kode_akun";
            //error_log($sql);
            $rs = $this->dbLib->execute($sql);
            $node = "";
		$result = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
            if ($row->jenis_akun == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $key = strtoupper($key);
					eval ("\$tmp = \$itemUbis->get(\$row->kode_akun) * -1 ;");
                    if ($tmp == null)
                        eval ("\$row->$key = 0;" );
                    else eval ("\$row->$key = $tmp;" );
				}
				$row->penetapan = $row->penetapan * -1  ;
				$row->aggthn = $row->aggthn * -1 ;
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $key = strtoupper($key);
					eval ("\$tmp = \$itemUbis->get(\$row->kode_akun);");
                    if ($tmp == null)
                        eval ("\$row->$key = 0;" );
                    else eval ("\$row->$key = $tmp;" );
				}
			}
            if ($row->aggthn != 0){
                $tmp = $result->get($row->kode_neraca);
                if ($tmp == null){
                    $tmp = new server_util_arrayList();
                }
                //error_log(json_encode($row));
                $tmp->add($row);
                $result->set($row->kode_neraca, $tmp);    
            }
			
		}
		
		return ($result);   
    }
	function getDataAkunJejerAP($induk,$model, $periode, $tipe, $pembagi){
        global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		
		///$thn2 = floatval(substr($periode,0,4)) - 1;
			if (strtoupper($tipe) == "GROSS" || $tipe == ""){
				$addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
				$jenis = " and t.jenis in ('TB') ";
				$filterBudget = " and not kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
			}else {
				$jenis = "  ";
				$filterBudget = "  ";
			}
			$ubis = "";
			$rsUbis = $this->dbLib->execute("select  nama, kode_lokasi, cocd, ba_consol, case when cocd = '9000' then 99 else no_urut end as no_urut from bpc_lokasi where kode_induk in (select kode_lokasi from bpc_lokasi where cocd = '$induk' ) or cocd = '$induk' order by no_urut ");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			
			//error_log("select  nama, kode_lokasi, cocd from bpc_lokasi where kode_lokkonsol = '$induk'  order by cocd");
			$rs = $this->dbLib->execute("select ba_consol from bpc_lokasi start with cocd = '$induk' connect by kode_induk = prior kode_lokasi ");
			$ba_console = "";
			if ($induk != "9000"){
				while ($row =$rs->FetchNextObject(false)){
					if ($ba_console != "") $ba_console .= " or ";
					$ba_console .= " t.kode_ubis like '__" . trim($row->ba_consol) ."%' ";
				}
			}
			if ($ba_console != "")
			{
				$ba_console = " and ($ba_console)";
			}
			//error_log($ba_console);
			$filterBA = "";
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as actsd_". $row->cocd. "";
				//error_log("Process $row->cocd");
				if ($row->cocd != "9000"){
					$ba_console2 = "";
					if ($row->cocd != "9000"){
						$filterBA .= " or ( t.kode_ubis like '__$row->ba_consol%' ) ";
						$rs = $this->dbLib->execute("select ba_consol from bpc_lokasi start with cocd = '$row->cocd' connect by kode_induk = prior kode_lokasi ");
						while ($row2 =$rs->FetchNextObject(false)){
							if ($ba_console2 != "") $ba_console2 .= " or ";
							$ba_console2 .= " t.kode_ubis like '__" . trim($row2->ba_consol) ."%' ";
							$filterBA .= " or ( t.kode_ubis like '__$row2->ba_consol%' ) ";
						}
					}
					if ($ba_console2 != "")
					{
						$ba_console2 = " and ($ba_console2)";
					}
					//error_log("cocd " . $row->cocd);
					if ( in_array($row->cocd, array("98","97","96") ) &&  strtoupper($tipe) == "GROSS" ){
						if ($row->cocd == "98")
							$filterElim = " and t.jenis = 'AD'";
						else if ($row->cocd == "97")
							$filterElim = " and t.jenis = 'RL'";
						else if ($row->cocd == "96")
							$filterElim = " and t.jenis = 'IJ'";

						$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
							from bpc_relakun x
                            left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and  t.periode like '".$thn1."%' 
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'   $filterElim  $ba_console group by x.kode_akun
                                                                ) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%'
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterElim $ba_console
                                        group by x.kode_akun
                                        
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0 or sum(nvl(v.actcm, 0)) <> 0"; 
						error_log("$row->cocd => $sql ");
					}else {
						/*
						if ($row->ba_consol == "2") {
							$addMetra = " and ( t.kode_ubis like '__$row->ba_consol%' ) ";
							$filterBA .= " or ( t.kode_ubis like '__$row->ba_consol%' ) ";
						} else {
							$addMetra = " and ( t.kode_ubis like '__$row->ba_consol%')" ;
							$filterBA .= " or ( t.kode_ubis like '__$row->ba_consol%' ) ";
						}
						*/

						$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
							from bpc_relakun x
                            left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and  t.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $ba_console2 group by x.kode_akun
                                                                ) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' $ba_console2
                                        group by x.kode_akun
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0 or sum(nvl(v.actcm, 0)) <> 0";
							error_log("$row->cocd => $sql ");
					}
				}else { 
					if ($filterBA != ""){
						$filtering = substr($filterBA, 4, strlen($filterBA));
						$filtering = " and ( $filtering )";
					}
					if ($induk == "9000"){
						$filtering = " ";/* and not t.kode_ubis in (select concat('TG',a.ba_consol) as ba_consol from bpc_lokasi a 
											inner join bpc_lokasi b on b.kode_lokasi = a.KODE_INDUK
											where b.cocd ='1004') ";
											*/
						
					}
                	$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
							from bpc_relakun x
                            left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join BPC_SAP_transcfu t on t.kode_akun = x.kode_akun and  t.periode like '".$thn1."%'
																	where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filtering 
																		
																	group by x.kode_akun
                                                                ) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' 
										inner join bpc_lokasi z on z.kode_lokasi = t.kode_lokasi
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi'  $filtering  
                                        group by x.kode_akun
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0 or sum(nvl(v.actcm, 0)) <> 0";
					//error_log("ConsoleAKun $sql");
				}
                
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_akun, $line);
				}
				$dataUbis->set($row->cocd, $itemUbis);
			} 
            
            $filterLokasi = ""; 
            
			if ($induk != "9000")
            	$filterLokasi = "  and z.kode_induk in ( select kode_lokasi from bpc_lokasi where cocd = '$induk' ) ";
            if ($filterBA != ""){
				$filterBA = substr($filterBA, 4, strlen($filterBA));
				$filterBA = " and ( $filterBA )";
			}

            $sql = "select distinct a.kode_neraca, d.kode_akun, e.nama as nama, a.tipe, upper(e.jenis) as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex 
                                        	, nvl(t.actsd,0) as actsd
											, nvl(t.actcm,0) as actcm
                                                    $field
											from bpc_neraca a
                                            inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and a.kode_lokasi = d.kode_lokasi and d.kode_fs = a.kode_fs
                                            inner join bpc_masakun e on e.kode_akun = d.kode_akun and e.kode_lokasi = a.kode_lokasi 
											left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join BPC_SAP_transcfu t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBA group by x.kode_akun
                                                                ) t on t.kode_akun = d.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi'
                                            
                                        union
                                        select '999999', a.kode_akun, concat(a.kode_akun, concat('-',a.nama)) as nama,'-',a.jenis,'-',0,'00',1000
                                            , sum(nvl(v.actsd, 0)) as actsd
											, sum(nvl(v.actcm, 0)) as actcm
                                              $field
                                        from bpc_masakun a
                                        left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun
                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                    from bpc_masakun x
                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                    inner join bpc_lokasi z on z.kode_lokasi = t.kode_lokasi
                                                    left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                                    where  b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterBA
                                                    group by x.kode_akun
                                                    having sum(nvl(t.nilai,0)) <> 0
                                        ) v on v.kode_akun = a.kode_akun
                                        where x.kode_akun is null and a.kode_lokasi ='$lokasi' and substr(a.kode_akun,1,1) in ('4','5','6','7','8')
                                        group by a.kode_akun, a.nama, a.jenis
                                        order by kode_neraca";
			//error_log("Console LineUp AP Actual -> " . $sql);
            $rs = $this->dbLib->execute($sql);
            $node = "";
		    $result = new server_util_Map();        
            $neraca = "";
			$notOthers = array("1000","1008","96","97","98","99","9000");
            while ($row = $rs->FetchNextObject(false)){
                if ($row->jenis_akun == "PENDAPATAN"){
                    foreach ($dataUbis->getArray() as $key => $itemUbis){
                        $tmp = $itemUbis->get($row->kode_akun);
						if ($tmp == null){
							eval ("\$row->actsd_$key = 0;");
							eval ("\$row->actcm_$key = 0;");
						}else {
                        	eval ("\$row->actsd_$key = round($tmp->actsd / $pembagi) * -1;");
							eval ("\$row->actcm_$key = round($tmp->actcm / $pembagi) * -1;");
							if (!in_array($key ."", $notOthers)){
								eval ("\$row->actsd_others += round(\$tmp->actsd / $pembagi) * -1;");
								eval ("\$row->actcm_others += round(\$tmp->actcm / $pembagi) * -1;");
							}	
						}
                    }
                    $row->actsd = round($row->actsd / $pembagi) * -1;    
                    $row->jenis = "INC";
                }else {
                    foreach ($dataUbis->getArray() as $key => $itemUbis){
                        $tmp = $itemUbis->get($row->kode_akun);
						if ($tmp == null){
							eval ("\$row->actsd_$key = 0;");
							eval ("\$row->actcm_$key = 0;");
						}else{
                        	eval ("\$row->actsd_$key = round($tmp->actsd / $pembagi);");
							eval ("\$row->actcm_$key = round($tmp->actcm / $pembagi);");
							if (!in_array($key ."", $notOthers)){
								eval ("\$row->actsd_others += round(\$tmp->actsd / $pembagi);");
								eval ("\$row->actcm_others += round(\$tmp->actcm / $pembagi);");
							}	
						}
                    }
					$row->actsd = round($row->actsd / $pembagi );
                    $row->jenis = "EXP";
                }
                

                if ($neraca != $row->kode_neraca){
                    $neraca = $row->kode_neraca;
                    $item = array();
                }
                //$item[] = (array) $row;
                //$result->set($neraca, $item);
                $allZero = true;
                $rowItem = (array)$row;
				//a.kode_neraca, d.kode_akun, e.nama as nama, a.tipe, '-' as jenis, upper(e.jenis) as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex
				foreach ($rowItem as $key => $value) {
					if ($key != "kode_neraca" && $key != "kode_akun" && $key != "nama" && $key != "tipe" && $key != "jenis_akun" && $key != "sum_header" && $key != "level_spasi" && $key != "kode_induk" && $key != "rowindex"){
						if ($value != 0)
							$allZero = false;
					}
						
				}
				if (!$allZero) {
					$item[] = (array) $row;
                	$result->set($neraca, $item);
				}
            }
            return $result;
    }
    function downloadJejerDataAP($induk, $model, $periode, $tipe, $pembagi, $short = null){
		$this->getDb();
		
		if (!isset($short)){
			$short = "long";
		}
		$short = strtolower($short);
		if (!isset($induk) || $induk == "") $induk = $this->lokasi;//
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("CFU")
						 ->setSubject("CFU")
						 ->setDescription("Jejer CFU ")
						  ->setKeywords("Jejer CFU")
							 ->setCategory("CFU");
 
        $data = $this->getDataJejerAP($induk, $model, $periode, $tipe, $pembagi);					
		$akun = $this->getDataAkunJejerAP($induk, $model,$periode, $tipe, $pembagi);
			
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
        
        $column = array("Account","Uraian","Tipe","Level");
        $rsUbis = $this->dbLib->execute("select kode_lokasi, nama, cocd,case when cocd = '9000' then 99 else no_urut end as no_urut from bpc_lokasi where kode_induk in ( select kode_lokasi from bpc_lokasi where cocd = '$induk' ) or cocd = '$induk'  order by no_urut");
        $field = array("kode_neraca","nama","jenis","level_spasi");
		$field2 = array("kode_neraca","nama","jenis","level_spasi");
		$fieldShort = array("kode_neraca","nama","jenis","level_spasi","actsd_1000","actsd_1008","actsd_others");
		$fieldShort2 = array("kode_neraca","nama","jenis","level_spasi","actcm_1000","actcm_1008","actcm_others");
		$columnShort = array("Account","Uraian","Tipe","Level");
		$columnOthers = array("title" => "Others", "childs" => array(
				"Total Others"
		));
        while ($row = $rsUbis->FetchNextObject(false)){
            
			$column[] = $row->nama;
            $field[] = "actsd_".$row->cocd;
			$field2[] = "actcm_".$row->cocd;
			if ($row->cocd == "1000" || $row->cocd == "1008"){
				$columnShort[] = $row->nama;
			}
			if ($row->cocd == "96"){
				$column[] = "Telkom Consolidated (PSAK)";
				$field[] = "actsd";
				$field2[] = "actcm";
				$fieldShort[] = "actsd";
				$fieldShort2[] = "actcm";
				$columnShort[] = $columnOthers;
				$columnShort[] = "Telkom Consolidated (PSAK)";
				
			}
			if ($row->cocd == "96" || $row->cocd == "97" || $row->cocd == "98" || $row->cocd == "99" || $row->cocd == "9000"){
				$fieldShort[] = "actsd_" . $row->cocd;
				$fieldShort2[] = "actcm_". $row->cocd;
				$columnShort[] = $row->nama;
			}else if ($row->cocd != "1000" && $row->cocd != "1008"){
				$columnOthers["childs"][] = $row->nama;
				$fieldShort[] = "actsd_" . $row->cocd;
				$fieldShort2[] = "actcm_". $row->cocd;
			}
        }
		
		$col = 0;
		$row = 1;
		if ($short == "short"){
			
			foreach ($columnShort as $value){	
				if (is_array($value)){
					$sheet->setCellValueByColumnAndRow($col, $row, $value["title"]);
					$childs = $value["childs"];
					$start = PHPExcel_Cell::stringFromColumnIndex($col);
					$end = PHPExcel_Cell::stringFromColumnIndex($col + count($childs) - 1 );
					$sheet->mergeCells($start.$row.":".$end.$row);
					$rowTmp = $row + 1;
					$colTmp = $col;
					foreach($childs as $value2){
						$sheet->setCellValueByColumnAndRow($colTmp, $rowTmp, $value2);
						$colTmp++;
					}
					$col = $colTmp - 1;
				}else {
					$sheet->setCellValueByColumnAndRow($col, $row, $value);
					$start = PHPExcel_Cell::stringFromColumnIndex($col);
					$sheet->mergeCells($start.$row.":".$start.($row + 1));
				}
				
				$col++;
			}
			$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
			$sheet->setSharedStyle($sharedStyle1,"A1:".$end."2");
			$row++;
		}else {
			foreach ($column as $value){	
				$sheet->setCellValueByColumnAndRow($col, $row, $value);
				$col++;
			}
			$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
			$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		}
		
		
        try{
			error_log("Download $short");
			if ($short == "short"){
				$field = $fieldShort;
				$field2 = $fieldShort2;
			}
            foreach ($data["rs"]["rows"] as $val){
                $row++;
                $col = 0;
                foreach ($field as $f){
                    if ($f == "nama")
                        $sheet->setCellValueByColumnAndRow($col, $row, str_replace("&nbsp;"," ",$val[$f]) );    
                    else 
                        $sheet->setCellValueByColumnAndRow($col, $row, $val[$f]);    
                    $col++;
                }

                $listAkun = $akun->get($val["kode_neraca"]);
                foreach ($listAkun as $item){
                    $row++;
                    $col = 0;
                    foreach ($field as $i => $f){
                        if ($i == 0)
                            $sheet->setCellValueByColumnAndRow($col, $row, $item["kode_akun"]);    
                        else
                            $sheet->setCellValueByColumnAndRow($col, $row, $item[$f]);    
                        $col++;
                    }
                    
                }

            }
        }catch(Exception $e){
            error_log($e->getMessage);
        }
        
		$sheet->setTitle("$induk YTD");

		$sheet = $objPHPExcel->createSheet();
		$col = 0;
		$row = 1;
		if ($short == "short"){
			
			foreach ($columnShort as $value){	
				if (is_array($value)){
					$sheet->setCellValueByColumnAndRow($col, $row, $value["title"]);
					$childs = $value["childs"];
					$start = PHPExcel_Cell::stringFromColumnIndex($col);
					$end = PHPExcel_Cell::stringFromColumnIndex($col + count($childs) - 1 );
					$sheet->mergeCells($start.$row.":".$end.$row);
					$rowTmp = $row + 1;
					$colTmp = $col;
					foreach($childs as $value2){
						$sheet->setCellValueByColumnAndRow($colTmp, $rowTmp, $value2);
						$colTmp++;
					}
					$col = $colTmp - 1;
				}else {
					$sheet->setCellValueByColumnAndRow($col, $row, $value);
					$start = PHPExcel_Cell::stringFromColumnIndex($col);
					$sheet->mergeCells($start.$row.":".$start.($row + 1));
				}
				
				$col++;
			}
			$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
			$sheet->setSharedStyle($sharedStyle1,"A1:".$end."2");
			$row++;
		}else {
			foreach ($column as $value){	
				$sheet->setCellValueByColumnAndRow($col, $row, $value);
				$col++;
			}
			$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
			$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        try{
            foreach ($data["rs"]["rows"] as $val){
                $row++;
                $col = 0;
                foreach ($field2 as $f){
                    if ($f == "nama")
                        $sheet->setCellValueByColumnAndRow($col, $row, str_replace("&nbsp;"," ",$val[$f]) );    
                    else 
                        $sheet->setCellValueByColumnAndRow($col, $row, $val[$f]);    
                    $col++;
                }

                $listAkun = $akun->get($val["kode_neraca"]);
                foreach ($listAkun as $item){
                    $row++;
                    $col = 0;
                    foreach ($field2 as $i => $f){
                        if ($i == 0)
                            $sheet->setCellValueByColumnAndRow($col, $row, $item["kode_akun"]);    
                        else
                            $sheet->setCellValueByColumnAndRow($col, $row, $item[$f]);    
                        $col++;
                    }
                    
                }

            }
        }catch(Exception $e){
            error_log($e->getMessage);
        }
		$sheet->setTitle("$induk CM");
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/LineUpSubs_$namafile.xlsx");
	
 
		return "/tmp/LineUpSubs_$namafile.xlsx";
	}
	function saveJejerAPToSummary($induk, $model, $periode, $tipe, $pembagi){
		$this->getDb();
		
		if (!isset($induk) || $induk == "") $induk = $this->lokasi;//
		$this->cleanUp();
		$data = $this->getDataJejerAP($induk, $model, $periode, $tipe, $pembagi);					
		$dataAkun = $this->getDataAkunJejerAP($induk, $model,$periode, $tipe, $pembagi);

		$rsUbis = $this->dbLib->execute("select kode_lokasi, nama, cocd, ba_consol, case when cocd = '9000' then 99 else no_urut end as no_urut from bpc_lokasi where kode_induk in ( select kode_lokasi from bpc_lokasi where cocd = '$induk' ) or cocd = '$induk'  order by no_urut");
		$listCocd = array();
		while ($row = $rsUbis->FetchNextObject(false)){
			$listCocd[] = $row;
		}
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_summary_exsum where periode = '$periode' and kode_fs = '$model' and status_nilai = '$tipe' ");
		$sql->add("delete from bpc_summary_exsum_d where periode = '$periode' and kode_fs = '$model'  and status_nilai = '$tipe' ");
		foreach ($data["rs"]["rows"] as $val){
			$row = json_decode(json_encode($val));
			foreach ($listCocd as $rowCocd){
				$sql->add(new server_util_Map(array(
						"tipe" => "param",
						"sql" => "insert into bpc_summary_exsum(
									kode_lokasi, kode_ubis_cons, kode_cfu, kode_neraca, nama,  tipe, jenis_akun, sum_header, level_spasi, kode_induk, rowindex, actbln, actsd, periode, no_urut, kode_fs, tgl_process, status_nilai)
									values(:0, :1, :2, :3, :4, :5, :6,:7,:8,:9,:10,:11,:12,:13,:14, :15, sysdate,:17)",
						"value" => array($rowCocd->cocd, $rowCocd->ba_consol, '-', $row->kode_neraca,  str_replace("&nbsp;"," ",$row->nama), $row->tipe, $row->jenis_akun, $row->sum_header,
										 $row->level_spasi, $row->kode_induk, $row->rowindex, $val["actcm_".$rowCocd->cocd], $val["actsd_".$rowCocd->cocd], $periode, $row->rowindex, $model,0, $tipe )
					)));

			}
			$akun = $dataAkun->get($row->kode_neraca);
			foreach ($akun as $val){
				$row = json_decode(json_encode($val));
				foreach ($listCocd as $rowCocd){
					$sql->add(new server_util_Map(array(
							"tipe" => "param",
							"sql" => "insert into bpc_summary_exsum_d(
										kode_lokasi, kode_ubis_cons, kode_cfu, kode_akun, nama,  tipe, jenis_akun, sum_header, level_spasi, kode_neraca, rowindex, actbln, actsd, periode, no_urut, kode_fs, tgl_process, status_nilai)
										values(:0, :1, :2, :3, :4, :5, :6,:7,:8,:9,:10,:11,:12,:13,:14, :15, sysdate,:17)",
							"value" => array($rowCocd->cocd, $rowCocd->ba_consol, '-', $row->kode_akun,  str_replace("&nbsp;"," ",$row->nama), $row->tipe, $row->jenis_akun, $row->sum_header,
											 $row->level_spasi, $row->kode_neraca, $row->rowindex, $val["actcm_".$rowCocd->cocd], $val["actsd_".$rowCocd->cocd], $periode, $row->rowindex, $model,date(), $tipe )
						)));
	
				}
			}
		}
		

		$ret = $this->dbLib->execArraySQL($sql);
		return $ret;

	}

	//Jejer Actual AP Elim
	function getDataJejerAPElim($induk, $model, $periode, $tipe, $elimType, $pembagi){
        global $satuan;
        
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
        if ($induk == "") $induk = "9000";
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		///$thn2 = floatval(substr($periode,0,4)) - 1;
		if (strtolower( $elimType ) == "ijpa") 
			$elimType = "IJ";
		else if (strtolower( $elimType ) == "adjusment") 
			$elimType = "AD";
		else $elimType = "RL";
		
        if (strtoupper($tipe) == "CONSOL"){
            $jenis = " and t.jenis = '$elimType'";//,'AD'
        }else {
            $jenis = " and t.jenis = '$elimType'";//,'AD'
			//$jenis = " and t.jenis in ('TB') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";
            $filterBudget = "  ";
        }

			
        	
            $ubis = "";
			$rsUbis = $this->dbLib->execute("select  nama, kode_lokasi, cocd, ba_consol, case when cocd = '9000' then 99 else no_urut end as no_urut from bpc_lokasi where kode_induk in (select kode_lokasi from bpc_lokasi where cocd = '9000' ) or cocd = '9000' order by no_urut ");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			$ba_console = "";
			if ($induk != "9000")
			{
				$rs = $this->dbLib->execute("select ba_consol from bpc_lokasi start with cocd = '9000' connect by kode_induk = prior kode_lokasi ");
				while ($row =$rs->FetchNextObject(false)){
					if ($ba_console != "") $ba_console .= " or ";
					$ba_console .= " t.kode_ubis like '__" . trim($row->ba_consol) ."%' ";
				}
			}
			if ($ba_console != "")
			{
				$ba_console = " and ($ba_console)";
			}
			
			$filterBA = "";
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as actsd_". $row->cocd. "";
				
				if ($row->cocd != "9000"){
					$ba_console2 = "";
					if ($row->cocd != "9000"){
						if (strtoupper($tipe) == "CONSOL"){
							$filterBA .= " or ( t.kode_ubis like '__$row->ba_consol%' ) ";
							$rs = $this->dbLib->execute("select ba_consol from bpc_lokasi start with cocd = '$induk' connect by kode_induk = prior kode_lokasi ");
							while ($row2 =$rs->FetchNextObject(false)){
								if ($ba_console2 != "") $ba_console2 .= " or ";
								$ba_console2 .= " t.kode_ubis like '__" . trim($row2->ba_consol) ."%' ";
								$filterBA .= " or ( t.kode_ubis like '__$row2->ba_consol%' ) ";
							}
						}else{
							$filterBA .= " or ( t.kode_ubis like '__$row->ba_consol%' ) ";
							$rs = $this->dbLib->execute("select ba_consol from bpc_lokasi start with kode_lokasi = '$row->kode_lokasi' connect by kode_induk = prior kode_lokasi ");
							while ($row2 =$rs->FetchNextObject(false)){
								if ($ba_console2 != "") $ba_console2 .= " or ";
								$ba_console2 .= " t.kode_ubis like '__" . trim($row2->ba_consol) ."%' ";
								$filterBA .= " or ( t.kode_ubis like '__$row2->ba_consol%' ) ";
							}
						}
					}
					if ($ba_console2 != "")
					{
						$ba_console2 = " and ($ba_console2)";
					}
					if ( in_array($row->cocd, array("98","97","96") ) &&  strtoupper($tipe) == "GROSS" ){
						if ($row->cocd == "98" )
							$filterElim = " and t.jenis = 'AD'";
						else if ($row->cocd == "97")
							$filterElim = " and t.jenis = 'RL'";
						else if ($row->cocd == "96")
							$filterElim = " and t.jenis = 'IJ'";

						$sql = " select x.kode_neraca, nvl(v.actsd, 0) as actsd, nvl(v.actcm, 0) as actcm
							from bpc_neraca x
                            left outer join (select x.kode_neraca
                                        , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                        , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                from bpc_relakun x
                                inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' 
                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterElim $ba_console group by x.kode_neraca
                               ) v on v.kode_neraca = x.kode_neraca
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
							union
							select '999999',  sum(nvl(v.actsd, 0)) as actsd,  sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' 
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterElim $ba_console
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            having sum(nvl(v.actsd, 0)) <> 0
                            ";
						
						//if ($row->cocd == "1004")
						//	error_log($sql);
					}else {
						if (strtoupper($tipe) == "CONSOL"){
							$addTableCFU = "inner join (select distinct a.kode_sub, a.kode_cfu, a.kode_lokasi ,  c.kode_cfu as subcfu
								from bpc_sap_mapba_lawan a 
								inner join bpc_cfu b on b.SUM_HEADER = a.kode_cfu 
								left outer join bpc_cfu c on b.kode_cfu = substr(c.kode_cfu,1,length(b.kode_cfu)) and c.kode_lokasi = a.kode_lokasi
								where a.kode = '02' ) y on substr(t.kode_pc, 5, 3) = y.kode_sub 
								";
							$addFilterLawan = $addTableCFU . " and y.kode_lokasi in ( SELECT kode_lokasi
										FROM bpc_lokasi
										start with kode_lokasi ='". $row->cocd. "' 
										CONNECT BY kode_induk = PRIOR kode_lokasi) ";
						}

			    		$sql = " select x.kode_neraca, nvl(v.actsd, 0) as actsd, nvl(v.actcm, 0) as actcm
							from bpc_neraca x
                            left outer join (select x.kode_neraca
                                        , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                        , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                from bpc_relakun x
								inner join BPC_SAP_transcfu t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
								$addFilterLawan
                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $ba_console2 group by x.kode_neraca
                               ) v on v.kode_neraca = x.kode_neraca
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
							union
							select '999999',  sum(nvl(v.actsd, 0)) as actsd,  sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' $ba_console2
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            having sum(nvl(v.actsd, 0)) <> 0
                            ";
						
							
					}
				}else {
					$jenis3 = $jenis;//nampilin consol
					if (strtoupper($tipe) == "NETT")
						$jenis3 = $jenis;

					if ($filterBA != ""){
						$filtering = substr($filterBA, 4, strlen($filterBA));
						$filtering = " and ( $filtering )";
					}
					if ($induk == "9000"){
						$filtering = "  " ;
						
					}
						//error_log($filtering);
					$sql = " select x.kode_neraca, nvl(v.actsd, 0) as actsd, nvl(v.actcm, 0) as actcm
							from bpc_neraca x
                            left outer join (select x.kode_neraca
                                        , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                        , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                from bpc_relakun x
                                inner join BPC_SAP_transcfu t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%'
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  $filtering 
									 group by x.kode_neraca
                               ) v on v.kode_neraca = x.kode_neraca
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
							union
							select '999999',  sum(nvl(v.actsd, 0)) as actsd,  sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%'  and not t.kode_ubis in ('TE2A','TM2A')
										inner join bpc_lokasi z on z.kode_lokasi = t.kode_lokasi
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi'  $filtering and not t.kode_ubis in ('TE2A','TM2A')
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            having sum(nvl(v.actsd, 0)) <> 0
                            ";
					//error_log($sql);
					
				}
				
                
				error_log($sql);
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_neraca, $line);
				}
				$dataUbis->set($row->cocd, $itemUbis);
			}
            /*
			if ($induk != "CFU0"){
				$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_cfu in ('CFUF','CFUG','CFUD') order by rowindex");
				while ($row = $rsUbis->FetchNextObject(false)){
					if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'IJ' ";
						$cfuElim = "96";
					}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
						$query = 1;
						$jenis2 = " and t.jenis = 'RL' ";
						if (strtoupper($tipe) == "NETT")
							$jenis2 .= " and t.kode_cfu = t.kode_cfu2";
						$cfuElim = "97";	
					}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'AD' ";
						$cfuElim = "98";
					}else {
						$query = 0;
						$jenis2 = " and t.jenis ='-' ";
					} 
					$field .= ",  0  as actsd_". $row->kode_cfu. "";
					
					{
						$sql = " select x.kode_neraca, sum(nvl(v.actsd, 0)) as actsd
								from bpc_neraca x
								left outer join (select x.kode_neraca
											, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
											, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
									from bpc_relakun x
									inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
									where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$cfuElim'  
									group by x.kode_neraca
								) v on v.kode_neraca = x.kode_neraca
													
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca
								union
								select '999999',  sum(nvl(v.actsd, 0)) as actsd
								from bpc_masakun a
								left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
								left outer join (select x.kode_akun
													, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
													, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
											from bpc_masakun x
											inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
											left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
											where b.kode_akun is null and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$cfuElim'
											group by x.kode_akun
											having sum(nvl(t.nilai,0)) <> 0
								) v on v.kode_akun = a.kode_akun
								where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
								having sum(nvl(v.actsd, 0)) <> 0
								";
					}
					//error_log($sql);
					
					$rs = $this->dbLib->execute($sql);
					$itemUbis = new server_util_Map();

					while ($line = $rs->FetchNextObject(false)){
						$itemUbis->set($line->kode_neraca, $line);
					}
					$dataUbis->set($cfuElim, $itemUbis);
				}
				
			}*/
        
            $filterLokasi = ""; 
            if ($induk != "9000")
            	$filterLokasi = " and z.kode_induk in ( select kode_lokasi from bpc_lokasi where cocd = '$induk' ) ";
            //combine TB
			if ($filterBA != ""){
				$filterBA = substr($filterBA, 4, strlen($filterBA));
				$filterBA = " and ( $filterBA )";
			}

            $sql = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(t.actsd,0) as actsd
													, nvl(t.actsd,0) as actcm
                                                     $field
											from bpc_neraca a
											left outer join (select x.kode_neraca
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_transcfu t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
																	where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBA 
                                                                     group by x.kode_neraca
                                                                ) t on t.kode_neraca = a.kode_neraca
                                         where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
										union 
										select '999999','UNMAPPED','-','BEBAN','-',0,'00',1000
                                            , sum(nvl(v.actsd, 0)) as actsd
											, sum(nvl(v.actcm, 0)) as actcm
                                             $field
                                        from bpc_masakun a
                                        left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun
                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                    from bpc_masakun x
                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis 
                                                    inner join bpc_lokasi z on z.kode_lokasi = t.kode_lokasi
                                                    left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                                    where  b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterBA
                                                    group by x.kode_akun
                                                    having sum(nvl(t.nilai,0)) <> 0
                                        ) v on v.kode_akun = a.kode_akun
                                        where x.kode_akun is null and a.kode_lokasi ='$lokasi'
                                         order by  rowindex";
            //error_log("console $sql ");
            $rs = $this->dbLib->execute($sql);
            $node = "";
		$rootNode = new server_util_NodeNRC("00");
		$this->sumHeader = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			if ($row->jenis_akun == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $tmp = $itemUbis->get($row->kode_neraca);
                    eval ("\$row->actsd_$key = \$tmp->actsd;");
					eval ("\$row->actcm_$key = \$tmp->actcm;");
				}
				$row->jenis = "INC";
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $tmp = $itemUbis->get($row->kode_neraca);
                    eval ("\$row->actsd_$key = \$tmp->actsd;");
					eval ("\$row->actcm_$key = \$tmp->actcm;");
				}
                $row->jenis = "EXP";
			}
			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$node->setData($row);
			if ($row->tipe == "SUMMARY")
				$this->sumHeader->set($row->kode_neraca, $node);

		}
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			//if ($lokasi == "10")
            {
				$this->summariesJejer($val);
				
				if ($val->data->sum_header != "-"){
					$summaryHeader = explode(",",$val->data->sum_header);

					foreach ($summaryHeader as $header){
						$nodeHeader = $this->sumHeader->get($header);
						if ($nodeHeader){
							foreach ($val->dataArray as $key => $value) {
								if ($key != "jenis_akun" && $key != "jenis" && $key != "kode_neraca" && $key != "nama" && $key != "tipe" && $key != "sum_header" && $key != "level_spasi" && $key != "rowindex"){
									$nodeHeader->dataArray[$key] += $value;
								}
							}
							$nodeHeader->data =(object) $nodeHeader->dataArray;
						}
					}
				}
			}
		}
		//perlu hitung ke summary
		$result = array('rs' => array('rows' => array() ) );
		$this->generateResultJejer($rootNode, $result);
        ///error_log("pembagi $pembagi ");
        //error_log(json_encode($result));
		return ($result);   
    }
    function getDataJejerAPElimDetail($induk, $model, $periode, $neraca, $tipe, $elimType, $pembagi){
        global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		///$thn2 = floatval(substr($periode,0,4)) - 1;
		if (strtolower( $elimType ) == "ijpa") 
			$elimType = "IJ";
		else if (strtolower( $elimType ) == "adjusment") 
			$elimType = "AD";
		else $elimType = "RL";
		
        if (strtoupper($tipe) == "NETT"){
            $jenis = " and t.jenis = '$elimType'";//,'AD'
        }else {
            $jenis = " and t.jenis = '$elimType'";//,'AD'
			//$jenis = " and t.jenis in ('TB') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";
            $filterBudget = "  ";
        }

        
            $ubis = "";
			$rsUbis = $this->dbLib->execute("select  nama, kode_lokasi, cocd, ba_consol, case when cocd = '9000' then 99 else no_urut end as no_urut from bpc_lokasi where kode_induk = '9000' or cocd = '9000' order by no_urut");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			$filterBA = "";
			$rs = $this->dbLib->execute("select ba_consol from bpc_lokasi start with cocd = '$induk' connect by kode_induk = prior kode_lokasi ");
			$ba_console = "";
			if ($induk != "9000"){
				while ($row =$rs->FetchNextObject(false)){
					if ($ba_console != "") $ba_console .= " or ";
					$ba_console .= " t.kode_ubis like '__" . trim($row->ba_consol) ."%' ";
				}
			}
			if ($ba_console != "")
			{
				$ba_console = " and ($ba_console)";
			}
			
			$filterBA = "";
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as actsd_". $row->cocd. "";
				
				if ($row->cocd != "9000"){
					$ba_console2 = "";
					if ($row->cocd != "9000"){
						if (strtoupper($tipe) == "CONSOL"){
							if ($filterBA != "") $filterBA .= " or ";
							$filterBA .= "  ( t.kode_ubis like '__$row->ba_consol%' ) ";
							$rs = $this->dbLib->execute("select ba_consol from bpc_lokasi start with cocd = '$induk' connect by kode_induk = prior kode_lokasi ");
							while ($row2 =$rs->FetchNextObject(false)){
								if ($ba_console2 != "") $ba_console2 .= " or ";
								$ba_console2 .= " t.kode_ubis like '__" . trim($row2->ba_consol) ."%' ";
								
								$filterBA .= " or ( t.kode_ubis like '__$row2->ba_consol%' ) ";
							}
						}else{
							if ($filterBA != "") $filterBA .= " or ";
							$filterBA .= " ( t.kode_ubis like '__$row->ba_consol%' ) ";
							$rs = $this->dbLib->execute("select ba_consol from bpc_lokasi start with cocd = '$row->cocd' connect by kode_induk = prior kode_lokasi ");
							while ($row2 =$rs->FetchNextObject(false)){
								if ($ba_console2 != "") $ba_console2 .= " or ";
								$ba_console2 .= " t.kode_ubis like '__" . trim($row2->ba_consol) ."%' ";
								$filterBA .= " or ( t.kode_ubis like '__$row2->ba_consol%' ) ";
							}
						}
					}
					if ($ba_console2 != "")
					{
						$ba_console2 = " and ($ba_console2)";
					}
					if ( in_array($row->cocd, array("98","97","96") ) ){
						if ($row->cocd == "98")
							$filterElim = " and t.jenis = 'AD'";
						else if ($row->cocd == "97")
							$filterElim = " and t.jenis = 'RL'";
						else if ($row->cocd == "96")
							$filterElim = " and t.jenis = 'IJ'";
						$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
							from bpc_relakun x
                            left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' 
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterElim $ba_console
																	group by x.kode_akun
                                                                ) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$neraca'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%'
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterElim $ba_console
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$induk'
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0";
							
					}else {
						if (strtoupper($tipe) == "CONSOL"){
							$addTableCFU = "inner join (select distinct a.kode_sub, a.kode_cfu, a.kode_lokasi ,  c.kode_cfu as subcfu
								from bpc_sap_mapba_lawan a 
								inner join bpc_cfu b on b.SUM_HEADER = a.kode_cfu 
								left outer join bpc_cfu c on b.kode_cfu = substr(c.kode_cfu,1,length(b.kode_cfu)) and c.kode_lokasi = a.kode_lokasi
								where a.kode = '02' ) y on substr(t.kode_pc, 5, 3) = y.kode_sub 
								";
							$addFilterLawan = $addTableCFU . " and y.kode_lokasi in ( SELECT kode_lokasi
										FROM bpc_lokasi
										start with kode_lokasi ='". $row->cocd. "' 
										CONNECT BY kode_induk = PRIOR kode_lokasi) ";
						}
						$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
							from bpc_relakun x
                            left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
																	inner join bpc_sap_transcfu t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
																	$addFilterLawan
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $ba_console2
																	group by x.kode_akun
                                                                ) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$neraca'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' $ba_console2 
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$neraca'
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0";
					}
				}else {
					if ($filterBA != ""){
						//$filtering = substr($filterBA, 4, strlen($filterBA));
						$filtering = " and ( $filterBA )";
					}

					if ($induk == "9000"){
						$filtering = " ";/* and not t.kode_ubis in (select concat('TG',a.ba_consol) as ba_consol from bpc_lokasi a 
											inner join bpc_lokasi b on b.kode_lokasi = a.KODE_INDUK
											where b.cocd ='1004') ";
						*/
					}
					$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
							from bpc_relakun x
                            left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join BPC_SAP_transcfu t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' 
																	inner join bpc_lokasi z on z.kode_lokasi = t.kode_lokasi
                                									where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  $filtering  
																	group by x.kode_akun
                                                                ) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$neraca'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' 
										inner join bpc_lokasi z on z.kode_lokasi = t.kode_lokasi
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi'  $filtering 
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$neraca'
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0";
				}
					
				
                
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_akun, $line);
				}
				$dataUbis->set($row->cocd, $itemUbis);
			}
            
			/*
			if ($induk != "CFU0"){
				$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_cfu in ('CFUF','CFUG','CFUD') order by rowindex");
				while ($row = $rsUbis->FetchNextObject(false)){
					if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'IJ' ";
					}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) <> "GROSS" && $tipe != "" ){
						$query = 1;
						$jenis2 = " and t.jenis = 'RL' ";
						if (strtoupper($tipe) == "NETT")
							$jenis2 .= " and t.kode_cfu = t.kode_cfu2";
					}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) == "CONSOL"){
						$query = 1;
						$jenis2 = " and t.jenis = 'AD' ";
					}else {
						$query = 0;
						$jenis2 = " and t.jenis ='-' ";
					} 
					$field .= ",  0  as actsd_". $row->kode_cfu. "";
					
					{
						$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd
							from bpc_relakun x
                            left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
																	where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$induk'  
                                                                    group by x.kode_akun
                                                                ) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$induk'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis2
										left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
										where b.kode_akun is null and x.kode_lokasi = '$lokasi' and t.kode_cfu = '$induk'
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$induk'
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0";
							
						
					}
					//error_log($sql);
					
					$rs = $this->dbLib->execute($sql);
					$itemUbis = new server_util_Map();

					while ($line = $rs->FetchNextObject(false)){
						$itemUbis->set($line->kode_neraca, $line);
					}
					$dataUbis->set($row->kode_cfu, $itemUbis);
				}
			}
			*/
            $filterLokasi = ""; 
            if ($induk != "9000")
            	$filterLokasi = " and z.kode_induk in ( select kode_lokasi from bpc_lokasi where cocd = '$induk' ) ";
			if ($filterBA != ""){
				//$filterBA = substr($filterBA, 4, strlen($filterBA));
				$filterBA = " and ( $filterBA )";
			}

            $sql = "select distinct d.kode_akun as kode_neraca, left_pad(concat(d.kode_akun,concat('-',e.nama)),a.level_spasi + 1) as nama, a.tipe,e.jenis as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex
													, nvl(t.actsd,0) as actsd
													, nvl(t.actcm,0) as actcm
                                                    $field
											from bpc_neraca a
                                            inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and a.kode_lokasi = d.kode_lokasi and d.kode_fs = a.kode_fs
                                            inner join bpc_masakun e on e.kode_akun = d.kode_akun and e.kode_lokasi = a.kode_lokasi 
											left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_transcfu t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBA group by x.kode_akun
                                                                ) t on t.kode_akun = d.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$neraca' 
                                            
                                        union
                                        select a.kode_akun, concat(a.kode_akun, concat('-',a.nama)) as nama,'-',a.jenis,'-',0,'00',1000
                                            , sum(nvl(v.actsd, 0)) as actsd
											, sum(nvl(v.actcm, 0)) as actcm
                                              $field
                                        from bpc_masakun a
                                        left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun
                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                    from bpc_masakun x
                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                    inner join bpc_lokasi z on t.kode_lokasi = z.kode_lokasi
                                                    left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                                    where  b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterBA
                                                    group by x.kode_akun
                                                    having sum(nvl(t.nilai,0)) <> 0
                                        ) v on v.kode_akun = a.kode_akun
                                        where x.kode_akun is null and a.kode_lokasi ='$lokasi' and '999999' = '$neraca'
                                        group by a.kode_akun, a.nama, a.jenis
                                        having  sum(nvl(v.actsd, 0)) <> 0
										order by kode_neraca";
			
            $rs = $this->dbLib->execute($sql);
            $node = "";
		$rootNode = new server_util_NodeNRC("00");
		$this->sumHeader = new server_util_Map();
        $result = array('rs' => array('rows' => array() ) );
		while ($row = $rs->FetchNextObject(false)){
            if ($row->jenis_akun == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    //$key = strtoupper($key);
                    $tmp = $itemUbis->get($row->kode_neraca);
                    if ($tmp == null){
                        eval ("\$row->$key = 0;");
                        eval ("\$row->actsd_$key = 0;");
						eval ("\$row->actcm_$key = 0;");
                    }else {
                        eval ("\$row->actsd_$key = round(\$tmp->actsd / $pembagi) * -1;");
                        eval ("\$row->actcm_$key = round(\$tmp->actcm / $pembagi) * -1;");
                    }
					
				}
				$row->jenis = "INC";
                $row->actsd = round($row->actsd / $pembagi) * -1;
                //error_log("PDRPT " . json_encode($row));
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    //$key = strtoupper($key);
					$tmp = $itemUbis->get($row->kode_neraca);
                    if ($tmp == null){
                        eval ("\$row->$key = 0;");
                        eval ("\$row->actsd_$key = 0;");
						eval ("\$row->actcm_$key = 0;");
                    }else {
                        eval ("\$row->actsd_$key = \$tmp->actsd / $pembagi;");
						eval ("\$row->actcm_$key = \$tmp->actcm / $pembagi;");
                    }
				}
                $row->aggsd = $row->aggsd  / $pembagi;
                $row->actsd = round($row->actsd / $pembagi);
                $row->jenis = "EXP";
			}
            //if ($row->aggsd != 0 || $row->actsd != 0)
			//     $result["rs"]["rows"][] = (array)$row;
			$allZero = true;
			$item = (array)$row;
			//error_log("$row->kode_neraca => " . json_encode($item));
			foreach ($item as $key => $value) {
				if ($key != "kode_neraca" && $key != "kode_akun" && $key != "nama" && $key != "tipe" && $key != "jenis_akun" && $key != "sum_header" && $key != "level_spasi" && $key != "kode_induk" && $key != "rowindex"){
					//error_log("getDataEXSUMCFUDetail $key = $value;");
					if (abs($value) != 0){
						$allZero = false;
					}
				}
					
			}
			if (!$allZero)
				$result["rs"]["rows"][] = (array)$row;
			
		}
        //error_log($sql);
		return ($result);   
    }
    function getDataJejerAPElimDetailReport($cfu,$model,$periode, $tipe,$elimType, $pembagi){
        
        global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = $tahun;//substr($periode,0,4);
		///$thn2 = floatval(substr($periode,0,4)) - 1;
        
            $ubis = "";
			$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$cfu' order by rowindex");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as ". $row->kode_cfu. "";
                $sql = " select x.kode_akun,  sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
							from bpc_relakun x
                            inner join bpc_mapakun z on z.akun_konsol = x.kode_akun 
							inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$row->kode_cfu' or t.kode_cfu = '$row->kode_cfu' ) 
                            where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_akun";
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_akun, $line->aggthn);
				}
				$dataUbis->set($row->kode_cfu, $itemUbis);
			}
            if ($cfu != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$cfu' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
            }else {
                $join1 = "";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
            }
        
            $sql = "select distinct a.kode_neraca, c.kode_akun,left_pad(c.nama,a.level_spasi + 1) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(c.nilai, 0) as penetapan, (nvl(b.aggthn,0)) as aggthn,nvl(c.nilai, 0) - (nvl(b.aggthn,0))   as selisih $field
											from bpc_neraca a
                                            inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and d.kode_fs = a.kode_fs and d.kode_lokasi = a.kode_lokasi
                                            inner join bpc_masakun c on c.kode_akun = d.kode_akun and c.kode_lokasi = a.kode_lokasi 
											left outer join (select x.kode_neraca, x.kode_akun, sum(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as aggthn
															from bpc_relakun x
															inner join bpc_mapakun z on z.akun_konsol = x.kode_akun 
                                                            $join1
							                                inner join bpc_mbudget_rkm y on y.kode_akun = z.kode_akun and y.tahun = '$thn1' and jenis = 'S' and z.kode_lokasi = y.kode_lokasi
															$join2
															where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
                                                            group by x.kode_neraca, x.kode_akun) b on b.kode_neraca = a.kode_neraca and b.kode_akun = c.kode_akun 
											left outer join bpc_penetapan c on c.kode_lokasi = '$lokasi' and c.kode_neraca = a.kode_neraca and c.tahun = '$thn1' and c.kode_ubis = 'NAS' and a.kode_fs = c.model
										where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
										order by c.kode_akun";
            //error_log($sql);
            $rs = $this->dbLib->execute($sql);
            $node = "";
		$result = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
            if ($row->jenis_akun == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $key = strtoupper($key);
					eval ("\$tmp = \$itemUbis->get(\$row->kode_akun) * -1 ;");
                    if ($tmp == null)
                        eval ("\$row->$key = 0;" );
                    else eval ("\$row->$key = $tmp;" );
				}
				$row->penetapan = $row->penetapan * -1  ;
				$row->aggthn = $row->aggthn * -1 ;
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $key = strtoupper($key);
					eval ("\$tmp = \$itemUbis->get(\$row->kode_akun);");
                    if ($tmp == null)
                        eval ("\$row->$key = 0;" );
                    else eval ("\$row->$key = $tmp;" );
				}
			}
            if ($row->aggthn != 0){
                $tmp = $result->get($row->kode_neraca);
                if ($tmp == null){
                    $tmp = new server_util_arrayList();
                }
                //error_log(json_encode($row));
                $tmp->add($row);
                $result->set($row->kode_neraca, $tmp);    
            }
			
		}
		
		return ($result);   
    }
	function getDataAkunJejerAPElim($induk,$model, $periode, $tipe,$elimType, $pembagi){
        global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		if (strtolower( $elimType ) == "ijpa") 
			$elimType = "IJ";
		else if (strtolower( $elimType ) == "adjusment") 
			$elimType = "AD";
		else $elimType = "RL";
		
		///$thn2 = floatval(substr($periode,0,4)) - 1;
		if (strtoupper($tipe) == "NETT"){
            $jenis = " and t.jenis = '$elimType'";//,'AD'
        }else {
            $jenis = " and t.jenis = '$elimType'";//,'AD'
			//$jenis = " and t.jenis in ('TB') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";
            $filterBudget = "  ";
        }

			$ubis = "";
			$rsUbis = $this->dbLib->execute("select  nama, kode_lokasi, cocd, ba_consol, case when cocd = '9000' then 99 else no_urut end as no_urut from bpc_lokasi where kode_induk = '9000 or cocd = '9000' order by no_urut ");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			
			//error_log("select  nama, kode_lokasi, cocd from bpc_lokasi where kode_lokkonsol = '$induk'  order by cocd");
			$rs = $this->dbLib->execute("select ba_consol from bpc_lokasi start with cocd = '9000' connect by kode_induk = prior kode_lokasi ");
			$ba_console = "";
			if ($induk != "9000"){
				while ($row =$rs->FetchNextObject(false)){
					if ($ba_console != "") $ba_console .= " or ";
					$ba_console .= " t.kode_ubis like '__" . trim($row->ba_consol) ."%' ";
				}
			}
			if ($ba_console != "")
			{
				$ba_console = " and ($ba_console)";
			}
			//error_log($ba_console);
			$filterBA = "";
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as actsd_". $row->cocd. "";
				//error_log("Process $row->cocd");
				if ($row->cocd != "9000"){
					$ba_console2 = "";
					if ($row->cocd != "9000"){
						if ($filterBA != "") $filterBA .= " or ";
						$filterBA .= "  ( t.kode_ubis like '__$row->ba_consol%' ) ";
						if (strtoupper($tipe) == "NETT"){
							$rs = $this->dbLib->execute("select ba_consol from bpc_lokasi start with cocd = '$induk' connect by kode_induk = prior kode_lokasi ");
							while ($row2 =$rs->FetchNextObject(false)){
								if ($ba_console2 != "") $ba_console2 .= " or ";
								$ba_console2 .= " t.kode_ubis like '__" . trim($row2->ba_consol) ."%' ";
								$filterBA .= " or ( t.kode_ubis like '__$row2->ba_consol%' ) ";
							}
						}else {

							$rs = $this->dbLib->execute("select ba_consol from bpc_lokasi start with cocd = '$row->cocd' connect by kode_induk = prior kode_lokasi ");
							while ($row2 =$rs->FetchNextObject(false)){
								if ($ba_console2 != "") $ba_console2 .= " or ";
								$ba_console2 .= " t.kode_ubis like '__" . trim($row2->ba_consol) ."%' ";
								$filterBA .= " or ( t.kode_ubis like '__$row2->ba_consol%' ) ";
							}
						}
					}
					if ($ba_console2 != "")
					{
						$ba_console2 = " and ($ba_console2)";
					}
					//error_log("cocd " . $row->cocd);
					if ( in_array($row->cocd, array("98","97","96") )){
						if ($row->cocd == "98")
							$filterElim = " and t.jenis = 'AD'";
						else if ($row->cocd == "97")
							$filterElim = " and t.jenis = 'RL'";
						else if ($row->cocd == "96")
							$filterElim = " and t.jenis = 'IJ'";

						$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
							from bpc_relakun x
                            left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and  t.periode like '".$thn1."%' 
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'   $filterElim  $ba_console group by x.kode_akun
                                                                ) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%'
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterElim $ba_console
                                        group by x.kode_akun
                                        
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0 or sum(nvl(v.actcm, 0)) <> 0"; 
						error_log("$row->cocd => $sql ");
					}else {
						/*
						if ($row->ba_consol == "2") {
							$addMetra = " and ( t.kode_ubis like '__$row->ba_consol%' ) ";
							$filterBA .= " or ( t.kode_ubis like '__$row->ba_consol%' ) ";
						} else {
							$addMetra = " and ( t.kode_ubis like '__$row->ba_consol%')" ;
							$filterBA .= " or ( t.kode_ubis like '__$row->ba_consol%' ) ";
						}
						*/
						if (strtoupper($tipe) == "NETT"){
							$addTableCFU = "inner join (select distinct a.kode_sub, a.kode_cfu, a.kode_lokasi ,  c.kode_cfu as subcfu
								from bpc_sap_mapba_lawan a 
								inner join bpc_cfu b on b.SUM_HEADER = a.kode_cfu 
								left outer join bpc_cfu c on b.kode_cfu = substr(c.kode_cfu,1,length(b.kode_cfu)) and c.kode_lokasi = a.kode_lokasi
								where a.kode = '02' ) y on substr(t.kode_pc, 5, 3) = y.kode_sub 
								";
							$addFilterLawan = $addTableCFU . " and y.kode_lokasi in ( SELECT kode_lokasi
										FROM bpc_lokasi
										start with kode_lokasi ='". $row->cocd. "' 
										CONNECT BY kode_induk = PRIOR kode_lokasi) ";
						}
						

						$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
							from bpc_relakun x
                            left outer join (select x.kode_akun
										, sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
										, sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
								from bpc_relakun x
								inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and  t.periode like '".$thn1."%' $jenis
								$addFilterLawan
								where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $ba_console2 group by x.kode_akun
                                ) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' $ba_console2
                                        group by x.kode_akun
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0 or sum(nvl(v.actcm, 0)) <> 0";
					}
				}else { 
					if ($filterBA != ""){
						//$filtering = substr($filterBA, 4, strlen($filterBA));
						$filtering = " and ( $filtering )";
					}
					if ($induk == "9000"){
						$filtering = " ";/* and not t.kode_ubis in (select concat('TG',a.ba_consol) as ba_consol from bpc_lokasi a 
											inner join bpc_lokasi b on b.kode_lokasi = a.KODE_INDUK
											where b.cocd ='1004') ";
											*/
						
					}
                	$sql = " select x.kode_akun,  nvl(v.actsd, 0) as actsd,  nvl(v.actcm, 0) as actcm
							from bpc_relakun x
                            left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join BPC_SAP_transcfu t on t.kode_akun = x.kode_akun and  t.periode like '".$thn1."%'
																	where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filtering 
																		
																	group by x.kode_akun
                                                                ) v on v.kode_akun = x.kode_akun
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
                            union
							select a.kode_akun, sum(nvl(v.actsd, 0)) as actsd, sum(nvl(v.actcm, 0)) as actcm
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' 
										inner join bpc_lokasi z on z.kode_lokasi = t.kode_lokasi
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi'  $filtering  
                                        group by x.kode_akun
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0 or sum(nvl(v.actcm, 0)) <> 0";
					
				}
				
				//error_log("ConsoleAKun $sql");
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_akun, $line);
				}
				$dataUbis->set($row->cocd, $itemUbis);
			} 
            
            $filterLokasi = ""; 
            
			if ($induk != "9000")
            	$filterLokasi = "  and z.kode_induk in ( select kode_lokasi from bpc_lokasi where cocd = '$induk' ) ";
            if ($filterBA != ""){
				//$filterBA = substr($filterBA, 4, strlen($filterBA));
				$filterBA = " and ( $filterBA )";
			}

            $sql = "select distinct a.kode_neraca, d.kode_akun, e.nama as nama, a.tipe, upper(e.jenis) as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex 
                                        	, nvl(t.actsd,0) as actsd
											, nvl(t.actcm,0) as actcm
                                                    $field
											from bpc_neraca a
                                            inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and a.kode_lokasi = d.kode_lokasi and d.kode_fs = a.kode_fs
                                            inner join bpc_masakun e on e.kode_akun = d.kode_akun and e.kode_lokasi = a.kode_lokasi 
											left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join BPC_SAP_transcfu t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBA group by x.kode_akun
                                                                ) t on t.kode_akun = d.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi'
                                            
                                        union
                                        select '999999', a.kode_akun, concat(a.kode_akun, concat('-',a.nama)) as nama,'-',a.jenis,'-',0,'00',1000
                                            , sum(nvl(v.actsd, 0)) as actsd
											, sum(nvl(v.actcm, 0)) as actcm
                                              $field
                                        from bpc_masakun a
                                        left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun
                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                    from bpc_masakun x
                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                    inner join bpc_lokasi z on z.kode_lokasi = t.kode_lokasi
                                                    left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                                    where  b.kode_akun is null and x.kode_lokasi = '$lokasi' $filterBA
                                                    group by x.kode_akun
                                                    having sum(nvl(t.nilai,0)) <> 0
                                        ) v on v.kode_akun = a.kode_akun
                                        where x.kode_akun is null and a.kode_lokasi ='$lokasi' and substr(a.kode_akun,1,1) in ('4','5','6','7','8')
                                        group by a.kode_akun, a.nama, a.jenis
                                        order by kode_neraca";
			//error_log("Console LineUp AP Actual -> " . $sql);
            $rs = $this->dbLib->execute($sql);
            $node = "";
		    $result = new server_util_Map();        
            $neraca = "";
            while ($row = $rs->FetchNextObject(false)){
                if ($row->jenis_akun == "PENDAPATAN"){
                    foreach ($dataUbis->getArray() as $key => $itemUbis){
                        $tmp = $itemUbis->get($row->kode_akun);
						if ($tmp == null){
							eval ("\$row->actsd_$key = 0;");
							eval ("\$row->actcm_$key = 0;");
						}else {
                        	eval ("\$row->actsd_$key = round($tmp->actsd / $pembagi) * -1;");
							eval ("\$row->actcm_$key = round($tmp->actcm / $pembagi) * -1;");
						}
                    }
                    $row->actsd = round($row->actsd / $pembagi) * -1;    
                    $row->jenis = "INC";
                }else {
                    foreach ($dataUbis->getArray() as $key => $itemUbis){
                        $tmp = $itemUbis->get($row->kode_akun);
						if ($tmp == null){
							eval ("\$row->actsd_$key = 0;");
							eval ("\$row->actcm_$key = 0;");
						}else{
                        	eval ("\$row->actsd_$key = round($tmp->actsd / $pembagi);");
							eval ("\$row->actcm_$key = round($tmp->actcm / $pembagi);");
						}
                    }
					$row->actsd = round($row->actsd / $pembagi );
                    $row->jenis = "EXP";
                }
                

                if ($neraca != $row->kode_neraca){
                    $neraca = $row->kode_neraca;
                    $item = array();
                }
                //$item[] = (array) $row;
                //$result->set($neraca, $item);
                $allZero = true;
                $rowItem = (array)$row;
				//a.kode_neraca, d.kode_akun, e.nama as nama, a.tipe, '-' as jenis, upper(e.jenis) as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex
				foreach ($rowItem as $key => $value) {
					if ($key != "kode_neraca" && $key != "kode_akun" && $key != "nama" && $key != "tipe" && $key != "jenis_akun" && $key != "sum_header" && $key != "level_spasi" && $key != "kode_induk" && $key != "rowindex"){
						if ($value != 0)
							$allZero = false;
					}
						
				}
				if (!$allZero) {
					$item[] = (array) $row;
                	$result->set($neraca, $item);
				}
            }
            return $result;
    }
    function downloadJejerDataAPElim($induk, $model, $periode, $tipe, $elimType,$pembagi){
		$this->getDb();
		
		if (!isset($induk) || $induk == "") $induk = $this->lokasi;//
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("CFU")
						 ->setSubject("CFU")
						 ->setDescription("Jejer CFU ")
						  ->setKeywords("Jejer CFU")
							 ->setCategory("CFU");
 
        $data = $this->getDataJejerAPElim($induk, $model, $periode, $tipe,$elimType, $pembagi);					
		$akun = $this->getDataAkunJejerAPElim($induk, $model,$periode, $tipe, $elimType,$pembagi);
			
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
        
        $column = array("Account","Uraian","Tipe","Level");
        $rsUbis = $this->dbLib->execute("select kode_lokasi, nama, cocd,case when cocd = '9000' then 99 else no_urut end as no_urut from bpc_lokasi where kode_induk in ( select kode_lokasi from bpc_lokasi where cocd = '$induk' ) or cocd = '$induk'  order by no_urut");
        $field = array("kode_neraca","nama","jenis","level_spasi");
		$field2 = array("kode_neraca","nama","jenis","level_spasi");
        while ($row = $rsUbis->FetchNextObject(false)){
            if ($row->cocd == "96"){
				$column[] = "Telkom Consolidated (PSAK)";
				$field[] = "actsd";
				$field2[] = "actcm";
			}
			$column[] = $row->nama;
            $field[] = "actsd_".$row->cocd;
			$field2[] = "actcm_".$row->cocd;
        }
		
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        try{
            foreach ($data["rs"]["rows"] as $val){
                $row++;
                $col = 0;
                foreach ($field as $f){
                    if ($f == "nama")
                        $sheet->setCellValueByColumnAndRow($col, $row, str_replace("&nbsp;"," ",$val[$f]) );    
                    else 
                        $sheet->setCellValueByColumnAndRow($col, $row, $val[$f]);    
                    $col++;
                }

                $listAkun = $akun->get($val["kode_neraca"]);
                foreach ($listAkun as $item){
                    $row++;
                    $col = 0;
                    foreach ($field as $i => $f){
                        if ($i == 0)
                            $sheet->setCellValueByColumnAndRow($col, $row, $item["kode_akun"]);    
                        else
                            $sheet->setCellValueByColumnAndRow($col, $row, $item[$f]);    
                        $col++;
                    }
                    
                }

            }
        }catch(Exception $e){
            error_log($e->getMessage);
        }
        
		$sheet->setTitle("$induk YTD");

		$sheet = $objPHPExcel->createSheet();
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        try{
            foreach ($data["rs"]["rows"] as $val){
                $row++;
                $col = 0;
                foreach ($field2 as $f){
                    if ($f == "nama")
                        $sheet->setCellValueByColumnAndRow($col, $row, str_replace("&nbsp;"," ",$val[$f]) );    
                    else 
                        $sheet->setCellValueByColumnAndRow($col, $row, $val[$f]);    
                    $col++;
                }

                $listAkun = $akun->get($val["kode_neraca"]);
                foreach ($listAkun as $item){
                    $row++;
                    $col = 0;
                    foreach ($field2 as $i => $f){
                        if ($i == 0)
                            $sheet->setCellValueByColumnAndRow($col, $row, $item["kode_akun"]);    
                        else
                            $sheet->setCellValueByColumnAndRow($col, $row, $item[$f]);    
                        $col++;
                    }
                    
                }

            }
        }catch(Exception $e){
            error_log($e->getMessage);
        }
		$sheet->setTitle("$induk CM");
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/CFU_list_$namafile.xlsx");
	
 
		return "/tmp/CFU_list_$namafile.xlsx";
	}
	function saveJejerAPElimToSummary($induk, $model, $periode, $tipe,$elimType, $pembagi){
		$this->getDb();
		
		if (!isset($induk) || $induk == "") $induk = $this->lokasi;//
		$this->cleanUp();
		$data = $this->getDataJejerAP($induk, $model, $periode, $tipe, $pembagi);					
		$dataAkun = $this->getDataAkunJejerAP($induk, $model,$periode, $tipe, $pembagi);

		$rsUbis = $this->dbLib->execute("select kode_lokasi, nama, cocd, ba_consol, case when cocd = '9000' then 99 else no_urut end as no_urut from bpc_lokasi where kode_induk in ( select kode_lokasi from bpc_lokasi where cocd = '$induk' ) or cocd = '$induk'  order by no_urut");
		$listCocd = array();
		while ($row = $rsUbis->FetchNextObject(false)){
			$listCocd[] = $row;
		}
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_summary_exsum where periode = '$periode' and kode_fs = '$model' and status_nilai = '$tipe'  ");
		$sql->add("delete from bpc_summary_exsum_d where periode = '$periode' and kode_fs = '$model' and status_nilai = '$tipe' ");
		foreach ($data["rs"]["rows"] as $val){
			$row = json_decode(json_encode($val));
			foreach ($listCocd as $rowCocd){
				$sql->add(new server_util_Map(array(
						"tipe" => "param",
						"sql" => "insert into bpc_summary_exsum(
									kode_lokasi, kode_ubis_cons, kode_cfu, kode_neraca, nama,  tipe, jenis_akun, sum_header, level_spasi, kode_induk, rowindex, actbln, actsd, periode, no_urut, kode_fs, tgl_process, status_nilai)
									values(:0, :1, :2, :3, :4, :5, :6,:7,:8,:9,:10,:11,:12,:13,:14, :15, sysdate,:17)",
						"value" => array($rowCocd->cocd, $rowCocd->ba_consol, '-', $row->kode_neraca,  str_replace("&nbsp;"," ",$row->nama), $row->tipe, $row->jenis_akun, $row->sum_header,
										 $row->level_spasi, $row->kode_induk, $row->rowindex, $val["actcm_".$rowCocd->cocd], $val["actsd_".$rowCocd->cocd], $periode, $row->rowindex, $model,0, $tipe )
					)));

			}
			$akun = $dataAkun->get($row->kode_neraca);
			foreach ($akun as $val){
				$row = json_decode(json_encode($val));
				foreach ($listCocd as $rowCocd){
					$sql->add(new server_util_Map(array(
							"tipe" => "param",
							"sql" => "insert into bpc_summary_exsum_d(
										kode_lokasi, kode_ubis_cons, kode_cfu, kode_akun, nama,  tipe, jenis_akun, sum_header, level_spasi, kode_neraca, rowindex, actbln, actsd, periode, no_urut, kode_fs, tgl_process, status_nilai)
										values(:0, :1, :2, :3, :4, :5, :6,:7,:8,:9,:10,:11,:12,:13,:14, :15, sysdate,:17)",
							"value" => array($rowCocd->cocd, $rowCocd->ba_consol, '-', $row->kode_akun,  str_replace("&nbsp;"," ",$row->nama), $row->tipe, $row->jenis_akun, $row->sum_header,
											 $row->level_spasi, $row->kode_neraca, $row->rowindex, $val["actcm_".$rowCocd->cocd], $val["actsd_".$rowCocd->cocd], $periode, $row->rowindex, $model,date(), $tipe )
						)));
	
				}
			}
		}
		

		$ret = $this->dbLib->execArraySQL($sql);
		return $ret;

	}

    ///------------- Jejer Budget CFU
    
    function getDataJejerBudgetCFU($induk, $model, $periode, $tipe, $pembagi){
        global $satuan;
        
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
        if ($induk == "") $induk = $this->cfu;//"CFU0"
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		$lastPeriode = $thn1 . '01';

			///$thn2 = floatval(substr($periode,0,4)) - 1;
			if (strtoupper($tipe) == "GROSS" || $tipe == ""){
				$addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
				$jenis = " and t.jenis in ('TB')";
				$filterBudget = " and not kode_cfu in ('CFUE','CFU205','CFU40C')  ";//'CFU205', and nvl(w.kode_cfu_lawan,'-') = '-'//'CFU40C',
			}else if (strtoupper($tipe) == "NETT"){
				$jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
				//'CFU40C',
				$filterBudget = " and not w.kode_cfu in ('CFUE','CFUE','CFU205','CFU40C') and substr(w.kode_cfu,0,4) = case when w.kode_cfu_lawan = '-' or w.kode_cfu_lawan is null then substr(w.kode_cfu,0,4) else case when substr(w.kode_cfu,0,4) = substr(w.kode_cfu_lawan,0,4) then '-' else substr(w.kode_cfu,0,4) end end  ";//'CFUE',
			}else {
				$jenis = "  ";
				$filterBudget = " and nvl(w.kode_lokasi2,'-') = '-'   ";
			}
        	if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0 ";
                
           }else {
                //$join1 = "";
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi  ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                //$join2 = "left outer join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
                $filterCons = "";
                
            }
        	$filterCFU = " and w.kode_cfu in ( SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu)";
            $ubis = "";
			if ($induk == "CFU0")
				$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$induk'  order by rowindex");
			else $rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu  where  (kode_cfu like '$induk%' or kode_cfu in ('CFUF','CFUG','CFUD') )  order by rowindex");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
            	if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
					$query = 1;
					$filterBudget2 = " and w.kode_cfu = '-' ";
					$filterCFU2 = " and w.kode_cfu in (SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) ";
				}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) == "NETT" && $tipe != "" ){
					$query = 1;
					$filterBudget2 = " and substr(w.kode_cfu,1,4) = substr(w.kode_cfu_lawan,1,4) ";
					$filterCFU2 = " and w.kode_cfu in (SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) ";
				}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) == "CONSOL" && $tipe != "" ){
					$query = 1;
					$filterBudget2 = " and nvl(w.kode_lokasi2,'-') <> '-' ";
					$filterCFU2 = " and w.kode_cfu in (SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) ";
				}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) == "CONSOL" && $tipe != ""){
					$query = 1;
					$filterBudget2 = " and w.kode_cfu = '-' ";
					//if (strtoupper($tipe) == "NETT")
					//	$jenis2  .= " and t.kode_cfu = t.kode_cfu2 ";
				}else {
					$query = 0;
					
					$filterBudget2 = $filterBudget;
					$filterCFU2 = " and w.kode_cfu in (SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$row->kode_cfu' or kode_cfu = '$row->kode_cfu'
							CONNECT BY kode_induk = PRIOR kode_cfu) ";
				} 
				
				
				
				$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
                
                                    
                $sql = " select x.kode_neraca, nvl(b.actsd, 0) as actsd, nvl(b.actcm, 0) as actcm, nvl(b.actall, 0) as actall
							from bpc_relakun x
                            left outer join (select x.kode_neraca,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2  $filterBudget2 group by x.kode_neraca) b on b.kode_neraca = x.kode_neraca
                            where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
							union
							select '999999',  sum(nvl(b.actsd, 0)) as actsd, sum(nvl(b.actcm, 0)) as actcm, sum(nvl(b.actall, 0)) as actall
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' $filterCFU2  $filterBudget2 and o.kode_neraca is null
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                            where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            having sum(nvl(b.actsd, 0)) <> 0
                            ";
                
				//error_log("$row->kode_cfu => " . $sql);
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_neraca, $line);
				}
				$dataUbis->set($row->kode_cfu, $itemUbis);
			}
            

			///$thn2 = floatval(substr($periode,0,4)) - 1;
			if (strtoupper($tipe) == "GROSS" || $tipe == ""){
				$addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
				$jenis = " and t.jenis in ('TB')";
				$filterBudget = " and not kode_cfu in ('CFUE') ";// //'CFUE','CFU40C', and nvl(w.kode_cfu_lawan,'-') = '-'
			}else if (strtoupper($tipe) == "NETT"){
				$jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
				//'CFU40C',
				$filterBudget = " and not w.kode_cfu in ('CFUE','CFU205','CFU40C') and substr(w.kode_cfu,0,4) = case when w.kode_cfu_lawan = '-' or w.kode_cfu_lawan is null then substr(w.kode_cfu,0,4) else case when substr(w.kode_cfu,0,4) = substr(w.kode_cfu_lawan,0,4) then '-' else substr(w.kode_cfu,0,4) end end  ";//'CFUE',
			}else {
				$jenis = "  ";
				$filterBudget = " and nvl(w.kode_lokasi2,'-') = '-'   ";
			}
        	if ($induk != "CFU0"){
                $filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0 ";
           }else {
                $filterCons = "";
                
            }
        	$filterCFU = " and w.kode_cfu in ( SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu)";
        
            
            $sql = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(b.actsd,0) as actsd, nvl(b.actcm, 0) as actcm, nvl(b.actall, 0) as actall
                                                     $field
											from bpc_neraca a
											left outer join (select x.kode_neraca,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU  $filterBudget group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
                                        where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
										union 
										select '999999','UNMAPPED','-','BEBAN','-',0,'00',1000
                                            , sum(nvl(b.actsd, 0)) as actsd, sum(nvl(b.actcm, 0)) as actcm, sum(nvl(b.actall, 0)) as actall
                                             $field
                                        from bpc_masakun a
                                        left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                        where x.kode_akun is null and a.kode_lokasi ='$lokasi'
                                        having sum(nvl(b.actsd, 0)) <> 0
										 order by  rowindex";
    	
        $rs = $this->dbLib->execute($sql);
    	$node = "";
		$rootNode = new server_util_NodeNRC("00");
		$this->sumHeader = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			if (strtoupper($row->jenis_akun) == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $tmp = $itemUbis->get($row->kode_neraca);
					eval ("\$row->actcm_$key = \$tmp->actcm;");
					eval ("\$row->actall_$key = \$tmp->actall;");
                    eval ("\$row->actsd_$key = \$tmp->actsd;");
				}
				$row->actsd = $row->actsd ; 
				$row->jenis = "INC";
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $tmp = $itemUbis->get($row->kode_neraca);
					eval ("\$row->actcm_$key = \$tmp->actcm;");
					eval ("\$row->actall_$key = \$tmp->actall;");
                    eval ("\$row->actsd_$key = \$tmp->actsd;");
				}
                $row->jenis = "EXP";
			}
			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$node->setData($row);
			if ($row->tipe == "SUMMARY")
				$this->sumHeader->set($row->kode_neraca, $node);

		}
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			//if ($lokasi == "10")
            {
				$this->summariesJejer($val);
				
				if ($val->data->sum_header != "-"){
					$summaryHeader = explode(",",$val->data->sum_header);

					foreach ($summaryHeader as $header){
						$nodeHeader = $this->sumHeader->get($header);
						if ($nodeHeader){
							foreach ($val->dataArray as $key => $value) {
								if ($key != "jenis" && $key != "jenis_akun" && $key != "kode_neraca" && $key != "nama" && $key != "tipe" && $key != "sum_header" && $key != "level_spasi" && $key != "rowindex"){
									$nodeHeader->dataArray[$key] += $value;
								}
							}
							$nodeHeader->data =(object) $nodeHeader->dataArray;
						}
					}
				}
			}
		}
		//perlu hitung ke summary
		$result = array('rs' => array('rows' => array() ) );
		$this->generateResultJejer($rootNode, $result);
        ///error_log("pembagi $pembagi ");
        //error_log(json_encode($result));
		return ($result);   
    }
    function getDataJejerBudgetCFUDetail($induk, $model, $periode, $neraca, $tipe,  $pembagi){
        global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		$lastPeriode = $thn1 . '01';
		///$thn2 = floatval(substr($periode,0,4)) - 1;
        if (strtoupper($tipe) == "GROSS" || $tipe == ""){
            $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//,'CFU40C'
            $jenis = " and t.jenis in ('TB')";
            $filterBudget = " and not kode_cfu in ('CFUE','CFU205','CFU40C')  ";//,'CFU40C' and nvl(w.kode_cfu_lawan,'-') = '-'
        }else if (strtoupper($tipe) == "NETT"){//,'CFU40C'
            $jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
            $filterBudget = " and not w.kode_cfu in ('CFUE','CFU205') and substr(w.kode_cfu,0,4) = case when w.kode_cfu_lawan = '-' or w.kode_cfu_lawan is null then substr(w.kode_cfu,0,4) else case when substr(w.kode_cfu,0,4) = substr(w.kode_cfu_lawan,0,4) then '-' else substr(w.kode_cfu,0,4) end end  ";
        }else {
            $jenis = "  ";
            $filterBudget = " and nvl(w.kode_lokasi2,'-') = '-'  ";
        }
        if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0 ";
                $filterCFU = " and w.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    ) ";
                
            }else {
                //$join1 = "";
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi  ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                //$join2 = "left outer join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
                $filterCons = "";
                $filterCFU = " and w.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    ) ";
            }
        	$filterCFU = " and w.kode_cfu in ( SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu)";

            $ubis = "";
			if ($induk == "CFU0")
				$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$induk'  order by rowindex");
			else $rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where (kode_cfu like '$induk%' or kode_cfu in ('CFUF','CFUG','CFUD') )   order by rowindex");
			
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
					$query = 1;
					$filterBudget2 = " and w.kode_cfu = '-' ";
					$filterCFU2 = " and w.kode_cfu in (SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) ";
				}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) == "NETT" && $tipe != "" ){
					$query = 1;
					$filterBudget2 = " and substr(w.kode_cfu,1,4) = substr(w.kode_cfu_lawan,1,4) ";
					$filterCFU2 = " and w.kode_cfu in (SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) ";
				}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) == "CONSOL" && $tipe != "" ){
					$query = 1;
					$filterBudget2 = " and  nvl(w.kode_lokasi2,'-') <> '-' ";
					$filterCFU2 = " and w.kode_cfu in (SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) ";
				}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) == "CONSOL" && $tipe != ""){
					$query = 1;
					$filterBudget2 = " and w.kode_cfu = '-' ";
					//if (strtoupper($tipe) == "NETT")
					//	$jenis2  .= " and t.kode_cfu = t.kode_cfu2 ";
				}else {
					$query = 0;
					
					$filterBudget2 = $filterBudget;
					$filterCFU2 = " and w.kode_cfu in (SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$row->kode_cfu' or kode_cfu = '$row->kode_cfu'
							CONNECT BY kode_induk = PRIOR kode_cfu) ";
				} 
				$field .= ", 0  as actsd_". $row->kode_cfu. "";
               /* $filterCFU2 = " and w.kode_cfu in (
                                        SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$row->kode_cfu' or kode_cfu = '$row->kode_cfu'
							CONNECT BY kode_induk = PRIOR kode_cfu
                                    ) ";


									*/
                $sql = " select x.kode_akun,  nvl(b.actsd, 0) as actsd, nvl(b.actcm, 0) as actcm, nvl(b.actall, 0) as actall
							from bpc_relakun x
                            left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 $filterBudget2 group by x.kode_akun) b on b.kode_akun = x.kode_akun
                            where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$neraca'
                            union
							select a.kode_akun, sum(nvl(b.actsd, 0)) as actsd, sum(nvl(b.actcm, 0)) as actcm, sum(nvl(b.actall, 0)) as actall
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU2 $filterBudget2
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                            where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$neraca'
                            group by a.kode_akun
                            having sum(nvl(b.actsd, 0)) <> 0";
                //error_log("Detail $sql");
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_akun, $line);
				}
				$dataUbis->set($row->kode_cfu, $itemUbis);
			}
            
           
            $sql = "select distinct d.kode_akun as kode_neraca, left_pad(concat(d.kode_akun,concat('-',e.nama)),a.level_spasi + 1) as nama, a.tipe,e.jenis as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex
													, nvl(b.actsd,0) as actsd, nvl(b.actcm, 0) as actcm, nvl(b.actall, 0) as actall
                                                    $field
											from bpc_neraca a
                                            inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and a.kode_lokasi = d.kode_lokasi and d.kode_fs = a.kode_fs
                                            inner join bpc_masakun e on e.kode_akun = d.kode_akun and e.kode_lokasi = a.kode_lokasi 
											left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU $filterBudget group by x.kode_akun) b on b.kode_akun = d.kode_akun
                                        where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$neraca'
                                        union
                                        select a.kode_akun, concat(a.kode_akun, concat('-',a.nama)) as nama,'-',a.jenis,'-',0,'00',1000
                                            , sum(nvl(b.actsd, 0)) as actsd, sum(nvl(b.actcm, 0)) as actcm, sum(nvl(b.actall, 0)) as actall
                                              $field
                                        from bpc_masakun a
                                        left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall			
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                            where x.kode_akun is null and a.kode_lokasi ='$lokasi' and '999999' = '$neraca'
                                        group by a.kode_akun, a.nama, a.jenis
                                        having  sum(nvl(b.actsd, 0)) <> 0
                                        order by kode_neraca";
        //error_log("Budget $sql");
		$rs = $this->dbLib->execute($sql);
        $node = "";
		$rootNode = new server_util_NodeNRC("00");
		$this->sumHeader = new server_util_Map();
        $result = array('rs' => array('rows' => array() ) );
		while ($row = $rs->FetchNextObject(false)){
            if ($row->jenis_akun == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    //$key = strtoupper($key);
                    $tmp = $itemUbis->get($row->kode_neraca);
                    if ($tmp == null){
                        eval ("\$row->actcm_$key = 0;");
                        eval ("\$row->actsd_$key = 0;");
						eval ("\$row->actall_$key = 0;");
                    }else {
                        eval ("\$row->actcm_$key = round( \$tmp->actcm / $pembagi) * -1;");
                        eval ("\$row->actsd_$key = round(\$tmp->actsd / $pembagi) * -1;");
						eval ("\$row->actall_$key = round( \$tmp->actall / $pembagi) * -1;");
                        
                    }
					
				}
				$row->jenis = "INC";
                $row->actsd = round($row->actsd / $pembagi) * -1;
                //error_log("PDRPT " . json_encode($row));
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    //$key = strtoupper($key);
					$tmp = $itemUbis->get($row->kode_neraca);
                    if ($tmp == null){
                        eval ("\$row->actcm_$key = 0;");
                        eval ("\$row->actsd_$key = 0;");
						eval ("\$row->actall_$key = 0;");
                    }else {
                        eval ("\$row->actcm_$key = round( \$tmp->actcm / $pembagi) * -1;");
                        eval ("\$row->actsd_$key = round(\$tmp->actsd / $pembagi) * -1;");
						eval ("\$row->actall_$key = round( \$tmp->actall / $pembagi) * -1;");
                    }
				}
                //$row->aggsd = $row->aggsd  / $pembagi;
                $row->actsd = round($row->actsd / $pembagi);
                $row->jenis = "EXP";
			}
                if ($row->actcm != 0 || $row->actsd != 0)
			     $result["rs"]["rows"][] = (array)$row;
			
		}
        //error_log("pembagi $pembagi");
		//error_log(json_encode($result));
		return ($result);   
    }
	function getDataJejerBudgetCFUAkun($induk, $model, $periode, $tipe,  $pembagi){
        global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		$lastPeriode = $thn1 . '01';
		///$thn2 = floatval(substr($periode,0,4)) - 1;
        if (strtoupper($tipe) == "GROSS" || $tipe == ""){
			//,'CFU40C'
            $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";
            $jenis = " and t.jenis in ('TB')";
            $filterBudget = " and not kode_cfu in ('CFUE','CFU205','CFU40C')   ";//,'CFU40C'and nvl(w.kode_cfu_lawan,'-') = '-'  
        }else if (strtoupper($tipe) == "NETT"){
			//,'CFU40C'
            $jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
            $filterBudget = " and not w.kode_cfu in ('CFUE','CFU205') and substr(w.kode_cfu,0,4) = case when w.kode_cfu_lawan = '-' or w.kode_cfu_lawan is null then substr(w.kode_cfu,0,4) else case when substr(w.kode_cfu,0,4) = substr(w.kode_cfu_lawan,0,4) then '-' else substr(w.kode_cfu,0,4) end end  ";
        }else {
            $jenis = "  ";
            $filterBudget = " and nvl(w.kode_lokasi2,'-') = '-'  ";
        }
        if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0 ";
                $filterCFU = " and w.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    ) ";
                
            }else {
                //$join1 = "";
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi  ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                //$join2 = "left outer join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
                $filterCons = "";
                $filterCFU = " and w.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    ) ";
            }
        	$filterCFU = " and w.kode_cfu in ( SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu)";
            $ubis = "";
			if ($induk == "CFU0")
				$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$induk'  order by rowindex");
			else $rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu  where  (kode_cfu like '$induk%' or kode_cfu in ('CFUF','CFUG','CFUD') )  order by rowindex");
			
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				 $field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
				 if ($row->kode_cfu == 'CFUF' && strtoupper($tipe) == "CONSOL"){
					$query = 1;
					$filterBudget2 = " and w.kode_cfu = '-' ";
					$filterCFU2 = " and w.kode_cfu in (SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) ";
				}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) == "NETT" && $tipe != "" ){
					$query = 1;
					$filterBudget2 = " and substr(w.kode_cfu,1,4) = substr(w.kode_cfu_lawan,1,4) ";
					$filterCFU2 = " and w.kode_cfu in (SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) ";
				}else if ($row->kode_cfu == 'CFUG' && strtoupper($tipe) == "CONSOL" && $tipe != "" ){
					$query = 1;
					$filterBudget2 = " and  nvl(w.kode_lokasi2,'-') <> '-' ";
					$filterCFU2 = " and w.kode_cfu in (SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) ";
				}else if ($row->kode_cfu == 'CFUD' && strtoupper($tipe) == "CONSOL" && $tipe != ""){
					$query = 1;
					$filterBudget2 = " and w.kode_cfu = '-' ";
					//if (strtoupper($tipe) == "NETT")
					//	$jenis2  .= " and t.kode_cfu = t.kode_cfu2 ";
				}else {
					$query = 0;
					
					$filterBudget2 = $filterBudget;
					$filterCFU2 = " and w.kode_cfu in (SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$row->kode_cfu' or kode_cfu = '$row->kode_cfu'
							CONNECT BY kode_induk = PRIOR kode_cfu) ";
				} 
                 /*$filterCFU2 = " and w.kode_cfu in (
                                        SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$row->kode_cfu' or kode_cfu = '$row->kode_cfu'
							CONNECT BY kode_induk = PRIOR kode_cfu
                                    ) ";
									*/
                $sql = " select x.kode_akun,  nvl(b.actsd, 0) as actsd, nvl(b.actcm, 0) as actcm, nvl(b.actall, 0) as actall
							from bpc_relakun x
                            left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 $filterBudget2 group by x.kode_akun) b on b.kode_akun = x.kode_akun
                            where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
                            union
							select a.kode_akun, sum(nvl(b.actsd, 0)) as actsd, sum(nvl(b.actcm, 0)) as actcm, sum(nvl(b.actall, 0)) as actall
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU2 $filterBudget2
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                            where  a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                            group by a.kode_akun
                            having sum(nvl(b.actsd, 0)) <> 0";
                //error_log("Detail $sql");
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_akun, $line);
				}
				$dataUbis->set($row->kode_cfu, $itemUbis);
			}
            
           
            $sql = "select distinct a.kode_neraca, d.kode_akun, left_pad(concat(d.kode_akun,concat('-',e.nama)),a.level_spasi + 1) as nama, a.tipe,e.jenis as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex
													, nvl(b.actsd,0) as actsd, nvl(b.actcm, 0) as actcm, nvl(b.actall, 0) as actall
                                                    $field
											from bpc_neraca a
                                            inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and a.kode_lokasi = d.kode_lokasi and d.kode_fs = a.kode_fs
                                            inner join bpc_masakun e on e.kode_akun = d.kode_akun and e.kode_lokasi = a.kode_lokasi 
											left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU $filterBudget group by x.kode_akun) b on b.kode_akun = d.kode_akun
                                        where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi'
                                        union
                                        select '999999' as kode_neraca, a.kode_akun, concat(a.kode_akun, concat('-',a.nama)) as nama,'-',a.jenis,'-',0,'00',1000
                                            , sum(nvl(b.actsd, 0)) as actsd, sum(nvl(b.actcm, 0)) as actcm, sum(nvl(b.actall, 0)) as actall
                                              $field
                                        from bpc_masakun a
                                        left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall			
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                            where x.kode_akun is null and a.kode_lokasi ='$lokasi' 
                                        group by a.kode_akun, a.nama, a.jenis
                                        having  sum(nvl(b.actsd, 0)) <> 0
                                        order by kode_neraca";
        //error_log("Budget $sql");
		$rs = $this->dbLib->execute($sql);
        $result = new server_util_Map();

		while ($row = $rs->FetchNextObject(false)){
            if ($row->jenis_akun == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    //$key = strtoupper($key);
                    $tmp = $itemUbis->get($row->kode_akun);
                    if ($tmp == null){
                        eval ("\$row->actcm_$key = 0;");
                        eval ("\$row->actsd_$key = 0;");
						eval ("\$row->actall_$key = 0;");
                    }else {
                        eval ("\$row->actcm_$key = round( \$tmp->actcm / $pembagi) * -1;");
                        eval ("\$row->actsd_$key = round(\$tmp->actsd / $pembagi) * -1;");
						eval ("\$row->actall_$key = round( \$tmp->actall / $pembagi) * -1;");
                        
                    }
					
				}
				$row->jenis = "INC";
                $row->actsd = round($row->actsd / $pembagi) * -1;
                //error_log("PDRPT " . json_encode($row));
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    //$key = strtoupper($key);
					$tmp = $itemUbis->get($row->kode_akun);
                    if ($tmp == null){
                        eval ("\$row->actcm_$key = 0;");
                        eval ("\$row->actsd_$key = 0;");
						eval ("\$row->actall_$key = 0;");
                    }else {
                        eval ("\$row->actcm_$key = round( \$tmp->actcm / $pembagi);");
                        eval ("\$row->actsd_$key = round(\$tmp->actsd / $pembagi);");
						eval ("\$row->actall_$key = round( \$tmp->actall / $pembagi);");
                    }
				}
                //$row->aggsd = $row->aggsd  / $pembagi;
                $row->actsd = round($row->actsd / $pembagi);
                $row->jenis = "EXP";
			}
            //if ($row->actsd != 0)
			{
				 $tmp = $result->get($row->kode_neraca);
				 if ($tmp == null)
				 	$tmp = array();
				$tmp[] = $row;
				$result->set($row->kode_neraca, $tmp);
			}
			
		}
        
		return ($result);   
    }
	function downloadJejerBudgetCFU($induk, $model, $periode,  $tipe, $pembagi){
		$this->getDb();
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 		//error_log("Generate File ");
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 		error_log("Get Data File ");
        $data = $this->getDataJejerBudgetCFU($induk, $model, $periode, $tipe, $pembagi);					
		$akun = $this->getDataJejerBudgetCFUAkun($induk, $model,$periode, $tipe, $pembagi);
		error_log("Generate File ");	
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$column = array("Account","Uraian","Tipe","Level","Group");
		$fields = array();
		error_log("Look CFU File ");
		if ($induk == "CFU0")
			$rs = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$induk'  order by rowindex");
		else $rs = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu  where kode_induk like '$induk%' or kode_cfu in ('CFUF','CFUD','CFUG')  order by rowindex");
		
		while ($row = $rs->FetchNextObject(false)){
			$column[] = $row->nama;
			$field[] = "actsd_" . $row->kode_cfu;
		}

		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        error_log("Loop Data File ");
        foreach ($data["rs"]["rows"] as $val){
            $row++;
            $val  = json_decode(json_encode($val));
            $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_neraca);
            $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
            $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
            $sheet->setCellValueByColumnAndRow(3, $row, $val->level_spasi);
            $sheet->setCellValueByColumnAndRow(4, $row, $val->actsd);
			$col = 5;
			$tmpVal = (array)$val;
			foreach ($field as $key => $value) {
				$sheet->setCellValueByColumnAndRow($col, $row, $tmpVal[$value]);
				$col++;
			}

            $listAkun = $akun->get($val->kode_neraca);
            $level = $val->level_spasi;
            foreach ($listAkun as $val){
                $row++;
                $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_akun);
                $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
                $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
                $sheet->setCellValueByColumnAndRow(3, $row, $level + 1);
                $sheet->setCellValueByColumnAndRow(4, $row, $val->actsd);
                $col = 5;
				$tmpVal = (array)$val;
				foreach ($field as $key => $value) {
					$sheet->setCellValueByColumnAndRow($col, $row, $tmpVal[$value]);
					$col++;
				}
            }
            
        }
		$sheet->setTitle($induk);
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
		
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/". $induk . "-LineUp-Budget_$namafile.xlsx");
	
 		error_log("DOne LineUp Budget $namafile");
		return "/tmp/". $induk . "-LineUp-Budget_$namafile.xlsx";
	}
	function generateDataForDownloadJejerBudgetCFUAll(&$sheet, $induk, $model, $periode,  $tipe, $pembagi){
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$column = array("Account","Uraian","Tipe","Level","Group");
		$fields = array();
		error_log("Look CFU File ");
		if ($induk == "CFU0")
			$rs = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$induk'  order by rowindex");
		else $rs = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_cfu <> '$induk' start with kode_cfu ='$induk' connect by kode_induk = prior kode_cfu  order by rowindex");
		
		while ($row = $rs->FetchNextObject(false)){
			$column[] = $row->nama;
			$field[] = "actsd_" . $row->kode_cfu;
		}
		$data = $this->getDataJejerBudgetCFU($induk, $model, $periode, $tipe, $pembagi);					
		$akun = $this->getDataJejerBudgetCFUAkun($induk, $model,$periode, $tipe, $pembagi);
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        error_log("Loop Data File ");
        foreach ($data["rs"]["rows"] as $val){
            $row++;
            $val  = json_decode(json_encode($val));
            $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_neraca);
            $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
            $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
            $sheet->setCellValueByColumnAndRow(3, $row, $val->level_spasi);
            $sheet->setCellValueByColumnAndRow(4, $row, $val->actsd);
			$col = 5;
			$tmpVal = (array)$val;
			foreach ($field as $key => $value) {
				$sheet->setCellValueByColumnAndRow($col, $row, $tmpVal[$value]);
				$col++;
			}

            $listAkun = $akun->get($val->kode_neraca);
            $level = $val->level_spasi;
            foreach ($listAkun as $val){
                $row++;
                $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_akun);
                $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
                $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
                $sheet->setCellValueByColumnAndRow(3, $row, $level + 1);
                $sheet->setCellValueByColumnAndRow(4, $row, $val->actsd);
                $col = 5;
				$tmpVal = (array)$val;
				foreach ($field as $key => $value) {
					$sheet->setCellValueByColumnAndRow($col, $row, $tmpVal[$value]);
					$col++;
				}
            }
            
        }
		$sheet->setTitle($induk);
	}
	function downloadJejerBudgetCFUAll($induk, $model, $periode,  $tipe, $pembagi){
		$this->getDb();
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 		//error_log("Generate File ");
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 		error_log("Get Data File ");
        $data = $this->getDataJejerBudgetCFU($induk, $model, $periode, $tipe, $pembagi);					
		$akun = $this->getDataJejerBudgetCFUAkun($induk, $model,$periode, $tipe, $pembagi);
		error_log("Generate File ");	
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$column = array("Account","Uraian","Tipe","Level","Group");
		$fields = array();
		error_log("Look CFU File ");
		if ($induk == "CFU0")
			$rs = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$induk'  order by rowindex");
		else $rs = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_cfu <> '$induk' start with kode_cfu ='$induk' connect by kode_induk = prior kode_cfu  order by rowindex");
		
		while ($row = $rs->FetchNextObject(false)){
			$column[] = $row->nama;
			$field[] = "actsd_" . $row->kode_cfu;
		}

		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        error_log("Loop Data File ");
        foreach ($data["rs"]["rows"] as $val){
            $row++;
            $val  = json_decode(json_encode($val));
            $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_neraca);
            $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
            $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
            $sheet->setCellValueByColumnAndRow(3, $row, $val->level_spasi);
            $sheet->setCellValueByColumnAndRow(4, $row, $val->actsd);
			$col = 5;
			$tmpVal = (array)$val;
			foreach ($field as $key => $value) {
				$sheet->setCellValueByColumnAndRow($col, $row, $tmpVal[$value]);
				$col++;
			}

            $listAkun = $akun->get($val->kode_neraca);
            $level = $val->level_spasi;
            foreach ($listAkun as $val){
                $row++;
                $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_akun);
                $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
                $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
                $sheet->setCellValueByColumnAndRow(3, $row, $level + 1);
                $sheet->setCellValueByColumnAndRow(4, $row, $val->actsd);
                $col = 5;
				$tmpVal = (array)$val;
				foreach ($field as $key => $value) {
					$sheet->setCellValueByColumnAndRow($col, $row, $tmpVal[$value]);
					$col++;
				}
            }
            
        }
 
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$rs = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$induk'  order by rowindex");
		while ($row = $rs->FetchNextObject(false)){
			$sheet = $objPHPExcel->createSheet();
			$this->generateDataForDownloadJejerBudgetCFUAll($sheet, $row->kode_cfu, $model, $periode,  $tipe, $pembagi);
		}
		$objPHPExcel->setActiveSheetIndex(0);
		
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/LineUp-Budget_$namafile.xlsx");
	
 		error_log("DOne LineUp Budget $namafile");
		return "/tmp/LineUp-Budget_$namafile.xlsx";
	}
	//-------------- Jejer Budget AP
	function getDataJejerBudgetAP($compCode, $model, $periode, $tipe, $pembagi){
        global $satuan;
        
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
        //if ($induk == "") $induk = "CFU0";
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		$lastPeriode = $thn1 . '01';
		///$thn2 = floatval(substr($periode,0,4)) - 1;
			if (strtoupper($tipe) == "GROSS" || $tipe == ""){
				$addFilter = " and not z.kode_cfu in (CFUE','CFU205','CFU40C','CFUF','CFUG','CFUD')  ";//'CFU40C',
				$jenis = " and t.jenis in ('TB')";
				$filterBudget = " and not kode_cfu in ('CFUE','CFU205','CFU40C') ";//'CFU40C',
			}else {
				$jenis = "  ";
				$filterBudget = "  ";
			}
        	{
                $filterCons = "";
                $filterCFU = " and w.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '$compCode'
									connect by kode_induk = prior kode_lokasi
								 )";
            }
        
            $ubis = "";
			$rsUbis = $this->dbLib->execute("select kode_lokasi, nama from bpc_lokasi where (kode_induk = '$compCode' or kode_lokasi = '$compCode')  order by no_urut");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as actsd_". $row->kode_lokasi. "";
                $filterCFU2 = " and w.kode_lokasi in  (select kode_lokasi from bpc_lokasi start with kode_lokasi = '$row->kode_lokasi'
									connect by kode_induk = prior kode_lokasi  ) ";
				if ($row->kode_lokasi == "97" && strtoupper($tipe) == "GROSS" ){
					$filterBudget2 = "  and  (kode_cfu in ('CFUE','CFU205') or  nvl(kode_lokasi2,'-') <> '-') ";//,'CFU40C'
				}else if ($row->kode_lokasi == "9000")
					$filterBudget2 = "";
				else 
                	$filterBudget2 = $filterBudget;  
                $sql = " select x.kode_neraca, nvl(b.actsd, 0) as actsd, nvl(b.actcm, 0) as actcm, nvl(b.actall, 0) as actall
							from bpc_neraca x
                            left outer join (select x.kode_neraca,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2  $filterBudget2 group by x.kode_neraca) b on b.kode_neraca = x.kode_neraca
                            where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
							union
							select '999999',  sum(nvl(b.actsd, 0)) as actsd, sum(nvl(b.actcm, 0)) as actcm, sum(nvl(b.actall, 0)) as actall
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' $filterCFU2  $filterBudget2 and o.kode_neraca is null
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                            where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            having sum(nvl(b.actsd, 0)) <> 0
                            ";
                
				error_log("jejerBudgetAP " . $sql);
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_neraca, $line);
				}
				$dataUbis->set($row->kode_lokasi, $itemUbis);
			}
            
        
            
            $sql = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(b.actsd,0) as actsd, nvl(b.actcm, 0) as actcm, nvl(b.actall, 0) as actall
                                                     $field
											from bpc_neraca a
											left outer join (select x.kode_neraca,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU  $filterBudget group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
                                        where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
										union 
										select '999999','UNMAPPED','-','BEBAN','-',0,'00',1000
                                            , sum(nvl(b.actsd, 0)) as actsd, sum(nvl(b.actcm, 0)) as actcm, sum(nvl(b.actall, 0)) as actall
                                             $field
                                        from bpc_masakun a
                                        left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                        where x.kode_akun is null and a.kode_lokasi ='$lokasi'
                                        having sum(nvl(b.actsd, 0)) <> 0
										 order by  rowindex";
    	error_log("Budget $sql");
        $rs = $this->dbLib->execute($sql);
    	$node = "";
		$rootNode = new server_util_NodeNRC("00");
		$this->sumHeader = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			if ($row->jenis_akun == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $tmp = $itemUbis->get($row->kode_neraca);
					eval ("\$row->actsd_$key = \$tmp->actsd;");
				}
				$row->actsd = $row->actsd ; 
				$row->jenis = "INC";
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $tmp = $itemUbis->get($row->kode_neraca);
					eval ("\$row->actsd_$key = \$tmp->actsd;");
				}
                $row->jenis = "EXP";
			}
			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$node->setData($row);
			if ($row->tipe == "SUMMARY")
				$this->sumHeader->set($row->kode_neraca, $node);

		}
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			//if ($lokasi == "10")
            {
				$this->summariesJejer($val);
				
				if ($val->data->sum_header != "-"){
					$summaryHeader = explode(",",$val->data->sum_header);

					foreach ($summaryHeader as $header){
						$nodeHeader = $this->sumHeader->get($header);
						if ($nodeHeader){
							foreach ($val->dataArray as $key => $value) {
								if ($key != "jenis" && $key != "jenis_akun" && $key != "kode_neraca" && $key != "nama" && $key != "tipe" && $key != "sum_header" && $key != "level_spasi" && $key != "rowindex"){
									$nodeHeader->dataArray[$key] += $value;
								}
							}
							$nodeHeader->data =(object) $nodeHeader->dataArray;
						}
					}
				}
			}
		}
		//perlu hitung ke summary
		$result = array('rs' => array('rows' => array() ) );
		$this->generateResultJejer($rootNode, $result);
        ///error_log("pembagi $pembagi ");
        //error_log(json_encode($result));
		return ($result);   
    }
    function getDataJejerBudgetAPDetail($induk, $model, $periode, $neraca, $tipe,  $pembagi){
        global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		$lastPeriode = $thn1 . '01';
		///$thn2 = floatval(substr($periode,0,4)) - 1;
			if (strtoupper($tipe) == "GROSS" || $tipe == ""){
				$addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//,'CFU40C'
				$jenis = " and t.jenis in ('TB')";
				$filterBudget = " and not kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
			}else if (strtoupper($tipe) == "NETT"){
				$jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
				$filterBudget = " and not kode_cfu in ('CFUE')  ";
			}else {
				$jenis = "  ";
				$filterBudget = "  ";
			}
        	{
                $filterCons = "";
                $filterCFU = " and w.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '$induk'
									connect by kode_induk = prior kode_lokasi
								 )";
            }
        
            $ubis = "";
			$rsUbis = $this->dbLib->execute("select cocd, kode_lokasi, case when cocd = '9000' then 99 else no_urut end as no_urut from bpc_lokasi a  where kode_induk in (select kode_lokasi from bpc_lokasi where cocd like '$induk%') or cocd = '$induk' or cocd in ('96','97','98')  order by no_urut");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				 $field .= ", 0  as actsd_". $row->cocd. "";
				 $filterCFU2 = " and w.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '$row->kode_lokasi' connect by kode_induk = prior kode_lokasi )";
                 if ($row->kode_lokasi == "97" && strtoupper($tipe) == "GROSS" ){
					$filterBudget2 = "  and  (kode_cfu in ('CFUE','CFU205') or  nvl(kode_lokasi2,'-') <> '-') ";//,'CFU40C'
				}else if ($row->kode_lokasi == "9000")
					$filterBudget2 = "";
				else 
                	$filterBudget2 = $filterBudget;  
				 $sql = " select x.kode_akun,  nvl(b.actsd, 0) as actsd, nvl(b.actcm, 0) as actcm, nvl(b.actall, 0) as actall
							from bpc_relakun x
                            left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 $filterBudget2 group by x.kode_akun) b on b.kode_akun = x.kode_akun
                            where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$neraca'
                            union
							select a.kode_akun, sum(nvl(b.actsd, 0)) as actsd, sum(nvl(b.actcm, 0)) as actcm, sum(nvl(b.actall, 0)) as actall
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU2 $filterBudget2
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                            where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$neraca'
                            group by a.kode_akun
                            having sum(nvl(b.actsd, 0)) <> 0";
                //error_log("Detail $sql");
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_akun, $line);
				}
				$dataUbis->set($row->cocd, $itemUbis);
			}
            
           
            $sql = "select distinct d.kode_akun, left_pad(concat(d.kode_akun,concat('-',e.nama)),a.level_spasi + 1) as nama, a.tipe,e.jenis as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex
													, nvl(b.actsd,0) as actsd, nvl(b.actcm, 0) as actcm, nvl(b.actall, 0) as actall
                                                    $field
											from bpc_neraca a
                                            inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and a.kode_lokasi = d.kode_lokasi and d.kode_fs = a.kode_fs
                                            inner join bpc_masakun e on e.kode_akun = d.kode_akun and e.kode_lokasi = a.kode_lokasi 
											left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU $filterBudget group by x.kode_akun) b on b.kode_akun = d.kode_akun
                                        where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$neraca'
                                        union
                                        select a.kode_akun, concat(a.kode_akun, concat('-',a.nama)) as nama,'-',a.jenis,'-',0,'00',1000
                                            , sum(nvl(b.actsd, 0)) as actsd, sum(nvl(b.actcm, 0)) as actcm, sum(nvl(b.actall, 0)) as actall
                                              $field
                                        from bpc_masakun a
                                        left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall			
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                            where x.kode_akun is null and a.kode_lokasi ='$lokasi' and '999999' = '$neraca'
                                        group by a.kode_akun, a.nama, a.jenis
                                        having  sum(nvl(b.actsd, 0)) <> 0
                                        order by kode_akun";
        error_log("JejerBudget AP $sql");
		$rs = $this->dbLib->execute($sql);
        $node = "";
		$rootNode = new server_util_NodeNRC("00");
		$this->sumHeader = new server_util_Map();
        $result = array('rs' => array('rows' => array() ) );
		while ($row = $rs->FetchNextObject(false)){
            if ($row->jenis_akun == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    //$key = strtoupper($key);
                    $tmp = $itemUbis->get($row->kode_akun);
                    if ($tmp == null){
                        eval ("\$row->actcm_$key = 0;");
                        eval ("\$row->actsd_$key = 0;");
						eval ("\$row->actall_$key = 0;");
                    }else {
                        eval ("\$row->actcm_$key = round( \$tmp->actcm / $pembagi) * -1;");
                        eval ("\$row->actsd_$key = round(\$tmp->actsd / $pembagi) * -1;");
						eval ("\$row->actall_$key = round( \$tmp->actall / $pembagi) * -1;");
                        
                    }
					
				}
				$row->jenis = "INC";
                $row->actsd = round($row->actsd / $pembagi) * -1;
                //error_log("PDRPT " . json_encode($row));
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    //$key = strtoupper($key);
					$tmp = $itemUbis->get($row->kode_akun);
                    if ($tmp == null){
                        eval ("\$row->actcm_$key = 0;");
                        eval ("\$row->actsd_$key = 0;");
						eval ("\$row->actall_$key = 0;");
                    }else {
                        eval ("\$row->actcm_$key = round( \$tmp->actcm / $pembagi) * -1;");
                        eval ("\$row->actsd_$key = round(\$tmp->actsd / $pembagi) * -1;");
						eval ("\$row->actall_$key = round( \$tmp->actall / $pembagi) * -1;");
                    }
				}
                //$row->aggsd = $row->aggsd  / $pembagi;
                $row->actsd = round($row->actsd / $pembagi);
                $row->jenis = "EXP";
			}
                if ($row->actcm != 0 || $row->actsd != 0)
			     $result["rs"]["rows"][] = (array)$row;
			
		}
        //error_log("pembagi $pembagi");
		//error_log(json_encode($result));
		return ($result);   
    }
	function getDataJejerBudgetAPAkun($induk, $model, $periode, $tipe,  $pembagi){
        global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		$lastPeriode = $thn1 . '01';
		///$thn2 = floatval(substr($periode,0,4)) - 1;
        
        	if (strtoupper($tipe) == "GROSS" || $tipe == ""){
				$addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFU40C','CFUF','CFUG','CFUD')  ";//,'CFU40C'
				$jenis = " and t.jenis in ('TB')";
				$filterBudget = " and not kode_cfu in ('CFUE','CFU205','CFU40C') ";//,'CFU40C'
			}else if (strtoupper($tipe) == "NETT"){
				$jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
				$filterBudget = " and not kode_cfu in ('CFUE')  ";
			}else {
				$jenis = "  ";
				$filterBudget = "  ";
			}
        	{
                $filterCons = "";
                $filterCFU = " and w.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '$induk'
									connect by kode_induk = prior kode_lokasi
								 )";
            }
            $ubis = "";
			$rsUbis = $this->dbLib->execute("select kode_lokasi, nama, cocd, case when cocd = '9000' then 99 else no_urut end as no_urut from bpc_lokasi a  where kode_induk in (select kode_lokasi from bpc_lokasi where cocd like '$induk%')   or cocd = '$induk' or cocd in ('96','97','98')  order by no_urut");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as actsd_". $row->kode_lokasi. "";
                $filterCFU2 = " and w.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '$row->kode_lokasi'
									connect by kode_induk = prior kode_lokasi
								 )";
				if ($row->kode_lokasi == "97" && strtoupper($tipe) == "GROSS" ){
					$filterBudget2 = "  and  (kode_cfu in ('CFUE','CFU205') or  nvl(kode_lokasi2,'-') <> '-') ";//,'CFU40C'
				}else if ($row->kode_lokasi == "9000")
					$filterBudget2 = "";
				else 
                	$filterBudget2 = $filterBudget;  

                $sql = " select x.kode_akun,  nvl(b.actsd, 0) as actsd, nvl(b.actcm, 0) as actcm, nvl(b.actall, 0) as actall
							from bpc_relakun x
                            left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 $filterBudget2 group by x.kode_akun) b on b.kode_akun = x.kode_akun
                            where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
                            union
							select a.kode_akun, sum(nvl(b.actsd, 0)) as actsd, sum(nvl(b.actcm, 0)) as actcm, sum(nvl(b.actall, 0)) as actall
							from bpc_masakun a
                            left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU2 $filterBudget2
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                            where  a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                            group by a.kode_akun
                            having sum(nvl(b.actsd, 0)) <> 0";
                //error_log("Detail $sql");
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_akun, $line);
				}
				$dataUbis->set($row->kode_lokasi, $itemUbis);
			}
            
           
            $sql = "select distinct a.kode_neraca, d.kode_akun, left_pad(concat(d.kode_akun,concat('-',e.nama)),a.level_spasi + 1) as nama, a.tipe,e.jenis as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex
													, nvl(b.actsd,0) as actsd, nvl(b.actcm, 0) as actcm, nvl(b.actall, 0) as actall
                                                    $field
											from bpc_neraca a
                                            inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and a.kode_lokasi = d.kode_lokasi and d.kode_fs = a.kode_fs
                                            inner join bpc_masakun e on e.kode_akun = d.kode_akun and e.kode_lokasi = a.kode_lokasi 
											left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU $filterBudget group by x.kode_akun) b on b.kode_akun = d.kode_akun
                                        where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi'
                                        union
                                        select '999999' as kode_neraca, a.kode_akun, concat(a.kode_akun, concat('-',a.nama)) as nama,'-',a.jenis,'-',0,'00',1000
                                            , sum(nvl(b.actsd, 0)) as actsd, sum(nvl(b.actcm, 0)) as actcm, sum(nvl(b.actall, 0)) as actall
                                              $field
                                        from bpc_masakun a
                                        left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as actsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as actcm,
																	sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as actall			
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                            where x.kode_akun is null and a.kode_lokasi ='$lokasi' 
                                        group by a.kode_akun, a.nama, a.jenis
                                        having  sum(nvl(b.actsd, 0)) <> 0
                                        order by kode_neraca";
        //error_log("Budget $sql");
		$rs = $this->dbLib->execute($sql);
        $result = new server_util_Map();

		while ($row = $rs->FetchNextObject(false)){
            if (strtoupper($row->jenis_akun) == "PENDAPATAN" || substr($row->kode_akun,0,1) == '4' ){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    //$key = strtoupper($key);
                    $tmp = $itemUbis->get($row->kode_akun);
                    if ($tmp == null){
                        eval ("\$row->actcm_$key = 0;");
                        eval ("\$row->actsd_$key = 0;");
						eval ("\$row->actall_$key = 0;");
                    }else {
                        eval ("\$row->actcm_$key = round( \$tmp->actcm / $pembagi) * -1;");
                        eval ("\$row->actsd_$key = round(\$tmp->actsd / $pembagi) * -1;");
						eval ("\$row->actall_$key = round( \$tmp->actall / $pembagi) * -1;");
                        
                    }
					
				}
				$row->jenis = "INC";
                $row->actsd = round($row->actsd / $pembagi) * -1;
                //error_log("PDRPT " . json_encode($row));
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    //$key = strtoupper($key);
					$tmp = $itemUbis->get($row->kode_akun);
                    if ($tmp == null){
                        //eval ("\$row->actcm_$key = 0;");
                        eval ("\$row->actsd_$key = 0;");
						//eval ("\$row->actall_$key = 0;");
                    }else {
                       // eval ("\$row->actcm_$key = round( \$tmp->actcm / $pembagi) * -1;");
                        eval ("\$row->actsd_$key = round(\$tmp->actsd / $pembagi);");
						//eval ("\$row->actall_$key = round( \$tmp->actall / $pembagi) * -1;");
                    }
				}
                //$row->aggsd = $row->aggsd  / $pembagi;
                $row->actsd = round($row->actsd / $pembagi);
                $row->jenis = "EXP";
			}
            if ($row->actsd != 0){
				 $tmp = $result->get($row->kode_neraca);
				 if ($tmp == null)
				 	$tmp = array();
				$tmp[] = $row;
				$result->set($row->kode_neraca, $tmp);
			}
			
		}
        
		return ($result);   
    }
	function downloadJejerBudgetAP($induk, $model, $periode,  $tipe, $pembagi){
		$this->getDb();
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 		//error_log("Generate File ");
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 		error_log("Get Data File ");
        $data = $this->getDataJejerBudgetAP($induk, $model, $periode, $tipe, $pembagi);					
		$akun = $this->getDataJejerBudgetAPAkun($induk, $model,$periode, $tipe, $pembagi);
		error_log("Generate File ");	
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$column = array("Account","Uraian","Tipe","Level","Group");
		$fields = array();
		error_log("Look CFU File ");
		$rs = $this->dbLib->execute("select kode_lokasi, nama, cocd, case when cocd = '9000' then 99 else no_urut end as no_urut from bpc_lokasi a  where kode_induk in (select kode_lokasi from bpc_lokasi where cocd like '$induk%')   or cocd = '$induk' or cocd in ('96','97','98')  order by no_urut");	
		while ($row = $rs->FetchNextObject(false)){
			
			if ($row->kode_lokasi == "96"){
				$column[] = "Telkom Consolidated (PSAK)";
				$field[] = "actsd";
			}
			$column[] = $row->nama;
			$field[] = "actsd_" . $row->kode_lokasi;
		}

		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        error_log("Loop Data File ");
        foreach ($data["rs"]["rows"] as $val){
            $row++;
            $val  = json_decode(json_encode($val));
            $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_neraca);
            $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
            $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
            $sheet->setCellValueByColumnAndRow(3, $row, $val->level_spasi);
            $sheet->setCellValueByColumnAndRow(4, $row, $val->actsd);
			$col = 5;
			$tmpVal = (array)$val;
			foreach ($field as $key => $value) {
				$sheet->setCellValueByColumnAndRow($col, $row, $tmpVal[$value]);
				$col++;
			}

            $listAkun = $akun->get($val->kode_neraca);
            $level = $val->level_spasi;
            foreach ($listAkun as $val){
                $row++;
                $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_akun);
                $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
                $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
                $sheet->setCellValueByColumnAndRow(3, $row, $level + 1);
                $sheet->setCellValueByColumnAndRow(4, $row, $val->actsd);
                $col = 5;
				$tmpVal = (array)$val;
				foreach ($field as $key => $value) {
					$sheet->setCellValueByColumnAndRow($col, $row, $tmpVal[$value]);
					$col++;
				}
            }
            
        }
 
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/". $induk ."-LineUp-Budget_$namafile.xlsx");
	
 		error_log("Done LineUp Budget $namafile");
		return "/tmp/". $induk ."-LineUp-Budget_$namafile.xlsx";
	}
    //-------------
    function getDataAkunCFU($induk,$model, $periode, $tipe, $pembagi){
        
        global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		///$thn2 = floatval(substr($periode,0,4)) - 1;
        
            $ubis = "";
			$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$induk'  order by rowindex");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
                $sql = " select x.kode_neraca, nvl(v.nilai, 0) as actsd
							from bpc_relakun x
                            left outer join (select x.kode_neraca, sum(nvl(t.nilai,0)) as nilai
                                                                from bpc_relakun x
                                                                left outer join exs_actual_cfu t on t.kode_akun = x.kode_akun and t.periode = '$periode' and t.kode_cfu = '$row->kode_cfu'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca
                                                            ) v on v.kode_neraca = x.kode_neraca
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
							union
							select '999999', 
                                     sum(case '$bln' when '01' then jan
														 when '02' then (jan + feb  )
														 when '03' then (jan + feb + mar  )
														 when '04' then (jan + feb + mar + apr  )
														 when '05' then (jan + feb + mar + apr + mei )
														 when '06' then (jan + feb + mar + apr + mei + jun  )
														 when '07' then (jan + feb + mar + apr + mei + jun + jul )
														 when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
														 when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
														 when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
														 when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
														 when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
												end) as aggsd,
										 0 as actsd
								from  bpc_mbudget_rkm y 
                                inner join bpc_cfu t on t.kode_lokasi = y.kode_lokasi and t.kode_induk = '$row->kode_cfu'
                                inner join bpc_mapakun z on z.kode_akun = y.kode_akun and z.kode_lokasi = y.kode_lokasi
								left outer join bpc_relakun x on x.kode_akun = z.akun_konsol and x.kode_fs = '$model'  and x.kode_lokasi = '00'
								where y.tahun = '$thn1' and jenis = 'S' and y.kode_lokasi = '".$lokasi."' and x.kode_akun is null";
                //error_log($sql);
				
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_neraca, $line);
				}
				$dataUbis->set($row->kode_cfu, $itemUbis);
			}
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
            }else {
                //$join1 = "";
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and not kode_cfu in ('CFUE','CFU205')  ";//,'CFU40C'
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                //$join2 = "left outer join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
            }
        
            $sql = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(t.actsd,0) as actsd
                                                      $field
											from bpc_neraca a
											left outer join (select x.kode_neraca,
                                                                sum(nvl(case '$bln' when '01' then jan
                                                                         when '02' then (jan + feb  )
                                                                         when '03' then (jan + feb + mar  )
                                                                         when '04' then (jan + feb + mar + apr  )
                                                                         when '05' then (jan + feb + mar + apr + mei )
                                                                         when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                         when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                         when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                         when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                         when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                         when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                         when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                end,0)) as aggsd
															from bpc_relakun x
															inner join bpc_mapakun z on z.akun_konsol = x.kode_akun 
                                                            $join1
							                                inner join bpc_mbudget_rkm y on y.kode_akun = z.kode_akun and y.tahun = '$thn1' and jenis = 'S' and z.kode_lokasi = y.kode_lokasi
                                                            $join2
	                                                        where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
                                            left outer join (select x.kode_neraca, sum(nvl(t.nilai,0)) as actsd
                                                                from bpc_relakun x
                                                                inner join exs_actual_cfu t on t.kode_akun = x.kode_akun and t.periode = '$periode' 
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca
                                                            ) t on t.kode_neraca = a.kode_neraca
                                           where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
										union 
										select '999999','Unmapped', '-','PENDAPATAN','-',0,'00',10000,
												0 as actsd
												$field	
												from bpc_mbudget_rkm  y
                                                            inner join bpc_mapakun x on x.kode_akun = y.kode_akun  and y.kode_lokasi = x.kode_lokasi   
															inner join exs_cc z on z.kode_cc = y.kode_cc and z.kode_lokasi = y.kode_lokasi
															inner join exs_ubis w on w.kode_ubis = z.kode_ubis and w.kode_lokasi = y.kode_lokasi
															left outer join bpc_relakun x on x.kode_fs = '$model' and x.akun_konsol = x.kode_akun 
															where  y.tahun = '$thn1' and y.jenis = 'S' and x.kode_akun is null
										 order by  rowindex";
            //error_log($sql);
            $rs = $this->dbLib->execute($sql);
            $node = "";
		$rootNode = new server_util_NodeNRC("00");
		$this->sumHeader = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			if ($row->jenis_akun == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $tmp = $itemUbis->get($row->kode_neraca);
					eval ("\$row->$key = \$tmp->aggsd * -1 ;");
                    eval ("\$row->actsd_$key = \$tmp->actsd;");
				}
				$row->penetapan = $row->penetapan * -1  ;
				$row->aggthn = $row->aggthn * -1 ;
                $row->aggsd = $row->aggsd * -1 ;
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $tmp = $itemUbis->get($row->kode_neraca);
					eval ("\$row->$key = \$tmp->aggsd;");
                    eval ("\$row->actsd_$key = \$tmp->actsd;");
				}
			}
			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$node->setData($row);
			if ($row->tipe == "SUMMARY")
				$this->sumHeader->set($row->kode_neraca, $node);

		}
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			//if ($lokasi == "10")
            {
				$this->summariesJejer($val);
				
				$val->dataArray["selisih"] = $val->dataArray["penetapan"] - $val->dataArray["aggthn"];
				if ($val->data->sum_header != "-"){
					$summaryHeader = explode(",",$val->data->sum_header);

					foreach ($summaryHeader as $header){
						$nodeHeader = $this->sumHeader->get($header);
						if ($nodeHeader){
							foreach ($val->dataArray as $key => $value) {
								if ($key != "kode_neraca" && $key != "nama" && $key != "tipe" && $key != "sum_header" && $key != "level_spasi" && $key != "rowindex"){
									$nodeHeader->dataArray[$key] += $value;
								}
							}
							$nodeHeader->data =(object) $nodeHeader->dataArray;
						}
					}
				}
			}
		}
		//perlu hitung ke summary
		$result = array('rs' => array('rows' => array() ) );
		$this->generateResultJejer($rootNode, $result);
        ///error_log("pembagi $pembagi ");
        //error_log(json_encode($result));
		return ($result);   
    }
    function uploadMapAkun($tahun, $lokasi, $userlog, $listAkun){
        $db = $this->getDb();
        
        $rs = $db->execute("select kode_akun, akun_konsol from bpc_mapkons");
        $akunKonsol = new server_util_Map();
        while ($row = $rs->FetchNextObject(false)){
            $akunKonsol->set($row->kode_akun, $row->akun_konsol);
        }
        $sql = new server_util_arrayList();
        $sql->add("delete from bpc_mapakun where kode_lokasi = '$lokasi' ");
        $sql->add("delete from bpc_masakun where kode_lokasi = '$lokasi' ");
		if ($lokasi == '10')
			$sql->add("delete from exs_masakun where kode_lokasi = '$lokasi' ");
			
        foreach ($listAkun as $item){
            $item->akun_konsol = $akunKonsol->get($item->akun_telkom);
            if ($item->akun_konsol == "" || $item->akun_konsol == null){
                $item->akun_konsol = "40000000";
            }
            if (strpos($item->nama, "'") > 0){
                //error_log($item->nama . "-->". str_replace("'","''",$item->nama));
                $item->nama = str_replace("'","''",$item->nama);
            }
            $sql->add("insert into bpc_mapakun (kode_akun, nama, kode_lokasi, akun_telkom, akun_konsol, tipe,  tahun, userlog)values(
                            '$item->akun', '$item->nama', '$lokasi','$item->akun_telkom','$item->akun_konsol','$item->tipe','$tahun','$userlog')");
            $sql->add("insert into bpc_masakun (kode_akun, nama , kode_lokasi, modul, jenis, kode_curr, block )
                            values ('$item->akun','$item->nama','$lokasi','-','$item->tipe','IDR','0')");
			if ($lokasi == '10')
				$sql->add("insert into exs_masakun (kode_akun, nama , kode_lokasi, modul, jenis, kode_curr, block )
                            values ('$item->akun','$item->nama','$lokasi','-','$item->tipe','IDR','0')");
            
        }
        return $db->execArraySQL($sql);
    }
    function getDataEXSUMOSD($induk,$model, $periode, $pembagi){
				/*
				select distinct a.kode_cfu, y.kode_group from BPC_CFU a 
						inner join bpc_mbudget_rkm y on y.tahun = '2016' and jenis = 'S' and a.kode_lokasi = y.kode_lokasi 
																
						inner join exs_ubis b on b.kode_ubis = y.kode_ubis and b.kode_lokasi = a.kode_lokasi 
						and (b.kode_induk = a.kode_ubis or b.kode_ubis in (select x.kode_ubis from exs_ubis x inner join exs_ubis y on y.kode_ubis = x.kode_induk and y.kode_lokasi = x.kode_lokasi where y.kode_induk = a.kode_ubis and y.kode_lokasi = a.kode_lokasi))
					order by a.kode_cfu, y.kode_group
				*/
         global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		    
        if ($induk != "CFU0"){
            $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
            $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
            $filterCFU = " where a.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    )";
        }else {
            //$join1 = "";
            $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and not kode_cfu in ('CFUE','CFU205')  ";//,'CFU40C'
            $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
            //$join2 = "left outer join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
            $filterCFU = "";
        }
            
            $sql = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, (nvl(b.aggthn,0)) as aggthn
                                                    , (nvl(b.aggsd,0)) as aggsd
                                                    , (nvl(b.agg_o,0)) as aggord
                                                    , (nvl(b.agg_s,0)) as aggsmart
                                                    , (nvl(b.agg_d,0)) as aggdisr
                                                    , nvl(t.actsd,0) as actord
                                                    , 0 as actsmart
                                                    , 0 as actdisr
											from bpc_neraca a
											left outer join (select x.kode_neraca,
                                                            sum((jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)) as aggthn,
                                                            sum(nvl(case '$bln' when '01' then jan
                                                            when '02' then (jan + feb  )
                                                            when '03' then (jan + feb + mar  )
                                                            when '04' then (jan + feb + mar + apr  )
                                                            when '05' then (jan + feb + mar + apr + mei )
                                                            when '06' then (jan + feb + mar + apr + mei + jun  )
                                                            when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                            when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                            when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                            when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                            when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                            when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                            end,0)) as aggsd,
                                                            sum(nvl(
                                                            case when OSD ='S' then 
                                                            case '01' when '$bln' then jan
                                                            when '02' then (jan + feb  )
                                                            when '03' then (jan + feb + mar  )
                                                            when '04' then (jan + feb + mar + apr  )
                                                            when '05' then (jan + feb + mar + apr + mei )
                                                            when '06' then (jan + feb + mar + apr + mei + jun  )
                                                            when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                            when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                            when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                            when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                            when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                            when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                            end else 0 end ,0)) as agg_s,
                                                            sum(nvl(
                                                            case when OSD ='D' then 
                                                            case '01' when '$bln' then jan
                                                            when '02' then (jan + feb  )
                                                            when '03' then (jan + feb + mar  )
                                                            when '04' then (jan + feb + mar + apr  )
                                                            when '05' then (jan + feb + mar + apr + mei )
                                                            when '06' then (jan + feb + mar + apr + mei + jun  )
                                                            when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                            when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                            when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                            when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                            when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                            when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                            end else 0 end ,0)) as agg_d,
                                                            sum(nvl(
                                                            case when OSD <> 'S' and OSD <> 'D' then 
                                                            case '01' when '$bln' then jan
                                                            when '02' then (jan + feb  )
                                                            when '03' then (jan + feb + mar  )
                                                            when '04' then (jan + feb + mar + apr  )
                                                            when '05' then (jan + feb + mar + apr + mei )
                                                            when '06' then (jan + feb + mar + apr + mei + jun  )
                                                            when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                            when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                            when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                            when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                            when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                            when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                            end else 0 end ,0)) as agg_o
                                                            from bpc_relakun x
                                                            inner join bpc_budget_osd w on w.kode_akun = x.kode_akun
                                                            inner join (select distinct a.kode_cfu, y.kode_group from BPC_CFU a 
                                                                inner join bpc_mbudget_rkm y on y.tahun = '$thn1' and jenis = 'S' and a.kode_lokasi = y.kode_lokasi 
                                                                inner join exs_ubis b on b.kode_ubis = y.kode_ubis and b.kode_lokasi = a.kode_lokasi 
                                                                and (b.kode_induk = a.kode_ubis or b.kode_ubis in (select x.kode_ubis from exs_ubis x inner join exs_ubis y on y.kode_ubis = x.kode_induk and y.kode_lokasi = x.kode_lokasi where y.kode_induk = a.kode_ubis and y.kode_lokasi = a.kode_lokasi))
                                                                $filterCFU
                                                                ) y on  w.orgs = y.kode_group  
                                                            where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca
                                                            ) b on b.kode_neraca = a.kode_neraca
                                            left outer join (select x.kode_neraca, sum(nvl(t.nilai,0)) as actsd
                                                                from bpc_relakun x
                                                                inner join exs_actual_cfu t on t.kode_akun = x.kode_akun and t.periode = '$periode' 
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca
                                                            ) t on t.kode_neraca = a.kode_neraca
										where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
										order by rowindex";
            error_log($sql);
            $rs = $this->dbLib->execute($sql);
            $node = "";
		$rootNode = new server_util_NodeNRC("00");
		$this->sumHeader = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			
			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$node->setData($row);
			if ($row->tipe == "SUMMARY")
				$this->sumHeader->set($row->kode_neraca, $node);

		}
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			//if ($lokasi == "10")
            {
				$this->summariesJejer($val);
				
				$val->dataArray["selisih"] = $val->dataArray["penetapan"] - $val->dataArray["aggthn"];
				if ($val->data->sum_header != "-"){
					$summaryHeader = explode(",",$val->data->sum_header);

					foreach ($summaryHeader as $header){
						$nodeHeader = $this->sumHeader->get($header);
						if ($nodeHeader){
							foreach ($val->dataArray as $key => $value) {
								if ($key != "kode_neraca" && $key != "nama" && $key != "tipe" && $key != "sum_header" && $key != "level_spasi" && $key != "rowindex"){
									$nodeHeader->dataArray[$key] += $value;
								}
							}
							$nodeHeader->data =(object) $nodeHeader->dataArray;
						}
					}
				}
			}
		}
		//perlu hitung ke summary
		$result = array('rs' => array('rows' => array() ) );
		$this->generateResultJejer($rootNode, $result);
        ///error_log("pembagi $pembagi ");
        //error_log(json_encode($result));
		return ($result); 
    }
    function uploadDataCC($lokasi, $userlog, $listCC){
        $db = $this->getDb();
        
        $sql = new server_util_arrayList();
        $sql->add("delete from exs_cc where kode_lokasi = '$lokasi' ");
        foreach ($listCC as $item){
            $sql->add("insert into exs_cc (kode_cc, nama, kode_ubis, kode_lokasi, kode_witel, kode_induk, rowindex, level_spasi,  userlog)values(
                            '$item->cc', '$item->nama','$item->ubis', '$lokasi','-','-',0,0,'$userlog')");
            
            
        }
        return $db->execArraySQL($sql);
    }
    function delMapAkun($lokasi, $akun){
        $db = $this->getDb();
        $sql = new server_util_arrayList();
        $sql->add("delete from bpc_mapakun where kode_lokasi = '$lokasi' and kode_akun = '$akun'");
        return $db->execArraySQL($sql);
    }
    function addMapAkun($lokasi, $mapAkun){
        $db = $this->getDb();
        $sql = new server_util_arrayList();
        $sql->add("insert into bpc_mapakun (kode_akun, kode_lokasi, akun_telkom, akun_konsol)values(
                            '$mapAkun->akun', '$lokasi','$mapAkun->akun_telkom','$mapAkun->akun_konsol')");
        return $db->execArraySQL($sql);
    }
    function uploadMapAkunKonsol($mapAkunKonsol){
        $db = $this->getDb();
        
        $sql = new server_util_arrayList();
        $sql->add("delete from bpc_mapkons where kode_lokasi = '$lokasi' ");
        foreach ($listAkun as $item){
            $sql->add("insert into bpc_mapkons (kode_akun, akun_konsol)values(
                            '$item->akun','$item->akun_konsol')");
            
        }
        return $db->execArraySQL($sql);
    }
    function listMapAkun($lokasi, $tahun){
        $db = $this->getDb();
        
        $res = $db->execute("select a.kode_akun, a.nama, a.akun_telkom, b.nama as nmtelkom, a.akun_konsol 
                                from bpc_mapakun a inner join bpc_masakun b on b.kode_akun = a.akun_telkom and b.kode_lokasi = '10' ");
        $result= array();
        while ($row = $res->FetchNextObject(false)){
            $result[] = (array) $row;
        }
        return $result;
    }
    function uploadIntercompany($lokasi, $ubis, $tahun, $userlog, $listItem){
		try{
			$this->getDb();
			$filter = $this->getFilterUbis("",$ubis);
			$rs = $this->db->execute("select distinct progress from bpc_mbudget_rkm where $filter  and tahun = '$tahun' and progress in ('1','2') ");
			if ($row = $rs->FetchNextObject(false)){
				return "Data Upload sudah tersubmit ke Approval. Tidak bisa di ubah";
			}
			$listRKM = $this->listRKMWithKey($lokasi, $ubis, $tahun);
			$listAkun = $this->listAkun($lokasi);
			$listCC = $this->listCC($lokasi);
			$result = array("akun" => array(), "rkm" => array());
			
			$sql = new server_util_arrayList();
			//----- group by akun, cc, dan RKM
			$tmp = "";
			$listAkunCCRkm = new server_util_Map();
			foreach ($listItem as $val){
				$gab = $val->cc . $val->akun . $val->rkm;
				$value = $listAkunCCRkm->get($gab);
				if ( $value == null){
					$listAkunCCRkm->set($gab, array("akun" => $val->akun,
													"cc" => $val->cc,
													"rkm" => $val->rkm,
													"versi" => 0, 
													"val" => $val ) );
					$tmp = $gab;
					
				}/*else {
					$value["val"]->jan += $val->jan;
					$value["val"]->feb += $val->feb;
					$value["val"]->mar += $val->mar;
					$value["val"]->apr += $val->apr;
					$value["val"]->mei += $val->mei;
					$value["val"]->jun += $val->jun;
					$value["val"]->jul += $val->jul;
					$value["val"]->aug += $val->aug;
					$value["val"]->sep += $val->sep;
					$value["val"]->okt += $val->okt;
					$value["val"]->nop += $val->nop;
					$value["val"]->des += $val->des;
					$listAkunCCRkm->set($gab, $value);
				}	*/
			}
			//get versi upload
			//$listItem = array();
			
			foreach($listAkunCCRkm->getArray() as $key => $val){
				$rs = $this->db->execute("select max(nvl(versi,0)) as versi from bpc_mbudget_rkm where kode_akun = '".$val["akun"]."' and kode_cc = '".$val["cc"]."' and kode_rkm = '".$val["rkm"]."' and tahun = '$tahun'  ");
				if ($row = $rs->FetcHNextObject(false)){
					$versi = $row->versi + 1;
				}else $versi = 1;
				$val["versi"] = $versi;
				$listAkunCCRkm->set($key, $val);
				//$listItem[] = $val["val"];
			}
			$month = 0;
			$systemYear = date("Y");
			foreach($listAkunCCRkm->getArray() as $key => $val){
				$sql->add("delete from bpc_intercompany where kode_akun = '".$val["akun"]."' and kode_cc = '".$val["cc"]."' and kode_rkm = '".$val["rkm"]."' and tahun = '$tahun'  ");
			}
			//-------------------
			{
				foreach ($listItem as $val){
					$ok = true;
					if ($listAkun->get($val->akun) === null ){
						$val->akun = $val->akun ."(Not Found)";
						array_push($result["rkm"], $val);
						$ok = false;
					}else 
					if ($listRKM->get($val->rkm) === null){
						$val->rkm = $val->rkm ."(Not Found)"; 
						array_push($result["rkm"],$val);
						$ok = false;
					}else 
					if ($listCC->get($val->cc) === null){
						$val->cc = $val->cc ."(Not Found)";
						array_push($result["rkm"],$val);
						$ok = false;
					}
					if ($val->jan == "" || $val->jan == "-" || $val->jan == "undefined" || (floatval($month) >= 1 && $systemYear == $tahun ) )
						$val->jan = 0;
					if ($val->feb == "" || $val->feb == "-" || $val->feb == "undefined" || (floatval($month) >= 2 && $systemYear == $tahun ))
						$val->feb = 0;
					if ($val->mar == "" || $val->mar == "-" || $val->mar == "undefined" || (floatval($month) >= 3 && $systemYear == $tahun ))
						$val->mar = 0;
					if ($val->apr == "" || $val->apr == "-" || $val->apr == "undefined" || (floatval($month) >= 4 && $systemYear == $tahun ))
						$val->apr = 0;
					if ($val->mei == "" || $val->mei == "-" || $val->mei == "undefined" || (floatval($month) >= 5 && $systemYear == $tahun ))
						$val->mei = 0;
					if ($val->jun == "" || $val->jun == "-" || $val->jun == "undefined" || (floatval($month) >= 6 && $systemYear == $tahun ))
						$val->jun = 0;
					if ($val->jul == "" || $val->jul == "-" || $val->jul == "undefined" || (floatval($month) >= 7 && $systemYear == $tahun ))
						$val->jul = 0;
					if ($val->aug == "" || $val->aug == "-" || $val->aug == "undefined" || (floatval($month) >= 8 && $systemYear == $tahun ))
						$val->aug = 0;
					if ($val->sep == "" || $val->sep == "-" || $val->sep == "undefined" || (floatval($month) >= 9 && $systemYear == $tahun ))
						$val->sep = 0;	
					if ($val->okt == "" || $val->okt == "-" || $val->okt == "undefined" || (floatval($month) >= 10 && $systemYear == $tahun ))
						$val->okt = 0;
					if ($val->nop == "" || $val->nop == "-" || $val->nop == "undefined" || (floatval($month) >= 11 && $systemYear == $tahun ) )
						$val->nop = 0;
					if ($val->des == "" || $val->des == "-" || $val->des == "undefined" || (floatval($month) >= 12 && $systemYear == $tahun ))
						$val->des = 0;
					$gab = $val->cc . $val->akun . $val->rkm;
					$gabValue = $listAkunCCRkm->get($gab);
					$versi = $gabValue["versi"];
					if ($ok)
						$sql->add("insert into bpc_intercompany(tahun, kode_cc, kode_akun, kode_rkm, jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des, jenis,kode_ubis, kode_witel, nik_user, tgl_upd, kode_lokasi, versi, ubis_upload, cfu_member, akun_pdpt, cc_pdpt) 
								values('$tahun','".$val->cc."','".$val->akun."','".$val->rkm."'
								,".$val->jan."
								,".$val->feb."
								,".$val->mar."
								,".$val->apr."
								,".$val->mei."
								,".$val->jun."
								,".$val->jul."
								,".$val->aug."
								,".$val->sep."
								,".$val->okt."
								,".$val->nop."
								,".$val->des."
								,'S','".substr($val->cc,0,4)."','-','$userlog',sysdate, '".$val->lokasi."','$versi','NAS'
                                ,'".$val->cfu_member."','40000000','T000000) ");
				}
				
			}
			if ($ok){
				return $this->db->execArraySQL($sql);
			}else {
				$ret = $this->db->execArraySQL($sql);
				if ($ret == "process completed"){
					return $result;
				}else {
					error_log($ret);
					return $ret;
				}
			}
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}   
    function setDataCFU(&$sheet, $lokasi, $tahun, $model, $ubis, $pembagi = 1){
			error_log("setDataRKAP $ubis");
			$rs = $this->db->execute("select kd, to_char(tgl, 'dd Month yyyy') as tgl from bpc_kd where tahun ='$tahun'");
			if ($row = $rs->FetchNextObject(false)){
				$kd = $row->kd;
				$tgl = $row->tgl;
			}
			$sheet->setShowGridLines(false);
        	$sheet->getPageSetup()->setOrientation(PHPExcel_Worksheet_PageSetup::ORIENTATION_LANDSCAPE);
        	$sheet->getPageSetup()->setPaperSize(PHPExcel_Worksheet_PageSetup::PAPERSIZE_A3);
            $sheet->getPageSetup()->setRowsToRepeatAtTopByStartAndEnd(1,6);
        
        	$pageMargins = $sheet->getPageMargins();
        	$margin = 0.5 / 2.54;
			$pageMargins->setTop(1.905 / 2.54);
			$pageMargins->setBottom(1.905 / 2.54);
			$pageMargins->setLeft(1.4986 / 2.54);
			$pageMargins->setRight(0.508 / 2.54);
			$sheet->getPageSetup()->setScale(80);
        	//$sheet->getPageSetup()->setFitToPage(true);
        
			$sharedStyle1 = new PHPExcel_Style();
			$sharedStyle1->applyFromArray(
				array('fill' 	=> array(
											'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
											'color'		=> array('argb' => 'FFCCFFCC')
										),
					  'borders' => array(
											'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
											'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
										)
					 ));
			$style_num = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => false,
                                    ),
                           'alignment' => array(
                                            'wrap'       => false,
                                      'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                                        ),
                     );
        	$style_title = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    ),
                           'alignment' => array(
                                            'wrap'       => false,
                                      'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                                        ),
                     );
			///write Col Title
			error_log("Title");
			$sheet->setCellValueByColumnAndRow(0, 1, "PT. Telekomunikasi Indonesia, Tbk");
			$sheet->mergeCells("A1:D1");
			$sheet->setCellValueByColumnAndRow(0, 2, "Anggaran Pendapatan dan Beban Usaha Tahun $tahun - Profit & Loss");
			$sheet->mergeCells("A2:E2");
			if ($ubis != ""){
				$rs = $this->db->execute("select nama from bpc_cfu where kode_cfu = '$ubis'");
				if ($row = $rs->FetchNextObject(false)){
					$sheet->setCellValueByColumnAndRow(0, 3, $row->nama);
					$sheet->mergeCells("A3:C3");
				}
					
			}
        
			//$sheet->setCellValueByColumnAndRow(12, 2, "");
			$sheet->setCellValueByColumnAndRow(14, 2, "Lampiran $kd");
			$sheet->setCellValueByColumnAndRow(14, 3, "Tanggal $tgl");
			$sheet->getStyle("O2")->applyFromArray($style_num);
			$sheet->getStyle("O3")->applyFromArray($style_num);
			$column = array("ID","Deskripsi");
			
            $field = array("kode_neraca","nama");
            $rsCFU = $this->db->execute("select kode_cfu, nama from bpc_cfu where kode_induk = '$ubis'  ");
            while ($recCFU = $rsCFU->FetchNextObject(false)){
                $column[] = $recCFU->nama;
                $field[] = $recCFU->kode_cfu;
            }
            $column[] = "Group";
            $field[] = "aggthn";
            
			$col = 0;
			$row = 6;
			$indexColumn = array("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V");
			
			
			$sheet->getStyle('A'.$row.':'.$indexColumn[count($column)-1].$row)->getBorders()->getAllBorders()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
			foreach ($column as $value){	
				$sheet->setCellValueByColumnAndRow($col, $row, $value);
				$sheet->getStyle($indexColumn[$col].$row)->applyFromArray($style_title);
                $sheet->getColumnDimension($indexColumn[$col])->setAutoSize(true);//->setWidth(10);
				$col++;
			}
            
			$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
			$row++;	
        /*
		$rs = $this->db->execute("select value1 from bpc_rules where kode_rules = 'MODELREP'");
		if ($rowrs = $rs->FetchNextObject(false))
			$model = $rowrs->value1;
		else $model = "TIMERKAP";
		*/
        //$induk,$model, $tahun, $pembagi
		$pl = $this->getDataCFU($ubis, $model, $tahun, $pembagi);
		$listAkun = $this->getDataCFUDetailReport($ubis,$model,$tahun, $pembagi);
		switch ($pembagi){
			case 1000000000 : $satuan ="(Dalam miliaran Rupiah)";break;
			case 1000000 : $satuan ="(Dalam jutaan Rupiah)";break;
			case 1000 : $satuan ="(Dalam ribuan Rupiah)";break;
			default : $satuan = "(Dalam Rupiah)";
		}
		foreach ($pl["rs"]["rows"] as $line){
			//draw item;
			$line["nama"] = str_replace("&nbsp;"," ",$line["nama"]);
            $nama = $line["nama"];
			
			//if (floatval($line["aggthn"]) != 0)
            {
                foreach ($field as $key => $val){
                    $sheet->setCellValueByColumnAndRow($key, $row, $line[$val]);    
                    if ($key > 0){
                        $sheet->getStyle($indexColumn[$key].$row)->getNumberFormat()->setFormatCode('#,##0');
                    }
                }
				$akun = $listAkun->get($line["kode_neraca"]);
                //error_log($line["kode_neraca"] .":".$nama);
                //error_log(json_encode($akun));
				$row++;
				if ($akun !== null){
					foreach ($akun->getArray() as $value){
						$value = (array) $value;
						$value["nama"] = str_replace("&nbsp;"," ",$value["nama"]);
                        foreach ($field as $key => $val){
                            if ($val == "kode_neraca") $val = "kode_akun";
                            $sheet->setCellValueByColumnAndRow($key, $row, $value[$val]);    
                            if ($key > 1){
                                $sheet->getStyle($indexColumn[$key].$row)->getNumberFormat()->setFormatCode('#,##0');
                            }
                        }
						$row++;
					}
				}
			}
		}
		$sheet->getStyle("A6:O".$row)->getFont()->setSize(9);
		if ($ubis == "") $ubis = "Unconsole";
		$sheet->setTitle($ubis);
	
		
	}
    
    function generateCFUFiles($lokasi, $tahun, $model, $ubis, $pembagi = 1){
		try{
			$this->getDb();
			$this->cleanUp();
			global $serverDir;
			uses("server_modules_codeplex_PHPExcel",false);
			//$files = array();
			//PHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);
			// Set active sheet index to the first sheet, so Excel opens this as the first sheet
 			error_log("Get Main $ubis");
 			$objPHPExcel = new PHPExcel();
 			// Set document properties
			$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
							 ->setLastModifiedBy("MA")
							 ->setTitle("Template Penetapan")
							 ->setSubject("Penetapan")
							 ->setDescription("Template Penetapan")
							 ->setKeywords("RKAP Template Penetapan")
							 ->setCategory("RKAP");
 
 
			// Add Data in your file
 
			$objPHPExcel->setActiveSheetIndex(0);
			//loop Dir / Unit Bisnis
			$sheet = $objPHPExcel->getActiveSheet();					
			
 			
 			$file = $this->setDataCFU($sheet, $lokasi, $tahun,$model,  $ubis, $pembagi);
 			$files[] = $file;
 			if ($ubis != "" && $ubis != "NAS" && $ubis != "Other" && $ubis != "CRO"){
 				// $ubis = "NAS";
				$rs = $this->db->execute("select kode_cfu, nama, rowindex from bpc_cfu where kode_cfu <> '$ubis' start with kode_cfu = '$ubis' connect by kode_induk = prior kode_cfu  order by rowindex");
				while ($row = $rs->FetchNextObject(false)){
					$sheet = $objPHPExcel->createSheet();
					$this->setDataCFU($sheet, $lokasi, $tahun, $model, $row->kode_cfu, $pembagi);
					//$files[] = $file;
				}
 			}
 			global $serverDir;
			// Set active sheet index t
			$namafile = $ubis . "_" . MD5(date("r"));
			$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
			$objWriter->save($serverDir . "/tmp/$namafile.xlsx");
			error_log("Done $ubis " .$serverDir . "/tmp/$namafile.xlsx");
			$objPHPExcel = null;
			$objWriter = null;
		
			$pl = null;
			$listAkun = null;
			
			
			return "/tmp/$namafile.xlsx";
		}catch(Exception $e){
			error_log($e->getMessage());
			return $e->getMessage();
		}
	}
    function setDataCFUSummary(&$sheet, $lokasi, $tahun, $model, $ubis, $pembagi = 1){
			error_log("setDataRKAP $ubis");
			$rs = $this->db->execute("select kd, to_char(tgl, 'dd Month yyyy') as tgl from bpc_kd where tahun ='$tahun'");
			if ($row = $rs->FetchNextObject(false)){
				$kd = $row->kd;
				$tgl = $row->tgl;
			}
			$sheet->setShowGridLines(false);
        	$sheet->getPageSetup()->setOrientation(PHPExcel_Worksheet_PageSetup::ORIENTATION_LANDSCAPE);
        	$sheet->getPageSetup()->setPaperSize(PHPExcel_Worksheet_PageSetup::PAPERSIZE_A3);
        	$pageMargins = $sheet->getPageMargins();
            $sheet->getPageSetup()->setRowsToRepeatAtTopByStartAndEnd(1,6);
        
        	$margin = 0.5 / 2.54;
			$pageMargins->setTop(1.905 / 2.54);
			$pageMargins->setBottom(1.905 / 2.54);
			$pageMargins->setLeft(1.4986 / 2.54);
			$pageMargins->setRight(0.508 / 2.54);
			$sheet->getPageSetup()->setScale(80);
        	//$sheet->getPageSetup()->setFitToPage(true);
        
			$sharedStyle1 = new PHPExcel_Style();
			$sharedStyle1->applyFromArray(
				array('fill' 	=> array(
											'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
											'color'		=> array('argb' => 'FFCCFFCC')
										),
					  'borders' => array(
											'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
											'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
										)
					 ));
			$style_num = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => false,
                                    ),
                           'alignment' => array(
                                            'wrap'       => false,
                                      'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                                        ),
                     );
        	$style_title = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    ),
                           'alignment' => array(
                                            'wrap'       => false,
                                      'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                                        ),
                     );
			///write Col Title
			error_log("Title");
			$sheet->setCellValueByColumnAndRow(0, 1, "PT. Telekomunikasi Indonesia, Tbk");
			$sheet->mergeCells("A1:D1");
			$sheet->setCellValueByColumnAndRow(0, 2, "Anggaran Pendapatan dan Beban Usaha Tahun $tahun - Profit & Loss");
			$sheet->mergeCells("A2:E2");
			if ($ubis != ""){
				$rs = $this->db->execute("select nama from bpc_cfu where kode_cfu = '$ubis'");
				if ($row = $rs->FetchNextObject(false)){
					$sheet->setCellValueByColumnAndRow(0, 3, $row->nama);
					$sheet->mergeCells("A3:C3");
				}
					
			}
			//$sheet->setCellValueByColumnAndRow(12, 2, "");
			$sheet->setCellValueByColumnAndRow(14, 2, "Lampiran $kd");
			$sheet->setCellValueByColumnAndRow(14, 3, "Tanggal $tgl");
			$sheet->getStyle("O2")->applyFromArray($style_num);
			$sheet->getStyle("O3")->applyFromArray($style_num);
			$column = array("ID","Deskripsi");
			
            $field = array("kode_neraca","nama");
            $rsCFU = $this->db->execute("select kode_cfu, nama from bpc_cfu where kode_induk = '$ubis' and kode_cfu <> 'CFUE' and kode_cfu <> 'CFUC' ");
            while ($recCFU = $rsCFU->FetchNextObject(false)){
                $column[] = $recCFU->nama;
                $field[] = $recCFU->kode_cfu;
            }
            $column[] = "Group";
            $field[] = "aggthn";
            
			$col = 0;
			$row = 6;
			$indexColumn = array("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V");
			error_log(json_encode($columns));
			
			$sheet->getStyle('A'.$row.':'.$indexColumn[count($column)-1].$row)->getBorders()->getAllBorders()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
			foreach ($column as $value){	
				$sheet->setCellValueByColumnAndRow($col, $row, $value);
                $sheet->getColumnDimension($indexColumn[$col])->setAutoSize(true);//->setWidth(10);
                //)->setAutoSize(true)
				$sheet->getStyle($indexColumn[$col].$row)->applyFromArray($style_title);
				$col++;
			}
			$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
            
			$row++;	
        /*
		$rs = $this->db->execute("select value1 from bpc_rules where kode_rules = 'MODELREP'");
		if ($rowrs = $rs->FetchNextObject(false))
			$model = $rowrs->value1;
		else $model = "TIMERKAP";
		*/
        //$induk,$model, $tahun, $pembagi
        $level = 2;
		$pl = $this->getDataCFU($ubis, $model, $tahun, $pembagi);
		switch ($pembagi){
			case 1000000000 : $satuan ="(Dalam miliaran Rupiah)";break;
			case 1000000 : $satuan ="(Dalam jutaan Rupiah)";break;
			case 1000 : $satuan ="(Dalam ribuan Rupiah)";break;
			default : $satuan = "(Dalam Rupiah)";
		}
        //$sheet->getPageSetup()->setPrintArea("A1:" . $indexColumn[$col - 1] ."".count($pl["rs"]["rows"]) );
		foreach ($pl["rs"]["rows"] as $line){
			//draw item;
			$line["nama"] = str_replace("&nbsp;"," ",$line["nama"]);
            $nama = $line["nama"];
			
			if ( ((floatval($line["level_spasi"]) <= $level && $line["jenis_akun"] == "PENDAPATAN")
				  ||
				  (floatval($line["level_spasi"]) <= $level - 1 && $line["jenis_akun"] == "BEBAN")
				 )
					 && floatVal($line["aggthn"] != 0))
            {
                foreach ($field as $key => $val){
                    $sheet->setCellValueByColumnAndRow($key, $row, $line[$val]);    
                    if ($key > 0){
                        $sheet->getStyle($indexColumn[$keys].$row)->getNumberFormat()->setFormatCode('#,##0');
                    }
                }
				//error_log($line["kode_neraca"] .":".$nama);
                //error_log(json_encode($akun));
				$row++;
			}
		}
		$sheet->getStyle("A6:O".$row)->getFont()->setSize(9);
		if ($ubis == "") $ubis = "Unconsole";
		$sheet->setTitle($ubis);
	
		
	}
    function generateCFUFilesSummary($lokasi, $tahun, $model, $ubis, $pembagi = 1){
		try{
			$this->getDb();
			$this->cleanUp();
			global $serverDir;
			uses("server_modules_codeplex_PHPExcel",false);
			//$files = array();
			//PHPExcel_Shared_Font::setAutoSizeMethod(PHPExcel_Shared_Font::AUTOSIZE_METHOD_EXACT);
			// Set active sheet index to the first sheet, so Excel opens this as the first sheet
 			error_log("Get Main $ubis");
 			$objPHPExcel = new PHPExcel();
 			// Set document properties
			$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
							 ->setLastModifiedBy("MA")
							 ->setTitle("Template Penetapan")
							 ->setSubject("Penetapan")
							 ->setDescription("Template Penetapan")
							 ->setKeywords("RKAP Template Penetapan")
							 ->setCategory("RKAP");
 
 
			// Add Data in your file
 
			$objPHPExcel->setActiveSheetIndex(0);
			//loop Dir / Unit Bisnis
			$sheet = $objPHPExcel->getActiveSheet();					
			
 			
 			$file = $this->setDataCFUSummary($sheet, $lokasi, $tahun,$model,  $ubis, $pembagi);
 			$files[] = $file;
 			if ($ubis != "" && $ubis != "NAS" && $ubis != "Other" && $ubis != "CRO"){
 				// $ubis = "NAS";
				$rs = $this->db->execute("select kode_cfu, nama, rowindex from bpc_cfu where kode_cfu <> '$ubis' start with kode_cfu = '$ubis' connect by kode_induk = prior kode_cfu  order by rowindex");
				while ($row = $rs->FetchNextObject(false)){
					$sheet = $objPHPExcel->createSheet();
					$this->setDataCFUSummary($sheet, $lokasi, $tahun, $model, $row->kode_cfu, $pembagi);
					//$files[] = $file;
				}
 			}
 			global $serverDir;
			// Set active sheet index t
			$namafile = $ubis . "_" . MD5(date("r"));
			$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
			$objWriter->save($serverDir . "/tmp/$namafile.xlsx");
			error_log("Done $ubis " .$serverDir . "/tmp/$namafile.xlsx");
			$objPHPExcel = null;
			$objWriter = null;
		
			$pl = null;
			$listAkun = null;
			
			
			return "/tmp/$namafile.xlsx";
		}catch(Exception $e){
			error_log($e->getMessage());
			return $e->getMessage();
		}
	}
    function compareStagingCO($tahun, $lokasi, $ubis ){
		$db = $this->getDb();
		$filter = " and " . $this->getFilterUbis("",$ubis,$lokasi);
		$filterStaging = " and substr(b.kode_cc, 0,4) in (select kode_ubis from exs_ubis where kode_lokasi = '$lokasi' start with kode_ubis = '$ubis' connect by kode_induk = prior kode_ubis)  ";

        $sql1 = "select a.KODE_AKUN, '-' as nama_akun, a.kode_cc, '-' as nama_cc, a.aggthn
							, (nvl(b.jan + b.feb + b.mar + b.apr + b.mei + b.jun + b.jul + b.aug + b.sep + b.okt + b.nop + b.des,0)) as aggco
                           , a.aggthn - nvl(b.jan + b.feb + b.mar + b.apr + b.mei + b.jun + b.jul + b.aug + b.sep + b.okt + b.nop + b.des,0) selisih 
                     from (
                    select a.tahun, a.kode_akun, a.kode_cc 
							, decode(substr(kode_akun,1,1),'4',-1,1) * round(sum(a.jan + a.feb + a.mar + a.apr + a.mei + a.jun + a.jul + a.aug + a.sep + a.okt + a.nop + a.des)) as aggthn
                    from BPC_MBUDGET_RKM a 
                    where a.tahun = '$tahun' and a.kode_lokasi = '$lokasi'   $filter
                    group by a.tahun, a.kode_akun, a.kode_cc)  a 
                    left outer join BPC_MBUDGET_CO b on b.kode_akun = a.kode_akun and b.kode_cc = a.kode_cc and b.tahun = a.tahun 
						$filterStaging
					where a.aggthn - nvl(b.jan + b.feb + b.mar + b.apr + b.mei + b.jun + b.jul + b.aug + b.sep + b.okt + b.nop + b.des,0) <> 0
					order by kode_akun, kode_cc";
		error_log("RKAP vs CO $sql1");
	    $result = array("result1"=>array(), "result2" => array());
        $rs = $db->execute($sql1);
        while ($row = $rs->FetchNextObject(false)){
            $result["result1"][] = (array)$row;
        }
    
        $sql1 = "select b.KODE_AKUN, '-' as nama_akun, b.kode_cc, '-' as nama_cc,
							nvl(a.aggthn,0) as aggthn,
                            nvl(b.jan + b.feb + b.mar + b.apr + b.mei + b.jun + b.jul + b.aug + b.sep + b.okt + b.nop + b.des,0) as aggco,
                            nvl(aggthn,0) - nvl(b.jan + b.feb + b.mar + b.apr + b.mei + b.jun + b.jul + b.aug + b.sep + b.okt + b.nop + b.des,0) as selisih
                      from bpc_mbudget_co  b 
                    left outer join (
							select a.tahun, a.kode_akun, a.kode_cc , decode(substr(kode_akun,1,1),'4',-1,1) * round(sum(a.jan + a.feb + a.mar + a.apr + a.mei + a.jun + a.jul + a.aug + a.sep + a.okt + a.nop + a.des)) as aggthn
							from BPC_MBUDGET_RKM a 
							where a.tahun = '$tahun' and a.kode_lokasi = '$lokasi'  $filter
							group by a.tahun, a.kode_akun, a.kode_cc
							) a on b.kode_akun = a.kode_akun and b.kode_cc = a.kode_cc and b.tahun = a.tahun
                    where b.tahun = '$tahun' $filterStaging and 
						(  nvl(b.jan + b.feb + b.mar + b.apr + b.mei + b.jun + b.jul + b.aug + b.sep + b.okt + b.nop + b.des,0) - nvl(aggthn,0) <> 0 )
					order by kode_akun, kode_cc";
         error_log("CO vs RKAP $sql1"); 
		$rs = $db->execute($sql1);
        while ($row = $rs->FetchNextObject(false)){
            $result["result2"][] = (array)$row;
        }
        return ($result);
    }
    function summaries(&$item){
		//error_log($item->data->ubis);
		foreach ($item->childs as $key => $val){
			$line = $val;
			$this->summaries($line);
			$item->data->aggthn += $line->data->aggthn;
			$item->data->aggcm += $line->data->aggcm;
			$item->data->aggsd += $line->data->aggsd;
			$item->data->actsd += $line->data->actsd;
			$item->data->actcm += $line->data->actcm;
			$item->data->actcm_lalu += $line->data->actcm_lalu;
			$item->data->actsd_lalu += $line->data->actsd_lalu;
			
			if ($line->data->sum_header != "-") {
				$sumheader = explode(",",$line->data->sum_header);
				foreach ($sumheader as $header){
					$nodeHeader = $this->sumHeader->get($header);
					if ($nodeHeader){
						$nodeHeader->data->aggthn += $line->data->aggthn;
						$nodeHeader->data->aggcm += $line->data->aggcm;
						$nodeHeader->data->aggsd += $line->data->aggsd;
						$nodeHeader->data->actsd += $line->data->actsd;
						$nodeHeader->data->actcm += $line->data->actcm;
						$nodeHeader->data->actcm_lalu += $line->data->actcm_lalu;
						$nodeHeader->data->actsd_lalu += $line->data->actsd_lalu;
					}
				}
			}

		}
	}

	function summariesMonthly(&$item){
		//error_log($item->data->ubis);
		foreach ($item->childs as $key => $val){
			$line = $val;
			$this->summariesMonthly($line);
			$item->data->n1 += $line->data->n1;
			$item->data->n2 += $line->data->n2;
			$item->data->n3 += $line->data->n3;
			$item->data->n4 += $line->data->n4;
			$item->data->n5 += $line->data->n5;
			$item->data->n6 += $line->data->n6;
			$item->data->n7 += $line->data->n7;
			$item->data->n8 += $line->data->n8;
			$item->data->n9 += $line->data->n9;
			$item->data->n10 += $line->data->n10;
			$item->data->n11 += $line->data->n11;
			$item->data->n12 += $line->data->n12;
			$item->data->nt += $line->data->nt;
			$item->data->m1 += $line->data->m1;
			$item->data->m2 += $line->data->m2;
			$item->data->m3 += $line->data->m3;
			$item->data->m4 += $line->data->m4;
			$item->data->m5 += $line->data->m5;
			$item->data->m6 += $line->data->m6;
			$item->data->m7 += $line->data->m7;
			$item->data->m8 += $line->data->m8;
			$item->data->m9 += $line->data->m9;
			$item->data->m10 += $line->data->m10;
			$item->data->m11 += $line->data->m11;
			$item->data->m12 += $line->data->m12;
			$item->data->mt += $line->data->mt;
			
			if ($line->data->sum_header != "-") {
				$sumheader = explode(",",$line->data->sum_header);
				foreach ($sumheader as $header){
					$nodeHeader = $this->sumHeader->get($header);
					if ($nodeHeader){
							$nodeHeader->data->n1 += $line->data->n1;
                            $nodeHeader->data->n2 += $line->data->n2;
                            $nodeHeader->data->n3 += $line->data->n3;
                            $nodeHeader->data->n4 += $line->data->n4;
                            $nodeHeader->data->n5 += $line->data->n5;
                            $nodeHeader->data->n6 += $line->data->n6;
                            $nodeHeader->data->n7 += $line->data->n7;
							$nodeHeader->data->n8 += $line->data->n8;
                            $nodeHeader->data->n9 += $line->data->n9;
                            $nodeHeader->data->n10 += $line->data->n10;
                            $nodeHeader->data->n11 += $line->data->n11;
                            $nodeHeader->data->n12 += $line->data->n12;
                            $nodeHeader->data->nt += $line->data->nt;
							$nodeHeader->data->m1 += $line->data->m1;
                            $nodeHeader->data->m2 += $line->data->m2;
                            $nodeHeader->data->m3 += $line->data->m3;
                            $nodeHeader->data->m4 += $line->data->m4;
                            $nodeHeader->data->m5 += $line->data->m5;
                            $nodeHeader->data->m6 += $line->data->m6;
                            $nodeHeader->data->m7 += $line->data->m7;
							$nodeHeader->data->m8 += $line->data->m8;
                            $nodeHeader->data->m9 += $line->data->m9;
                            $nodeHeader->data->m10 += $line->data->m10;
                            $nodeHeader->data->m11 += $line->data->m11;
                            $nodeHeader->data->m12 += $line->data->m12;
                            $nodeHeader->data->mt += $line->data->mt;
					}
				}
			}

		}
	}
    //---- common function -----
    /**
     *  <#Digunakan untuk menghitung formula Achievement untuk report Executive Summary#>
     *
     *  @param $budget <#$budget nilai anggaran#>
     *  @param $actual <#$actual nilai actual#>
     *
     *  @return <#return value nilai setelah rumus#>
     */
	function rumusAchieve($budget, $actual){
		/*
		IF(budget>0,Actual/budget,IF(budget<0,IF(Actual<budget,1-(Actual-budget)/budget,IF(Actual>0,(1-(Actual-budget)/budget),1-(Actual-budget)/budget)),""))
		if (budget>0)
			Actual/budget
		else if (budget<0){
			if (Actual<budget)
				return 1-(Actual-budget)/budget
			else if (Actual>0)
				return (1-(Actual-budget)/budget)
			else return 1-(Actual-budget)/budget);
		}else return ""
		*/

		$budget = floatval($budget);
		$actual = floatval($actual);
		if ($budget > 0){
			return round($actual / $budget,2) * 100;
		}else if ($budget < 0) {
			 if ($actual < $budget)
			 	return round(1 - ($actual - $budget ) / $budget) * 100;
			 else if ($actual > 0 )
			 	return round(1 - ($actual - $budget ) / $budget) * 100;
			 else if ($actual < 0)
			 	return 0;
			 else return round(1 - ($actual - $budget ) / $budget) * 100;
		}else if ($budget == 0){
			if ($actual > 0)
				return 100;
			else return 0;
		}else {
			error_log("Achieve ". $budget .":".$actual);
			return 0;
		}
	}
    /**
     *  <#Digunakan untuk menghitung formula growth untuk report executive summary#>
     *
     *  @param $current  <#$current nilai actual skrg#>
     *  @param $previous <#$previous nilai actual pembanding#>
     *
     *  @return <#return value nilai setelah rumus#>
     */
	function rumusGrowth($current, $previous){
		$current = floatval($current);
		$previous = floatval($previous);
		if ($previous > 0){
			return round($current / $previous - 1, 3) * 100;
		}else if ($previous < 0) {
			 if ($current < $previous)
			 	return round((1 - ($current - $previous ) / $previous) - 1, 3) * 100;
			 else if ($current > 0 )
			 	return round((1 - ($current - $previous ) / $previous) - 1, 3) * 100;
			 else if ($current < 0)
			 	return 0;
			 else return round((1 - ($current - $previous ) / $previous) - 1, 3) * 100;
		}else if ($previous == 0){
			if ($current > 0)
				return 100;
			else return -100;
		}else {
			error_log("Growth ". $current .":".$previous);
			return 0;
		}
	}
    function generateResult($item, &$result, $neraca){
		foreach ($item->childs as $key => $val){
			
            if ($val->data->jenis_akun == "PENDAPATAN"){
				$val->data->aggthn = ($val->data->aggthn) * -1;
				$val->data->aggcm = ($val->data->aggcm) * -1;
				$val->data->aggsd = ($val->data->aggsd) * -1;
				$val->data->actcm = ($val->data->actcm) * -1;
				$val->data->actsd = ($val->data->actsd) * -1;
				$val->data->actcm_lalu = ($val->data->actcm_lalu) * -1;
				$val->data->actsd_lalu = ($val->data->actsd_lalu) * -1;
			}else {
				

			}
            
			
			$val->data->achiev = $this->rumusAchieve($val->data->aggcm, $val->data->actcm);//floatval($val->data->aggbln) == 0 ? 100 : round($val->data->actbln / $val->data->aggbln * 100,1);
			$val->data->growth = $this->rumusGrowth($val->data->actcm,$val->data->actcm_lalu);
			$val->data->achiev2 = $this->rumusAchieve($val->data->aggsd, $val->data->actsd);//floatval($val->data->aggsd) == 0 ? 100  : round($val->data->actsd / $val->data->aggsd * 100,1);
			$val->data->growth2 = $this->rumusGrowth($val->data->actsd,$val->data->actsd_lalu);//floatval($val->data->actall) == 0 ? 100 : round(($val->data->actsd - $val->data->actall) / $val->data->actall * 100,1 );

			{
				$val->data->aggthn = round($val->data->aggthn / $this->pembagi);
				$val->data->aggcm = round($val->data->aggcm / $this->pembagi);
				$val->data->aggsd = round($val->data->aggsd / $this->pembagi);
				$val->data->actcm = round($val->data->actcm / $this->pembagi);
				$val->data->actsd = round($val->data->actsd / $this->pembagi);
				$val->data->actsd_lalu = round($val->data->actsd_lalu / $this->pembagi);
				$val->data->actcm_lalu = round($val->data->actcm_lalu / $this->pembagi);

			}
			if ($val->data->kode_neraca == $neraca){
				$result["rs"]["rows"][] = (array) $val->data;
				$this->collectData = true;
			}else if (!isset($neraca))
				$result["rs"]["rows"][] = (array) $val->data;
			else if ($this->collectData){
				if ($val->data->kode_induk == "00")
					$this->collectData = false;
				else $result["rs"]["rows"][] = (array) $val->data;
			}
			$this->generateResult($val, $result, $neraca);
		}
	}
	function generateResultMonthly($item, &$result, $neraca){
		foreach ($item->childs as $key => $val){
			
            if ($val->data->jenis_akun == "PENDAPATAN"){
				$val->data->n1 = ($val->data->n1) * -1;
				$val->data->n2 = ($val->data->n2) * -1;
				$val->data->n3 = ($val->data->n3) * -1;
				$val->data->n4 = ($val->data->n4) * -1;
				$val->data->n5 = ($val->data->n5) * -1;
				$val->data->n6 = ($val->data->n6) * -1;
				$val->data->n7 = ($val->data->n7) * -1;
				$val->data->n8 = ($val->data->n8) * -1;
				$val->data->n9 = ($val->data->n9) * -1;
				$val->data->n10 = ($val->data->n10) * -1;
				$val->data->n11 = ($val->data->n11) * -1;
				$val->data->n12 = ($val->data->n12) * -1;
				$val->data->nt = ($val->data->nt) * -1;
				$val->data->m1 = ($val->data->m1) * -1;
				$val->data->m2 = ($val->data->m2) * -1;
				$val->data->m3 = ($val->data->m3) * -1;
				$val->data->m4 = ($val->data->m4) * -1;
				$val->data->m5 = ($val->data->m5) * -1;
				$val->data->m6 = ($val->data->m6) * -1;
				$val->data->m7 = ($val->data->m7) * -1;
				$val->data->m8 = ($val->data->m8) * -1;
				$val->data->m9 = ($val->data->m9) * -1;
				$val->data->m10 = ($val->data->m10) * -1;
				$val->data->m11 = ($val->data->m11) * -1;
				$val->data->m12 = ($val->data->m12) * -1;
				$val->data->mt = ($val->data->mt) * -1;
			}else {
				

			}

			$val->data->n1 = round($val->data->n1 / $this->pembagi);
			$val->data->n2 = round($val->data->n2/ $this->pembagi);
			$val->data->n3 = round($val->data->n3/ $this->pembagi);
			$val->data->n4 = round($val->data->n4/ $this->pembagi);
			$val->data->n5 = round($val->data->n5/ $this->pembagi);
			$val->data->n6 = round($val->data->n6/ $this->pembagi);
			$val->data->n7 = round($val->data->n7/ $this->pembagi);
			$val->data->n8 = round($val->data->n8/ $this->pembagi);
			$val->data->n9 = round($val->data->n9/ $this->pembagi);
			$val->data->n10 = round($val->data->n10/ $this->pembagi);
			$val->data->n11 = round($val->data->n11/ $this->pembagi);
			$val->data->n12 = round($val->data->n12/ $this->pembagi);
			$val->data->nt = round($val->data->nt/ $this->pembagi);
			$val->data->m1 = round($val->data->m1/ $this->pembagi);
			$val->data->m2 = round($val->data->m2/ $this->pembagi);
			$val->data->m3 = round($val->data->m3/ $this->pembagi);
			$val->data->m4 = round($val->data->m4/ $this->pembagi);
			$val->data->m5 = round($val->data->m5/ $this->pembagi);
			$val->data->m6 = round($val->data->m6/ $this->pembagi);
			$val->data->m7 = round($val->data->m7/ $this->pembagi);
			$val->data->m8 = round($val->data->m8/ $this->pembagi);
			$val->data->m9 = round($val->data->m9/ $this->pembagi);
			$val->data->m10 = round($val->data->m10/ $this->pembagi);
			$val->data->m11 = round($val->data->m11/ $this->pembagi);
			$val->data->m12 = round($val->data->m12/ $this->pembagi);
			$val->data->mt = round($val->data->mt/ $this->pembagi);
            $result["rs"]["rows"][] = (array) $val->data;
			$this->generateResultMonthly($val, $result, $neraca);
		}
	}
	function getUserCFU(){
		$db = $this->getDb();
		$user = $this->userid;//$_SESSION["user"];;
		$cfu = "CFU0";
		if (isset($user)){
			//default CFU
			$rs = $db->execute("select cfu from exs_karyawan where nik = '$user' ");
			if ($row == $rs->FetchNextObject(false)){
				$cfu = $row->cfu;
			}
		}
		return $cfu;
	}
	//----- Data EXSUM CFU 
    function getDataEXSUMCFU2($induk, $model, $periode, $tipe, $pembagi = 1000000000){
        try{
            $db = $this->getDb();
			
            if ($induk == "") {
				$induk = $this->getUserCFU();
			}
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
                
        
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
            }

			$rs = $db->execute("select kode_ubis_cons  from bpc_cfu where kode_cfu = '$induk'");

            if ($row = $rs->FetchNextObject(false)){
                $kode_ubis_cons = $row->kode_ubis_cons;
            }
            
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            


            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not a.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//,'CFU40C'
                $jenis = " and a.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205')";//,'CFU40C'
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and ( a.jenis in ('TB','IJ') or  ( a.jenis in ('RL') and a.kode_cfu = case when a.kode_cfu2='-' then a.kode_cfu else a.kode_cfu2 end ) ) ";//,'AD'
				$filterBudget = " and not a.kode_cfu in ('CFUE') and substr(a.kode_cfu,0,4) = case when a.kode_cfu_lawan = '-' or a.kode_cfu_lawan is null then substr(a.kode_cfu,0,4) else case when substr(a.kode_cfu,0,4) =  substr(a.kode_cfu_lawan,0,4) then '-' else substr(a.kode_cfu,0,4) end  end  ";//,'CFU40C'
            }else {
                $jenis = "  ";
				$filterBudget = "  ";
            }
                    
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                                   and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                
				if (strlen($induk) > 4)
                    $field = "z.kode_cfu ";
                else $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,a.kode_ubis) > 0 ";
                /*
				$filterCFU = " and a.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    ) $addFilter ";
				*/
				$forSubCFU = " and a.kode_cfu = substr('$induk', 0,length(a.kode_cfu)) ";///and not a.kode_ubis in ('TM2A','TE2A')
            }else {
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi  ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                               and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,a.kode_ubis) > 0  ";
                /*
				$filterCFU = "and a.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    ) $addFilter";
				*/
				$forSubCFU = "";
            }
            //$addFilter = $addFilter . $filterCons;
			/*
			$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU2";
			*/
            $filterCFU = " and a.kode_cfu in ( SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) ";

			$filterCFU2 = " and a.kode_lokasi in ( SELECT distinct kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU ";
			
			if ($induk == "CFUG"){
				$jenis = " and a.jenis in ('RL')";
				$filterBudget = " and a.kode_cfu in ('CFUE','CFU205')";//,'CFU40C'
				$sql2 = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                left outer join (select x.kode_neraca,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBudget
																group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
                                                left outer join (select x.kode_neraca,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBudget
																group by x.kode_neraca) b2 on b2.kode_neraca = a.kode_neraca
                                                left outer join (select x.kode_neraca
                                                                            , sum( nvl(case when a.periode <= '$periode' then a.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when a.periode = '$periode' then a.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_neraca
                                                                ) c on c.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca, sum(nvl(a.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode =  '$periode2' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_neraca
                                                                ) d on d.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca, sum(nvl(a.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca
                                                                ) e on e.kode_neraca = a.kode_neraca
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                           union
                                            select distinct 'UNMAPPED', 'UNMAPPED' as nama, '-' as tipe, 'PENDAPATAN' as jenis_akun, '-' as sum_header, 0 as level_spasi, '00' as kode_induk, 1000 as rowindex
                                                        , sum(nvl(c.actsd,0)) as actsd
                                                        , sum(nvl(c.actcm,0)) as actcm
                                                        , sum(nvl(d.actcm_lalu,0)) as actcm_lalu
                                                        , sum(nvl(e.actsd,0)) as actsd_lalu
                                                        , sum(nvl(b.aggcm,0)) as aggcm
                                                        , sum(nvl(b.aggsd,0)) as aggsd 
                                                        , sum(nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when a.periode <= '$periode' then a.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when a.periode = '$periode' then a.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(a.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode =  '$periode2' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null   group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(a.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null   group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                             order by  rowindex";

			}else if ($induk == "CFUD"){
				$jenis = " and a.jenis in ('AD')";
				$filterBudget = " and  a.kode_cfu in (' ')";
				$sql2 = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                left outer join (select x.kode_neraca,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBudget
																group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
                                                left outer join (select x.kode_neraca,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBudget
																group by x.kode_neraca) b2 on b2.kode_neraca = a.kode_neraca
                                                left outer join (select x.kode_neraca
                                                                            , sum( nvl(case when a.periode <= '$periode' then a.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when a.periode = '$periode' then a.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_neraca
                                                                ) c on c.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca, sum(nvl(a.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode =  '$periode2' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_neraca
                                                                ) d on d.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca, sum(nvl(a.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca
                                                                ) e on e.kode_neraca = a.kode_neraca
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                           union
                                            select distinct 'UNMAPPED', 'UNMAPPED' as nama, '-' as tipe, 'PENDAPATAN' as jenis_akun, '-' as sum_header, 0 as level_spasi, '00' as kode_induk, 1000 as rowindex
                                                        , sum(nvl(c.actsd,0)) as actsd
                                                        , sum(nvl(c.actcm,0)) as actcm
                                                        , sum(nvl(d.actcm_lalu,0)) as actcm_lalu
                                                        , sum(nvl(e.actsd,0)) as actsd_lalu
                                                        , sum(nvl(b.aggcm,0)) as aggcm
                                                        , sum(nvl(b.aggsd,0)) as aggsd 
                                                        , sum(nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when a.periode <= '$periode' then a.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when a.periode = '$periode' then a.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(a.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode =  '$periode2' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null   group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(a.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null   group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                             order by  rowindex";

			}else if ($induk == "CFUF"){
				$jenis = " and a.jenis in ('IJ')";
				$filterBudget = " and  a.kode_cfu in (' ')";
				$sql2 = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                left outer join (select x.kode_neraca,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBudget
																group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
                                                left outer join (select x.kode_neraca,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBudget
																group by x.kode_neraca) b2 on b2.kode_neraca = a.kode_neraca
                                                left outer join (select x.kode_neraca
                                                                            , sum( nvl(case when a.periode <= '$periode' then a.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when a.periode = '$periode' then a.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_neraca
                                                                ) c on c.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca, sum(nvl(a.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode =  '$periode2' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_neraca
                                                                ) d on d.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca, sum(nvl(a.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_neraca
                                                                ) e on e.kode_neraca = a.kode_neraca
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                           union
                                            select distinct 'UNMAPPED', 'UNMAPPED' as nama, '-' as tipe, 'PENDAPATAN' as jenis_akun, '-' as sum_header, 0 as level_spasi, '00' as kode_induk, 1000 as rowindex
                                                        , sum(nvl(c.actsd,0)) as actsd
                                                        , sum(nvl(c.actcm,0)) as actcm
                                                        , sum(nvl(d.actcm_lalu,0)) as actcm_lalu
                                                        , sum(nvl(e.actsd,0)) as actsd_lalu
                                                        , sum(nvl(b.aggcm,0)) as aggcm
                                                        , sum(nvl(b.aggsd,0)) as aggsd 
                                                        , sum(nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when a.periode <= '$periode' then a.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when a.periode = '$periode' then a.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(a.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode =  '$periode2' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null   group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(a.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null   group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                             order by  rowindex";

			}else 
			//inner join bpc_cfu z on a.kode_cfu = substr(z.kode_cfu, 0, length(a.kode_cfu) ) $filterCons
            	$sql2 = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                left outer join (select x.kode_neraca,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU $filterBudget 
																group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
                                                left outer join (select x.kode_neraca,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU $filterBudget 
																group by x.kode_neraca) b2 on b2.kode_neraca = a.kode_neraca
                                                left outer join (select x.kode_neraca
                                                                            , sum( nvl(case when a.periode <= '$periode' then a.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when a.periode = '$periode' then a.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_neraca
                                                                ) c on c.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca, sum(nvl(a.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode =  '$periode2' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_neraca
                                                                ) d on d.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca, sum(nvl(a.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_neraca
                                                                ) e on e.kode_neraca = a.kode_neraca
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                           union
                                            select distinct 'UNMAPPED', 'UNMAPPED' as nama, '-' as tipe, 'PENDAPATAN' as jenis_akun, '-' as sum_header, 0 as level_spasi, '00' as kode_induk, 1000 as rowindex
                                                        , sum(nvl(c.actsd,0)) as actsd
                                                        , sum(nvl(c.actcm,0)) as actcm
                                                        , sum(nvl(d.actcm_lalu,0)) as actcm_lalu
                                                        , sum(nvl(e.actsd,0)) as actsd_lalu
                                                        , sum(nvl(b.aggcm,0)) as aggcm
                                                        , sum(nvl(b.aggsd,0)) as aggsd 
                                                        , sum(nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU $filterBudget 
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU $filterBudget 
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when a.periode <= '$periode' then a.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when a.periode = '$periode' then a.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(a.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode =  '$periode2' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(a.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                             order by  rowindex";
           // error_log("CFU " . $sql2);
            $rs = $db->execute($sql2);
               
            $node = "";
            $rootNode = new server_util_NodeNRC("00");
            $this->sumHeader = new server_util_Map();
            while ($row = $rs->FetchNextObject(false)){
                if (strtoupper($row->jenis_akun) == "PENDAPATAN")
                    $row->jenis = 'INC';
                else $row->jenis = 'EXP';
                if ($node == ""){
                    $node = new server_util_NodeNRC($rootNode);
                }else if ($node->level == floatval($row->level_spasi) - 1 ){
                    $node = new server_util_NodeNRC($node);
                }else if ($node->level == floatval($row->level_spasi) ){
                    $node = new server_util_NodeNRC($node->owner);
                }else if ($node->level > floatval($row->level_spasi) ){
                    while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
                        $node = $node->owner;
                    }
                    $node = new server_util_NodeNRC($node->owner);
                }
                $node->setData($row);
                if ($row->tipe == "SUMMARY")
                    $this->sumHeader->set($row->kode_neraca, $node);

            }
            //error_log($this->sumHeader->getLength());
            foreach ($rootNode->childs as $key => $val){
                $this->summaries($val);
                if ($val->data->sum_header != "-"){
                    $summaryHeader = explode(",",$val->data->sum_header);

                    foreach ($summaryHeader as $header){
                        $nodeHeader = $this->sumHeader->get($header);
                        if ($nodeHeader){
                            $nodeHeader->data->aggthn += $val->data->aggthn;
                            $nodeHeader->data->aggcm += $val->data->aggcm;
                            $nodeHeader->data->actcm += $val->data->actcm;
                            $nodeHeader->data->aggsd += $val->data->aggsd;
                            $nodeHeader->data->actcm_lalu += $val->data->actcm_lalu;
                            $nodeHeader->data->actsd += $val->data->actsd;
                            $nodeHeader->data->actsd_lalu += $val->data->actsd_lalu;
                        }
                    }
                }
            }
            $this->pembagi = $pembagi;
            //perlu hitung ke summary
            $result = array('rs' => array('rows' => array() ) );
            $this->generateResult($rootNode, $result, $neraca);
            return ($result);    
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
    function getDataEXSUMCFU2Detail($induk, $model, $periode,$neraca, $tipe, $pembagi = 1000000000){
        
        try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->cfu;//"CFU0"
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);

            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
            }
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//,'CFU40C'
                $jenis = " and t.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205') ";//,'CFU40C'
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
                $filterBudget = " and not a.kode_cfu in ('CFUE') and substr(a.kode_cfu,0,4) = case when a.kode_cfu_lawan = '-' or a.kode_cfu_lawan is null then substr(a.kode_cfu,0,4) else case when substr(a.kode_cfu,0,4) =  substr(a.kode_cfu_lawan,0,4) then '-' else substr(a.kode_cfu,0,4) end  end  ";//,'CFU40C'
            }else {
                $jenis = "  ";
                $filterBudget = " ";
            }
                    
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                                   and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                if (strlen($induk) > 4)
                    $field = "z.kode_cfu ";
                else $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0  ";
                $filterCFU = " and a.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    )";
				$forSubCFU = "and t.kode_cfu = substr('$induk', 0,length(t.kode_cfu)) ";
            }else {
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                               and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0   ";
                $filterCFU = " and a.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    )";
				$forSubCFU = " ";
            }
            $addFilter = $addFilter . $filterCons; 
			$filterCFU = " and a.kode_cfu in ( SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu)";
			$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU ";
			//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu)) $addFilter 

			if ($induk == "CFUG"){
				$jenis = " and a.jenis in ('RL')";
				$filterBudget = " and a.kode_cfu in ('CFUE','CFU205')";//,'CFU40C'
				$sql2 = "select distinct a.kode_neraca, y.kode_akun, concat(y.kode_akun,concat('-', y.nama)) as nama, y.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn

                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'
																	$filterBudget
																 group by x.kode_akun) b on b.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' 
																 $filterBudget
																group by x.kode_akun) b2 on b2.kode_akun = x.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like  '$thn1%' $jenis
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                     
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) d on d.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis 
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$neraca'
                                            and ( nvl(c.actsd,0) <> 0 or nvl(c.actcm,0) <> 0  or nvl(d.actcm_lalu,0) <> 0 or 
                                                    nvl(e.actsd,0) <> 0 or
                                                        nvl(b.aggcm,0) <> 0 or
                                                        (nvl(b.aggsd,0)) <> 0 or
                                                        (nvl(b2.aggthn,0)) <> 0 )
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, concat(a.kode_akun,concat('-', a.nama)) as nama, a.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                   sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                        sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun,
                                                                   sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null   $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2'  $jenis 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null   group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."'  $jenis 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null and 'UNMAPPED' = '$neraca'
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                            order by kode_neraca, kode_akun";
            
			}else if ($induk == "CFUD"){
				$jenis = " and a.jenis in ('AD')";
				$filterBudget = " and a.kode_cfu in (' ')";
				$sql2 = "select distinct a.kode_neraca, y.kode_akun, concat(y.kode_akun,concat('-', y.nama)) as nama, y.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn

                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'
																	$filterBudget
																 group by x.kode_akun) b on b.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' 
																 $filterBudget
																group by x.kode_akun) b2 on b2.kode_akun = x.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like  '$thn1%' $jenis
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                     
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) d on d.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis 
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$neraca'
                                            and ( nvl(c.actsd,0) <> 0 or nvl(c.actcm,0) <> 0  or nvl(d.actcm_lalu,0) <> 0 or 
                                                    nvl(e.actsd,0) <> 0 or
                                                        nvl(b.aggcm,0) <> 0 or
                                                        (nvl(b.aggsd,0)) <> 0 or
                                                        (nvl(b2.aggthn,0)) <> 0 )
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, concat(a.kode_akun,concat('-', a.nama)) as nama, a.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                   sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                        sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun,
                                                                   sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null   $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2'  $jenis 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null   group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."'  $jenis 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null and 'UNMAPPED' = '$neraca'
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                            order by kode_neraca, kode_akun";
            
			}else if ($induk == "CFUF"){
				$jenis = " and a.jenis in ('IJ')";
				$filterBudget = " and a.kode_cfu in (' ')";
				$sql2 = "select distinct a.kode_neraca, y.kode_akun, concat(y.kode_akun,concat('-', y.nama)) as nama, y.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn

                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'
																	$filterBudget
																 group by x.kode_akun) b on b.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' 
																 $filterBudget
																group by x.kode_akun) b2 on b2.kode_akun = x.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like  '$thn1%' $jenis
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                     
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) d on d.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis 
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$neraca'
                                            and ( nvl(c.actsd,0) <> 0 or nvl(c.actcm,0) <> 0  or nvl(d.actcm_lalu,0) <> 0 or 
                                                    nvl(e.actsd,0) <> 0 or
                                                        nvl(b.aggcm,0) <> 0 or
                                                        (nvl(b.aggsd,0)) <> 0 or
                                                        (nvl(b2.aggthn,0)) <> 0 )
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, concat(a.kode_akun,concat('-', a.nama)) as nama, a.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                   sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                        sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun,
                                                                   sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null   $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2'  $jenis 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null   group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."'  $jenis 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null and 'UNMAPPED' = '$neraca'
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                            order by kode_neraca, kode_akun";
            
			}else
            	$sql2 = "select distinct a.kode_neraca, y.kode_akun, concat(y.kode_akun,concat('-', y.nama)) as nama, y.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn

                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'
																	$filterCFU $filterBudget
																 group by x.kode_akun) b on b.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' 
																$filterCFU $filterBudget
																group by x.kode_akun) b2 on b2.kode_akun = x.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like  '$thn1%' $jenis
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                     
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) d on d.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis 
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$neraca'
                                            and ( nvl(c.actsd,0) <> 0 or nvl(c.actcm,0) <> 0  or nvl(d.actcm_lalu,0) <> 0 or 
                                                    nvl(e.actsd,0) <> 0 or
                                                        nvl(b.aggcm,0) <> 0 or
                                                        (nvl(b.aggsd,0)) <> 0 or
                                                        (nvl(b2.aggthn,0)) <> 0 )
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, concat(a.kode_akun,concat('-', a.nama)) as nama, a.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                   sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                        sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun,
                                                                   sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2'  $jenis 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."'  $jenis 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null and 'UNMAPPED' = '$neraca'
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                            order by kode_neraca, kode_akun";
            
            //error_log($sql2);
            $rs = $db->execute($sql2);
            $result = array("rs"=>array("rows" => array()));        
            
            while ($row = $rs->FetchNextObject(false)){
                if (strtoupper($row->jenis_akun) == "PENDAPATAN"){
                    $row->aggthn = ($row->aggthn) * -1;
                    $row->aggcm = ($row->aggcm) * -1;
                    $row->aggsd = ($row->aggsd) * -1;
                    $row->actcm = ($row->actcm) * -1;
                    $row->actsd = ($row->actsd) * -1;
                    $row->actcm_lalu = ($row->actcm_lalu) * -1;
                    $row->actsd_lalu = ($row->actsd_lalu) * -1;
                    $row->jenis = 'INC';
                }else {
                    $row->jenis = 'EXP';    

                }
                $row->aggthn = round($row->aggthn / $pembagi);
                $row->aggsd = round($row->aggsd / $pembagi);
                $row->aggcm = round($row->aggcm / $pembagi);
                $row->actsd = round($row->actsd / $pembagi);
                $row->actcm = round($row->actcm / $pembagi);
                $row->actcm_lalu = round($row->actcm_lalu / $pembagi);
                $row->actsd_lalu = round($row->actsd_lalu / $pembagi);
                $row->achiev = $this->rumusAchieve($row->aggcm, $row->actcm);//floatval($val->data->aggbln) == 0 ? 100 : round($val->data->actbln / $val->data->aggbln * 100,1);
			     $row->growth = $this->rumusGrowth($row->actcm, $row->actcm_lalu);
                $row->achiev2 = $this->rumusAchieve($row->aggsd, $row->actsd);//floatval($val->data->aggsd) == 0 ? 100  : round($val->data->actsd / $val->data->aggsd * 100,1);
			     $row->growth2 = $this->rumusGrowth($row->actsd, $row->actsd_lalu);//floatval($val->data->actall) == 0 ? 100 : round(($val->data->actsd - $val->data->actall) / $val->data->actall * 100,1 );

                $result["rs"]["rows"][] = $row;
                
            }
            return $result;
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
    function getDataEXSUMCFU2Akun($induk, $model, $periode, $tipe, $pembagi = 1000000000){
        try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->cfu;//"CFU0"
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
            
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
            }
            
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//,'CFU40C'
                $jenis = " and t.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205')";//,'CFU40C'
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
                $filterBudget = " and not a.kode_cfu in ('CFUE') and substr(a.kode_cfu,0,4) = case when a.kode_cfu_lawan = '-' or a.kode_cfu_lawan is null then substr(a.kode_cfu,0,4) else case when substr(a.kode_cfu,0,4) =  substr(a.kode_cfu_lawan,0,4) then '-' else substr(a.kode_cfu,0,4) end  end  ";//,'CFU40C'
            }else {
                $jenis = "  ";
                $filterBudget = "  ";
            }
                    
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                                   and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                if (strlen($induk) > 4)
                    $field = "z.kode_cfu ";
                else $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons, t.kode_ubis) > 0 ";
                $filterCFU = " and a.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    ) ";
				$forSubCFU = "and t.kode_cfu = substr('$induk', 0,length(t.kode_cfu)) ";
            }else {
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                               and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons, t.kode_ubis) > 0   ";
                $filterCFU = " and a.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    ) ";
				$forSubCFU = "  ";
            }
            $addFilter = $addFilter . $filterCons; 
			$filterCFU = " and a.kode_cfu in ( SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu)";
			$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU ";
			//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu)) $addFilter
			if ($induk == "CFUG"){
				$jenis = " and t.jenis in ('RL')";
				$filterBudget = " and a.kode_cfu in ('CFUE','CFU205')";//,'CFU40C'
				$sql2 = "select distinct a.kode_neraca, y.kode_akun, y.nama, y.jenis as jenis_akun 
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn

                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
																$filterBudget 
																group by x.kode_akun) b on b.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBudget
																group by x.kode_akun) b2 on b2.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) d on d.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                            and ( nvl(c.actsd,0) <> 0 or nvl(c.actcm,0) <> 0  or nvl(d.actcm_lalu,0) <> 0 or 
                                                    nvl(e.actsd,0) <> 0 or
                                                        nvl(b.aggcm,0) <> 0 or
                                                        (nvl(b.aggsd,0)) <> 0 or
                                                        (nvl(b2.aggthn,0)) <> 0  )
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, a.nama , a.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                               left outer join (select x.kode_akun,
                                                                   sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                               left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2'  $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                            order by kode_neraca, kode_akun";
			}else if ($induk == "CFUD"){
				$jenis = " and t.jenis in ('AD')";
				$filterBudget = " and a.kode_cfu in (' ')";
				$sql2 = "select distinct a.kode_neraca, y.kode_akun, y.nama, y.jenis as jenis_akun 
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn

                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
																$filterBudget 
																group by x.kode_akun) b on b.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBudget
																group by x.kode_akun) b2 on b2.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) d on d.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                            and ( nvl(c.actsd,0) <> 0 or nvl(c.actcm,0) <> 0  or nvl(d.actcm_lalu,0) <> 0 or 
                                                    nvl(e.actsd,0) <> 0 or
                                                        nvl(b.aggcm,0) <> 0 or
                                                        (nvl(b.aggsd,0)) <> 0 or
                                                        (nvl(b2.aggthn,0)) <> 0  )
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, a.nama , a.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                               left outer join (select x.kode_akun,
                                                                   sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                               left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2'  $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                            order by kode_neraca, kode_akun";
			}else if ($induk == "CFUF"){
				$jenis = " and t.jenis in ('IJ')";
				$filterBudget = " and a.kode_cfu in (' ')";
				$sql2 = "select distinct a.kode_neraca, y.kode_akun, y.nama, y.jenis as jenis_akun 
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn

                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
																$filterBudget 
																group by x.kode_akun) b on b.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBudget
																group by x.kode_akun) b2 on b2.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) d on d.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                            and ( nvl(c.actsd,0) <> 0 or nvl(c.actcm,0) <> 0  or nvl(d.actcm_lalu,0) <> 0 or 
                                                    nvl(e.actsd,0) <> 0 or
                                                        nvl(b.aggcm,0) <> 0 or
                                                        (nvl(b.aggsd,0)) <> 0 or
                                                        (nvl(b2.aggthn,0)) <> 0  )
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, a.nama , a.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                               left outer join (select x.kode_akun,
                                                                   sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                               left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2'  $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                            order by kode_neraca, kode_akun";
			}else 
            	$sql2 = "select distinct a.kode_neraca, y.kode_akun, y.nama, y.jenis as jenis_akun 
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn

                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
																$filterCFU $filterBudget 
																group by x.kode_akun) b on b.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU $filterBudget
																group by x.kode_akun) b2 on b2.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) d on d.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                            and ( nvl(c.actsd,0) <> 0 or nvl(c.actcm,0) <> 0  or nvl(d.actcm_lalu,0) <> 0 or 
                                                    nvl(e.actsd,0) <> 0 or
                                                        nvl(b.aggcm,0) <> 0 or
                                                        (nvl(b.aggsd,0)) <> 0 or
                                                        (nvl(b2.aggthn,0)) <> 0  )
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, a.nama , a.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                               left outer join (select x.kode_akun,
                                                                   sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                               left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2'  $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                            order by kode_neraca, kode_akun";
            
            //error_log("getDataEXSUMCFU2 => $sql2 ");
			$rs = $db->execute($sql2);
            $result = new server_util_Map();        
            $neraca = "";
            while ($row = $rs->FetchNextObject(false)){
				
                if (strtoupper($row->jenis_akun) == "PENDAPATAN"){
                    $row->aggthn = $row->aggthn * -1;
                    $row->aggcm = $row->aggcm * -1;
                    $row->aggsd = $row->aggsd * -1;
                    $row->actcm = ($row->actcm) * -1;
                    $row->actsd = ($row->actsd) * -1;
                    $row->actcm_lalu = ($row->actcm_lalu) * -1;
                    $row->actsd_lalu = ($row->actsd_lalu) * -1;
                    
                    $row->jenis = "INC";
                }else $row->jenis = "EXP";

                if ($neraca != $row->kode_neraca){
                    $neraca = $row->kode_neraca;
                    $item = array();
                }
				$row->aggthn = round($row->aggthn / $pembagi);
                $row->aggsd = round($row->aggsd / $pembagi);
                $row->aggcm = round($row->aggcm / $pembagi);
                $row->actsd = round($row->actsd / $pembagi);
                $row->actcm = round($row->actcm / $pembagi);
                $row->actcm_lalu = round($row->actcm_lalu / $pembagi);
                $row->actsd_lalu = round($row->actsd_lalu / $pembagi);
                $row->achiev = $this->rumusAchieve($row->aggcm, $row->actcm);//floatval($val->data->aggbln) == 0 ? 100 : round($val->data->actbln / $val->data->aggbln * 100,1);
			     $row->growth = $this->rumusGrowth($row->actcm, $row->actcm_lalu);
                $row->achiev2 = $this->rumusAchieve($row->aggsd, $row->actsd);//floatval($val->data->aggsd) == 0 ? 100  : round($val->data->actsd / $val->data->aggsd * 100,1);
			     $row->growth2 = $this->rumusGrowth($row->actsd, $row->actsd_lalu);//floatval($val->data->actall) == 0 ? 100 : round(($val->data->actsd - $val->data->actall) / $val->data->actall * 100,1 );

                $item[] = $row;
                $result->set($neraca, $item);
                
            }
            return $result;
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
    function downloadROWDataCFU($induk, $model, $periode, $tipe, $pembagi){
		$this->getDb();
		
		
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 
        $data = $this->getDataEXSUMCFU2($induk, $model, $periode, $tipe, $pembagi);					
		$akun = $this->getDataEXSUMCFU2Akun($induk, $model,$periode, $tipe, $pembagi);
			
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$column = array("Account","Uraian","Tipe","Level","Budget Thn","Prev. Month Actual","CM Budget","CM Actual","CM Achiev","CM Growth","Ytd Prev. year","Ytd Budget","Ytd Actual","Achieve","Growth");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        
        foreach ($data["rs"]["rows"] as $val){
            $row++;
            $val  = json_decode(json_encode($val));
            $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_neraca);
            $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
            $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
            $sheet->setCellValueByColumnAndRow(3, $row, $val->level_spasi);
            $sheet->setCellValueByColumnAndRow(4, $row, $val->aggthn);
            $sheet->setCellValueByColumnAndRow(5, $row, $val->actcm_lalu);
            $sheet->setCellValueByColumnAndRow(6, $row, $val->aggcm);
            $sheet->setCellValueByColumnAndRow(7, $row, $val->actcm);
            $sheet->setCellValueByColumnAndRow(8, $row, $val->achiev);
            $sheet->setCellValueByColumnAndRow(9, $row, $val->growth);
            $sheet->setCellValueByColumnAndRow(10, $row, $val->actsd_lalu);
            $sheet->setCellValueByColumnAndRow(11, $row, $val->aggsd);
            $sheet->setCellValueByColumnAndRow(12, $row, $val->actsd);
            $sheet->setCellValueByColumnAndRow(13, $row, $val->achiev2);
			$sheet->setCellValueByColumnAndRow(14, $row, $val->growth2);
			$start = PHPExcel_Cell::stringFromColumnIndex(4);
			$end = PHPExcel_Cell::stringFromColumnIndex(14);
			$sheet->getStyle($start.$row.":".$end.$row)->getNumberFormat()->setFormatCode("#,##0_);[Red](#,##0)");
            $listAkun = $akun->get($val->kode_neraca);
            $level = $val->level_spasi;
            foreach ($listAkun as $item){
                $row++;
                $val  = json_decode(json_encode($item));
                $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_akun);
                $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
                $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
                $sheet->setCellValueByColumnAndRow(3, $row, $level + 1);
                $sheet->setCellValueByColumnAndRow(4, $row, $val->aggthn);
                $sheet->setCellValueByColumnAndRow(5, $row, $val->actcm_lalu);
                $sheet->setCellValueByColumnAndRow(6, $row, $val->aggcm);
                $sheet->setCellValueByColumnAndRow(7, $row, $val->actcm);
                $sheet->setCellValueByColumnAndRow(8, $row, $val->achiev);
                $sheet->setCellValueByColumnAndRow(9, $row, $val->growth);
                $sheet->setCellValueByColumnAndRow(10, $row, $val->actsd_lalu);
                $sheet->setCellValueByColumnAndRow(11, $row, $val->aggsd);
                $sheet->setCellValueByColumnAndRow(12, $row, $val->actsd);
                $sheet->setCellValueByColumnAndRow(13, $row, $val->achiev2);
				$sheet->setCellValueByColumnAndRow(14, $row, $val->growth2);
				$start = PHPExcel_Cell::stringFromColumnIndex(4);
				$end = PHPExcel_Cell::stringFromColumnIndex(14);
				$sheet->getStyle($start.$row.":".$end.$row)->getNumberFormat()->setFormatCode("#,##0_);[Red](#,##0)");
            }
            
        }
 
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/CFU_$namafile.xlsx");
	
 
		return "/tmp/CFU_$namafile.xlsx";
	}
	function saveExsumCFUToSummary($induk, $model, $periode, $tipe, $pembagi){
		$this->getDb();
		
		if (!isset($induk) || $induk == "") $induk = $this->lokasi;//
		$this->cleanUp();
		$data = $this->getDataEXSUMCFU2($induk, $model, $periode, $tipe, $pembagi);					
		$dataAkun = $this->getDataEXSUMCFU2Akun($induk, $model,$periode, $tipe, $pembagi);

		$rsUbis = $this->dbLib->execute("select kode_cfu, nama ,kode_lokasi, kode_ubis_cons from bpc_cfu where kode_cfu = '$induk' ");
		if ($row = $rsUbis->FetchNextObject(false)){
			$rowCocd = $row;
		}
		$sql = new server_util_arrayList();
		

		$sql->add("delete from bpc_summary_exsum where periode = '$periode' and kode_fs = '$model' and kode_cfu = '$induk' and status_nilai = '$tipe' ");
		$sql->add("delete from bpc_summary_exsum_d where periode = '$periode' and kode_fs = '$model' and kode_cfu = '$induk' and status_nilai = '$tipe' ");
		foreach ($data["rs"]["rows"] as $val){
			$row = json_decode(json_encode($val));
			$sql->add(new server_util_Map(array(
					"tipe" => "param",
					"sql" => "insert into bpc_summary_exsum(
						kode_lokasi, kode_ubis_cons, kode_cfu, kode_neraca, nama,  tipe, jenis_akun, sum_header, level_spasi, kode_induk, rowindex, aggthn, aggbln, aggsd,  actbln, actsd, actblnlalu, actthnlalu, acvpsn, growthpsn, acvytdpsn, growthytypsn,  periode, no_urut, kode_fs, tgl_process, status_nilai)
						values(:0, :1, :2, :3, :4, :5, :6,:7,:8,:9,:10,:11,:12,:13,:14, :15, :16, :17, :18, :19, :20,:21,:22,:23,:24, sysdate,:26)",
					"value" => array($rowCocd->kode_lokasi, $rowCocd->kode_ubis_cons, $induk, $row->kode_neraca,  str_replace("&nbsp;"," ",$row->nama), $row->tipe, $row->jenis_akun, $row->sum_header,
					$row->level_spasi, $row->kode_induk, $row->rowindex, $val["aggthn"], $val["aggcm"], $val["aggsd"], $val["actcm"], $val["actsd"], $val["actcm_lalu"], $val["actsd_lalu"], $val["achiev"],$val["growth"],$val["achiev2"],$val["growth2"], $periode, $row->rowindex, $model,0, $tipe )
				)));
			$akun = $dataAkun->get($row->kode_neraca);
			if ($akun) {
				foreach ($akun as $val){
					$row = json_decode(json_encode($val));
					$sql->add(new server_util_Map(array(
								"tipe" => "param",
								"sql" => "insert into bpc_summary_exsum_d(
									kode_lokasi, kode_ubis_cons, kode_cfu, kode_akun, nama,  tipe, jenis_akun, sum_header, level_spasi, kode_neraca, rowindex,  aggthn, aggbln, aggsd,  actbln, actsd, actblnlalu, actthnlalu, acvpsn, growthpsn, acvytdpsn, growthytypsn, periode, no_urut, kode_fs, tgl_process, status_nilai)
									values(:0, :1, :2, :3, :4, :5, :6,:7,:8,:9,:10,:11,:12,:13,:14, :15, :16, :17, :18, :19, :20,:21,:22,:23,:24,sysdate,:26)",
								"value" => array($rowCocd->kode_lokasi, $rowCocd->kode_ubis_cons, $induk, $row->kode_akun,  str_replace("&nbsp;"," ",$row->nama), $row->tipe, $row->jenis_akun, $row->sum_header,
										$row->level_spasi, $row->kode_neraca, $row->rowindex,  $val->aggthn, $val->aggcm, $val->aggsd, $val->actcm, $val->actsd, $val->actcm_lalu, $val->actsd_lalu, $val->achiev,$val->growth,$val->achiev2,$val->growth2, $periode, $row->rowindex, $model, 0, $tipe )
							)));
				}
			}
		}
		

		$ret = $this->dbLib->execArraySQL($sql);
		return $ret;

	}
	//RKAP
	function getDataEXSUMCFU2RKAP($induk, $model, $periode, $tipe, $rkap, $pembagi = 1000000000){
        try{
            $db = $this->getDb();
			
            if ($induk == "") {
				$induk = $this->getUserCFU();
			}
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
            
			$tableBudget = "bpc_budget_osd";
			if ($rkap == "1")
				$tableBudget = "bpc_budget_osd_rkap2017";
        
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from $tableBudget where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
            }

			$rs = $db->execute("select kode_ubis_cons  from bpc_cfu where kode_cfu = '$induk'");

            if ($row = $rs->FetchNextObject(false)){
                $kode_ubis_cons = $row->kode_ubis_cons;
            }
            
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            


            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not a.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
                $jenis = " and a.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205')";//'CFU40C',
            }else if (strtoupper($tipe) == "NETT"){
				//,'CFU40C'
                $jenis = " and ( a.jenis in ('TB','IJ') or  ( a.jenis in ('RL') and a.kode_cfu = case when a.kode_cfu2='-' then a.kode_cfu else a.kode_cfu2 end ) ) ";//,'AD'
				$filterBudget = " and not a.kode_cfu in ('CFUE') and substr(a.kode_cfu,0,4) = case when a.kode_cfu_lawan = '-' or a.kode_cfu_lawan is null then substr(a.kode_cfu,0,4) else case when substr(a.kode_cfu,0,4) =  substr(a.kode_cfu_lawan,0,4) then '-' else substr(a.kode_cfu,0,4) end  end  ";
            }else {
                $jenis = "  ";
				$filterBudget = "  ";
            }
                    
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                                   and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                
				if (strlen($induk) > 4)
                    $field = "z.kode_cfu ";
                else $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,a.kode_ubis) > 0 ";
                /*
				$filterCFU = " and a.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    ) $addFilter ";
				*/
				$forSubCFU = " and a.kode_cfu = substr('$induk', 0,length(a.kode_cfu)) ";///and not a.kode_ubis in ('TM2A','TE2A')
            }else {
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi  ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                               and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,a.kode_ubis) > 0  ";
                /*
				$filterCFU = "and a.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    ) $addFilter";
				*/
				$forSubCFU = "";
            }
            //$addFilter = $addFilter . $filterCons;
			/*
			$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU2";
			*/
            $filterCFU = " and a.kode_cfu in ( SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) ";

			$filterCFU2 = " and a.kode_lokasi in ( SELECT distinct kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU ";
			
			if ($induk == "CFUG"){
				$jenis = " and a.jenis in ('RL')";
				$filterBudget = " and a.kode_cfu in ('CFUE','CFU205')";//,'CFU40C'
				$sql2 = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                left outer join (select x.kode_neraca,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBudget
																group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
                                                left outer join (select x.kode_neraca,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBudget
																group by x.kode_neraca) b2 on b2.kode_neraca = a.kode_neraca
                                                left outer join (select x.kode_neraca
                                                                            , sum( nvl(case when a.periode <= '$periode' then a.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when a.periode = '$periode' then a.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_neraca
                                                                ) c on c.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca, sum(nvl(a.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode =  '$periode2' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_neraca
                                                                ) d on d.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca, sum(nvl(a.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca
                                                                ) e on e.kode_neraca = a.kode_neraca
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                           union
                                            select distinct 'UNMAPPED', 'UNMAPPED' as nama, '-' as tipe, 'PENDAPATAN' as jenis_akun, '-' as sum_header, 0 as level_spasi, '00' as kode_induk, 1000 as rowindex
                                                        , sum(nvl(c.actsd,0)) as actsd
                                                        , sum(nvl(c.actcm,0)) as actcm
                                                        , sum(nvl(d.actcm_lalu,0)) as actcm_lalu
                                                        , sum(nvl(e.actsd,0)) as actsd_lalu
                                                        , sum(nvl(b.aggcm,0)) as aggcm
                                                        , sum(nvl(b.aggsd,0)) as aggsd 
                                                        , sum(nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when a.periode <= '$periode' then a.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when a.periode = '$periode' then a.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(a.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode =  '$periode2' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null   group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(a.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null   group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                             order by  rowindex";

			}else if ($induk == "CFUD"){
				$jenis = " and a.jenis in ('AD')";
				$filterBudget = " and  a.kode_cfu in (' ')";
				$sql2 = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                left outer join (select x.kode_neraca,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBudget
																group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
                                                left outer join (select x.kode_neraca,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBudget
																group by x.kode_neraca) b2 on b2.kode_neraca = a.kode_neraca
                                                left outer join (select x.kode_neraca
                                                                            , sum( nvl(case when a.periode <= '$periode' then a.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when a.periode = '$periode' then a.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_neraca
                                                                ) c on c.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca, sum(nvl(a.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode =  '$periode2' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_neraca
                                                                ) d on d.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca, sum(nvl(a.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca
                                                                ) e on e.kode_neraca = a.kode_neraca
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                           union
                                            select distinct 'UNMAPPED', 'UNMAPPED' as nama, '-' as tipe, 'PENDAPATAN' as jenis_akun, '-' as sum_header, 0 as level_spasi, '00' as kode_induk, 1000 as rowindex
                                                        , sum(nvl(c.actsd,0)) as actsd
                                                        , sum(nvl(c.actcm,0)) as actcm
                                                        , sum(nvl(d.actcm_lalu,0)) as actcm_lalu
                                                        , sum(nvl(e.actsd,0)) as actsd_lalu
                                                        , sum(nvl(b.aggcm,0)) as aggcm
                                                        , sum(nvl(b.aggsd,0)) as aggsd 
                                                        , sum(nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when a.periode <= '$periode' then a.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when a.periode = '$periode' then a.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(a.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode =  '$periode2' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null   group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(a.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null   group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                             order by  rowindex";

			}else if ($induk == "CFUF"){
				$jenis = " and a.jenis in ('IJ')";
				$filterBudget = " and  a.kode_cfu in (' ')";
				$sql2 = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                left outer join (select x.kode_neraca,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBudget
																group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
                                                left outer join (select x.kode_neraca,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBudget
																group by x.kode_neraca) b2 on b2.kode_neraca = a.kode_neraca
                                                left outer join (select x.kode_neraca
                                                                            , sum( nvl(case when a.periode <= '$periode' then a.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when a.periode = '$periode' then a.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_neraca
                                                                ) c on c.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca, sum(nvl(a.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode =  '$periode2' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_neraca
                                                                ) d on d.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca, sum(nvl(a.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_neraca
                                                                ) e on e.kode_neraca = a.kode_neraca
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                           union
                                            select distinct 'UNMAPPED', 'UNMAPPED' as nama, '-' as tipe, 'PENDAPATAN' as jenis_akun, '-' as sum_header, 0 as level_spasi, '00' as kode_induk, 1000 as rowindex
                                                        , sum(nvl(c.actsd,0)) as actsd
                                                        , sum(nvl(c.actcm,0)) as actcm
                                                        , sum(nvl(d.actcm_lalu,0)) as actcm_lalu
                                                        , sum(nvl(e.actsd,0)) as actsd_lalu
                                                        , sum(nvl(b.aggcm,0)) as aggcm
                                                        , sum(nvl(b.aggsd,0)) as aggsd 
                                                        , sum(nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when a.periode <= '$periode' then a.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when a.periode = '$periode' then a.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(a.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode =  '$periode2' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null   group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(a.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null   group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                             order by  rowindex";

			}else 
			//inner join bpc_cfu z on a.kode_cfu = substr(z.kode_cfu, 0, length(a.kode_cfu) ) $filterCons
            	$sql2 = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                left outer join (select x.kode_neraca,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU $filterBudget 
																group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
                                                left outer join (select x.kode_neraca,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU $filterBudget 
																group by x.kode_neraca) b2 on b2.kode_neraca = a.kode_neraca
                                                left outer join (select x.kode_neraca
                                                                            , sum( nvl(case when a.periode <= '$periode' then a.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when a.periode = '$periode' then a.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_neraca
                                                                ) c on c.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca, sum(nvl(a.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode =  '$periode2' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_neraca
                                                                ) d on d.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca, sum(nvl(a.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_neraca
                                                                ) e on e.kode_neraca = a.kode_neraca
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                           union
                                            select distinct 'UNMAPPED', 'UNMAPPED' as nama, '-' as tipe, 'PENDAPATAN' as jenis_akun, '-' as sum_header, 0 as level_spasi, '00' as kode_induk, 1000 as rowindex
                                                        , sum(nvl(c.actsd,0)) as actsd
                                                        , sum(nvl(c.actcm,0)) as actcm
                                                        , sum(nvl(d.actcm_lalu,0)) as actcm_lalu
                                                        , sum(nvl(e.actsd,0)) as actsd_lalu
                                                        , sum(nvl(b.aggcm,0)) as aggcm
                                                        , sum(nvl(b.aggsd,0)) as aggsd 
                                                        , sum(nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU $filterBudget 
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU $filterBudget 
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when a.periode <= '$periode' then a.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when a.periode = '$periode' then a.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(a.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode =  '$periode2' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(a.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                             order by  rowindex";
           // error_log("CFU " . $sql2);
            $rs = $db->execute($sql2);
               
            $node = "";
            $rootNode = new server_util_NodeNRC("00");
            $this->sumHeader = new server_util_Map();
            while ($row = $rs->FetchNextObject(false)){
                if (strtoupper($row->jenis_akun) == "PENDAPATAN")
                    $row->jenis = 'INC';
                else $row->jenis = 'EXP';
                if ($node == ""){
                    $node = new server_util_NodeNRC($rootNode);
                }else if ($node->level == floatval($row->level_spasi) - 1 ){
                    $node = new server_util_NodeNRC($node);
                }else if ($node->level == floatval($row->level_spasi) ){
                    $node = new server_util_NodeNRC($node->owner);
                }else if ($node->level > floatval($row->level_spasi) ){
                    while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
                        $node = $node->owner;
                    }
                    $node = new server_util_NodeNRC($node->owner);
                }
                $node->setData($row);
                if ($row->tipe == "SUMMARY")
                    $this->sumHeader->set($row->kode_neraca, $node);

            }
            //error_log($this->sumHeader->getLength());
            foreach ($rootNode->childs as $key => $val){
                $this->summaries($val);
                if ($val->data->sum_header != "-"){
                    $summaryHeader = explode(",",$val->data->sum_header);

                    foreach ($summaryHeader as $header){
                        $nodeHeader = $this->sumHeader->get($header);
                        if ($nodeHeader){
                            $nodeHeader->data->aggthn += $val->data->aggthn;
                            $nodeHeader->data->aggcm += $val->data->aggcm;
                            $nodeHeader->data->actcm += $val->data->actcm;
                            $nodeHeader->data->aggsd += $val->data->aggsd;
                            $nodeHeader->data->actcm_lalu += $val->data->actcm_lalu;
                            $nodeHeader->data->actsd += $val->data->actsd;
                            $nodeHeader->data->actsd_lalu += $val->data->actsd_lalu;
                        }
                    }
                }
            }
            $this->pembagi = $pembagi;
            //perlu hitung ke summary
            $result = array('rs' => array('rows' => array() ) );
            $this->generateResult($rootNode, $result, $neraca);
            return ($result);    
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
    function getDataEXSUMCFU2RKAPDetail($induk, $model, $periode,$neraca, $tipe, $rkap, $pembagi = 1000000000){
        
        try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->cfu;//"CFU0"
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);

            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            $tableBudget = "bpc_budget_osd";
			if ($rkap == "1")
				$tableBudget = "bpc_budget_osd_rkap2017";
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
            }
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
                $jenis = " and t.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205') ";//'CFU40C'
            }else if (strtoupper($tipe) == "NETT"){//,'CFU40C'
                $jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
                $filterBudget = " and not a.kode_cfu in ('CFUE') and substr(a.kode_cfu,0,4) = case when a.kode_cfu_lawan = '-' or a.kode_cfu_lawan is null then substr(a.kode_cfu,0,4) else case when substr(a.kode_cfu,0,4) =  substr(a.kode_cfu_lawan,0,4) then '-' else substr(a.kode_cfu,0,4) end  end  ";
            }else {
                $jenis = "  ";
                $filterBudget = " ";
            }
                    
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                                   and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                if (strlen($induk) > 4)
                    $field = "z.kode_cfu ";
                else $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0  ";
                
				$forSubCFU = "and t.kode_cfu = substr('$induk', 0,length(t.kode_cfu)) ";
            }else {
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                               and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0   ";
                
				$forSubCFU = " ";
            }
            $addFilter = $addFilter . $filterCons; 
			$filterCFU = " and a.kode_cfu in ( SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu)";
			$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU ";
			//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu)) $addFilter 

			if ($induk == "CFUG"){
				$jenis = " and a.jenis in ('RL')";
				$filterBudget = " and a.kode_cfu in ('CFUE','CFU205')";//,'CFU40C'
				$sql2 = "select distinct a.kode_neraca, y.kode_akun, concat(y.kode_akun,concat('-', y.nama)) as nama, y.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn

                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'
																	$filterBudget
																 group by x.kode_akun) b on b.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' 
																 $filterBudget
																group by x.kode_akun) b2 on b2.kode_akun = x.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like  '$thn1%' $jenis
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                     
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) d on d.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis 
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$neraca'
                                            and ( nvl(c.actsd,0) <> 0 or nvl(c.actcm,0) <> 0  or nvl(d.actcm_lalu,0) <> 0 or 
                                                    nvl(e.actsd,0) <> 0 or
                                                        nvl(b.aggcm,0) <> 0 or
                                                        (nvl(b.aggsd,0)) <> 0 or
                                                        (nvl(b2.aggthn,0)) <> 0 )
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, concat(a.kode_akun,concat('-', a.nama)) as nama, a.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                   sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                        sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun,
                                                                   sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null   $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2'  $jenis 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null   group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."'  $jenis 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null and 'UNMAPPED' = '$neraca'
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                            order by kode_neraca, kode_akun";
            
			}else if ($induk == "CFUD"){
				$jenis = " and a.jenis in ('AD')";
				$filterBudget = " and a.kode_cfu in (' ')";
				$sql2 = "select distinct a.kode_neraca, y.kode_akun, concat(y.kode_akun,concat('-', y.nama)) as nama, y.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn

                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'
																	$filterBudget
																 group by x.kode_akun) b on b.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' 
																 $filterBudget
																group by x.kode_akun) b2 on b2.kode_akun = x.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like  '$thn1%' $jenis
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                     
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) d on d.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis 
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$neraca'
                                            and ( nvl(c.actsd,0) <> 0 or nvl(c.actcm,0) <> 0  or nvl(d.actcm_lalu,0) <> 0 or 
                                                    nvl(e.actsd,0) <> 0 or
                                                        nvl(b.aggcm,0) <> 0 or
                                                        (nvl(b.aggsd,0)) <> 0 or
                                                        (nvl(b2.aggthn,0)) <> 0 )
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, concat(a.kode_akun,concat('-', a.nama)) as nama, a.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                   sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                        sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun,
                                                                   sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null   $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2'  $jenis 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null   group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."'  $jenis 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null and 'UNMAPPED' = '$neraca'
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                            order by kode_neraca, kode_akun";
            
			}else if ($induk == "CFUF"){
				$jenis = " and a.jenis in ('IJ')";
				$filterBudget = " and a.kode_cfu in (' ')";
				$sql2 = "select distinct a.kode_neraca, y.kode_akun, concat(y.kode_akun,concat('-', y.nama)) as nama, y.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn

                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'
																	$filterBudget
																 group by x.kode_akun) b on b.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' 
																 $filterBudget
																group by x.kode_akun) b2 on b2.kode_akun = x.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like  '$thn1%' $jenis
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                     
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) d on d.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis 
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$neraca'
                                            and ( nvl(c.actsd,0) <> 0 or nvl(c.actcm,0) <> 0  or nvl(d.actcm_lalu,0) <> 0 or 
                                                    nvl(e.actsd,0) <> 0 or
                                                        nvl(b.aggcm,0) <> 0 or
                                                        (nvl(b.aggsd,0)) <> 0 or
                                                        (nvl(b2.aggthn,0)) <> 0 )
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, concat(a.kode_akun,concat('-', a.nama)) as nama, a.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                   sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                        sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun,
                                                                   sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null   $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2'  $jenis 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null   group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."'  $jenis 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null and 'UNMAPPED' = '$neraca'
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                            order by kode_neraca, kode_akun";
            
			}else
            	$sql2 = "select distinct a.kode_neraca, y.kode_akun, concat(y.kode_akun,concat('-', y.nama)) as nama, y.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn

                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'
																	$filterCFU $filterBudget
																 group by x.kode_akun) b on b.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' 
																$filterCFU $filterBudget
																group by x.kode_akun) b2 on b2.kode_akun = x.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like  '$thn1%' $jenis
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                     
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) d on d.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis 
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$neraca'
                                            and ( nvl(c.actsd,0) <> 0 or nvl(c.actcm,0) <> 0  or nvl(d.actcm_lalu,0) <> 0 or 
                                                    nvl(e.actsd,0) <> 0 or
                                                        nvl(b.aggcm,0) <> 0 or
                                                        (nvl(b.aggsd,0)) <> 0 or
                                                        (nvl(b2.aggthn,0)) <> 0 )
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, concat(a.kode_akun,concat('-', a.nama)) as nama, a.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                   sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                        sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun,
                                                                   sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2'  $jenis 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."'  $jenis 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null and 'UNMAPPED' = '$neraca'
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                            order by kode_neraca, kode_akun";
            
            //error_log($sql2);
            $rs = $db->execute($sql2);
            $result = array("rs"=>array("rows" => array()));        
            
            while ($row = $rs->FetchNextObject(false)){
                if (strtoupper($row->jenis_akun) == "PENDAPATAN"){
                    $row->aggthn = ($row->aggthn) * -1;
                    $row->aggcm = ($row->aggcm) * -1;
                    $row->aggsd = ($row->aggsd) * -1;
                    $row->actcm = ($row->actcm) * -1;
                    $row->actsd = ($row->actsd) * -1;
                    $row->actcm_lalu = ($row->actcm_lalu) * -1;
                    $row->actsd_lalu = ($row->actsd_lalu) * -1;
                    $row->jenis = 'INC';
                }else {
                    $row->jenis = 'EXP';    

                }
                $row->aggthn = round($row->aggthn / $pembagi);
                $row->aggsd = round($row->aggsd / $pembagi);
                $row->aggcm = round($row->aggcm / $pembagi);
                $row->actsd = round($row->actsd / $pembagi);
                $row->actcm = round($row->actcm / $pembagi);
                $row->actcm_lalu = round($row->actcm_lalu / $pembagi);
                $row->actsd_lalu = round($row->actsd_lalu / $pembagi);
                $row->achiev = $this->rumusAchieve($row->aggcm, $row->actcm);//floatval($val->data->aggbln) == 0 ? 100 : round($val->data->actbln / $val->data->aggbln * 100,1);
			     $row->growth = $this->rumusGrowth($row->actcm, $row->actcm_lalu);
                $row->achiev2 = $this->rumusAchieve($row->aggsd, $row->actsd);//floatval($val->data->aggsd) == 0 ? 100  : round($val->data->actsd / $val->data->aggsd * 100,1);
			     $row->growth2 = $this->rumusGrowth($row->actsd, $row->actsd_lalu);//floatval($val->data->actall) == 0 ? 100 : round(($val->data->actsd - $val->data->actall) / $val->data->actall * 100,1 );

                $result["rs"]["rows"][] = $row;
                
            }
            return $result;
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
    function getDataEXSUMCFU2AkunRKAP($induk, $model, $periode, $tipe, $rkap, $pembagi = 1000000000){
        try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->cfu;//"CFU0"
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
            
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
            }
            $tableBudget = "bpc_budget_osd";
			if ($rkap == "1")
				$tableBudget = "bpc_budget_osd_rkap2017";
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//,'CFU40C'
                $jenis = " and t.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205')";//,'CFU40C'
            }else if (strtoupper($tipe) == "NETT"){
				//,'CFU40C''CFU40C'
                $jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
                $filterBudget = " and not a.kode_cfu in ('CFUE') and substr(a.kode_cfu,0,4) = case when a.kode_cfu_lawan = '-' or a.kode_cfu_lawan is null then substr(a.kode_cfu,0,4) else case when substr(a.kode_cfu,0,4) =  substr(a.kode_cfu_lawan,0,4) then '-' else substr(a.kode_cfu,0,4) end  end  ";
            }else {
                $jenis = "  ";
                $filterBudget = "  ";
            }
                    
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                                   and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                if (strlen($induk) > 4)
                    $field = "z.kode_cfu ";
                else $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons, t.kode_ubis) > 0 ";
                
				$forSubCFU = "and t.kode_cfu = substr('$induk', 0,length(t.kode_cfu)) ";
            }else {
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                               and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons, t.kode_ubis) > 0   ";
                
				$forSubCFU = "  ";
            }
            $addFilter = $addFilter . $filterCons; 
			$filterCFU = " and a.kode_cfu in ( SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu)";
			$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU ";
			//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu)) $addFilter
			if ($induk == "CFUG"){
				$jenis = " and a.jenis in ('RL')";
				$filterBudget = " and a.kode_cfu in ('CFUE','CFU205')";//,'CFU40C'
				$sql2 = "select distinct a.kode_neraca, y.kode_akun, y.nama, y.jenis as jenis_akun 
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn

                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
																$filterBudget 
																group by x.kode_akun) b on b.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBudget
																group by x.kode_akun) b2 on b2.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) d on d.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                            and ( nvl(c.actsd,0) <> 0 or nvl(c.actcm,0) <> 0  or nvl(d.actcm_lalu,0) <> 0 or 
                                                    nvl(e.actsd,0) <> 0 or
                                                        nvl(b.aggcm,0) <> 0 or
                                                        (nvl(b.aggsd,0)) <> 0 or
                                                        (nvl(b2.aggthn,0)) <> 0  )
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, a.nama , a.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                               left outer join (select x.kode_akun,
                                                                   sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                               left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2'  $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                            order by kode_neraca, kode_akun";
			}else if ($induk == "CFUD"){
				$jenis = " and a.jenis in ('AD')";
				$filterBudget = " and a.kode_cfu in (' ')";
				$sql2 = "select distinct a.kode_neraca, y.kode_akun, y.nama, y.jenis as jenis_akun 
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn

                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
																$filterBudget 
																group by x.kode_akun) b on b.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBudget
																group by x.kode_akun) b2 on b2.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) d on d.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                            and ( nvl(c.actsd,0) <> 0 or nvl(c.actcm,0) <> 0  or nvl(d.actcm_lalu,0) <> 0 or 
                                                    nvl(e.actsd,0) <> 0 or
                                                        nvl(b.aggcm,0) <> 0 or
                                                        (nvl(b.aggsd,0)) <> 0 or
                                                        (nvl(b2.aggthn,0)) <> 0  )
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, a.nama , a.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                               left outer join (select x.kode_akun,
                                                                   sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                               left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2'  $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                            order by kode_neraca, kode_akun";
			}else if ($induk == "CFUF"){
				$jenis = " and a.jenis in ('IJ')";
				$filterBudget = " and a.kode_cfu in (' ')";
				$sql2 = "select distinct a.kode_neraca, y.kode_akun, y.nama, y.jenis as jenis_akun 
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn

                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
																$filterBudget 
																group by x.kode_akun) b on b.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterBudget
																group by x.kode_akun) b2 on b2.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) d on d.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                            and ( nvl(c.actsd,0) <> 0 or nvl(c.actcm,0) <> 0  or nvl(d.actcm_lalu,0) <> 0 or 
                                                    nvl(e.actsd,0) <> 0 or
                                                        nvl(b.aggcm,0) <> 0 or
                                                        (nvl(b.aggsd,0)) <> 0 or
                                                        (nvl(b2.aggthn,0)) <> 0  )
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, a.nama , a.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                               left outer join (select x.kode_akun,
                                                                   sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null  $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                               left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2'  $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                            order by kode_neraca, kode_akun";
			}else 
            	$sql2 = "select distinct a.kode_neraca, y.kode_akun, y.nama, y.jenis as jenis_akun 
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn

                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'
																$filterCFU $filterBudget 
																group by x.kode_akun) b on b.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU $filterBudget
																group by x.kode_akun) b2 on b2.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) d on d.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                            and ( nvl(c.actsd,0) <> 0 or nvl(c.actcm,0) <> 0  or nvl(d.actcm_lalu,0) <> 0 or 
                                                    nvl(e.actsd,0) <> 0 or
                                                        nvl(b.aggcm,0) <> 0 or
                                                        (nvl(b.aggsd,0)) <> 0 or
                                                        (nvl(b2.aggthn,0)) <> 0  )
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, a.nama , a.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                               left outer join (select x.kode_akun,
                                                                   sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join $tableBudget a on a.kode_akun = x.kode_akun and a.periode = '$lastPeriode'
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null $filterCFU $filterBudget
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                               left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2'  $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                            order by kode_neraca, kode_akun";
            
            //error_log("getDataEXSUMCFU2 => $sql2 ");
			$rs = $db->execute($sql2);
            $result = new server_util_Map();        
            $neraca = "";
            while ($row = $rs->FetchNextObject(false)){
				
                if (strtoupper($row->jenis_akun) == "PENDAPATAN"){
                    $row->aggthn = $row->aggthn * -1;
                    $row->aggcm = $row->aggcm * -1;
                    $row->aggsd = $row->aggsd * -1;
                    $row->actcm = ($row->actcm) * -1;
                    $row->actsd = ($row->actsd) * -1;
                    $row->actcm_lalu = ($row->actcm_lalu) * -1;
                    $row->actsd_lalu = ($row->actsd_lalu) * -1;
                    
                    $row->jenis = "INC";
                }else $row->jenis = "EXP";

                if ($neraca != $row->kode_neraca){
                    $neraca = $row->kode_neraca;
                    $item = array();
                }
				$row->aggthn = round($row->aggthn / $pembagi);
                $row->aggsd = round($row->aggsd / $pembagi);
                $row->aggcm = round($row->aggcm / $pembagi);
                $row->actsd = round($row->actsd / $pembagi);
                $row->actcm = round($row->actcm / $pembagi);
                $row->actcm_lalu = round($row->actcm_lalu / $pembagi);
                $row->actsd_lalu = round($row->actsd_lalu / $pembagi);
                $row->achiev = $this->rumusAchieve($row->aggcm, $row->actcm);//floatval($val->data->aggbln) == 0 ? 100 : round($val->data->actbln / $val->data->aggbln * 100,1);
			     $row->growth = $this->rumusGrowth($row->actcm, $row->actcm_lalu);
                $row->achiev2 = $this->rumusAchieve($row->aggsd, $row->actsd);//floatval($val->data->aggsd) == 0 ? 100  : round($val->data->actsd / $val->data->aggsd * 100,1);
			     $row->growth2 = $this->rumusGrowth($row->actsd, $row->actsd_lalu);//floatval($val->data->actall) == 0 ? 100 : round(($val->data->actsd - $val->data->actall) / $val->data->actall * 100,1 );

                $item[] = $row;
                $result->set($neraca, $item);
                
            }
            return $result;
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
    function downloadROWDataCFURKAP($induk, $model, $periode, $tipe, $rkap,$pembagi){
		$this->getDb();
		
		
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 
        $data = $this->getDataEXSUMCFU2RKAP($induk, $model, $periode, $tipe, $rkap, $pembagi);					
		$akun = $this->getDataEXSUMCFU2AkunRKAP($induk, $model,$periode, $tipe,$rkap, $pembagi);
			
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$column = array("Account","Uraian","Tipe","Level","Budget Thn","Prev. Month Actual","CM Budget","CM Actual","CM Achiev","CM Growth","Ytd Prev. year","Ytd Budget","Ytd Actual","Achieve","Growth");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        
        foreach ($data["rs"]["rows"] as $val){
            $row++;
            $val  = json_decode(json_encode($val));
            $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_neraca);
            $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
            $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
            $sheet->setCellValueByColumnAndRow(3, $row, $val->level_spasi);
            $sheet->setCellValueByColumnAndRow(4, $row, $val->aggthn);
            $sheet->setCellValueByColumnAndRow(5, $row, $val->actcm_lalu);
            $sheet->setCellValueByColumnAndRow(6, $row, $val->aggcm);
            $sheet->setCellValueByColumnAndRow(7, $row, $val->actcm);
            $sheet->setCellValueByColumnAndRow(8, $row, $val->achiev);
            $sheet->setCellValueByColumnAndRow(9, $row, $val->growth);
            $sheet->setCellValueByColumnAndRow(10, $row, $val->actsd_lalu);
            $sheet->setCellValueByColumnAndRow(11, $row, $val->aggsd);
            $sheet->setCellValueByColumnAndRow(12, $row, $val->actsd);
            $sheet->setCellValueByColumnAndRow(13, $row, $val->achiev2);
            $sheet->setCellValueByColumnAndRow(14, $row, $val->growth2);
            $listAkun = $akun->get($val->kode_neraca);
            $level = $val->level_spasi;
            foreach ($listAkun as $item){
                $row++;
                $val  = json_decode(json_encode($item));
                $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_akun);
                $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
                $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
                $sheet->setCellValueByColumnAndRow(3, $row, $level + 1);
                $sheet->setCellValueByColumnAndRow(4, $row, $val->aggthn);
                $sheet->setCellValueByColumnAndRow(5, $row, $val->actcm_lalu);
                $sheet->setCellValueByColumnAndRow(6, $row, $val->aggcm);
                $sheet->setCellValueByColumnAndRow(7, $row, $val->actcm);
                $sheet->setCellValueByColumnAndRow(8, $row, $val->achiev);
                $sheet->setCellValueByColumnAndRow(9, $row, $val->growth);
                $sheet->setCellValueByColumnAndRow(10, $row, $val->actsd_lalu);
                $sheet->setCellValueByColumnAndRow(11, $row, $val->aggsd);
                $sheet->setCellValueByColumnAndRow(12, $row, $val->actsd);
                $sheet->setCellValueByColumnAndRow(13, $row, $val->achiev2);
                $sheet->setCellValueByColumnAndRow(14, $row, $val->growth2);
            }
            
        }
 
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/CFU_$namafile.xlsx");
	
 
		return "/tmp/CFU_$namafile.xlsx";
	}
	//---------------------- MONTHLY ACTUAL CFU
	function getDataMonthlyActualEXSUMCFU($induk, $model, $periode, $tipe, $pembagi = 1000000000){
        try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->cfu;//"CFU0"
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
                
        
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
            }
            
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not a.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
                $jenis = " and a.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and a.jenis in ('TB','RL','IJ') and a.kode_cfu = case when a.kode_cfu2='-' then a.kode_cfu else a.kode_cfu2 end ";//,'AD'
				$filterBudget = " and not a.kode_cfu in ('CFUE') ";
            }else {
                $jenis = "  ";
				$filterBudget = "  ";
            }
                    
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                                   and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                
				if (strlen($induk) > 4)
                    $field = "z.kode_cfu ";
                else $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,a.kode_ubis) > 0 ";
               
				$forSubCFU = "and a.kode_cfu = substr('$induk', 0,length(a.kode_cfu)) ";
            }else {
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi  ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                               and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,a.kode_ubis) > 0  ";
                
				$forSubCFU = "";
            }
            //$addFilter = $addFilter . $filterCons;
			
            $filterCFU = " and a.kode_cfu in ( SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu)";

			$filterCFU2 = " and a.kode_lokasi in ( SELECT distinct kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU ";

			//inner join bpc_cfu z on a.kode_cfu = substr(z.kode_cfu, 0, length(a.kode_cfu) ) $filterCons
            $sql2 = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
                                                        , (nvl(c.n1,0)) as n1
														, (nvl(c.n2,0)) as n2
														, (nvl(c.n3,0)) as n3
														, (nvl(c.n4,0)) as n4
														, (nvl(c.n5,0)) as n5
														, (nvl(c.n6,0)) as n6
														, (nvl(c.n7,0)) as n7
														, (nvl(c.n8,0)) as n8
														, (nvl(c.n9,0)) as n9
														, (nvl(c.n10,0)) as n10
														, (nvl(c.n11,0)) as n11
														, (nvl(c.n12,0)) as n12
														, (nvl(c.nt,0)) as nt	

														, (nvl(e.n1,0)) as m1
														, (nvl(e.n2,0)) as m2
														, (nvl(e.n3,0)) as m3
														, (nvl(e.n4,0)) as m4
														, (nvl(e.n5,0)) as m5
														, (nvl(e.n6,0)) as m6
														, (nvl(e.n7,0)) as m7
														, (nvl(e.n8,0)) as m8
														, (nvl(e.n9,0)) as m9
														, (nvl(e.n10,0)) as m10
														, (nvl(e.n11,0)) as m11
														, (nvl(e.n12,0)) as m12
														, (nvl(e.nt,0)) as mt
                                                from bpc_neraca a
                                                left outer join (select x.kode_neraca
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '01' then a.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '02' then a.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(a.periode,5,2) = '03' then a.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '04' then a.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(a.periode,5,2) = '05' then a.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '06' then a.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(a.periode,5,2) = '07' then a.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '08' then a.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(a.periode,5,2) = '09' then a.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '10' then a.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(a.periode,5,2) = '11' then a.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '12' then a.nilai else 0 end,0)) as n12
																			, sum(nvl(case when substr(a.periode,5,2) between '01' and '12' then a.nilai else 0 end,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
																	inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
																	inner join ( SELECT distinct kode_lokasi
																		FROM bpc_cfu
																		start with kode_induk ='$induk' or kode_cfu = '$induk'
																		CONNECT BY kode_induk = PRIOR kode_cfu) b on b.kode_lokasi = a.kode_lokasi and decode('$induk','CFU0', substr('$induk',1,3), substr('$induk',1,4)) = decode('$induk','CFU0', substr(a.kode_cfu,1,3), substr(a.kode_cfu,1,4))
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_neraca
                                                                ) c on c.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca
												 						    , sum(nvl(case when substr(a.periode,5,2) = '01' then a.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '02' then a.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(a.periode,5,2) = '03' then a.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '04' then a.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(a.periode,5,2) = '05' then a.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '06' then a.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(a.periode,5,2) = '07' then a.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '08' then a.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(a.periode,5,2) = '09' then a.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '10' then a.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(a.periode,5,2) = '11' then a.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '12' then a.nilai else 0 end,0)) as n12
																			, sum(nvl(case when substr(a.periode,5,2) between '01' and '12' then a.nilai else 0 end,0)) as nt
                                                                    from bpc_relakun x
																	 inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
																	inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn2."%'  $jenis
																	inner join ( SELECT distinct kode_lokasi
																		FROM bpc_cfu
																		start with kode_induk ='$induk' or kode_cfu = '$induk'
																		CONNECT BY kode_induk = PRIOR kode_cfu) b on b.kode_lokasi = a.kode_lokasi and decode('$induk','CFU0', substr('$induk',1,3), substr('$induk',1,4)) = decode('$induk','CFU0', substr(a.kode_cfu,1,3), substr(a.kode_cfu,1,4))
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_neraca
                                                                ) e on e.kode_neraca = a.kode_neraca
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                           union
                                            select distinct 'UNMAPPED', 'UNMAPPED' as nama, '-' as tipe, 'PENDAPATAN' as jenis_akun, '-' as sum_header, 0 as level_spasi, '00' as kode_induk, 1000 as rowindex
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt

														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '01' then a.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '02' then a.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(a.periode,5,2) = '03' then a.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '04' then a.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(a.periode,5,2) = '05' then a.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '06' then a.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(a.periode,5,2) = '07' then a.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '08' then a.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(a.periode,5,2) = '09' then a.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '10' then a.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(a.periode,5,2) = '11' then a.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '12' then a.nilai else 0 end,0)) as n12
																			, sum(nvl(case when substr(a.periode,5,2) between '01' and '12' then a.nilai else 0 end,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
																	left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
																	inner join ( SELECT distinct kode_lokasi
																		FROM bpc_cfu
																		start with kode_induk ='$induk' or kode_cfu = '$induk'
																		CONNECT BY kode_induk = PRIOR kode_cfu) b on b.kode_lokasi = a.kode_lokasi and decode('$induk','CFU0', substr('$induk',1,3), substr('$induk',1,4)) = decode('$induk','CFU0', substr(a.kode_cfu,1,3), substr(a.kode_cfu,1,4))
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun 
																			, sum(nvl(case when substr(a.periode,5,2) = '01' then a.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '02' then a.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(a.periode,5,2) = '03' then a.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '04' then a.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(a.periode,5,2) = '05' then a.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '06' then a.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(a.periode,5,2) = '07' then a.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '08' then a.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(a.periode,5,2) = '09' then a.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '10' then a.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(a.periode,5,2) = '11' then a.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '12' then a.nilai else 0 end,0)) as n12
																			, sum(nvl(case when substr(a.periode,5,2) between '01' and '12' then a.nilai else 0 end,0)) as nt
                                                                    from bpc_masakun x
																	inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn2."%'  $jenis
																	inner join ( SELECT distinct kode_lokasi
																		FROM bpc_cfu
																		start with kode_induk ='$induk' or kode_cfu = '$induk'
																		CONNECT BY kode_induk = PRIOR kode_cfu) b on b.kode_lokasi = a.kode_lokasi and decode('$induk','CFU0', substr('$induk',1,3), substr('$induk',1,4)) = decode('$induk','CFU0', substr(a.kode_cfu,1,3), substr(a.kode_cfu,1,4))
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null   group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.nt,0) <> 0 or nvl(e.nt,0) <> 0)
                                             order by  rowindex";
            //error_log($sql2);
            $rs = $db->execute($sql2);
               
            $node = "";
            $rootNode = new server_util_NodeNRC("00");
            $this->sumHeader = new server_util_Map();
            while ($row = $rs->FetchNextObject(false)){
                if (strtoupper($row->jenis_akun) == "PENDAPATAN")
                    $row->jenis = 'INC';
                else $row->jenis = 'EXP';
                if ($node == ""){
                    $node = new server_util_NodeNRC($rootNode);
                }else if ($node->level == floatval($row->level_spasi) - 1 ){
                    $node = new server_util_NodeNRC($node);
                }else if ($node->level == floatval($row->level_spasi) ){
                    $node = new server_util_NodeNRC($node->owner);
                }else if ($node->level > floatval($row->level_spasi) ){
                    while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
                        $node = $node->owner;
                    }
                    $node = new server_util_NodeNRC($node->owner);
                }
                $node->setData($row);
                if ($row->tipe == "SUMMARY")
                    $this->sumHeader->set($row->kode_neraca, $node);

            }
            //error_log($this->sumHeader->getLength());
            foreach ($rootNode->childs as $key => $val){
                $this->summariesMonthly($val);
                if ($val->data->sum_header != "-"){
                    $summaryHeader = explode(",",$val->data->sum_header);

                    foreach ($summaryHeader as $header){
                        $nodeHeader = $this->sumHeader->get($header);
                        if ($nodeHeader){
                            $nodeHeader->data->n1 += $val->data->n1;
                            $nodeHeader->data->n2 += $val->data->n2;
                            $nodeHeader->data->n3 += $val->data->n3;
                            $nodeHeader->data->n4 += $val->data->n4;
                            $nodeHeader->data->n5 += $val->data->n5;
                            $nodeHeader->data->n6 += $val->data->n6;
                            $nodeHeader->data->n7 += $val->data->n7;
							$nodeHeader->data->n8 += $val->data->n8;
                            $nodeHeader->data->n9 += $val->data->n9;
                            $nodeHeader->data->n10 += $val->data->n10;
                            $nodeHeader->data->n11 += $val->data->n11;
                            $nodeHeader->data->n12 += $val->data->n12;
                            $nodeHeader->data->nt += $val->data->nt;
							$nodeHeader->data->m1 += $val->data->m1;
                            $nodeHeader->data->m2 += $val->data->m2;
                            $nodeHeader->data->m3 += $val->data->m3;
                            $nodeHeader->data->m4 += $val->data->m4;
                            $nodeHeader->data->m5 += $val->data->m5;
                            $nodeHeader->data->m6 += $val->data->m6;
                            $nodeHeader->data->m7 += $val->data->m7;
							$nodeHeader->data->m8 += $val->data->m8;
                            $nodeHeader->data->m9 += $val->data->m9;
                            $nodeHeader->data->m10 += $val->data->m10;
                            $nodeHeader->data->m11 += $val->data->m11;
                            $nodeHeader->data->m12 += $val->data->m12;
                            $nodeHeader->data->mt += $val->data->mt;
                            
                        }
                    }
                }
            }
            $this->pembagi = $pembagi;
            //perlu hitung ke summary
            $result = array('rs' => array('rows' => array() ) );
            $this->generateResultMonthly($rootNode, $result, $neraca);
            return ($result);    
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
	function getDataMonthlyActualEXSUMCFUDetail($induk, $model, $periode,$neraca, $tipe, $pembagi = 1000000000){
        
        try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->cfu;//"CFU0"
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);

            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
            }
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not a.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
                $jenis = " and a.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and a.jenis in ('TB','RL','IJ') and a.kode_cfu = case when a.kode_cfu2='-' then a.kode_cfu else a.kode_cfu2 end ";//,'AD'
				$filterBudget = " and not a.kode_cfu in ('CFUE') ";
            }else {
                $jenis = "  ";
				$filterBudget = "  ";
            }
                    
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                                   and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                
				if (strlen($induk) > 4)
                    $field = "z.kode_cfu ";
                else $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,a.kode_ubis) > 0 ";
               
				$forSubCFU = "and a.kode_cfu = substr('$induk', 0,length(a.kode_cfu)) ";
            }else {
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi  ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                               and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,a.kode_ubis) > 0  ";
                
				$forSubCFU = "";
            }
            //$addFilter = $addFilter . $filterCons;
			
            $filterCFU = " and a.kode_cfu in ( SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu)";
			$filterCFU2 = " and a.kode_lokasi in ( SELECT distinct kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU ";

			
			//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu)) $addFilter 
            $sql2 = "select distinct a.kode_neraca, y.kode_akun, concat(y.kode_akun,concat('-', y.nama)) as nama, y.jenis as jenis_akun
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '01' then a.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '02' then a.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(a.periode,5,2) = '03' then a.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '04' then a.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(a.periode,5,2) = '05' then a.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '06' then a.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(a.periode,5,2) = '07' then a.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '08' then a.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(a.periode,5,2) = '09' then a.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '10' then a.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(a.periode,5,2) = '11' then a.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '12' then a.nilai else 0 end,0)) as n12
																			, sum(nvl(a.nilai,0)) as nt
                                                                    from bpc_relakun x
																	inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
																	inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like  '$thn1%' $jenis
																	inner join ( SELECT distinct kode_lokasi
																		FROM bpc_cfu
																		start with kode_induk ='$induk' or kode_cfu = '$induk'
																		CONNECT BY kode_induk = PRIOR kode_cfu) b on b.kode_lokasi = a.kode_lokasi and decode('$induk','CFU0', substr('$induk',1,3), substr('$induk',1,4)) = decode('$induk','CFU0', substr(a.kode_cfu,1,3), substr(a.kode_cfu,1,4))
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun
												 							, sum(nvl(case when substr(a.periode,5,2) = '01' then a.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '02' then a.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(a.periode,5,2) = '03' then a.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '04' then a.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(a.periode,5,2) = '05' then a.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '06' then a.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(a.periode,5,2) = '07' then a.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '08' then a.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(a.periode,5,2) = '09' then a.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '10' then a.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(a.periode,5,2) = '11' then a.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '12' then a.nilai else 0 end,0)) as n12
																			, sum(nvl(a.nilai,0)) as nt
                                                                    from bpc_relakun x
																	inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
																	inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn2."%'   $jenis 
																	inner join ( SELECT distinct kode_lokasi
																		FROM bpc_cfu
																		start with kode_induk ='$induk' or kode_cfu = '$induk'
																		CONNECT BY kode_induk = PRIOR kode_cfu) b on b.kode_lokasi = a.kode_lokasi and decode('$induk','CFU0', substr('$induk',1,3), substr('$induk',1,4)) = decode('$induk','CFU0', substr(a.kode_cfu,1,3), substr(a.kode_cfu,1,4))
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$neraca'
                                            and ( nvl(c.nt,0) <> 0 or c.n1 <> 0 or c.n2 <> 0 or c.n3 <> 0 or c.n4 <> 0 or c.n5 <> 0 or c.n6 <> 0 or c.n7 <> 0
											  or c.n8 <> 0 or c.n9 <> 0 or c.n10 <> 0 or c.n11 <> 0 or c.n12 <> 0
											  or 
											  nvl(e.nt,0) <> 0 or e.n1 <> 0 or e.n2 <> 0 or e.n3 <> 0 or e.n4 <> 0 or e.n5 <> 0 or e.n6 <> 0 or e.n7 <> 0
											  or e.n8 <> 0 or e.n9 <> 0 or e.n10 <> 0 or e.n11 <> 0 or e.n12 <> 0  )
											group by a.kode_neraca, y.kode_akun, y.nama, y.jenis
                            union
                                            select distinct 'UNMAPPED', a.kode_akun, concat(a.kode_akun,concat('-', a.nama)) as nama, a.jenis as jenis_akun
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '01' then a.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '02' then a.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(a.periode,5,2) = '03' then a.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '04' then a.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(a.periode,5,2) = '05' then a.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '06' then a.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(a.periode,5,2) = '07' then a.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '08' then a.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(a.periode,5,2) = '09' then a.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '10' then a.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(a.periode,5,2) = '11' then a.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '12' then a.nilai else 0 end,0)) as n12
																			, sum(nvl(a.nilai,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    inner join ( SELECT distinct kode_lokasi
																		FROM bpc_cfu
																		start with kode_induk ='$induk' or kode_cfu = '$induk'
																		CONNECT BY kode_induk = PRIOR kode_cfu) b on b.kode_lokasi = a.kode_lokasi and decode('$induk','CFU0', substr('$induk',1,3), substr('$induk',1,4)) = decode('$induk','CFU0', substr(a.kode_cfu,1,3), substr(a.kode_cfu,1,4))
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun
												 							, sum(nvl(case when substr(a.periode,5,2) = '01' then a.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '02' then a.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(a.periode,5,2) = '03' then a.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '04' then a.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(a.periode,5,2) = '05' then a.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '06' then a.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(a.periode,5,2) = '07' then a.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '08' then a.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(a.periode,5,2) = '09' then a.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '10' then a.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(a.periode,5,2) = '11' then a.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '12' then a.nilai else 0 end,0)) as n12
																			, sum(nvl(a.nilai,0)) as nt
                                                                    from bpc_masakun x
																	inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn2."%'  $jenis 
																	inner join ( SELECT distinct kode_lokasi
																		FROM bpc_cfu
																		start with kode_induk ='$induk' or kode_cfu = '$induk'
																		CONNECT BY kode_induk = PRIOR kode_cfu) b on b.kode_lokasi = a.kode_lokasi and decode('$induk','CFU0', substr('$induk',1,3), substr('$induk',1,4)) = decode('$induk','CFU0', substr(a.kode_cfu,1,3), substr(a.kode_cfu,1,4))
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null and 'UNMAPPED' = '$neraca'
                                            and ( nvl(c.nt,0) <> 0 )
											group by a.kode_akun, a.nama, a.jenis
                                            order by kode_neraca, kode_akun";
            
        	//error_log($sql2);
            $rs = $db->execute($sql2);
            $result = array("rs"=>array("rows" => array()));        
            
            while ($row = $rs->FetchNextObject(false)){
                if ($row->jenis_akun == "PENDAPATAN"){
					$row->jenis = 'INC';
					$row->n1 = round(-$row->n1 / $pembagi);
					$row->n2 = round(-$row->n2/ $pembagi);
					$row->n3 = round(-$row->n3/ $pembagi);
					$row->n4 = round(-$row->n4/ $pembagi);
					$row->n5 = round(-$row->n5/ $pembagi);
					$row->n6 = round(-$row->n6/ $pembagi);
					$row->n7 = round(-$row->n7/ $pembagi);
					$row->n8 = round(-$row->n8/ $pembagi);
					$row->n9 = round(-$row->n9/ $pembagi);
					$row->n10 = round(-$row->n10/ $pembagi);
					$row->n11 = round(-$row->n11/ $pembagi);
					$row->n12 = round(-$row->n12/ $pembagi);
					$row->nt = round(-$row->nt/ $pembagi);
					$row->m1 = round(-$row->m1/ $pembagi);
					$row->m2 = round(-$row->m2/ $pembagi);
					$row->m3 = round(-$row->m3/ $pembagi);
					$row->m4 = round(-$row->m4/ $pembagi);
					$row->m5 = round(-$row->m5/ $pembagi);
					$row->m6 = round(-$row->m6/ $pembagi);
					$row->m7 = round(-$row->m7/ $pembagi);
					$row->m8 = round(-$row->m8/ $pembagi);
					$row->m9 = round(-$row->m9/ $pembagi);
					$row->m10 = round(-$row->m10/ $pembagi);
					$row->m11 = round(-$row->m11/ $pembagi);
					$row->m12 = round(-$row->m12/ $pembagi);
					$row->mt = round(-$row->mt/ $pembagi);
				}else {
					$row->jenis = 'EXP';
					$row->n1 = round($row->n1 / $pembagi);
					$row->n2 = round($row->n2/ $pembagi);
					$row->n3 = round($row->n3/ $pembagi);
					$row->n4 = round($row->n4/ $pembagi);
					$row->n5 = round($row->n5/ $pembagi);
					$row->n6 = round($row->n6/ $pembagi);
					$row->n7 = round($row->n7/ $pembagi);
					$row->n8 = round($row->n8/ $pembagi);
					$row->n9 = round($row->n9/ $pembagi);
					$row->n10 = round($row->n10/ $pembagi);
					$row->n11 = round($row->n11/ $pembagi);
					$row->n12 = round($row->n12/ $pembagi);
					$row->nt = round($row->nt/ $pembagi);
					$row->m1 = round($row->m1/ $pembagi);
					$row->m2 = round($row->m2/ $pembagi);
					$row->m3 = round($row->m3/ $pembagi);
					$row->m4 = round($row->m4/ $pembagi);
					$row->m5 = round($row->m5/ $pembagi);
					$row->m6 = round($row->m6/ $pembagi);
					$row->m7 = round($row->m7/ $pembagi);
					$row->m8 = round($row->m8/ $pembagi);
					$row->m9 = round($row->m9/ $pembagi);
					$row->m10 = round($row->m10/ $pembagi);
					$row->m11 = round($row->m11/ $pembagi);
					$row->m12 = round($row->m12/ $pembagi);
					$row->mt = round($row->mt/ $pembagi);

				}

				
                $result["rs"]["rows"][] = $row;
                
            }
            return $result;
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
	function getDataMonthlyActualEXSUMCFUAkun($induk, $model, $periode, $tipe, $pembagi = 1000000000){
        try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->cfu;//= "CFU0"
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
            
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
            }
            
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
                $jenis = " and t.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
                $filterBudget = " and not a.kode_cfu in ('CFUE') ";
            }else {
                $jenis = "  ";
                $filterBudget = "  ";
            }
                    
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                                   and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                if (strlen($induk) > 4)
                    $field = "z.kode_cfu ";
                else $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons, t.kode_ubis) > 0 ";
               
				$forSubCFU = "and t.kode_cfu = substr('$induk', 0,length(t.kode_cfu)) ";
            }else {
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                               and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons, t.kode_ubis) > 0   ";
                
				$forSubCFU = "  ";
            }
            $addFilter = $addFilter . $filterCons; 
			$filterCFU = " and a.kode_cfu in ( SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu)";
			$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU ";
			//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu)) $addFilter
            $sql2 = "select distinct a.kode_neraca, y.kode_akun, y.nama, y.jenis as jenis_akun 
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as n12
																			, sum(nvl(t.nilai,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    inner join ( SELECT distinct kode_lokasi
																		FROM bpc_cfu
																		start with kode_induk ='$induk' or kode_cfu = '$induk'
																		CONNECT BY kode_induk = PRIOR kode_cfu) b on b.kode_lokasi = t.kode_lokasi and decode('$induk','CFU0', substr('$induk',1,3), substr('$induk',1,4)) = decode('$induk','CFU0', substr(t.kode_cfu,1,3), substr(t.kode_cfu,1,4))
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun
												 							, sum(nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as n12
																			, sum(nvl(t.nilai,0)) as nt
                                                                    from bpc_relakun x
																	inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn2."%'  $jenis
																	inner join ( SELECT distinct kode_lokasi
																		FROM bpc_cfu
																		start with kode_induk ='$induk' or kode_cfu = '$induk'
																		CONNECT BY kode_induk = PRIOR kode_cfu) b on b.kode_lokasi = t.kode_lokasi and decode('$induk','CFU0', substr('$induk',1,3), substr('$induk',1,4)) = decode('$induk','CFU0', substr(t.kode_cfu,1,3), substr(t.kode_cfu,1,4))
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                            and ( nvl(c.nt,0) <> 0 or c.n1 <> 0 or c.n2 <> 0 or c.n3 <> 0 or c.n4 <> 0 or c.n5 <> 0 or c.n6 <> 0 or c.n7 <> 0
											  or c.n8 <> 0 or c.n9 <> 0 or c.n10 <> 0 or c.n11 <> 0 or c.n12 <> 0
											  or 
											  nvl(e.nt,0) <> 0 or e.n1 <> 0 or e.n2 <> 0 or e.n3 <> 0 or e.n4 <> 0 or e.n5 <> 0 or e.n6 <> 0 or e.n7 <> 0
											  or e.n8 <> 0 or e.n9 <> 0 or e.n10 <> 0 or e.n11 <> 0 or e.n12 <> 0    )
											group by a.kode_neraca, y.kode_akun, y.nama, y.jenis
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, a.nama , a.jenis as jenis_akun
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                               left outer join (select x.kode_akun
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as n12
																			, sum(nvl(t.nilai,0)) as nt
                                                                    from bpc_masakun x
																	inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
																	inner join ( SELECT distinct kode_lokasi
																		FROM bpc_cfu
																		start with kode_induk ='$induk' or kode_cfu = '$induk'
																		CONNECT BY kode_induk = PRIOR kode_cfu) b on b.kode_lokasi = t.kode_lokasi and decode('$induk','CFU0', substr('$induk',1,3), substr('$induk',1,4)) = decode('$induk','CFU0', substr(t.kode_cfu,1,3), substr(t.kode_cfu,1,4))
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun
												 							, sum(nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as n12
																			, sum(nvl(t.nilai,0)) as nt
                                                                    from bpc_masakun x
																	inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn2."%'  $jenis
																	inner join ( SELECT distinct kode_lokasi
																		FROM bpc_cfu
																		start with kode_induk ='$induk' or kode_cfu = '$induk'
																		CONNECT BY kode_induk = PRIOR kode_cfu) b on b.kode_lokasi = t.kode_lokasi and decode('$induk','CFU0', substr('$induk',1,3), substr('$induk',1,4)) = decode('$induk','CFU0', substr(t.kode_cfu,1,3), substr(t.kode_cfu,1,4))
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.nt,0) <> 0 )
											group by  a.kode_akun, a.nama, a.jenis
                                            order by kode_neraca, kode_akun";
            
            //error_log("getDataEXSUMCFU2 => $sql2 ");
			$rs = $db->execute($sql2);
            $result = new server_util_Map();        
            $neraca = "";
            while ($row = $rs->FetchNextObject(false)){
				 if ($row->jenis_akun == "PENDAPATAN"){
					$row->n1 = ($row->n1) * -1;
					$row->n2 = ($row->n2) * -1;
					$row->n3 = ($row->n3) * -1;
					$row->n4 = ($row->n4) * -1;
					$row->n5 = ($row->n5) * -1;
					$row->n6 = ($row->n6) * -1;
					$row->n7 = ($row->n7) * -1;
					$row->n8 = ($row->n8) * -1;
					$row->n9 = ($row->n9) * -1;
					$row->n10 = ($row->n10) * -1;
					$row->n11 = ($row->n11) * -1;
					$row->n12 = ($row->n12) * -1;
					$row->nt = ($row->nt) * -1;
					$row->m1 = ($row->m1) * -1;
					$row->m2 = ($row->m2) * -1;
					$row->m3 = ($row->m3) * -1;
					$row->m4 = ($row->m4) * -1;
					$row->m5 = ($row->m5) * -1;
					$row->m6 = ($row->m6) * -1;
					$row->m7 = ($row->m7) * -1;
					$row->m8 = ($row->m8) * -1;
					$row->m9 = ($row->m9) * -1;
					$row->m10 = ($row->m10) * -1;
					$row->m11 = ($row->m11) * -1;
					$row->m12 = ($row->m12) * -1;
					$row->mt = ($row->mt) * -1;
					$row->jenis = "INC";
				}else {
					$row->jenis = "EXP";

				}

				$row->n1 = round($row->n1 / $this->pembagi);
				$row->n2 = round($row->n2/ $this->pembagi);
				$row->n3 = round($row->n3/ $this->pembagi);
				$row->n4 = round($row->n4/ $this->pembagi);
				$row->n5 = round($row->n5/ $this->pembagi);
				$row->n6 = round($row->n6/ $this->pembagi);
				$row->n7 = round($row->n7/ $this->pembagi);
				$row->n8 = round($row->n8/ $this->pembagi);
				$row->n9 = round($row->n9/ $this->pembagi);
				$row->n10 = round($row->n10/ $this->pembagi);
				$row->n11 = round($row->n11/ $this->pembagi);
				$row->n12 = round($row->n12/ $this->pembagi);
				$row->nt = round($row->nt/ $this->pembagi);
				$row->m1 = round($row->m1/ $this->pembagi);
				$row->m2 = round($row->m2/ $this->pembagi);
				$row->m3 = round($row->m3/ $this->pembagi);
				$row->m4 = round($row->m4/ $this->pembagi);
				$row->m5 = round($row->m5/ $this->pembagi);
				$row->m6 = round($row->m6/ $this->pembagi);
				$row->m7 = round($row->m7/ $this->pembagi);
				$row->m8 = round($row->m8/ $this->pembagi);
				$row->m9 = round($row->m9/ $this->pembagi);
				$row->m10 = round($row->m10/ $this->pembagi);
				$row->m11 = round($row->m11/ $this->pembagi);
				$row->m12 = round($row->m12/ $this->pembagi);
				$row->mt = round($row->mt/ $this->pembagi);

                if ($neraca != $row->kode_neraca){
                    $neraca = $row->kode_neraca;
                    $item = array();
                }
				
                $item[] = $row;
                $result->set($neraca, $item);
                
            }
            return $result;
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
    function downloadMonthlyActualDataCFU($induk, $model, $periode, $tipe, $pembagi){
		$this->getDb();
		
		error_log("gen actual CFU");
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");

		
		error_log("Generate Data ..");
 
        $data = $this->getDataMonthlyActualEXSUMCFU($induk, $model, $periode, $tipe, $pembagi);					
		$akun = $this->getDataMonthlyActualEXSUMCFUAkun($induk, $model,$periode, $tipe, $pembagi);
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$thn1 = floatval( substr( $periode, 2,2) ) ;
		$thn2 = $thn1 - 1;
		$column = array("Account","Uraian","Tipe","Level","Jan $thn2","Feb $thn2","Mar $thn2","Apr $thn2","Mei $thn2","Jun $thn2","Jul $thn2","Agt $thn2","Sep $thn2","Okt $thn2","Nop $thn2","Des $thn2","Jan $thn1","Feb $thn1","Mar $thn1","Apr $thn1","Mei $thn1","Jun $thn1","Jul $thn1","Agt $thn1","Sep $thn1","Okt $thn1","Nop $thn1","Des $thn1","Total $thn1","Total $thn2");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        
        foreach ($data["rs"]["rows"] as $val){
            $row++;
            $val  = json_decode(json_encode($val));
            $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_neraca);
            $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
            $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
            $sheet->setCellValueByColumnAndRow(3, $row, $val->level_spasi);
            $sheet->setCellValueByColumnAndRow(4, $row, $val->m1);
            $sheet->setCellValueByColumnAndRow(5, $row, $val->m2);
            $sheet->setCellValueByColumnAndRow(6, $row, $val->m3);
            $sheet->setCellValueByColumnAndRow(7, $row, $val->m4);
            $sheet->setCellValueByColumnAndRow(8, $row, $val->m5);
            $sheet->setCellValueByColumnAndRow(9, $row, $val->m6);
            $sheet->setCellValueByColumnAndRow(10, $row, $val->m7);
            $sheet->setCellValueByColumnAndRow(11, $row, $val->m8);
            $sheet->setCellValueByColumnAndRow(12, $row, $val->m9);
            $sheet->setCellValueByColumnAndRow(13, $row, $val->m10);
            $sheet->setCellValueByColumnAndRow(14, $row, $val->m11);
			$sheet->setCellValueByColumnAndRow(15, $row, $val->m12);

			$sheet->setCellValueByColumnAndRow(16, $row, $val->n1);
            $sheet->setCellValueByColumnAndRow(17, $row, $val->n2);
            $sheet->setCellValueByColumnAndRow(18, $row, $val->n3);
            $sheet->setCellValueByColumnAndRow(19, $row, $val->n4);
            $sheet->setCellValueByColumnAndRow(20, $row, $val->n5);
            $sheet->setCellValueByColumnAndRow(21, $row, $val->n6);
            $sheet->setCellValueByColumnAndRow(22, $row, $val->n7);
            $sheet->setCellValueByColumnAndRow(23, $row, $val->n8);
            $sheet->setCellValueByColumnAndRow(24, $row, $val->n9);
            $sheet->setCellValueByColumnAndRow(25, $row, $val->n10);
            $sheet->setCellValueByColumnAndRow(26, $row, $val->n11);
			$sheet->setCellValueByColumnAndRow(27, $row, $val->n12);
			$sheet->setCellValueByColumnAndRow(28, $row, $val->nt);
			$sheet->setCellValueByColumnAndRow(29, $row, $val->mt);
			

            $listAkun = $akun->get($val->kode_neraca);
            $level = $val->level_spasi;
            foreach ($listAkun as $item){
                $row++;
                $val  = json_decode(json_encode($item));
                $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_akun);
                $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
                $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
                $sheet->setCellValueByColumnAndRow(3, $row, $level + 1);
                $sheet->setCellValueByColumnAndRow(4, $row, $val->m1);
				$sheet->setCellValueByColumnAndRow(5, $row, $val->m2);
				$sheet->setCellValueByColumnAndRow(6, $row, $val->m3);
				$sheet->setCellValueByColumnAndRow(7, $row, $val->m4);
				$sheet->setCellValueByColumnAndRow(8, $row, $val->m5);
				$sheet->setCellValueByColumnAndRow(9, $row, $val->m6);
				$sheet->setCellValueByColumnAndRow(10, $row, $val->m7);
				$sheet->setCellValueByColumnAndRow(11, $row, $val->m8);
				$sheet->setCellValueByColumnAndRow(12, $row, $val->m9);
				$sheet->setCellValueByColumnAndRow(13, $row, $val->m10);
				$sheet->setCellValueByColumnAndRow(14, $row, $val->m11);
				$sheet->setCellValueByColumnAndRow(15, $row, $val->m12);

				$sheet->setCellValueByColumnAndRow(16, $row, $val->n1);
				$sheet->setCellValueByColumnAndRow(17, $row, $val->n2);
				$sheet->setCellValueByColumnAndRow(18, $row, $val->n3);
				$sheet->setCellValueByColumnAndRow(19, $row, $val->n4);
				$sheet->setCellValueByColumnAndRow(20, $row, $val->n5);
				$sheet->setCellValueByColumnAndRow(21, $row, $val->n6);
				$sheet->setCellValueByColumnAndRow(22, $row, $val->n7);
				$sheet->setCellValueByColumnAndRow(23, $row, $val->n8);
				$sheet->setCellValueByColumnAndRow(24, $row, $val->n9);
				$sheet->setCellValueByColumnAndRow(25, $row, $val->n10);
				$sheet->setCellValueByColumnAndRow(26, $row, $val->n11);
				$sheet->setCellValueByColumnAndRow(27, $row, $val->n12);
				$sheet->setCellValueByColumnAndRow(28, $row, $val->nt);
				$sheet->setCellValueByColumnAndRow(29, $row, $val->mt);
            }
            
        }
 
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
		error_log("save Data ..");
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/CFU_monhtly_$namafile.xlsx");
	
		error_log("Done Data ..");
 
		return "/CFU_monhtly_$namafile.xlsx";
	}
	function saveExsumTrendCFUToSummary($induk, $model, $periode, $tipe, $pembagi){
		$this->getDb();
		$pembagi = 1;
		
		if (!isset($induk) || $induk == "") $induk = $this->lokasi;//
		$this->cleanUp();
		$data = $this->getDataMonthlyActualEXSUMCFU($induk, $model, $periode, $tipe, $pembagi);					
		$dataAkun = $this->getDataMonthlyActualEXSUMCFUAkun($induk, $model,$periode, $tipe, $pembagi);

		$rsUbis = $this->dbLib->execute("select kode_lokasi, nama, cocd, ba_consol  from bpc_lokasi where kode_lokasi = '$induk' ");
		if ($row = $rsUbis->FetchNextObject(false)){
			$rowCocd = $row;
		}
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_summary_trend where periode = '$periode' and kode_fs = '$model' and kode_cfu = '$induk' and kode_lokasi = '-' and status_nilai = '$tipe' ");
		$sql->add("delete from bpc_summary_trend_d where periode = '$periode' and kode_fs = '$model' and kode_cfu = '$induk' and kode_lokasi = '-' and status_nilai = '$tipe'");
		foreach ($data["rs"]["rows"] as $val){
			$row = json_decode(json_encode($val));
			$sql->add(new server_util_Map(array(
					"tipe" => "param",
					"sql" => "insert into bpc_summary_trend(
								kode_lokasi, kode_ubis_cons, kode_cfu, kode_neraca, nama,  tipe, jenis_akun, sum_header, level_spasi, kode_induk, rowindex, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13,  periode, kode_fs,  status_nilai)
								values(:0, :1, :2, :3, :4, :5, :6,:7,:8,:9,:10,:11,:12,:13,:14, :15, :16, :17, :18, :19, :20,:21,:22,:23,:24,:25, :26, :27, :28, :29, :30, :31,:32,:33,:34,:35,:36,:37,:38,:39)",
					"value" => array('-', '-', $induk, $row->kode_neraca,  str_replace("&nbsp;"," ",$row->nama), $row->tipe, $row->jenis_akun, $row->sum_header,
										$row->level_spasi, $row->kode_induk, $row->rowindex, $row->n1, $row->n2, $row->n3, $row->n4, $row->n5, $row->n6, $row->n7, $row->n8, $row->n9, $row->n10, $row->n11, $row->n12, $row->n13,
										$row->m1, $row->m2, $row->m3, $row->m4, $row->m5, $row->m6, $row->m7, $row->m8, $row->m9, $row->m10, $row->m11, $row->m12, $row->m13,  $periode, $model, $tipe )
				)));
			$akun = $dataAkun->get($row->kode_neraca);
			if ($akun){
				foreach ($akun as $val){
					$row = json_decode(json_encode($val));
					$sql->add(new server_util_Map(array(
								"tipe" => "param",
								"sql" => "insert into bpc_summary_trend_d(
											kode_lokasi, kode_ubis_cons, kode_cfu, kode_akun, nama,  tipe, jenis_akun, sum_header, level_spasi, kode_neraca, rowindex,  n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, periode,  kode_fs,  status_nilai)
											values(:0, :1, :2, :3, :4, :5, :6,:7,:8,:9,:10,:11,:12,:13,:14, :15, :16, :17, :18, :19, :20,:21,:22,:23,:24,:25, :26, :27, :28, :29, :30, :31,:32,:33,:34,:35,:36,:37,:38,:39)",
								"value" => array('-', '-', $induk, $row->kode_akun,  str_replace("&nbsp;"," ",$row->nama), $row->tipe, $row->jenis_akun, $row->sum_header,
												$row->level_spasi, $row->kode_neraca, $row->rowindex,   $row->n1, $row->n2, $row->n3, $row->n4, $row->n5, $row->n6, $row->n7, $row->n8, $row->n9, $row->n10, $row->n11, $row->n12, $row->n13,
												$row->m1, $row->m2, $row->m3, $row->m4, $row->m5, $row->m6, $row->m7, $row->m8, $row->m9, $row->m10, $row->m11, $row->m12, $row->m13, $periode, $model,  $tipe )
							)));
				}
			}
		}
		

		$ret = $this->dbLib->execArraySQL($sql);
		return $ret;

	}
	
	//---------------------- MONTHLY BUDGET CFU
	function getDataMonthlyBudgetEXSUMCFU($induk, $model, $periode, $tipe, $pembagi = 1000000000){
        try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->cfu;
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
                
        
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
				$lastPeriode2 = (floatval(substr($row->periode,0,4)) - 1)."01" ;
            }
            
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not a.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
                $jenis = " and a.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205') ";//,'CFU40C'
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and a.jenis in ('TB','RL','IJ') and a.kode_cfu = case when a.kode_cfu2='-' then a.kode_cfu else a.kode_cfu2 end ";//,'AD'
				$filterBudget = " and not a.kode_cfu in ('CFUE','CFU205') and substr(a.kode_cfu,0,4) = case when a.kode_cfu_lawan = '-' or a.kode_cfu_lawan is null then substr(a.kode_cfu,0,4) else case when substr(a.kode_cfu,0,4) = substr(a.kode_cfu_lawan,0,4) then '-' else substr(a.kode_cfu,0,4) end end  ";//'CFU40C',
            }else {
                $jenis = "  ";
				$filterBudget = "  ";
            }
                    
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                                   and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                
				if (strlen($induk) > 4)
                    $field = "z.kode_cfu ";
                else $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,a.kode_ubis) > 0 ";
               
				//$forSubCFU = "and a.kode_cfu = substr('$induk', 0,length(a.kode_cfu)) ";
				$forSubCFU = "";
            }else {
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi  ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                               and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,a.kode_ubis) > 0  ";
                
				$forSubCFU = "";
            }
            //$addFilter = $addFilter . $filterCons;
			
            $filterCFU = " and a.kode_cfu in ( SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu)";
			$filterCFU2 = " and a.kode_cfu in ( SELECT distinct kode_cfu
							FROM bpc_cfu
							start with kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU ";

			//inner join bpc_cfu z on a.kode_cfu = substr(z.kode_cfu, 0, length(a.kode_cfu) ) $filterCons
            $sql2 = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
                                                        , (nvl(c.n1,0)) as n1
														, (nvl(c.n2,0)) as n2
														, (nvl(c.n3,0)) as n3
														, (nvl(c.n4,0)) as n4
														, (nvl(c.n5,0)) as n5
														, (nvl(c.n6,0)) as n6
														, (nvl(c.n7,0)) as n7
														, (nvl(c.n8,0)) as n8
														, (nvl(c.n9,0)) as n9
														, (nvl(c.n10,0)) as n10
														, (nvl(c.n11,0)) as n11
														, (nvl(c.n12,0)) as n12
														, (nvl(c.nt,0)) as nt	

														, (nvl(e.n1,0)) as m1
														, (nvl(e.n2,0)) as m2
														, (nvl(e.n3,0)) as m3
														, (nvl(e.n4,0)) as m4
														, (nvl(e.n5,0)) as m5
														, (nvl(e.n6,0)) as m6
														, (nvl(e.n7,0)) as m7
														, (nvl(e.n8,0)) as m8
														, (nvl(e.n9,0)) as m9
														, (nvl(e.n10,0)) as m10
														, (nvl(e.n11,0)) as m11
														, (nvl(e.n12,0)) as m12
														, (nvl(e.nt,0)) as mt
                                                from bpc_neraca a
                                                left outer join (select x.kode_neraca
                                                                            , sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like '$lastPeriode'
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 $filterBudget group by x.kode_neraca
                                                                ) c on c.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca
												 						 	, sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like '$lastPeriode2' 
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 $filterBudget group by x.kode_neraca
                                                                ) e on e.kode_neraca = a.kode_neraca
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                           union
                                            select distinct 'UNMAPPED', 'UNMAPPED' as nama, '-' as tipe, 'PENDAPATAN' as jenis_akun, '-' as sum_header, 0 as level_spasi, '00' as kode_induk, 1000 as rowindex
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like '$lastPeriode' 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2  $filterBudget group by x.kode_akun
                                                                    having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun 
																			, sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like '$lastPeriode2' 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2  $filterBudget group by x.kode_akun
                                                                    having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.nt,0) <> 0 or nvl(e.nt,0) <> 0)
                                             order by  rowindex";
            //error_log($sql2);
            $rs = $db->execute($sql2);
               
            $node = "";
            $rootNode = new server_util_NodeNRC("00");
            $this->sumHeader = new server_util_Map();
            while ($row = $rs->FetchNextObject(false)){
                if (strtoupper($row->jenis_akun) == "PENDAPATAN")
                    $row->jenis = 'INC';
                else $row->jenis = 'EXP';
                if ($node == ""){
                    $node = new server_util_NodeNRC($rootNode);
                }else if ($node->level == floatval($row->level_spasi) - 1 ){
                    $node = new server_util_NodeNRC($node);
                }else if ($node->level == floatval($row->level_spasi) ){
                    $node = new server_util_NodeNRC($node->owner);
                }else if ($node->level > floatval($row->level_spasi) ){
                    while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
                        $node = $node->owner;
                    }
                    $node = new server_util_NodeNRC($node->owner);
                }
                $node->setData($row);
                if ($row->tipe == "SUMMARY")
                    $this->sumHeader->set($row->kode_neraca, $node);

            }
            //error_log($this->sumHeader->getLength());
            foreach ($rootNode->childs as $key => $val){
                $this->summariesMonthly($val);
                if ($val->data->sum_header != "-"){
                    $summaryHeader = explode(",",$val->data->sum_header);

                    foreach ($summaryHeader as $header){
                        $nodeHeader = $this->sumHeader->get($header);
                        if ($nodeHeader){
                            $nodeHeader->data->n1 += $val->data->n1;
                            $nodeHeader->data->n2 += $val->data->n2;
                            $nodeHeader->data->n3 += $val->data->n3;
                            $nodeHeader->data->n4 += $val->data->n4;
                            $nodeHeader->data->n5 += $val->data->n5;
                            $nodeHeader->data->n6 += $val->data->n6;
                            $nodeHeader->data->n7 += $val->data->n7;
							$nodeHeader->data->n8 += $val->data->n8;
                            $nodeHeader->data->n9 += $val->data->n9;
                            $nodeHeader->data->n10 += $val->data->n10;
                            $nodeHeader->data->n11 += $val->data->n11;
                            $nodeHeader->data->n12 += $val->data->n12;
                            $nodeHeader->data->nt += $val->data->nt;
							$nodeHeader->data->m1 += $val->data->m1;
                            $nodeHeader->data->m2 += $val->data->m2;
                            $nodeHeader->data->m3 += $val->data->m3;
                            $nodeHeader->data->m4 += $val->data->m4;
                            $nodeHeader->data->m5 += $val->data->m5;
                            $nodeHeader->data->m6 += $val->data->m6;
                            $nodeHeader->data->m7 += $val->data->m7;
							$nodeHeader->data->m8 += $val->data->m8;
                            $nodeHeader->data->m9 += $val->data->m9;
                            $nodeHeader->data->m10 += $val->data->m10;
                            $nodeHeader->data->m11 += $val->data->m11;
                            $nodeHeader->data->m12 += $val->data->m12;
                            $nodeHeader->data->mt += $val->data->mt;
                            
                        }
                    }
                }
            }
            $this->pembagi = $pembagi;
            //perlu hitung ke summary
            $result = array('rs' => array('rows' => array() ) );
            $this->generateResultMonthly($rootNode, $result, $neraca);
            return ($result);    
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
	function getDataMonthlyBudgetEXSUMCFUDetail($induk, $model, $periode,$neraca, $tipe, $pembagi = 1000000000){
        
        try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->cfu;
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
			$this->pembagi = $pembagi;
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
				$lastPeriode2 = (floatval(substr($row->periode,0,4)) - 1)."01" ;
            }
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
                $jenis = " and t.jenis in ('TB')";
                $filterBudget = " and  not a.kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205') and substr(a.kode_cfu,0,4) = case when a.kode_cfu_lawan = '-' or a.kode_cfu_lawan is null then substr(a.kode_cfu,0,4) else case when substr(a.kode_cfu,0,4) = substr(a.kode_cfu_lawan,0,4) then '-' else substr(a.kode_cfu,0,4) end end  ";//'CFU40C',
            }else {
                $jenis = "  ";
                $filterBudget = " ";
            }
                    
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                                   and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                if (strlen($induk) > 4)
                    $field = "z.kode_cfu ";
                else $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0  ";
              
				$forSubCFU = "";//and t.kode_cfu = substr('$induk', 0,length(t.kode_cfu)) 
            }else {
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                               and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0   ";
                $forSubCFU = " ";
            }
            $addFilter = $addFilter . $filterCons; 
			$filterCFU = " and a.kode_cfu in ( SELECT kode_cfu
							FROM bpc_cfu
							start with   kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu)";
			$filterCFU2 = " and a.kode_cfu in ( SELECT kode_cfu
							FROM bpc_cfu
							start with kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU ";
			//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu)) $addFilter 
            $sql2 = "select distinct a.kode_neraca, y.kode_akun, concat(y.kode_akun,concat('-', y.nama)) as nama, y.jenis 
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode' 
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' $filterCFU2 $filterBudget group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun
												 							, sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_relakun x
                                                                     inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode2' 
                                                                   
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' $filterCFU2 $filterBudget group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$neraca'
                                            and ( nvl(c.nt,0) <> 0 )
											group by a.kode_neraca, y.kode_akun, y.nama, y.jenis
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, concat(a.kode_akun,concat('-', a.nama)) as nama, a.jenis
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode' 
                                                                    
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 $filterBudget group by x.kode_akun
                                                                    having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun
												 							, sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode2'  
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 $filterBudget group by x.kode_akun
                                                                    having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null and 'UNMAPPED' = '$neraca'
                                            and ( nvl(c.nt,0) <> 0 )
											group by a.kode_akun, a.nama, a.jenis
                                            order by kode_neraca, kode_akun";
            
            //error_log($sql2);
            $rs = $db->execute($sql2);
            $result = array("rs"=>array("rows" => array()));        
            
            while ($row = $rs->FetchNextObject(false)){
                if ($row->jenis == "PENDAPATAN"){
					$row->n1 = ($row->n1) * -1;
					$row->n2 = ($row->n2) * -1;
					$row->n3 = ($row->n3) * -1;
					$row->n4 = ($row->n4) * -1;
					$row->n5 = ($row->n5) * -1;
					$row->n6 = ($row->n6) * -1;
					$row->n7 = ($row->n7) * -1;
					$row->n8 = ($row->n8) * -1;
					$row->n9 = ($row->n9) * -1;
					$row->n10 = ($row->n10) * -1;
					$row->n11 = ($row->n11) * -1;
					$row->n12 = ($row->n12) * -1;
					$row->nt = ($row->nt) * -1;
					$row->m1 = ($row->m1) * -1;
					$row->m2 = ($row->m2) * -1;
					$row->m3 = ($row->m3) * -1;
					$row->m4 = ($row->m4) * -1;
					$row->m5 = ($row->m5) * -1;
					$row->m6 = ($row->m6) * -1;
					$row->m7 = ($row->m7) * -1;
					$row->m8 = ($row->m8) * -1;
					$row->m9 = ($row->m9) * -1;
					$row->m10 = ($row->m10) * -1;
					$row->m11 = ($row->m11) * -1;
					$row->m12 = ($row->m12) * -1;
					$row->mt = ($row->mt) * -1;
					$row->jenis = "INC";
				}else {
					
					$row->jenis = "EXP";
				}

				$row->n1 = round($row->n1 / $this->pembagi);
				$row->n2 = round($row->n2/ $this->pembagi);
				$row->n3 = round($row->n3/ $this->pembagi);
				$row->n4 = round($row->n4/ $this->pembagi);
				$row->n5 = round($row->n5/ $this->pembagi);
				$row->n6 = round($row->n6/ $this->pembagi);
				$row->n7 = round($row->n7/ $this->pembagi);
				$row->n8 = round($row->n8/ $this->pembagi);
				$row->n9 = round($row->n9/ $this->pembagi);
				$row->n10 = round($row->n10/ $this->pembagi);
				$row->n11 = round($row->n11/ $this->pembagi);
				$row->n12 = round($row->n12/ $this->pembagi);
				$row->nt = round($row->nt/ $this->pembagi);
				$row->m1 = round($row->m1/ $this->pembagi);
				$row->m2 = round($row->m2/ $this->pembagi);
				$row->m3 = round($row->m3/ $this->pembagi);
				$row->m4 = round($row->m4/ $this->pembagi);
				$row->m5 = round($row->m5/ $this->pembagi);
				$row->m6 = round($row->m6/ $this->pembagi);
				$row->m7 = round($row->m7/ $this->pembagi);
				$row->m8 = round($row->m8/ $this->pembagi);
				$row->m9 = round($row->m9/ $this->pembagi);
				$row->m10 = round($row->m10/ $this->pembagi);
				$row->m11 = round($row->m11/ $this->pembagi);
				$row->m12 = round($row->m12/ $this->pembagi);
				$row->mt = round($row->mt/ $this->pembagi);
                $result["rs"]["rows"][] = (array)$row;
                
            }
            return $result;
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
	function getDataMonthlyBudgetEXSUMCFUAkun($induk, $model, $periode, $tipe, $pembagi = 1000000000){
        try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->cfu;
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
            
            $lastPeriode = $periode;
			$this->pembagi = $pembagi;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
				$lastPeriode2 = (floatval(substr($row->periode,0,4)) - 1)."01" ;
            }
            
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
                $jenis = " and t.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205') and substr(a.kode_cfu,0,4) = case when a.kode_cfu_lawan = '-' or a.kode_cfu_lawan is null then substr(a.kode_cfu,0,4) else case when substr(a.kode_cfu,0,4) = substr(a.kode_cfu_lawan,0,4) then '-' else substr(a.kode_cfu,0,4) end end  ";//'CFU40C',
            }else {
                $jenis = "  ";
                $filterBudget = "  ";
            }
                    
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                                   and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                if (strlen($induk) > 4)
                    $field = "z.kode_cfu ";
                else $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons, t.kode_ubis) > 0 ";
               
				$forSubCFU = "";//and t.kode_cfu = substr('$induk', 0,length(t.kode_cfu)) 
            }else {
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                               and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons, t.kode_ubis) > 0   ";
                
				$forSubCFU = "  ";
            }
            $addFilter = $addFilter . $filterCons; 
			$filterCFU = " and a.kode_cfu in ( SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu)";
			$filterCFU2 = " and a.kode_cfu in ( SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU ";
			//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu)) $addFilter
            $sql2 = "select distinct a.kode_neraca, y.kode_akun, y.nama, y.jenis as jenis_akun 
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode' 
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 $filterBudget group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun
												 							, sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode2' 
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 $filterBudget group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                            and ( nvl(c.nt,0) <> 0 )
											group by a.kode_neraca, y.kode_akun, y.nama, y.jenis
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, a.nama , a.jenis as jenis_akun
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                               left outer join (select x.kode_akun
                                                                            , sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode' 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 $filterBudget group by x.kode_akun
                                                                    having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun
												 							, sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode2' 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 $filterBudget group by x.kode_akun
                                                                    having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.nt,0) <> 0 )
											group by a.kode_akun, a.nama, a.jenis
                                            order by kode_neraca, kode_akun";
            
            //error_log("getDataEXSUMCFU2 => $sql2 ");
			$rs = $db->execute($sql2);
            $result = new server_util_Map();        
            $neraca = "";
            while ($row = $rs->FetchNextObject(false)){
				 if ($row->jenis_akun == "PENDAPATAN"){
					/*
					$row->n1 = ($row->n1) * -1;
					$row->n2 = ($row->n2) * -1;
					$row->n3 = ($row->n3) * -1;
					$row->n4 = ($row->n4) * -1;
					$row->n5 = ($row->n5) * -1;
					$row->n6 = ($row->n6) * -1;
					$row->n7 = ($row->n7) * -1;
					$row->n8 = ($row->n8) * -1;
					$row->n9 = ($row->n9) * -1;
					$row->n10 = ($row->n10) * -1;
					$row->n11 = ($row->n11) * -1;
					$row->n12 = ($row->n12) * -1;
					$row->nt = ($row->nt) * -1;
					$row->m1 = ($row->m1) * -1;
					$row->m2 = ($row->m2) * -1;
					$row->m3 = ($row->m3) * -1;
					$row->m4 = ($row->m4) * -1;
					$row->m5 = ($row->m5) * -1;
					$row->m6 = ($row->m6) * -1;
					$row->m7 = ($row->m7) * -1;
					$row->m8 = ($row->m8) * -1;
					$row->m9 = ($row->m9) * -1;
					$row->m10 = ($row->m10) * -1;
					$row->m11 = ($row->m11) * -1;
					$row->m12 = ($row->m12) * -1;
					$row->mt = ($row->mt) * -1;*/
					$row->jenis = "INC";
				}else {
					$row->jenis = "EXP";

				}

				$row->n1 = round($row->n1 / $this->pembagi);
				$row->n2 = round($row->n2/ $this->pembagi);
				$row->n3 = round($row->n3/ $this->pembagi);
				$row->n4 = round($row->n4/ $this->pembagi);
				$row->n5 = round($row->n5/ $this->pembagi);
				$row->n6 = round($row->n6/ $this->pembagi);
				$row->n7 = round($row->n7/ $this->pembagi);
				$row->n8 = round($row->n8/ $this->pembagi);
				$row->n9 = round($row->n9/ $this->pembagi);
				$row->n10 = round($row->n10/ $this->pembagi);
				$row->n11 = round($row->n11/ $this->pembagi);
				$row->n12 = round($row->n12/ $this->pembagi);
				$row->nt = round($row->nt/ $this->pembagi);
				$row->m1 = round($row->m1/ $this->pembagi);
				$row->m2 = round($row->m2/ $this->pembagi);
				$row->m3 = round($row->m3/ $this->pembagi);
				$row->m4 = round($row->m4/ $this->pembagi);
				$row->m5 = round($row->m5/ $this->pembagi);
				$row->m6 = round($row->m6/ $this->pembagi);
				$row->m7 = round($row->m7/ $this->pembagi);
				$row->m8 = round($row->m8/ $this->pembagi);
				$row->m9 = round($row->m9/ $this->pembagi);
				$row->m10 = round($row->m10/ $this->pembagi);
				$row->m11 = round($row->m11/ $this->pembagi);
				$row->m12 = round($row->m12/ $this->pembagi);
				$row->mt = round($row->mt/ $this->pembagi);

                if ($neraca != $row->kode_neraca){
                    $neraca = $row->kode_neraca;
                    $item = array();
                }
				
                $item[] = $row;
                $result->set($neraca, $item);
                
            }
            return $result;
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
    function downloadMonthlyBudgetDataCFU($induk, $model, $periode, $tipe, $pembagi){
		$this->getDb();
		
		
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 
        $data = $this->getDataMonthlyBudgetEXSUMCFU($induk, $model, $periode, $tipe, $pembagi);					
		$akun = $this->getDataMonthlyBudgetEXSUMCFUAkun($induk, $model,$periode, $tipe, $pembagi);
			
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$thn1 = floatval( substr( $periode, 2,2) ) ;
		$thn2 = $thn1 - 1;
		$column = array("Account","Uraian","Tipe","Level","Jan $thn2","Feb $thn2","Mar $thn2","Apr $thn2","Mei $thn2","Jun $thn2","Jul $thn2","Agt $thn2","Sep $thn2","Okt $thn2","Nop $thn2","Des $thn2","Jan $thn1","Feb $thn1","Mar $thn1","Apr $thn1","Mei $thn1","Jun $thn1","Jul $thn1","Agt $thn1","Sep $thn1","Okt $thn1","Nop $thn1","Des $thn1","Total $thn1","Total $thn2");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        
        foreach ($data["rs"]["rows"] as $val){
            $row++;
            $val  = json_decode(json_encode($val));
            $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_neraca);
            $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
            $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
            $sheet->setCellValueByColumnAndRow(3, $row, $val->level_spasi);
            $sheet->setCellValueByColumnAndRow(4, $row, $val->m1);
            $sheet->setCellValueByColumnAndRow(5, $row, $val->m2);
            $sheet->setCellValueByColumnAndRow(6, $row, $val->m3);
            $sheet->setCellValueByColumnAndRow(7, $row, $val->m4);
            $sheet->setCellValueByColumnAndRow(8, $row, $val->m5);
            $sheet->setCellValueByColumnAndRow(9, $row, $val->m6);
            $sheet->setCellValueByColumnAndRow(10, $row, $val->m7);
            $sheet->setCellValueByColumnAndRow(11, $row, $val->m8);
            $sheet->setCellValueByColumnAndRow(12, $row, $val->m9);
            $sheet->setCellValueByColumnAndRow(13, $row, $val->m10);
            $sheet->setCellValueByColumnAndRow(14, $row, $val->m11);
			$sheet->setCellValueByColumnAndRow(15, $row, $val->m12);

			$sheet->setCellValueByColumnAndRow(16, $row, $val->n1);
            $sheet->setCellValueByColumnAndRow(17, $row, $val->n2);
            $sheet->setCellValueByColumnAndRow(18, $row, $val->n3);
            $sheet->setCellValueByColumnAndRow(19, $row, $val->n4);
            $sheet->setCellValueByColumnAndRow(20, $row, $val->n5);
            $sheet->setCellValueByColumnAndRow(21, $row, $val->n6);
            $sheet->setCellValueByColumnAndRow(22, $row, $val->n7);
            $sheet->setCellValueByColumnAndRow(23, $row, $val->n8);
            $sheet->setCellValueByColumnAndRow(24, $row, $val->n9);
            $sheet->setCellValueByColumnAndRow(25, $row, $val->n10);
            $sheet->setCellValueByColumnAndRow(26, $row, $val->n11);
			$sheet->setCellValueByColumnAndRow(27, $row, $val->n12);
			$sheet->setCellValueByColumnAndRow(28, $row, $val->nt);
			$sheet->setCellValueByColumnAndRow(29, $row, $val->mt);
			

            $listAkun = $akun->get($val->kode_neraca);
            $level = $val->level_spasi;
            foreach ($listAkun as $item){
                $row++;
                $val  = json_decode(json_encode($item));
                $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_akun);
                $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
                $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
                $sheet->setCellValueByColumnAndRow(3, $row, $level + 1);
                $sheet->setCellValueByColumnAndRow(4, $row, $val->m1);
				$sheet->setCellValueByColumnAndRow(5, $row, $val->m2);
				$sheet->setCellValueByColumnAndRow(6, $row, $val->m3);
				$sheet->setCellValueByColumnAndRow(7, $row, $val->m4);
				$sheet->setCellValueByColumnAndRow(8, $row, $val->m5);
				$sheet->setCellValueByColumnAndRow(9, $row, $val->m6);
				$sheet->setCellValueByColumnAndRow(10, $row, $val->m7);
				$sheet->setCellValueByColumnAndRow(11, $row, $val->m8);
				$sheet->setCellValueByColumnAndRow(12, $row, $val->m9);
				$sheet->setCellValueByColumnAndRow(13, $row, $val->m10);
				$sheet->setCellValueByColumnAndRow(14, $row, $val->m11);
				$sheet->setCellValueByColumnAndRow(15, $row, $val->m12);

				$sheet->setCellValueByColumnAndRow(16, $row, $val->n1);
				$sheet->setCellValueByColumnAndRow(17, $row, $val->n2);
				$sheet->setCellValueByColumnAndRow(18, $row, $val->n3);
				$sheet->setCellValueByColumnAndRow(19, $row, $val->n4);
				$sheet->setCellValueByColumnAndRow(20, $row, $val->n5);
				$sheet->setCellValueByColumnAndRow(21, $row, $val->n6);
				$sheet->setCellValueByColumnAndRow(22, $row, $val->n7);
				$sheet->setCellValueByColumnAndRow(23, $row, $val->n8);
				$sheet->setCellValueByColumnAndRow(24, $row, $val->n9);
				$sheet->setCellValueByColumnAndRow(25, $row, $val->n10);
				$sheet->setCellValueByColumnAndRow(26, $row, $val->n11);
				$sheet->setCellValueByColumnAndRow(27, $row, $val->n12);
				$sheet->setCellValueByColumnAndRow(28, $row, $val->nt);
				$sheet->setCellValueByColumnAndRow(29, $row, $val->mt);
            }
            
        }
 
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/CFU_monhtly_$namafile.xlsx");
	
 
		return "/tmp/CFU_monhtly_$namafile.xlsx";
	}
	//---------------------- MONTHLY ACTUAL COMP CODE
	function getDataMonthlyActualEXSUMCFUAP($induk, $model, $periode, $tipe, $pembagi = 1000000000){
        try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->lokasi;
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
                
        
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
            }
            
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not a.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
                $jenis = " and a.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and a.jenis in ('TB','RL','IJ') and a.kode_cfu = case when a.kode_cfu2='-' then a.kode_cfu else a.kode_cfu2 end ";//,'AD'
				$filterBudget = " and not a.kode_cfu in ('CFUE') ";
            }else {
                $jenis = "  ";
				$filterBudget = "  ";
            }       
           
			$rs =  $db->execute("select ba_consol from bpc_lokasi where kode_lokasi = '$induk' ");
			if ($row = $rs->FetchNextObject(false)){
				$ba_consol = $row->ba_consol;
			}else {
				$rs =  $db->execute("select ba_consol from bpc_lokasi where kode_lokasi = '$this->lokasi' ");
				if ($row = $rs->FetchNextObject(false)){
					$ba_consol = $row->ba_consol;
				}
			}
			$rs = $db->execute("select ba_consol from bpc_lokasi start with cocd = '$induk' connect by kode_induk = prior kode_lokasi ");
			$filterCFU = "";
			if ($induk != "9000"){
				if ($induk == "97"){
					$jenis = " and a.jenis in ('RL')";
				}else if ($induk == "96"){
					$jenis = " and a.jenis in ('IJ')";
				}else if ($induk == "98"){
					$jenis = " and a.jenis in ('AD')";
				}else {
					while ($row =$rs->FetchNextObject(false)){
						if ($filterCFU != "") $filterCFU .= " or ";
						$filterCFU .= " a.kode_ubis like '__" . trim($row->ba_consol) ."%' ";
					}
				}
			}
			if ($filterCFU != "")
			{
				$filterCFU = " and ($filterCFU)";
			}
			$filterCFU2 = $filterCFU;
			//$ba_consol = trim($ba_consol);

            //$filterCFU = " and a.kode_ubis like '__$ba_consol%' ";
			//$filterCFU2 = " and a.kode_ubis like '__$ba_consol%' ";
			//inner join bpc_cfu z on a.kode_cfu = substr(z.kode_cfu, 0, length(a.kode_cfu) ) $filterCons


            $sql2 = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
                                                        , (nvl(c.n1,0)) as n1
														, (nvl(c.n2,0)) as n2
														, (nvl(c.n3,0)) as n3
														, (nvl(c.n4,0)) as n4
														, (nvl(c.n5,0)) as n5
														, (nvl(c.n6,0)) as n6
														, (nvl(c.n7,0)) as n7
														, (nvl(c.n8,0)) as n8
														, (nvl(c.n9,0)) as n9
														, (nvl(c.n10,0)) as n10
														, (nvl(c.n11,0)) as n11
														, (nvl(c.n12,0)) as n12
														, (nvl(c.nt,0)) as nt	
														, (nvl(e.n1,0)) as m1
														, (nvl(e.n2,0)) as m2
														, (nvl(e.n3,0)) as m3
														, (nvl(e.n4,0)) as m4
														, (nvl(e.n5,0)) as m5
														, (nvl(e.n6,0)) as m6
														, (nvl(e.n7,0)) as m7
														, (nvl(e.n8,0)) as m8
														, (nvl(e.n9,0)) as m9
														, (nvl(e.n10,0)) as m10
														, (nvl(e.n11,0)) as m11
														, (nvl(e.n12,0)) as m12
														, (nvl(e.nt,0)) as mt
                                                from bpc_neraca a
                                                left outer join (select x.kode_neraca
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '01' then a.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '02' then a.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(a.periode,5,2) = '03' then a.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '04' then a.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(a.periode,5,2) = '05' then a.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '06' then a.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(a.periode,5,2) = '07' then a.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '08' then a.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(a.periode,5,2) = '09' then a.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '10' then a.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(a.periode,5,2) = '11' then a.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '12' then a.nilai else 0 end,0)) as n12
																			, sum(nvl(a.nilai,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_neraca
                                                                ) c on c.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca
												 						 , sum(nvl(case when substr(a.periode,5,2) = '01' then a.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '02' then a.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(a.periode,5,2) = '03' then a.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '04' then a.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(a.periode,5,2) = '05' then a.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '06' then a.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(a.periode,5,2) = '07' then a.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '08' then a.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(a.periode,5,2) = '09' then a.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '10' then a.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(a.periode,5,2) = '11' then a.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '12' then a.nilai else 0 end,0)) as n12
																			, sum(nvl(a.nilai,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn2."%'  $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_neraca
                                                                ) e on e.kode_neraca = a.kode_neraca
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                           union
                                            select distinct 'UNMAPPED', 'UNMAPPED' as nama, '-' as tipe, 'PENDAPATAN' as jenis_akun, '-' as sum_header, 0 as level_spasi, '00' as kode_induk, 1000 as rowindex
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_masakun a
                                                left outer join exs_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '01' then a.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '02' then a.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(a.periode,5,2) = '03' then a.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '04' then a.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(a.periode,5,2) = '05' then a.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '06' then a.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(a.periode,5,2) = '07' then a.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '08' then a.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(a.periode,5,2) = '09' then a.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '10' then a.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(a.periode,5,2) = '11' then a.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '12' then a.nilai else 0 end,0)) as n12
																			, sum(nvl(a.nilai,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun 
																			, sum(nvl(case when substr(a.periode,5,2) = '01' then a.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '02' then a.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(a.periode,5,2) = '03' then a.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '04' then a.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(a.periode,5,2) = '05' then a.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '06' then a.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(a.periode,5,2) = '07' then a.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '08' then a.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(a.periode,5,2) = '09' then a.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '10' then a.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(a.periode,5,2) = '11' then a.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '12' then a.nilai else 0 end,0)) as n12
																			, sum(nvl(a.nilai,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn2."%'  $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(a.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.nt,0) <> 0 or nvl(e.nt,0) <> 0)
                                             order by  rowindex";
           	//error_log("TrendMonthly AP $sql2 ");
            $rs = $db->execute($sql2);
               
            $node = "";
            $rootNode = new server_util_NodeNRC("00");
            $this->sumHeader = new server_util_Map();
            while ($row = $rs->FetchNextObject(false)){
                if (strtoupper($row->jenis_akun) == "PENDAPATAN")
                    $row->jenis = 'INC';
                else $row->jenis = 'EXP';
                if ($node == ""){
                    $node = new server_util_NodeNRC($rootNode);
                }else if ($node->level == floatval($row->level_spasi) - 1 ){
                    $node = new server_util_NodeNRC($node);
                }else if ($node->level == floatval($row->level_spasi) ){
                    $node = new server_util_NodeNRC($node->owner);
                }else if ($node->level > floatval($row->level_spasi) ){
                    while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
                        $node = $node->owner;
                    }
                    $node = new server_util_NodeNRC($node->owner);
                }
                $node->setData($row);
                if ($row->tipe == "SUMMARY")
                    $this->sumHeader->set($row->kode_neraca, $node);

            }
            //error_log($this->sumHeader->getLength());
            foreach ($rootNode->childs as $key => $val){
                $this->summariesMonthly($val);
                if ($val->data->sum_header != "-"){
                    $summaryHeader = explode(",",$val->data->sum_header);

                    foreach ($summaryHeader as $header){
                        $nodeHeader = $this->sumHeader->get($header);
                        if ($nodeHeader){
                            $nodeHeader->data->n1 += $val->data->n1;
                            $nodeHeader->data->n2 += $val->data->n2;
                            $nodeHeader->data->n3 += $val->data->n3;
                            $nodeHeader->data->n4 += $val->data->n4;
                            $nodeHeader->data->n5 += $val->data->n5;
                            $nodeHeader->data->n6 += $val->data->n6;
                            $nodeHeader->data->n7 += $val->data->n7;
							$nodeHeader->data->n8 += $val->data->n8;
                            $nodeHeader->data->n9 += $val->data->n9;
                            $nodeHeader->data->n10 += $val->data->n10;
                            $nodeHeader->data->n11 += $val->data->n11;
                            $nodeHeader->data->n12 += $val->data->n12;
                            $nodeHeader->data->nt += $val->data->nt;
							$nodeHeader->data->m1 += $val->data->m1;
                            $nodeHeader->data->m2 += $val->data->m2;
                            $nodeHeader->data->m3 += $val->data->m3;
                            $nodeHeader->data->m4 += $val->data->m4;
                            $nodeHeader->data->m5 += $val->data->m5;
                            $nodeHeader->data->m6 += $val->data->m6;
                            $nodeHeader->data->m7 += $val->data->m7;
							$nodeHeader->data->m8 += $val->data->m8;
                            $nodeHeader->data->m9 += $val->data->m9;
                            $nodeHeader->data->m10 += $val->data->m10;
                            $nodeHeader->data->m11 += $val->data->m11;
                            $nodeHeader->data->m12 += $val->data->m12;
                            $nodeHeader->data->mt += $val->data->mt;
                            
                        }
                    }
                }
            }
            $this->pembagi = $pembagi;
            //perlu hitung ke summary
            $result = array('rs' => array('rows' => array() ) );
            $this->generateResultMonthly($rootNode, $result, $neraca);
            return ($result);    
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
	function getDataMonthlyActualEXSUMCFUDetailAP($induk, $model, $periode,$neraca, $tipe, $pembagi = 1000000000){
        
        try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->cfu;
            if (!isset($pembagi)) $pembagi = 1000000000;
			$this->pembagi = $pembagi;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);

            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
            }
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
                $jenis = " and t.jenis in ('TB')";
                $filterBudget = " and  not a.kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
                $filterBudget = " and not a.kode_cfu in ('CFUE')";
            }else {
                $jenis = "  ";
                $filterBudget = " ";
            }
                    
            $rs =  $db->execute("select ba_consol from bpc_lokasi where kode_lokasi = '$induk' ");
			if ($row = $rs->FetchNextObject(false)){
				$ba_consol = $row->ba_consol;
			}else {
				$rs =  $db->execute("select ba_consol from bpc_lokasi where kode_lokasi = '$this->lokasi' ");
				if ($row = $rs->FetchNextObject(false)){
					$ba_consol = $row->ba_consol;
				}
			}
			$rs = $this->dbLib->execute("select ba_consol from bpc_lokasi start with cocd = '$induk' connect by kode_induk = prior kode_lokasi ");
			$filterCFU = "";
			if ($induk != "9000"){
				if ($induk == "97"){
					$jenis = " and t.jenis in ('RL')";
				}else if ($induk == "96"){
					$jenis = " and t.jenis in ('IJ')";
				}else if ($induk == "98"){
					$jenis = " and t.jenis in ('AD')";
				}else {
					while ($row =$rs->FetchNextObject(false)){
						if ($filterCFU != "") $filterCFU .= " or ";
						$filterCFU .= " t.kode_ubis like '__" . trim($row->ba_consol) ."%' ";
					}
				}
			}
			if ($filterCFU != "")
			{
				$filterCFU = " and ($filterCFU)";
			}
			$filterCFU2 = $filterCFU;
			$ba_consol = trim($ba_consol);
            //$filterCFU = " and a.kode_ubis like '__$ba_consol%' ";
			//$filterCFU2 = " and a.kode_ubis like '__$ba_consol%' ";
			//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu)) $addFilter 
            $sql2 = "select distinct a.kode_neraca, y.kode_akun, concat(y.kode_akun,'-', y.nama) as nama, a.jenis_akun
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as n12
																			, sum(nvl(t.nilai,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like  '$thn1%' $jenis
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun
												 							, sum(nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as n12
																			, sum(nvl(t.nilai,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn2."%'   $jenis 
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$neraca'
                                            and ( nvl(e.nt,0) <> 0 or  nvl(c.n1,0) <> 0 or nvl(c.n2,0) <> 0  or nvl(c.n3,0) <> 0 or nvl(c.n4,0) <> 0 or nvl(c.n5,0) <> 0  or nvl(c.n6,0) <> 0 
											or nvl(c.n7,0) <> 0  or nvl(c.n8,0) <> 0 or nvl(c.n9,0) <> 0 or nvl(c.n10,0) <> 0  or nvl(c.n11,0) <> 0 or nvl(c.n12,0) <> 0 )
											group by a.kode_neraca, y.kode_akun, y.nama, a.jenis_akun
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, concat(a.kode_akun,'-', a.nama) as nama, a.jenis as jenis_akun
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_masakun a
                                                left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as n12
																			, sum(nvl(t.nilai,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun
												 							, sum(nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as n12
																			, sum(nvl(t.nilai,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn2."%'  $jenis 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null and 'UNMAPPED' = '$neraca'
                                            and (nvl(e.nt,0) <> 0 or nvl(c.n1,0) <> 0 or nvl(c.n2,0) <> 0  or nvl(c.n3,0) <> 0 or nvl(c.n4,0) <> 0 or nvl(c.n5,0) <> 0  or nvl(c.n6,0) <> 0 
											or nvl(c.n7,0) <> 0  or nvl(c.n8,0) <> 0 or nvl(c.n9,0) <> 0 or nvl(c.n10,0) <> 0  or nvl(c.n11,0) <> 0 or nvl(c.n12,0) <> 0 )
											group by a.kode_akun,a.nama, a.jenis
                                            order by kode_neraca, kode_akun";
            
											$time = "[". date("d-m-Y H:i:s")."]";
											global $serverDir;
											// error_log($time . " ". $sql2 . "\r\n",3,"$serverDir/tmp/bpc_error.log");
            $rs = $db->execute($sql2);
            $result = array("rs"=>array("rows" => array()));        
            
            while ($row = $rs->FetchNextObject(false)){
                if ($row->jenis_akun == "PENDAPATAN"){
					$row->n1 = ($row->n1) * -1;
					$row->n2 = ($row->n2) * -1;
					$row->n3 = ($row->n3) * -1;
					$row->n4 = ($row->n4) * -1;
					$row->n5 = ($row->n5) * -1;
					$row->n6 = ($row->n6) * -1;
					$row->n7 = ($row->n7) * -1;
					$row->n8 = ($row->n8) * -1;
					$row->n9 = ($row->n9) * -1;
					$row->n10 = ($row->n10) * -1;
					$row->n11 = ($row->n11) * -1;
					$row->n12 = ($row->n12) * -1;
					$row->nt = ($row->nt) * -1;
					$row->m1 = ($row->m1) * -1;
					$row->m2 = ($row->m2) * -1;
					$row->m3 = ($row->m3) * -1;
					$row->m4 = ($row->m4) * -1;
					$row->m5 = ($row->m5) * -1;
					$row->m6 = ($row->m6) * -1;
					$row->m7 = ($row->m7) * -1;
					$row->m8 = ($row->m8) * -1;
					$row->m9 = ($row->m9) * -1;
					$row->m10 = ($row->m10) * -1;
					$row->m11 = ($row->m11) * -1;
					$row->m12 = ($row->m12) * -1;
					$row->mt = ($row->mt) * -1;
					$row->jenis = 'INC';
				}else {
					$row->jenis = 'EXP';

				}

				$row->n1 = round($row->n1 / $this->pembagi);
				$row->n2 = round($row->n2/ $this->pembagi);
				$row->n3 = round($row->n3/ $this->pembagi);
				$row->n4 = round($row->n4/ $this->pembagi);
				$row->n5 = round($row->n5/ $this->pembagi);
				$row->n6 = round($row->n6/ $this->pembagi);
				$row->n7 = round($row->n7/ $this->pembagi);
				$row->n8 = round($row->n8/ $this->pembagi);
				$row->n9 = round($row->n9/ $this->pembagi);
				$row->n10 = round($row->n10/ $this->pembagi);
				$row->n11 = round($row->n11/ $this->pembagi);
				$row->n12 = round($row->n12/ $this->pembagi);
				$row->nt = round($row->nt/ $this->pembagi);
				$row->m1 = round($row->m1/ $this->pembagi);
				$row->m2 = round($row->m2/ $this->pembagi);
				$row->m3 = round($row->m3/ $this->pembagi);
				$row->m4 = round($row->m4/ $this->pembagi);
				$row->m5 = round($row->m5/ $this->pembagi);
				$row->m6 = round($row->m6/ $this->pembagi);
				$row->m7 = round($row->m7/ $this->pembagi);
				$row->m8 = round($row->m8/ $this->pembagi);
				$row->m9 = round($row->m9/ $this->pembagi);
				$row->m10 = round($row->m10/ $this->pembagi);
				$row->m11 = round($row->m11/ $this->pembagi);
				$row->m12 = round($row->m12/ $this->pembagi);
				$row->mt = round($row->mt/ $this->pembagi);
                $result["rs"]["rows"][] =(array) $row;
                
            }
            return $result;
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
	function getDataMonthlyActualEXSUMCFUAkunAP($induk, $model, $periode, $tipe, $pembagi = 1000000000){
        try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->cfu;
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
            
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
            }
            
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
                $jenis = " and t.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
                $filterBudget = " and not a.kode_cfu in ('CFUE') ";
            }else {
                $jenis = "  ";
                $filterBudget = "  ";
            }
                    
            $rs =  $db->execute("select ba_consol from bpc_lokasi where kode_lokasi = '$induk' ");
			if ($row = $rs->FetchNextObject(false)){
				$ba_consol = $row->ba_consol;
			}else {
				$rs =  $db->execute("select ba_consol from bpc_lokasi where kode_lokasi = '$this->lokasi' ");
				if ($row = $rs->FetchNextObject(false)){
					$ba_consol = $row->ba_consol;
				}
			}
			$ba_consol = trim($ba_consol);
			$rs = $this->dbLib->execute("select ba_consol from bpc_lokasi start with cocd = '$induk' connect by kode_induk = prior kode_lokasi ");
			$filterCFU = "";
			if ($induk != "9000"){
				if ($induk == "97"){
					$jenis = " and t.jenis in ('RL')";
				}else if ($induk == "96"){
					$jenis = " and t.jenis in ('IJ')";
				}else if ($induk == "98"){
					$jenis = " and t.jenis in ('AD')";
				}else {
					while ($row =$rs->FetchNextObject(false)){
						if ($filterCFU != "") $filterCFU .= " or ";
						$filterCFU .= " t.kode_ubis like '__" . trim($row->ba_consol) ."%' ";
					}
				}
			}
			if ($filterCFU != "")
			{
				$filterCFU = " and ($filterCFU)";
			}
			$filterCFU2 = $filterCFU;
            //$filterCFU = " and a.kode_ubis like '__$ba_consol%' ";
			//$filterCFU2 = " and a.kode_ubis like '__$ba_consol%' ";

			//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu)) $addFilter
            $sql2 = "select distinct a.kode_neraca, y.kode_akun, y.nama, a.jenis_akun as jenis_akun 
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as n12
																			, sum(nvl(t.nilai,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun
												 							, sum(nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as n12
																			, sum(nvl(t.nilai,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn2."%'  $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                            and (nvl(e.nt,0) <> 0 or  nvl(c.n1,0) <> 0 or nvl(c.n2,0) <> 0  or nvl(c.n3,0) <> 0 or nvl(c.n4,0) <> 0 or nvl(c.n5,0) <> 0  or nvl(c.n6,0) <> 0 
											or nvl(c.n7,0) <> 0  or nvl(c.n8,0) <> 0 or nvl(c.n9,0) <> 0 or nvl(c.n10,0) <> 0  or nvl(c.n11,0) <> 0 or nvl(c.n12,0) <> 0)
											group by a.kode_neraca, y.kode_akun, y.nama, a.jenis_akun
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, a.nama , a.jenis as jenis_akun
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_masakun a
                                                left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                               left outer join (select x.kode_akun
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as n12
																			, sum(nvl(t.nilai,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun
												 							, sum(nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as n12
																			, sum(nvl(t.nilai,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn2."%'  $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
											and (nvl(e.nt,0) <> 0 or  nvl(c.n1,0) <> 0 or nvl(c.n2,0) <> 0  or nvl(c.n3,0) <> 0 or nvl(c.n4,0) <> 0 or nvl(c.n5,0) <> 0  or nvl(c.n6,0) <> 0 
											or nvl(c.n7,0) <> 0  or nvl(c.n8,0) <> 0 or nvl(c.n9,0) <> 0 or nvl(c.n10,0) <> 0  or nvl(c.n11,0) <> 0 or nvl(c.n12,0) <> 0)
											group by a.kode_akun, a.nama , a.jenis
                                            order by kode_neraca, kode_akun";
            
            //error_log("getDataEXSUMCFU2 => $sql2 ");
			$rs = $db->execute($sql2);
            $result = new server_util_Map();        
            $neraca = "";
            while ($row = $rs->FetchNextObject(false)){
				 if ($row->jenis_akun == "PENDAPATAN"){
					$row->n1 = ($row->n1) * -1;
					$row->n2 = ($row->n2) * -1;
					$row->n3 = ($row->n3) * -1;
					$row->n4 = ($row->n4) * -1;
					$row->n5 = ($row->n5) * -1;
					$row->n6 = ($row->n6) * -1;
					$row->n7 = ($row->n7) * -1;
					$row->n8 = ($row->n8) * -1;
					$row->n9 = ($row->n9) * -1;
					$row->n10 = ($row->n10) * -1;
					$row->n11 = ($row->n11) * -1;
					$row->n12 = ($row->n12) * -1;
					$row->nt = ($row->nt) * -1;
					$row->m1 = ($row->m1) * -1;
					$row->m2 = ($row->m2) * -1;
					$row->m3 = ($row->m3) * -1;
					$row->m4 = ($row->m4) * -1;
					$row->m5 = ($row->m5) * -1;
					$row->m6 = ($row->m6) * -1;
					$row->m7 = ($row->m7) * -1;
					$row->m8 = ($row->m8) * -1;
					$row->m9 = ($row->m9) * -1;
					$row->m10 = ($row->m10) * -1;
					$row->m11 = ($row->m11) * -1;
					$row->m12 = ($row->m12) * -1;
					$row->mt = ($row->mt) * -1;
					$row->jenis = "INC";
				}else {
					$row->jenis = "EXP";

				}

				$row->n1 = round($row->n1 / $this->pembagi);
				$row->n2 = round($row->n2/ $this->pembagi);
				$row->n3 = round($row->n3/ $this->pembagi);
				$row->n4 = round($row->n4/ $this->pembagi);
				$row->n5 = round($row->n5/ $this->pembagi);
				$row->n6 = round($row->n6/ $this->pembagi);
				$row->n7 = round($row->n7/ $this->pembagi);
				$row->n8 = round($row->n8/ $this->pembagi);
				$row->n9 = round($row->n9/ $this->pembagi);
				$row->n10 = round($row->n10/ $this->pembagi);
				$row->n11 = round($row->n11/ $this->pembagi);
				$row->n12 = round($row->n12/ $this->pembagi);
				$row->nt = round($row->nt/ $this->pembagi);
				$row->m1 = round($row->m1/ $this->pembagi);
				$row->m2 = round($row->m2/ $this->pembagi);
				$row->m3 = round($row->m3/ $this->pembagi);
				$row->m4 = round($row->m4/ $this->pembagi);
				$row->m5 = round($row->m5/ $this->pembagi);
				$row->m6 = round($row->m6/ $this->pembagi);
				$row->m7 = round($row->m7/ $this->pembagi);
				$row->m8 = round($row->m8/ $this->pembagi);
				$row->m9 = round($row->m9/ $this->pembagi);
				$row->m10 = round($row->m10/ $this->pembagi);
				$row->m11 = round($row->m11/ $this->pembagi);
				$row->m12 = round($row->m12/ $this->pembagi);
				$row->mt = round($row->mt/ $this->pembagi);

                if ($neraca != $row->kode_neraca){
                    $neraca = $row->kode_neraca;
                    $item = array();
                }
				
                $item[] = $row;
                $result->set($neraca, $item);
                
            }
            return $result;
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
    function downloadMonthlyActualDataCFUAP($induk, $model, $periode, $tipe, $pembagi){
		$this->getDb();
		
		
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 
        $data = $this->getDataMonthlyActualEXSUMCFUAP($induk, $model, $periode, $tipe, $pembagi);					
		$akun = $this->getDataMonthlyActualEXSUMCFUAkunAP($induk, $model,$periode, $tipe, $pembagi);
			
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$thn1 = floatval( substr( $periode, 2,2) ) ;
		$thn2 = $thn1 - 1;
		$column = array("Account","Uraian","Tipe","Level","Jan $thn2","Feb $thn2","Mar $thn2","Apr $thn2","Mei $thn2","Jun $thn2","Jul $thn2","Agt $thn2","Sep $thn2","Okt $thn2","Nop $thn2","Des $thn2","Jan $thn1","Feb $thn1","Mar $thn1","Apr $thn1","Mei $thn1","Jun $thn1","Jul $thn1","Agt $thn1","Sep $thn1","Okt $thn1","Nop $thn1","Des $thn1","Total $thn1","Total $thn2");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        
        foreach ($data["rs"]["rows"] as $val){
            $row++;
            $val  = json_decode(json_encode($val));
            $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_neraca);
            $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
            $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
            $sheet->setCellValueByColumnAndRow(3, $row, $val->level_spasi);
            $sheet->setCellValueByColumnAndRow(4, $row, $val->m1);
            $sheet->setCellValueByColumnAndRow(5, $row, $val->m2);
            $sheet->setCellValueByColumnAndRow(6, $row, $val->m3);
            $sheet->setCellValueByColumnAndRow(7, $row, $val->m4);
            $sheet->setCellValueByColumnAndRow(8, $row, $val->m5);
            $sheet->setCellValueByColumnAndRow(9, $row, $val->m6);
            $sheet->setCellValueByColumnAndRow(10, $row, $val->m7);
            $sheet->setCellValueByColumnAndRow(11, $row, $val->m8);
            $sheet->setCellValueByColumnAndRow(12, $row, $val->m9);
            $sheet->setCellValueByColumnAndRow(13, $row, $val->m10);
            $sheet->setCellValueByColumnAndRow(14, $row, $val->m11);
			$sheet->setCellValueByColumnAndRow(15, $row, $val->m12);

			$sheet->setCellValueByColumnAndRow(16, $row, $val->n1);
            $sheet->setCellValueByColumnAndRow(17, $row, $val->n2);
            $sheet->setCellValueByColumnAndRow(18, $row, $val->n3);
            $sheet->setCellValueByColumnAndRow(19, $row, $val->n4);
            $sheet->setCellValueByColumnAndRow(20, $row, $val->n5);
            $sheet->setCellValueByColumnAndRow(21, $row, $val->n6);
            $sheet->setCellValueByColumnAndRow(22, $row, $val->n7);
            $sheet->setCellValueByColumnAndRow(23, $row, $val->n8);
            $sheet->setCellValueByColumnAndRow(24, $row, $val->n9);
            $sheet->setCellValueByColumnAndRow(25, $row, $val->n10);
            $sheet->setCellValueByColumnAndRow(26, $row, $val->n11);
			$sheet->setCellValueByColumnAndRow(27, $row, $val->n12);
			$sheet->setCellValueByColumnAndRow(28, $row, $val->nt);
			$sheet->setCellValueByColumnAndRow(29, $row, $val->mt);
			

            $listAkun = $akun->get($val->kode_neraca);
            $level = $val->level_spasi;
            foreach ($listAkun as $item){
                $row++;
                $val  = json_decode(json_encode($item));
                $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_akun);
                $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
                $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
                $sheet->setCellValueByColumnAndRow(3, $row, $level + 1);
                $sheet->setCellValueByColumnAndRow(4, $row, $val->m1);
				$sheet->setCellValueByColumnAndRow(5, $row, $val->m2);
				$sheet->setCellValueByColumnAndRow(6, $row, $val->m3);
				$sheet->setCellValueByColumnAndRow(7, $row, $val->m4);
				$sheet->setCellValueByColumnAndRow(8, $row, $val->m5);
				$sheet->setCellValueByColumnAndRow(9, $row, $val->m6);
				$sheet->setCellValueByColumnAndRow(10, $row, $val->m7);
				$sheet->setCellValueByColumnAndRow(11, $row, $val->m8);
				$sheet->setCellValueByColumnAndRow(12, $row, $val->m9);
				$sheet->setCellValueByColumnAndRow(13, $row, $val->m10);
				$sheet->setCellValueByColumnAndRow(14, $row, $val->m11);
				$sheet->setCellValueByColumnAndRow(15, $row, $val->m12);

				$sheet->setCellValueByColumnAndRow(16, $row, $val->n1);
				$sheet->setCellValueByColumnAndRow(17, $row, $val->n2);
				$sheet->setCellValueByColumnAndRow(18, $row, $val->n3);
				$sheet->setCellValueByColumnAndRow(19, $row, $val->n4);
				$sheet->setCellValueByColumnAndRow(20, $row, $val->n5);
				$sheet->setCellValueByColumnAndRow(21, $row, $val->n6);
				$sheet->setCellValueByColumnAndRow(22, $row, $val->n7);
				$sheet->setCellValueByColumnAndRow(23, $row, $val->n8);
				$sheet->setCellValueByColumnAndRow(24, $row, $val->n9);
				$sheet->setCellValueByColumnAndRow(25, $row, $val->n10);
				$sheet->setCellValueByColumnAndRow(26, $row, $val->n11);
				$sheet->setCellValueByColumnAndRow(27, $row, $val->n12);
				$sheet->setCellValueByColumnAndRow(28, $row, $val->nt);
				$sheet->setCellValueByColumnAndRow(29, $row, $val->mt);
            }
            
        }
 
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/CFU_monhtly_$namafile.xlsx");
	
 
		return "/CFU_monhtly_$namafile.xlsx";
	}
	function saveExsumTrendCFUAPToSummary($induk, $model, $periode, $tipe, $pembagi){
		$this->getDb();
		$pembagi = 1;
		
		if (!isset($induk) || $induk == "") $induk = $this->lokasi;//
		$this->cleanUp();
		$data = $this->getDataMonthlyActualEXSUMCFUAP($induk, $model, $periode, $tipe, $pembagi);					
		$dataAkun = $this->getDataMonthlyActualEXSUMCFUAkunAP($induk, $model,$periode, $tipe, $pembagi);

		$rsUbis = $this->dbLib->execute("select kode_lokasi, nama, cocd, ba_consol  from bpc_lokasi where kode_lokasi = '$induk' ");
		if ($row = $rsUbis->FetchNextObject(false)){
			$rowCocd = $row;
		}
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_summary_trend where periode = '$periode' and kode_fs = '$model' and kode_lokasi = '$induk' and kode_cfu = '-' and status_nilai = '$tipe' ");
		$sql->add("delete from bpc_summary_trend_d where periode = '$periode' and kode_fs = '$model' and kode_lokasi = '$induk' and kode_cfu = '-'  and status_nilai = '$tipe' ");
		foreach ($data["rs"]["rows"] as $val){
			$row = json_decode(json_encode($val));
			$sql->add(new server_util_Map(array(
					"tipe" => "param",
					"sql" => "insert into bpc_summary_trend(
								kode_lokasi, kode_ubis_cons, kode_cfu, kode_neraca, nama,  tipe, jenis_akun, sum_header, level_spasi, kode_induk, rowindex, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13,  periode,  kode_fs,  status_nilai)
								values(:0, :1, :2, :3, :4, :5, :6,:7,:8,:9,:10,:11,:12,:13,:14, :15, :16, :17, :18, :19, :20,:21,:22,:23,:24,:25, :26, :27, :28, :29, :30, :31,:32,:33,:34,:35,:36,:37,:38,:39)",
					"value" => array($rowCocd->cocd, $rowCocd->ba_consol, '-', $row->kode_neraca,  str_replace("&nbsp;"," ",$row->nama), $row->tipe, $row->jenis_akun, $row->sum_header,
										$row->level_spasi, $row->kode_induk, $row->rowindex, $row->n1, $row->n2, $row->n3, $row->n4, $row->n5, $row->n6, $row->n7, $row->n8, $row->n9, $row->n10, $row->n11, $row->n12, $row->n13,
										$row->m1, $row->m2, $row->m3, $row->m4, $row->m5, $row->m6, $row->m7, $row->m8, $row->m9, $row->m10, $row->m11, $row->m12, $row->m13,  $periode, $model, $tipe )
				)));
			$akun = $dataAkun->get($row->kode_neraca);
			if ($akun) {
				foreach ($akun as $val){
					$row = json_decode(json_encode($val));
					$sql->add(new server_util_Map(array(
								"tipe" => "param",
								"sql" => "insert into bpc_summary_trend_d(
											kode_lokasi, kode_ubis_cons, kode_cfu, kode_akun, nama,  tipe, jenis_akun, sum_header, level_spasi, kode_neraca, rowindex,  n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, periode, kode_fs,  status_nilai)
											values(:0, :1, :2, :3, :4, :5, :6,:7,:8,:9,:10,:11,:12,:13,:14, :15, :16, :17, :18, :19, :20,:21,:22,:23,:24,:25, :26, :27, :28, :29, :30, :31,:32,:33,:34,:35,:36,:37,:38,:39)",
								"value" => array($rowCocd->cocd, $rowCocd->ba_consol, '-', $row->kode_akun,  str_replace("&nbsp;"," ",$row->nama), $row->tipe, $row->jenis_akun, $row->sum_header,
												$row->level_spasi, $row->kode_neraca, $row->rowindex,   $row->n1, $row->n2, $row->n3, $row->n4, $row->n5, $row->n6, $row->n7, $row->n8, $row->n9, $row->n10, $row->n11, $row->n12, $row->n13,
												$row->m1, $row->m2, $row->m3, $row->m4, $row->m5, $row->m6, $row->m7, $row->m8, $row->m9, $row->m10, $row->m11, $row->m12, $row->m13, $periode,  $model,  $tipe )
							)));
				}
			}
		}
		

		$ret = $this->dbLib->execArraySQL($sql);
		return $ret;

	}
	//---------------------- MONTHLY BUDGET COMP CODE
	function getDataMonthlyBudgetEXSUMCFUAP($induk, $model, $periode, $tipe, $pembagi = 1000000000){
        try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->lokasi;
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
                
        
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
				$lastPeriode2 = (floatval(substr($row->periode,0,4)) - 1)."01" ;
            }
            
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not a.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
                $jenis = " and a.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and a.jenis in ('TB','RL','IJ') and a.kode_cfu = case when a.kode_cfu2='-' then a.kode_cfu else a.kode_cfu2 end ";//,'AD'
				$filterBudget = " and not a.kode_cfu in ('CFUE') ";
            }else {
                $jenis = "  ";
				$filterBudget = "  ";
            }       
           
			$rs =  $db->execute("select ba_consol from bpc_lokasi where kode_lokasi = '$induk' ");
			if ($row = $rs->FetchNextObject(false)){
				$ba_consol = $row->ba_consol;
			}else {
				$rs =  $db->execute("select ba_consol from bpc_lokasi where kode_lokasi = '$this->lokasi' ");
				if ($row = $rs->FetchNextObject(false)){
					$ba_consol = $row->ba_consol;
				}
			}
			$ba_consol = trim($ba_consol);
            $filterCFU = " and a.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '$induk' connect by kode_induk = prior kode_lokasi )";
			$filterCFU2 = " and a.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '$induk' connect by kode_induk = prior kode_lokasi )";

			//inner join bpc_cfu z on a.kode_cfu = substr(z.kode_cfu, 0, length(a.kode_cfu) ) $filterCons
            $sql2 = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
                                                        , (nvl(c.n1,0)) as n1
														, (nvl(c.n2,0)) as n2
														, (nvl(c.n3,0)) as n3
														, (nvl(c.n4,0)) as n4
														, (nvl(c.n5,0)) as n5
														, (nvl(c.n6,0)) as n6
														, (nvl(c.n7,0)) as n7
														, (nvl(c.n8,0)) as n8
														, (nvl(c.n9,0)) as n9
														, (nvl(c.n10,0)) as n10
														, (nvl(c.n11,0)) as n11
														, (nvl(c.n12,0)) as n12
														, (nvl(c.nt,0)) as nt	
														, (nvl(e.n1,0)) as m1
														, (nvl(e.n2,0)) as m2
														, (nvl(e.n3,0)) as m3
														, (nvl(e.n4,0)) as m4
														, (nvl(e.n5,0)) as m5
														, (nvl(e.n6,0)) as m6
														, (nvl(e.n7,0)) as m7
														, (nvl(e.n8,0)) as m8
														, (nvl(e.n9,0)) as m9
														, (nvl(e.n10,0)) as m10
														, (nvl(e.n11,0)) as m11
														, (nvl(e.n12,0)) as m12
														, (nvl(e.nt,0)) as mt
                                                from bpc_neraca a
                                                left outer join (select x.kode_neraca
                                                                            , sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode' 
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_neraca
                                                                ) c on c.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca
												 						 	, sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode2' 
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_neraca
                                                                ) e on e.kode_neraca = a.kode_neraca
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                           union
                                            select distinct 'UNMAPPED', 'UNMAPPED' as nama, '-' as tipe, 'PENDAPATAN' as jenis_akun, '-' as sum_header, 0 as level_spasi, '00' as kode_induk, 1000 as rowindex
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_masakun a
                                                left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode' 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun 
																			, sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode2' 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.nt,0) <> 0 or nvl(e.nt,0) <> 0)
                                             order by  rowindex";
           // error_log($sql2);
            $rs = $db->execute($sql2);
               
            $node = "";
            $rootNode = new server_util_NodeNRC("00");
            $this->sumHeader = new server_util_Map();
            while ($row = $rs->FetchNextObject(false)){
                if (strtoupper($row->jenis_akun) == "PENDAPATAN")
                    $row->jenis = 'INC';
                else $row->jenis = 'EXP';
                if ($node == ""){
                    $node = new server_util_NodeNRC($rootNode);
                }else if ($node->level == floatval($row->level_spasi) - 1 ){
                    $node = new server_util_NodeNRC($node);
                }else if ($node->level == floatval($row->level_spasi) ){
                    $node = new server_util_NodeNRC($node->owner);
                }else if ($node->level > floatval($row->level_spasi) ){
                    while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
                        $node = $node->owner;
                    }
                    $node = new server_util_NodeNRC($node->owner);
                }
                $node->setData($row);
                if ($row->tipe == "SUMMARY")
                    $this->sumHeader->set($row->kode_neraca, $node);

            }
            //error_log($this->sumHeader->getLength());
            foreach ($rootNode->childs as $key => $val){
                $this->summariesMonthly($val);
                if ($val->data->sum_header != "-"){
                    $summaryHeader = explode(",",$val->data->sum_header);

                    foreach ($summaryHeader as $header){
                        $nodeHeader = $this->sumHeader->get($header);
                        if ($nodeHeader){
                            $nodeHeader->data->n1 += $val->data->n1;
                            $nodeHeader->data->n2 += $val->data->n2;
                            $nodeHeader->data->n3 += $val->data->n3;
                            $nodeHeader->data->n4 += $val->data->n4;
                            $nodeHeader->data->n5 += $val->data->n5;
                            $nodeHeader->data->n6 += $val->data->n6;
                            $nodeHeader->data->n7 += $val->data->n7;
							$nodeHeader->data->n8 += $val->data->n8;
                            $nodeHeader->data->n9 += $val->data->n9;
                            $nodeHeader->data->n10 += $val->data->n10;
                            $nodeHeader->data->n11 += $val->data->n11;
                            $nodeHeader->data->n12 += $val->data->n12;
                            $nodeHeader->data->nt += $val->data->nt;
							$nodeHeader->data->m1 += $val->data->m1;
                            $nodeHeader->data->m2 += $val->data->m2;
                            $nodeHeader->data->m3 += $val->data->m3;
                            $nodeHeader->data->m4 += $val->data->m4;
                            $nodeHeader->data->m5 += $val->data->m5;
                            $nodeHeader->data->m6 += $val->data->m6;
                            $nodeHeader->data->m7 += $val->data->m7;
							$nodeHeader->data->m8 += $val->data->m8;
                            $nodeHeader->data->m9 += $val->data->m9;
                            $nodeHeader->data->m10 += $val->data->m10;
                            $nodeHeader->data->m11 += $val->data->m11;
                            $nodeHeader->data->m12 += $val->data->m12;
                            $nodeHeader->data->mt += $val->data->mt;
                            
                        }
                    }
                }
            }
            $this->pembagi = $pembagi;
            //perlu hitung ke summary
            $result = array('rs' => array('rows' => array() ) );
            $this->generateResultMonthly($rootNode, $result, $neraca);
            return ($result);    
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
	function getDataMonthlyBudgetEXSUMCFUDetailAP($induk, $model, $periode,$neraca, $tipe, $pembagi = 1000000000){
        
        try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->lokasi;
            if (!isset($pembagi)) $pembagi = 1000000000;
			$this->pembagi = $pembagi;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);

            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
				$lastPeriode2 = (floatval(substr($row->periode,0,4)) - 1)."01" ;
            }
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
                $jenis = " and t.jenis in ('TB')";
                $filterBudget = " and  not a.kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
                $filterBudget = " and not a.kode_cfu in ('CFUE')";
            }else {
                $jenis = "  ";
                $filterBudget = " ";
            }
                    
            $rs =  $db->execute("select ba_consol from bpc_lokasi where kode_lokasi = '$induk' ");
			if ($row = $rs->FetchNextObject(false)){
				$ba_consol = $row->ba_consol;
			}else {
				$rs =  $db->execute("select ba_consol from bpc_lokasi where kode_lokasi = '$this->lokasi' ");
				if ($row = $rs->FetchNextObject(false)){
					$ba_consol = $row->ba_consol;
				}
			}
			$ba_consol = trim($ba_consol);
            $filterCFU = " and a.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '$induk' connect by kode_induk = prior kode_lokasi )";
			$filterCFU2 = " and a.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '$induk' connect by kode_induk = prior kode_lokasi )";
			//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu)) $addFilter 
            $sql2 = "select distinct a.kode_neraca, y.kode_akun, concat(y.kode_akun,concat('-', y.nama)) as nama, y.jenis as jenis_akun
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode'
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun
												 							, sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode2'
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$neraca'
                                            and ( nvl(c.nt,0) <> 0 )
											group by a.kode_neraca, y.kode_akun, y.nama, y.jenis
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, concat(a.kode_akun,concat('-', a.nama)) as nama, a.jenis as jenis_akun
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_masakun a
                                                left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode' 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun
												 							, sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode2'  
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null and 'UNMAPPED' = '$neraca'
                                            and ( nvl(c.nt,0) <> 0 )
											group by  a.kode_akun, a.nama, a.jenis
                                            order by kode_neraca, kode_akun";
            
            //error_log($sql2);
            $rs = $db->execute($sql2);
            $result = array("rs"=>array("rows" => array()));        
            
            while ($row = $rs->FetchNextObject(false)){
                if ($row->jenis_akun == "PENDAPATAN"){
						$row->n1 = ($row->n1) * -1;
						$row->n2 = ($row->n2) * -1;
						$row->n3 = ($row->n3) * -1;
						$row->n4 = ($row->n4) * -1;
						$row->n5 = ($row->n5) * -1;
						$row->n6 = ($row->n6) * -1;
						$row->n7 = ($row->n7) * -1;
						$row->n8 = ($row->n8) * -1;
						$row->n9 = ($row->n9) * -1;
						$row->n10 = ($row->n10) * -1;
						$row->n11 = ($row->n11) * -1;
						$row->n12 = ($row->n12) * -1;
						$row->nt = ($row->nt) * -1;
						$row->m1 = ($row->m1) * -1;
						$row->m2 = ($row->m2) * -1;
						$row->m3 = ($row->m3) * -1;
						$row->m4 = ($row->m4) * -1;
						$row->m5 = ($row->m5) * -1;
						$row->m6 = ($row->m6) * -1;
						$row->m7 = ($row->m7) * -1;
						$row->m8 = ($row->m8) * -1;
						$row->m9 = ($row->m9) * -1;
						$row->m10 = ($row->m10) * -1;
						$row->m11 = ($row->m11) * -1;
						$row->m12 = ($row->m12) * -1;
						$row->mt = ($row->mt) * -1;
					$row->jenis = "INC";
				}else {
					$row->jenis = "EXP";

				}

				$row->n1 = round($row->n1 / $this->pembagi);
				$row->n2 = round($row->n2/ $this->pembagi);
				$row->n3 = round($row->n3/ $this->pembagi);
				$row->n4 = round($row->n4/ $this->pembagi);
				$row->n5 = round($row->n5/ $this->pembagi);
				$row->n6 = round($row->n6/ $this->pembagi);
				$row->n7 = round($row->n7/ $this->pembagi);
				$row->n8 = round($row->n8/ $this->pembagi);
				$row->n9 = round($row->n9/ $this->pembagi);
				$row->n10 = round($row->n10/ $this->pembagi);
				$row->n11 = round($row->n11/ $this->pembagi);
				$row->n12 = round($row->n12/ $this->pembagi);
				$row->nt = round($row->nt/ $this->pembagi);
				$row->m1 = round($row->m1/ $this->pembagi);
				$row->m2 = round($row->m2/ $this->pembagi);
				$row->m3 = round($row->m3/ $this->pembagi);
				$row->m4 = round($row->m4/ $this->pembagi);
				$row->m5 = round($row->m5/ $this->pembagi);
				$row->m6 = round($row->m6/ $this->pembagi);
				$row->m7 = round($row->m7/ $this->pembagi);
				$row->m8 = round($row->m8/ $this->pembagi);
				$row->m9 = round($row->m9/ $this->pembagi);
				$row->m10 = round($row->m10/ $this->pembagi);
				$row->m11 = round($row->m11/ $this->pembagi);
				$row->m12 = round($row->m12/ $this->pembagi);
				$row->mt = round($row->mt/ $this->pembagi);
				$result["rs"]["rows"][] = (array)$row;
                
            }
            return $result;
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
	function getDataMonthlyBudgetEXSUMCFUAkunAP($induk, $model, $periode, $tipe, $pembagi = 1000000000){
        try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->cfu;
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
            
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
				$lastPeriode2 = (floatval(substr($row->periode,0,4)) - 1)."01" ;
            }
            
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
                $jenis = " and t.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
                $filterBudget = " and not a.kode_cfu in ('CFUE') ";
            }else {
                $jenis = "  ";
                $filterBudget = "  ";
            }
                    
            $rs =  $db->execute("select ba_consol from bpc_lokasi where kode_lokasi = '$induk' ");
			if ($row = $rs->FetchNextObject(false)){
				$ba_consol = $row->ba_consol;
			}else {
				$rs =  $db->execute("select ba_consol from bpc_lokasi where kode_lokasi = '$this->lokasi' ");
				if ($row = $rs->FetchNextObject(false)){
					$ba_consol = $row->ba_consol;
				}
			}
			$ba_consol = trim($ba_consol);
            $filterCFU = " and a.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '$induk' connect by kode_induk = prior kode_lokasi )";
			$filterCFU2 = " and a.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '$induk' connect by kode_induk = prior kode_lokasi )";

			//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu)) $addFilter
            $sql2 = "select distinct a.kode_neraca, y.kode_akun, y.nama, y.jenis as jenis_akun 
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode' 
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun
												 							, sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode2' 
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                            and ( nvl(c.nt,0) <> 0 )
											group by a.kode_neraca, y.kode_akun, y.nama, y.jenis
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, a.nama , a.jenis as jenis_akun
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_masakun a
                                                left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                               left outer join (select x.kode_akun
                                                                            , sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode' 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun
												 							, sum(nvl(a.jan,0)) as n1
                                                                            , sum(nvl(a.feb,0)) as n2
																			, sum(nvl(a.mar,0)) as n3
                                                                            , sum(nvl(a.apr,0)) as n4
																			, sum(nvl(a.mei,0)) as n5
                                                                            , sum(nvl(a.jun,0)) as n6
																			, sum(nvl(a.jul,0)) as n7
                                                                            , sum(nvl(a.aug,0)) as n8
																			, sum(nvl(a.sep,0)) as n9
                                                                            , sum(nvl(a.okt,0)) as n10
																			, sum(nvl(a.nop,0)) as n11
                                                                            , sum(nvl(a.des,0)) as n12
																			, sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_budget_osd a on a.kode_akun = x.kode_akun and a.periode like  '$lastPeriode2' 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.nt,0) <> 0 )
											group by a.kode_akun, a.nama , a.jenis 
                                            order by kode_neraca, kode_akun";
            
            //error_log("getDataEXSUMCFU2 => $sql2 ");
			$rs = $db->execute($sql2);
            $result = new server_util_Map();        
            $neraca = "";
            while ($row = $rs->FetchNextObject(false)){
				 if ($row->jenis_akun == "PENDAPATAN"){
					$row->n1 = ($row->n1) * -1;
					$row->n2 = ($row->n2) * -1;
					$row->n3 = ($row->n3) * -1;
					$row->n4 = ($row->n4) * -1;
					$row->n5 = ($row->n5) * -1;
					$row->n6 = ($row->n6) * -1;
					$row->n7 = ($row->n7) * -1;
					$row->n8 = ($row->n8) * -1;
					$row->n9 = ($row->n9) * -1;
					$row->n10 = ($row->n10) * -1;
					$row->n11 = ($row->n11) * -1;
					$row->n12 = ($row->n12) * -1;
					$row->nt = ($row->nt) * -1;
					$row->m1 = ($row->m1) * -1;
					$row->m2 = ($row->m2) * -1;
					$row->m3 = ($row->m3) * -1;
					$row->m4 = ($row->m4) * -1;
					$row->m5 = ($row->m5) * -1;
					$row->m6 = ($row->m6) * -1;
					$row->m7 = ($row->m7) * -1;
					$row->m8 = ($row->m8) * -1;
					$row->m9 = ($row->m9) * -1;
					$row->m10 = ($row->m10) * -1;
					$row->m11 = ($row->m11) * -1;
					$row->m12 = ($row->m12) * -1;
					$row->mt = ($row->mt) * -1;
					$row->jenis = "INC";
				}else {
					$row->jenis = "EXP";

				}

				$row->n1 = round($row->n1 / $this->pembagi);
				$row->n2 = round($row->n2/ $this->pembagi);
				$row->n3 = round($row->n3/ $this->pembagi);
				$row->n4 = round($row->n4/ $this->pembagi);
				$row->n5 = round($row->n5/ $this->pembagi);
				$row->n6 = round($row->n6/ $this->pembagi);
				$row->n7 = round($row->n7/ $this->pembagi);
				$row->n8 = round($row->n8/ $this->pembagi);
				$row->n9 = round($row->n9/ $this->pembagi);
				$row->n10 = round($row->n10/ $this->pembagi);
				$row->n11 = round($row->n11/ $this->pembagi);
				$row->n12 = round($row->n12/ $this->pembagi);
				$row->nt = round($row->nt/ $this->pembagi);
				$row->m1 = round($row->m1/ $this->pembagi);
				$row->m2 = round($row->m2/ $this->pembagi);
				$row->m3 = round($row->m3/ $this->pembagi);
				$row->m4 = round($row->m4/ $this->pembagi);
				$row->m5 = round($row->m5/ $this->pembagi);
				$row->m6 = round($row->m6/ $this->pembagi);
				$row->m7 = round($row->m7/ $this->pembagi);
				$row->m8 = round($row->m8/ $this->pembagi);
				$row->m9 = round($row->m9/ $this->pembagi);
				$row->m10 = round($row->m10/ $this->pembagi);
				$row->m11 = round($row->m11/ $this->pembagi);
				$row->m12 = round($row->m12/ $this->pembagi);
				$row->mt = round($row->mt/ $this->pembagi);

                if ($neraca != $row->kode_neraca){
                    $neraca = $row->kode_neraca;
                    $item = array();
                }
				
                $item[] = $row;
                $result->set($neraca, $item);
                
            }
            return $result;
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
    function downloadMonthlyBudgetDataCFUAP($induk, $model, $periode, $tipe, $pembagi){
		$this->getDb();
		
		
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 
        $data = $this->getDataMonthlyBudgetEXSUMCFUAP($induk, $model, $periode, $tipe, $pembagi);					
		$akun = $this->getDataMonthlyBudgetEXSUMCFUAkunAP($induk, $model,$periode, $tipe, $pembagi);
			
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$thn1 = floatval( substr( $periode, 2,2) ) ;
		$thn2 = $thn1 - 1;
		$column = array("Account","Uraian","Tipe","Level","Jan $thn2","Feb $thn2","Mar $thn2","Apr $thn2","Mei $thn2","Jun $thn2","Jul $thn2","Agt $thn2","Sep $thn2","Okt $thn2","Nop $thn2","Des $thn2","Jan $thn1","Feb $thn1","Mar $thn1","Apr $thn1","Mei $thn1","Jun $thn1","Jul $thn1","Agt $thn1","Sep $thn1","Okt $thn1","Nop $thn1","Des $thn1","Total $thn1","Total $thn2");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        
        foreach ($data["rs"]["rows"] as $val){
            $row++;
            $val  = json_decode(json_encode($val));
            $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_neraca);
            $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
            $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
            $sheet->setCellValueByColumnAndRow(3, $row, $val->level_spasi);
            $sheet->setCellValueByColumnAndRow(4, $row, $val->m1);
            $sheet->setCellValueByColumnAndRow(5, $row, $val->m2);
            $sheet->setCellValueByColumnAndRow(6, $row, $val->m3);
            $sheet->setCellValueByColumnAndRow(7, $row, $val->m4);
            $sheet->setCellValueByColumnAndRow(8, $row, $val->m5);
            $sheet->setCellValueByColumnAndRow(9, $row, $val->m6);
            $sheet->setCellValueByColumnAndRow(10, $row, $val->m7);
            $sheet->setCellValueByColumnAndRow(11, $row, $val->m8);
            $sheet->setCellValueByColumnAndRow(12, $row, $val->m9);
            $sheet->setCellValueByColumnAndRow(13, $row, $val->m10);
            $sheet->setCellValueByColumnAndRow(14, $row, $val->m11);
			$sheet->setCellValueByColumnAndRow(15, $row, $val->m12);

			$sheet->setCellValueByColumnAndRow(16, $row, $val->n1);
            $sheet->setCellValueByColumnAndRow(17, $row, $val->n2);
            $sheet->setCellValueByColumnAndRow(18, $row, $val->n3);
            $sheet->setCellValueByColumnAndRow(19, $row, $val->n4);
            $sheet->setCellValueByColumnAndRow(20, $row, $val->n5);
            $sheet->setCellValueByColumnAndRow(21, $row, $val->n6);
            $sheet->setCellValueByColumnAndRow(22, $row, $val->n7);
            $sheet->setCellValueByColumnAndRow(23, $row, $val->n8);
            $sheet->setCellValueByColumnAndRow(24, $row, $val->n9);
            $sheet->setCellValueByColumnAndRow(25, $row, $val->n10);
            $sheet->setCellValueByColumnAndRow(26, $row, $val->n11);
			$sheet->setCellValueByColumnAndRow(27, $row, $val->n12);
			$sheet->setCellValueByColumnAndRow(28, $row, $val->nt);
			$sheet->setCellValueByColumnAndRow(29, $row, $val->mt);
			

            $listAkun = $akun->get($val->kode_neraca);
            $level = $val->level_spasi;
            foreach ($listAkun as $item){
                $row++;
                $val  = json_decode(json_encode($item));
                $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_akun);
                $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
                $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
                $sheet->setCellValueByColumnAndRow(3, $row, $level + 1);
                $sheet->setCellValueByColumnAndRow(4, $row, $val->m1);
				$sheet->setCellValueByColumnAndRow(5, $row, $val->m2);
				$sheet->setCellValueByColumnAndRow(6, $row, $val->m3);
				$sheet->setCellValueByColumnAndRow(7, $row, $val->m4);
				$sheet->setCellValueByColumnAndRow(8, $row, $val->m5);
				$sheet->setCellValueByColumnAndRow(9, $row, $val->m6);
				$sheet->setCellValueByColumnAndRow(10, $row, $val->m7);
				$sheet->setCellValueByColumnAndRow(11, $row, $val->m8);
				$sheet->setCellValueByColumnAndRow(12, $row, $val->m9);
				$sheet->setCellValueByColumnAndRow(13, $row, $val->m10);
				$sheet->setCellValueByColumnAndRow(14, $row, $val->m11);
				$sheet->setCellValueByColumnAndRow(15, $row, $val->m12);

				$sheet->setCellValueByColumnAndRow(16, $row, $val->n1);
				$sheet->setCellValueByColumnAndRow(17, $row, $val->n2);
				$sheet->setCellValueByColumnAndRow(18, $row, $val->n3);
				$sheet->setCellValueByColumnAndRow(19, $row, $val->n4);
				$sheet->setCellValueByColumnAndRow(20, $row, $val->n5);
				$sheet->setCellValueByColumnAndRow(21, $row, $val->n6);
				$sheet->setCellValueByColumnAndRow(22, $row, $val->n7);
				$sheet->setCellValueByColumnAndRow(23, $row, $val->n8);
				$sheet->setCellValueByColumnAndRow(24, $row, $val->n9);
				$sheet->setCellValueByColumnAndRow(25, $row, $val->n10);
				$sheet->setCellValueByColumnAndRow(26, $row, $val->n11);
				$sheet->setCellValueByColumnAndRow(27, $row, $val->n12);
				$sheet->setCellValueByColumnAndRow(28, $row, $val->nt);
				$sheet->setCellValueByColumnAndRow(29, $row, $val->mt);
            }
            
        }
 
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/CFU_monhtly_$namafile.xlsx");
	
 
		return "/tmp/CFU_monhtly_$namafile.xlsx";
	}
	//-----------------------------------------------------------------
	function createXlsxFile($induk, $model, $periode, $tipe, $pembagi){
		$db = $this->getDb();
		
		if ($induk == "" )$induk = $this->cfu;
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
        $objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 		$listModel = new server_util_Map();
        $rs = $db->execute("select kode_fs from bpc_fs where kode_lokasi = '9000' ");
		while ($row = $rs->FetchNextObject(false)){
			$listModel->set($row->kode_fs, $row->kode_fs);
		}
        
		if ($induk == "CFU0"){
			$rs = $db->execute("select kode_cfu, nama from bpc_cfu where kode_cfu in ('$induk') and not kode_cfu in ('CFUE','CFU40C','CFU205','CFUF','CFUG','CFUD') order by rowindex ");
		}else {
			$rs = $db->execute("select kode_cfu, nama from bpc_cfu where kode_cfu in (
				SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu

				) and not kode_cfu in ('CFUE','CFU40C','CFU205','CFUF','CFUG','CFUD') order by rowindex ");
		}
		
        
		// Set document properties
		error_log("$induk start Expoert All ");
        $index = 0;
        while ($row = $rs->FetchNextObject(false)){
            
			$modelTmp = $listModel->get($row->nama);
			error_log("$row->kode_cfu $row->nama $modelTmp Sheet ");
            
			if ($modelTmp != null && $modelTmp != ""){
				$data = $this->getDataEXSUMCFU2($row->kode_cfu, $modelTmp, $periode, $tipe, $pembagi);					
            	$akun = $this->getDataEXSUMCFU2Akun($row->kode_cfu, $modelTmp, $periode, $tipe, $pembagi);
			}else {
				$data = $this->getDataEXSUMCFU2($row->kode_cfu, $model, $periode, $tipe, $pembagi);					
            	$akun = $this->getDataEXSUMCFU2Akun($row->kode_cfu, $model,$periode, $tipe, $pembagi);
			
			}
            $lineCFU = $row;
        	$objPHPExcel->setActiveSheetIndex($index);
			$sheet = $objPHPExcel->getActiveSheet();
			$sheet->setTitle($row->nama);
            
            $sharedStyle1 = new PHPExcel_Style();
            $sharedStyle1->applyFromArray(
                array('fill' 	=> array(
                                            'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
                                            'color'		=> array('argb' => 'FFCCFFCC')
                                        ),
                      'borders' => array(
                                            'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
                                            'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
                                        )
                     ));
            $column = array("Account","Uraian","Tipe","Level","Budget Thn","Prev. Month Actual","CM Budget","CM Actual","CM Achiev","CM Growth","Ytd Prev. year","Ytd Budget","Ytd Actual","Achieve","Growth");
            $col = 0;
            $row = 1;
            foreach ($column as $value){	
                $sheet->setCellValueByColumnAndRow($col, $row, $value);
                $col++;
            }
            $end = PHPExcel_Cell::stringFromColumnIndex($col-1);
            $sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");

			//error_log("total Row " . count($data["rs"]["rows"]));	
            foreach ($data["rs"]["rows"] as $val){
                $row++;
                $val  = json_decode(json_encode($val));
                $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_neraca);
                $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
                $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
                $sheet->setCellValueByColumnAndRow(3, $row, $val->level_spasi);
                $sheet->setCellValueByColumnAndRow(4, $row, $val->aggthn);
                $sheet->setCellValueByColumnAndRow(5, $row, $val->actcm_lalu);
                $sheet->setCellValueByColumnAndRow(6, $row, $val->aggcm);
                $sheet->setCellValueByColumnAndRow(7, $row, $val->actcm);
                $sheet->setCellValueByColumnAndRow(8, $row, $val->achiev);
                $sheet->setCellValueByColumnAndRow(9, $row, $val->growth);
                $sheet->setCellValueByColumnAndRow(10, $row, $val->actsd_lalu);
                $sheet->setCellValueByColumnAndRow(11, $row, $val->aggsd);
                $sheet->setCellValueByColumnAndRow(12, $row, $val->actsd);
                $sheet->setCellValueByColumnAndRow(13, $row, $val->achiev2);
				$sheet->setCellValueByColumnAndRow(14, $row, $val->growth2);
				$start = PHPExcel_Cell::stringFromColumnIndex(4);
				$end = PHPExcel_Cell::stringFromColumnIndex(14);
				$sheet->getStyle($start.$row.":".$end.$row)->getNumberFormat()->setFormatCode("#,##0_);[Red](#,##0)");
                $listAkun = $akun->get($val->kode_neraca);
                $level = $val->level_spasi;
                foreach ($listAkun as $item){
                    $row++;
                    $val  = json_decode(json_encode($item));
                    $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_akun);
                    $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
                    $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
                    $sheet->setCellValueByColumnAndRow(3, $row, $level + 1);
                    $sheet->setCellValueByColumnAndRow(4, $row, $val->aggthn);
                    $sheet->setCellValueByColumnAndRow(5, $row, $val->actcm_lalu);
                    $sheet->setCellValueByColumnAndRow(6, $row, $val->aggcm);
                    $sheet->setCellValueByColumnAndRow(7, $row, $val->actcm);
                    $sheet->setCellValueByColumnAndRow(8, $row, $val->achiev);
                    $sheet->setCellValueByColumnAndRow(9, $row, $val->growth);
                    $sheet->setCellValueByColumnAndRow(10, $row, $val->actsd_lalu);
                    $sheet->setCellValueByColumnAndRow(11, $row, $val->aggsd);
                    $sheet->setCellValueByColumnAndRow(12, $row, $val->actsd);
                    $sheet->setCellValueByColumnAndRow(13, $row, $val->achiev2);
					$sheet->setCellValueByColumnAndRow(14, $row, $val->growth2);
					$start = PHPExcel_Cell::stringFromColumnIndex(4);
					$end = PHPExcel_Cell::stringFromColumnIndex(14);
					$sheet->getStyle($start.$row.":".$end.$row)->getNumberFormat()->setFormatCode("#,##0_);[Red](#,##0)");
                }

            }
			error_log("$lineCFU->kode_cfu $lineCFU->nama Done Sheet ");
            
			$index++;
			$objPHPExcel->createSheet();

            // Set active sheet index to the first sheet, so Excel opens this as the first sheet
        }
		//$objPHPExcel->setActiveSheetIndex(0);
 
 		error_log("$induk Done Expoert All");
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/EXSUM_". $induk ."_$namafile.xlsx");
	
 
		return "/tmp/EXSUM_". $induk ."_$namafile.xlsx";

		
	}
	function createXlsxFileRKAP($induk, $model, $periode, $tipe,$rkap, $pembagi){
		$db = $this->getDb();
		
		if ($induk == "" )$induk = $this->cfu;
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
        $objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 		$listModel = new server_util_Map();
        $rs = $db->execute("select kode_fs from bpc_fs where kode_lokasi = '9000' ");
		while ($row = $rs->FetchNextObject(false)){
			$listModel->set($row->kode_fs, $row->kode_fs);
		}
        
		//if ($induk == "CFU0"){
			$rs = $db->execute("select kode_cfu, nama from bpc_cfu where ( kode_cfu in ('$induk') or kode_induk = '$induk' ) and not kode_cfu in ('CFUE','CFU40C','CFU205','CFUF','CFUG','CFUD') order by rowindex ");
		/*
		}else {
			$rs = $db->execute("select kode_cfu, nama from bpc_cfu where kode_cfu in (
				SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu

				) and not kode_cfu in ('CFUE','CFU40C','CFU205','CFUF','CFUG','CFUD') order by rowindex ");
		}
		*/
        
		// Set document properties
		error_log("$induk start Expoert All ");
        $index = 0;
        while ($row = $rs->FetchNextObject(false)){
            
			$modelTmp = $listModel->get($row->nama);
			error_log("$row->kode_cfu $row->nama $modelTmp Sheet ");
            
			if ($modelTmp != null && $modelTmp != ""){
				$data = $this->getDataEXSUMCFU2RKAP($row->kode_cfu, $modelTmp, $periode, $tipe, $rkap, $pembagi);					
            	$akun = $this->getDataEXSUMCFU2AkunRKAP($row->kode_cfu, $modelTmp, $periode, $tipe,$rkap, $pembagi);
			}else {
				$data = $this->getDataEXSUMCFU2RKAP($row->kode_cfu, $model, $periode, $tipe,$rkap, $pembagi);					
            	$akun = $this->getDataEXSUMCFU2AkunRKAP($row->kode_cfu, $model,$periode, $tipe, $rkap,$pembagi);
			
			}
            $lineCFU = $row;
			//$objPHPExcel->setActiveSheetIndex($index);
			if ($index == 0)
        		$sheet = $objPHPExcel->getActiveSheet();
			else 
				$sheet = $objPHPExcel->createSheet();
			$sheet->setTitle($row->nama);
            
            $sharedStyle1 = new PHPExcel_Style();
            $sharedStyle1->applyFromArray(
                array('fill' 	=> array(
                                            'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
                                            'color'		=> array('argb' => 'FFCCFFCC')
                                        ),
                      'borders' => array(
                                            'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
                                            'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
                                        )
                     ));
            $column = array("Account","Uraian","Tipe","Level","Budget Thn","Prev. Month Actual","CM Budget","CM Actual","CM Achiev","CM Growth","Ytd Prev. year","Ytd Budget","Ytd Actual","Achieve","Growth");
            $col = 0;
            $row = 1;
            foreach ($column as $value){	
                $sheet->setCellValueByColumnAndRow($col, $row, $value);
                $col++;
            }
            $end = PHPExcel_Cell::stringFromColumnIndex($col-1);
            $sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");

			//error_log("total Row " . count($data["rs"]["rows"]));	
            foreach ($data["rs"]["rows"] as $val){
                $row++;
                $val  = json_decode(json_encode($val));
                $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_neraca);
                $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
                $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
                $sheet->setCellValueByColumnAndRow(3, $row, $val->level_spasi);
                $sheet->setCellValueByColumnAndRow(4, $row, $val->aggthn);
                $sheet->setCellValueByColumnAndRow(5, $row, $val->actcm_lalu);
                $sheet->setCellValueByColumnAndRow(6, $row, $val->aggcm);
                $sheet->setCellValueByColumnAndRow(7, $row, $val->actcm);
                $sheet->setCellValueByColumnAndRow(8, $row, $val->achiev);
                $sheet->setCellValueByColumnAndRow(9, $row, $val->growth);
                $sheet->setCellValueByColumnAndRow(10, $row, $val->actsd_lalu);
                $sheet->setCellValueByColumnAndRow(11, $row, $val->aggsd);
                $sheet->setCellValueByColumnAndRow(12, $row, $val->actsd);
                $sheet->setCellValueByColumnAndRow(13, $row, $val->achiev2);
				$sheet->setCellValueByColumnAndRow(14, $row, $val->growth2);
				$start = PHPExcel_Cell::stringFromColumnIndex(4);
				$end = PHPExcel_Cell::stringFromColumnIndex(14);
				$sheet->getStyle($start.$row.":".$end.$row)->getNumberFormat()->setFormatCode("#,##0_);[Red](#,##0)");
                $listAkun = $akun->get($val->kode_neraca);
                $level = $val->level_spasi;
                foreach ($listAkun as $item){
                    $row++;
                    $val  = json_decode(json_encode($item));
                    $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_akun);
                    $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
                    $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
                    $sheet->setCellValueByColumnAndRow(3, $row, $level + 1);
                    $sheet->setCellValueByColumnAndRow(4, $row, $val->aggthn);
                    $sheet->setCellValueByColumnAndRow(5, $row, $val->actcm_lalu);
                    $sheet->setCellValueByColumnAndRow(6, $row, $val->aggcm);
                    $sheet->setCellValueByColumnAndRow(7, $row, $val->actcm);
                    $sheet->setCellValueByColumnAndRow(8, $row, $val->achiev);
                    $sheet->setCellValueByColumnAndRow(9, $row, $val->growth);
                    $sheet->setCellValueByColumnAndRow(10, $row, $val->actsd_lalu);
                    $sheet->setCellValueByColumnAndRow(11, $row, $val->aggsd);
                    $sheet->setCellValueByColumnAndRow(12, $row, $val->actsd);
                    $sheet->setCellValueByColumnAndRow(13, $row, $val->achiev2);
					$sheet->setCellValueByColumnAndRow(14, $row, $val->growth2);
					$start = PHPExcel_Cell::stringFromColumnIndex(4);
					$end = PHPExcel_Cell::stringFromColumnIndex(14);
					$sheet->getStyle($start.$row.":".$end.$row)->getNumberFormat()->setFormatCode("#,##0_);[Red](#,##0)");
                }

            }
			error_log("$lineCFU->kode_cfu $lineCFU->nama Done Sheet ");
            
			$index++;
			

            // Set active sheet index to the first sheet, so Excel opens this as the first sheet
        }
		//$objPHPExcel->setActiveSheetIndex(0);
 
 		error_log("$induk Done Expoert All");
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/EXSUM_". $induk ."_". $this->userid .".xlsx");
	
		ob_clean();
		return "/tmp/EXSUM_". $induk ."_". $this->userid .".xlsx";

		
	}
    function downloadROWDataCFUAll($induk, $model, $periode, $tipe, $pembagi){
		$db = $this->getDb();
		if ($induk == "") $induk = $this->cfu;
		if ($induk == "CFU0")
			$rs = $db->execute("select kode_cfu, nama from bpc_cfu where (kode_cfu = '$induk')  and not kode_cfu in ('CFUE','CFU40C','CFU205','CFUF','CFUG','CFUD') order by rowindex ");
		else 
			$rs = $db->execute("select kode_cfu, nama from bpc_cfu where (kode_cfu = '$induk')  and not kode_cfu in ('CFUE','CFU40C','CFU205','CFUF','CFUG','CFUD') order by rowindex ");
		
		$result = array();
		 while ($row = $rs->FetchNextObject(false)){
			 error_log("Process " . $row->kode_cfu);
			$result[] = $this->createXlsxFile($row->kode_cfu, $model, $periode, $tipe, $pembagi);
			error_log("Done " . $row->kode_cfu);
		 }	
		 //error_log(json_encode($result));
		 return $result;
	}

	function checkFileExists($filename){
		if (file_exists($serverDir . $filename)){
			return $filename;
		}else return 0;
	}

	function downloadROWDataCFUAllRKAP($induk, $model, $periode, $tipe, $rkap, $pembagi){
		$db = $this->getDb();
		if ($induk == "") $induk = $this->cfu;
		/*
		if ($induk == "CFU0")
			$rs = $db->execute("select kode_cfu, nama from bpc_cfu where (kode_cfu = '$induk')  and not kode_cfu in ('CFUE','CFU40C','CFU205','CFUF','CFUG','CFUD') order by rowindex ");
		else 
			$rs = $db->execute("select kode_cfu, nama from bpc_cfu where (kode_cfu = '$induk')  and not kode_cfu in ('CFUE','CFU40C','CFU205','CFUF','CFUG','CFUD') order by rowindex ");
		
		 $result = array();
		 while ($row = $rs->FetchNextObject(false)){
			 error_log("Process " . $row->kode_cfu);
			$result[] = $this->createXlsxFileRKAP($row->kode_cfu, $model, $periode, $tipe, $rkap,  $pembagi);
			error_log("Done " . $row->kode_cfu);
		 }	
		 //error_log(json_encode($result));
		 return $result;
		 */
		 return $this->createXlsxFileRKAP($induk, $model, $periode, $tipe, $rkap,  $pembagi);
	}

	
    function uploadDataBudgetCFU($periode, $lokasi, $userlog, $listItem){
		try{
			$this->getDb();
			$result = array("akun" => array());
			$tahun = substr($periode, 0,4);
			{
				$sql = new server_util_arrayList();
                $orgs = "";
                foreach ($listItem as $val){
                    if ($orgs != $val->orgs){
                        $sql->add("delete from bpc_budget_osd where periode = '$periode' and orgs = '".$val->orgs."'  ");
                        $orgs = $val->orgs;
                    }
                    
                }
				foreach ($listItem as $val){
				    $sql->add("insert into bpc_budget_osd(periode, orgs, kode_akun, jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des, dits, osd, tgl_upd) 
								values('$periode','".$val->orgs."','".$val->akun."'
								,".$val->jan."
								,".$val->feb."
								,".$val->mar."
								,".$val->apr."
								,".$val->mei."
								,".$val->jun."
								,".$val->jul."
								,".$val->aug."
								,".$val->sep."
								,".$val->okt."
								,".$val->nop."
								,".$val->des."
								,'".$val->dits."','".$val->osd."', sysdate) ");
				}
				
			}
			
			$ret = $this->db->execArraySQL($sql);
			{
				error_log($ret);
				return $ret;
			}
			
				
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}
    function uploadDataActualCFU($periode, $lokasi, $userlog, $listItem){
		try{
			$this->getDb();
			$result = array("akun" => array());
			$tahun = substr($periode, 0,4);
			{
				$sql = new server_util_arrayList();
				$orgs = "";
                foreach ($listItem as $val){
                    if ($orgs != $val->orgs){
                        $sql->add("delete from bpc_actual_osd where periode = '$periode' and orgs = '".$val->orgs."'  ");
                        $orgs = $val->orgs;
                    }
                    
                }
				foreach ($listItem as $val){
				    $sql->add("insert into bpc_actual_osd(periode, orgs, kode_akun, jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des, dits, osd, tgl_upd) 
								values('$periode','".$val->group."','".$val->akun."'
								,".$val->jan."
								,".$val->feb."
								,".$val->mar."
								,".$val->apr."
								,".$val->mei."
								,".$val->jun."
								,".$val->jul."
								,".$val->aug."
								,".$val->sep."
								,".$val->okt."
								,".$val->nop."
								,".$val->des."
								,'".$val->dits."','".$val->osd."', sysdate) ");
				}
				
			}
			
			$ret = $this->db->execArraySQL($sql);
			//if (!$ok)
            error_log($ret);
            return $ret;
			
				
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}
    
	//------------ Data EXSUM AP CFU
    function getDataEXSUMCFU3($induk, $model, $periode, $tipe, $pembagi = 1000000000){
        try{
            $db = $this->getDb();
            //if ($induk == "") $induk = "CFU0";
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
                
        
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
            }
            
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " ";
                $jenis = " and t.jenis in ('TB')";
				$filterBudget2 = "and not w.kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
                
            }else if (strtoupper($tipe) == "NETT" ){//|| strtoupper($tipe) == "CONSOL"
                $jenis = " and t.jenis in ('TB','RL','IJ')  ";//,'AD'//and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end
                //$filterBudget = " and w.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '$induk' connect by kode_induk = prior kode_lokasi) ";
				//$filterBudget2 = " and w.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '$induk' connect by kode_induk = prior kode_lokasi) ";
				$filterBudget2 = " and w.kode_lokasi2 = '-' ";//and not w.kode_cfu in ('CFUE'),'CFU40C'//and substr(w.kode_cfu,0,4) = case when w.kode_cfu_lawan = '-' or w.kode_cfu_lawan is null then substr(w.kode_cfu,0,4) else case when substr(w.kode_cfu,0,4) =  substr(w.kode_cfu_lawan,0,4) then '-' else substr(w.kode_cfu,0,4) end  end
            }else {
                $jenis = "  ";
                $filterBudget = "  ";
				$filterBudget2 = "   ";
            }

            $filterCFU = "";        
            if ($induk != "9000"){
                $field = "t.kode_lokasi ";
                $filterCons = " and t.kode_ubis = z.kode_ubis_cons ";
                $filterCFU = "";//"where y.kode_lokasi in (select kode_lokasi from bpc_lokasi where cocd like '$induk%') ";
				$filterBudget = "";
				$rs = $db->execute("select cocd, ba_consol from bpc_lokasi where kode_lokasi = '$induk' and ba_consol <> '-' ");
				if ($row = $rs->FetchNextObject(false)){
					$induk2 = $row->cocd;//$induk
					$induk = $row->ba_consol;
				}

				$rs = $db->execute("select ba_consol from bpc_lokasi start with cocd = '$induk2' connect by kode_induk = prior kode_lokasi ");
				
				while ($row =$rs->FetchNextObject(false)){
					if ($filterCFU != "") {
						$filterCFU .= " or ";
						$filterBudget .= " or ";
					}
					$filterCFU .= " t.kode_ubis like '__" . trim($row->ba_consol) ."%' ";
					if ($induk == "1000"){
						$filterBudget .= " w.kode_ubis_cons like '__". trim($row->ba_consol) . "%' ";
					}else {
						$filterBudget .= " w.kode_ubis_cons like '__". trim($row->ba_consol) . "%' ";
					}
				}
				if ($filterCFU != "")
				{
					$filterCFU = " and ($filterCFU)";
				}

				if ($filterBudget != ""){
					$filterBudget2 .= " and ($filterBudget)";
				}
				//.$filterBudget2 .= "and not w.kode_cfu in ('CFUE','CFU40C','CFU205')";
				
				$filterCFU2 = $filterCFU;
				error_log("Induk $induk $induk2 $filterCFU ");
            }else {
                $field = "t.kode_lokasi ";
                $filterCFU = " ";
                $filterCons = "  ";
				$induk2 = "";
				$induk = "";
            }
            $addFilter = $addFilter . $filterCons; 
            $sql2 = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                left outer join (select x.kode_neraca,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join (select w.kode_akun, w.jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des, w.kode_lokasi		
																		from bpc_budget_osd w 
																			where w.periode = '$lastPeriode' $filterBudget2
																		)w on w.kode_akun = x.kode_akun
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
                                                left outer join (select x.kode_neraca,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join (select w.kode_akun, w.jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des, w.kode_lokasi		
																		from bpc_budget_osd w 
																			where w.periode = '$lastPeriode' $filterBudget2
																		)w on w.kode_akun = x.kode_akun
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'   group by x.kode_neraca) b2 on b2.kode_neraca = a.kode_neraca
                                                left outer join (select x.kode_neraca
                                                                            , sum( nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU group by x.kode_neraca
                                                                ) c on c.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode =  '$periode2' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU group by x.kode_neraca
                                                                ) d on d.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU group by x.kode_neraca
                                                                ) e on e.kode_neraca = a.kode_neraca
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                           union
                                            select distinct 'UNMAPPED', 'UNMAPPED' as nama, '-' as tipe, 'PENDAPATAN' as jenis_akun, '-' as sum_header, 0 as level_spasi, '00' as kode_induk, 1000 as rowindex
                                                        , sum(nvl(c.actsd,0)) as actsd
                                                        , sum(nvl(c.actcm,0)) as actcm
                                                        , sum(nvl(d.actcm_lalu,0)) as actcm_lalu
                                                        , sum(nvl(e.actsd,0)) as actsd_lalu
                                                        , sum(nvl(b.aggcm,0)) as aggcm
                                                        , sum(nvl(b.aggsd,0)) as aggsd 
                                                        , sum(nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join (select w.kode_akun, w.jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des, w.kode_lokasi		
																		from bpc_budget_osd w 
																			where w.periode = '$lastPeriode' $filterBudget2
																		)w on w.kode_akun = x.kode_akun
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi'  and o.kode_neraca is null
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join (select w.kode_akun, w.jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des, w.kode_lokasi		
																		from bpc_budget_osd w 
																			where w.periode = '$lastPeriode' $filterBudget2
																		)w on w.kode_akun = x.kode_akun  
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.jenis ='TB'  and t.periode like '".$thn1."%'
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun   and t.periode =  '$periode2' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun $jenis and t.periode between '".$thn2."01'  and '".$thn2.$bln."' 
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                             order by  rowindex";
            //error_log("EXSUM AP $induk $sql2");
            $rs = $db->execute($sql2);
               
            $node = "";
            $rootNode = new server_util_NodeNRC("00");
            $this->sumHeader = new server_util_Map();
            while ($row = $rs->FetchNextObject(false)){
                if (strtoupper($row->jenis_akun) == "PENDAPATAN")
                    $row->jenis = 'INC';
                else $row->jenis = 'EXP';
                if ($node == ""){
                    $node = new server_util_NodeNRC($rootNode);
                }else if ($node->level == floatval($row->level_spasi) - 1 ){
                    $node = new server_util_NodeNRC($node);
                }else if ($node->level == floatval($row->level_spasi) ){
                    $node = new server_util_NodeNRC($node->owner);
                }else if ($node->level > floatval($row->level_spasi) ){
                    while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
                        $node = $node->owner;
                    }
                    $node = new server_util_NodeNRC($node->owner);
                }
                $node->setData($row);
                if ($row->tipe == "SUMMARY")
                    $this->sumHeader->set($row->kode_neraca, $node);

            }
			error_log("Done");
            //error_log($this->sumHeader->getLength());
            foreach ($rootNode->childs as $key => $val){
                $this->summaries($val);
                if ($row->sum_header != "-"){
                    $summaryHeader = explode(",",$val->data->sum_header);

                    foreach ($summaryHeader as $header){
                        $nodeHeader = $this->sumHeader->get($header);
                        if ($nodeHeader){
                            $nodeHeader->data->aggthn += $val->data->aggthn;
                            $nodeHeader->data->aggcm += $val->data->aggcm;
                            $nodeHeader->data->actcm += $val->data->actcm;
                            $nodeHeader->data->aggsd += $val->data->aggsd;
                            $nodeHeader->data->actcm_lalu += $val->data->actcm_lalu;
                            $nodeHeader->data->actsd += $val->data->actsd;
                            $nodeHeader->data->actsd_lalu += $val->data->actsd_lalu;
                        }
                    }
                }
            }
            $this->pembagi = $pembagi;
            //perlu hitung ke summary
            $result = array('rs' => array('rows' => array() ) );
            $this->generateResult($rootNode, $result, $neraca);
            return ($result);    
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
    function getDataEXSUMCFU3Detail($induk, $model, $periode,$neraca, $tipe, $pembagi = 1000000000){
        
        try{
            $db = $this->getDb();
            //if ($induk == "") $induk = "CFU0";
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);

            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
            }
            $filterBudget2 = "";
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = "  ";//'CFU40C',//and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD') 
                $jenis = " and t.jenis in ('TB')";
				//$filterBudget = " and w.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '$induk' connect by kode_induk = prior kode_lokasi) ";
				$filterBudget2 = "and not w.kode_cfu in ('CFUE','CFU205')";//'CFU40C',
            }else if (strtoupper($tipe) == "NETT" ){//|| strtoupper($tipe) == "CONSOL"
                $jenis = " and t.jenis in ('TB','RL','IJ') ";//,'AD'//and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end 
				//$filterBudget = " and w.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '$induk' connect by kode_induk = prior kode_lokasi) ";
				$filterBudget2 = " and w.kode_lokasi2 = '-'  ";//,'CFU40C'//and not w.kode_cfu in ('CFUE') and substr(w.kode_cfu,0,4) = case when w.kode_cfu_lawan = '-' or w.kode_cfu_lawan is null then substr(w.kode_cfu,0,4) else case when substr(w.kode_cfu,0,4) =  substr(w.kode_cfu_lawan,0,4) then '-' else substr(w.kode_cfu,0,4) end  end  
            }else {
                $jenis = "  ";
                $filterBudget2 = "";
            }
                    
            $filterCFU = ""; 
			       
            if ($induk != "9000"){
                $field = "t.kode_lokasi ";
                $filterCons = " and t.kode_ubis = z.kode_ubis_cons ";
                $filterCFU = "";//"where y.kode_lokasi in (select kode_lokasi from bpc_lokasi where cocd like '$induk%') ";
				$rs = $db->execute("select cocd, ba_consol from bpc_lokasi where kode_lokasi = '$induk' and ba_consol <> '-' ");
				if ($row = $rs->FetchNextObject(false)){
					$induk2 = $row->cocd;//$induk
					$induk = $row->ba_consol;
				}
				$rs = $db->execute("select ba_consol from bpc_lokasi start with cocd = '$induk2' connect by kode_induk = prior kode_lokasi ");
				$filterBudget = "";
				while ($row =$rs->FetchNextObject(false)){
					if ($filterCFU != "") {
						$filterCFU .= " or ";
						$filterBudget .= " or ";
					}
					$filterCFU .= " t.kode_ubis like '__" . trim($row->ba_consol) ."%' ";
					$filterBudget .= " w.kode_ubis_cons like '__" . trim($row->ba_consol) ."%' ";
				
				}
				if ($filterCFU != "")
				{
					$filterCFU = " and ($filterCFU)";
				}
				if ($filterBudget != "")
				{
					$filterBudget2 .= " and ($filterBudget)";
				}
				$filterCFU2 = $filterCFU;
            }else {
                $field = "t.kode_lokasi ";
                $filterCFU = " ";
                $filterCons = "  ";
				$induk2 = "";
				$induk = "";
            }
            $sql2 = "select distinct a.kode_neraca, y.kode_akun, concat(y.kode_akun,concat('-', y.nama)) as nama, y.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn

                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join (select w.kode_akun, w.jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des, w.kode_lokasi		
																		from bpc_budget_osd w 
																			where w.periode = '$lastPeriode' $filterBudget2
																		)w on w.kode_akun = x.kode_akun 
                                                                where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'  group by x.kode_akun) b on b.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join (select w.kode_akun, w.jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des, w.kode_lokasi		
																		from bpc_budget_osd w 
																			where w.periode = '$lastPeriode' $filterBudget2
																		)w on w.kode_akun = x.kode_akun
                                                                where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi'   group by x.kode_akun) b2 on b2.kode_akun = x.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like  '$thn1%'  $jenis
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' $filterCFU group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' $filterCFU group by x.kode_akun
                                                                ) d on d.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."'  $jenis
                                                                    where x.kode_fs = '$model' and x.kode_neraca = '$neraca' and x.kode_lokasi = '$lokasi' $filterCFU group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$neraca'
                                            and ( nvl(c.actsd,0) <> 0 or nvl(c.actcm,0) <> 0  or nvl(d.actcm_lalu,0) <> 0 or 
                                                    nvl(e.actsd,0) <> 0 or
                                                        nvl(b.aggcm,0) <> 0 or
                                                        (nvl(b.aggsd,0)) <> 0 or
                                                        (nvl(b2.aggthn,0)) <> 0 )
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, concat(a.kode_akun,concat('-', a.nama)) as nama, a.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                   sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                        sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join (select w.kode_akun, w.jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des, w.kode_lokasi		
																		from bpc_budget_osd w 
																			where w.periode = '$lastPeriode' $filterBudget2
																		)w on w.kode_akun = x.kode_akun  
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi'  and o.kode_neraca is null
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun,
                                                                   sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join (select w.kode_akun, w.jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des, w.kode_lokasi		
																		from bpc_budget_osd w 
																			where w.periode = '$lastPeriode' $filterBudget2
																		)w on w.kode_akun = x.kode_akun
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and w.kode_lokasi like '$induk2%' and o.kode_neraca is null
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."'  $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null and 'UNMAPPED' = '$neraca'
                                            and (nvl(c.actsd,0) <> 0 or nvl(b.aggthn,0) <> 0)
                                            order by kode_neraca, kode_akun";
            
            //error_log($sql2);
            $rs = $db->execute($sql2);
            $result = array("rs"=>array("rows" => array()));        
            
            while ($row = $rs->FetchNextObject(false)){
                if (strtoupper($row->jenis_akun) == "PENDAPATAN"){
                    $row->aggthn = ($row->aggthn) * -1;
                    $row->aggcm = ($row->aggcm) * -1;
                    $row->aggsd = ($row->aggsd) * -1;
                    $row->actcm = ($row->actcm) * -1;
                    $row->actsd = ($row->actsd) * -1;
                    $row->actcm_lalu = ($row->actcm_lalu) * -1;
                    $row->actsd_lalu = ($row->actsd_lalu) * -1;
                    $row->jenis = 'INC';
                }else {
                    $row->jenis = 'EXP';    

                }
                $row->aggthn = round($row->aggthn / $pembagi);
                $row->aggsd = round($row->aggsd / $pembagi);
                $row->aggcm = round($row->aggcm / $pembagi);
                $row->actsd = round($row->actsd / $pembagi);
                $row->actcm = round($row->actcm / $pembagi);
                $row->actcm_lalu = round($row->actcm_lalu / $pembagi);
                $row->actsd_lalu = round($row->actsd_lalu / $pembagi);
                $row->achiev = $this->rumusAchieve($row->aggcm, $row->actcm);//floatval($val->data->aggbln) == 0 ? 100 : round($val->data->actbln / $val->data->aggbln * 100,1);
			     $row->growth = $this->rumusGrowth($row->actcm, $row->actcm_lalu);
                $row->achiev2 = $this->rumusAchieve($row->aggsd, $row->actsd);//floatval($val->data->aggsd) == 0 ? 100  : round($val->data->actsd / $val->data->aggsd * 100,1);
			     $row->growth2 = $this->rumusGrowth($row->actsd, $row->actsd_lalu);//floatval($val->data->actall) == 0 ? 100 : round(($val->data->actsd - $val->data->actall) / $val->data->actall * 100,1 );

                $result["rs"]["rows"][] = $row;
                
            }
            return $result;
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
    function getDataEXSUMCFU3Akun($induk, $model, $periode, $tipe, $pembagi = 1000000000){
        try{
            $db = $this->getDb();
           // if ($induk == "") $induk = "CFU0";
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
            
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
            }
            
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            $filterBudget2 = "   ";
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " ";//'CFU40C',//and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  
                $jenis = " and t.jenis in ('TB')";
				//$filterBudget = " and w.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '$induk' connect by kode_induk = prior kode_lokasi) ";
				$filterBudget2 = "and not w.kode_cfu in ('CFUE','CFU205')";//'CFU40C',
            }else if (strtoupper($tipe) == "NETT" ){//|| strtoupper($tipe) == "CONSOL"
                $jenis = " and t.jenis in ('TB','RL','IJ') ";//'AD''//and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end 
				//$filterBudget = " and w.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '$induk' connect by kode_induk = prior kode_lokasi) ";
				$filterBudget2 = " and w.kode_lokasi2 = '-'  ";//,'CFU40C'//and not w.kode_cfu in ('CFUE') and substr(w.kode_cfu,0,4) = case when w.kode_cfu_lawan = '-' or w.kode_cfu_lawan is null then substr(w.kode_cfu,0,4) else case when substr(w.kode_cfu,0,4) =  substr(w.kode_cfu_lawan,0,4) then '-' else substr(w.kode_cfu,0,4) end  end  
            }else {
                $jenis = "  ";
				$filterBudget = "";
				$filterBudget2 = "";
            }
            
             $filterCFU = "";        
            if ($induk != "9000"){
                $field = "t.kode_lokasi ";
                $filterCons = " and t.kode_ubis = z.kode_ubis_cons ";
                $filterCFU = "";//"where y.kode_lokasi in (select kode_lokasi from bpc_lokasi where cocd like '$induk%') ";
				$rs = $db->execute("select cocd, ba_consol from bpc_lokasi where kode_lokasi = '$induk' and ba_consol <> '-' ");
				if ($row = $rs->FetchNextObject(false)){
					$induk2 = $row->cocd;//$induk
					$induk = $row->ba_consol;
				}
				$rs = $db->execute("select ba_consol from bpc_lokasi start with cocd = '$induk2' connect by kode_induk = prior kode_lokasi ");
				
				$filterBudget = "";
				while ($row =$rs->FetchNextObject(false)){
					if ($filterCFU != "") {
						$filterCFU .= " or ";
						$filterBudget .= " or ";
					}
					$filterCFU .= " t.kode_ubis like '__" . trim($row->ba_consol) ."%' ";
					$filterBudget .= " w.kode_ubis_cons like '__" . trim($row->ba_consol) ."%' ";
				
				}
				if ($filterCFU != "")
				{
					$filterCFU = " and ($filterCFU)";
				}
				if ($filterBudget != "")
				{
					$filterBudget2 .= " and ($filterBudget)";
				}
				$filterCFU2 = $filterCFU;
            }else {
                $field = "t.kode_lokasi ";
                $filterCFU = " ";
                $filterCons = "  ";
				$induk2 = "";
				$induk = "";
            }

            $sql2 = "select distinct a.kode_neraca, y.kode_akun, y.nama, y.jenis as jenis_akun 
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn

                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join (select w.kode_akun, w.jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des, w.kode_lokasi		
																		from bpc_budget_osd w 
																			where w.periode = '$lastPeriode' $filterBudget2
																		)w on w.kode_akun = x.kode_akun 
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_akun) b on b.kode_akun = x.kode_akun
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join(select w.kode_akun, w.jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des, w.kode_lokasi		
																		from bpc_budget_osd w 
																			where w.periode = '$lastPeriode' $filterBudget2
																		)w on w.kode_akun = x.kode_akun
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi'  group by x.kode_akun) b2 on b2.kode_akun = x.kode_akun
                                                
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU group by x.kode_akun
                                                                ) d on d.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."'  $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                            and ( nvl(c.actsd,0) <> 0 or nvl(c.actcm,0) <> 0  or nvl(d.actcm_lalu,0) <> 0 or 
                                                    nvl(e.actsd,0) <> 0 or
                                                        nvl(b.aggcm,0) <> 0 or
                                                        (nvl(b.aggsd,0)) <> 0 or
                                                        (nvl(b.aggthn,0)) <> 0  )
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, a.nama , a.jenis as jenis_akun
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm,
                                                                    sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join (select w.kode_akun, w.jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des, w.kode_lokasi		
																		from bpc_budget_osd w 
																			where w.periode = '$lastPeriode' $filterBudget2
																		)w on w.kode_akun = x.kode_akun  
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun,
                                                                   sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) as aggthn
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join (select w.kode_akun, w.jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des, w.kode_lokasi		
																		from bpc_budget_osd w 
																			where w.periode = '$lastPeriode' $filterBudget2
																		)w on w.kode_akun = x.kode_akun  
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b2 on b2.kode_akun = a.kode_akun
                                                
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null and t.kode_ubis like '__$induk%' group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actcm_lalu
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode =  '$periode2' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  and t.kode_ubis like '__$induk%' group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun, sum(nvl(t.nilai,0)) as actsd
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode between '".$thn2."01'  and '".$thn2.$bln."' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  and t.kode_ubis like '__$induk%' group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b.aggsd,0) <> 0)
                                            order by kode_neraca, kode_akun";
            //error_log($sql2);
            $rs = $db->execute($sql2);
            $result = new server_util_Map();        
            $neraca = "";
            while ($row = $rs->FetchNextObject(false)){
                if (strtoupper($row->jenis_akun) == "PENDAPATAN"){
                    $row->aggthn = $row->aggthn * -1;
                    $row->aggcm = $row->aggcm * -1;
                    $row->aggsd = $row->aggsd * -1;
                    $row->actcm = ($row->actcm) * -1;
                    $row->actsd = ($row->actsd) * -1;
                    $row->actcm_lalu = ($row->actcm_lalu) * -1;
                    $row->actsd_lalu = ($row->actsd_lalu) * -1;
                    
                    $row->jenis = "INC";
                }else $row->jenis = "EXP";

                if ($neraca != $row->kode_neraca){
                    $neraca = $row->kode_neraca;
                    $item = array();
                }
                $row->aggthn = round($row->aggthn / $pembagi);
                $row->aggsd = round($row->aggsd / $pembagi);
                $row->aggcm = round($row->aggcm / $pembagi);
                $row->actsd = round($row->actsd / $pembagi);
                $row->actcm = round($row->actcm / $pembagi);
                $row->actcm_lalu = round($row->actcm_lalu / $pembagi);
                $row->actsd_lalu = round($row->actsd_lalu / $pembagi);
                $row->achiev = $this->rumusAchieve($row->aggcm, $row->actcm);//floatval($val->data->aggbln) == 0 ? 100 : round($val->data->actbln / $val->data->aggbln * 100,1);
			     $row->growth = $this->rumusGrowth($row->actcm, $row->actcm_lalu);
                $row->achiev2 = $this->rumusAchieve($row->aggsd, $row->actsd);//floatval($val->data->aggsd) == 0 ? 100  : round($val->data->actsd / $val->data->aggsd * 100,1);
			     $row->growth2 = $this->rumusGrowth($row->actsd, $row->actsd_lalu);//floatval($val->data->actall) == 0 ? 100 : round(($val->data->actsd - $val->data->actall) / $val->data->actall * 100,1 );

                $item[] = $row;
                $result->set($neraca, $item);
                
            }
            return $result;
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
	function downloadDataCFUAPSheet(&$sheet, $induk, $model, $periode, $tipe, $pembagi){
	
		// Set document properties
		error_log("Sheet $induk");
		$data = $this->getDataEXSUMCFU3($induk, $model, $periode, $tipe, $pembagi);					
		error_log("Data Akun $induk");
		$akun = $this->getDataEXSUMCFU3Akun($induk, $model,$periode, $tipe, $pembagi);
		error_log("Done Data $induk");
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$column = array("Account","Uraian","Tipe","Level","Budget Thn","Prev. Month Actual","CM Budget","CM Actual","CM Achiev","CM Growth","Ytd Prev. year","Ytd Budget","Ytd Actual","Achieve","Growth");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
        error_log("Data $induk");
        foreach ($data["rs"]["rows"] as $val){
            $row++;
            $val  = json_decode(json_encode($val));
            $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_neraca);
            $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
            $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
            $sheet->setCellValueByColumnAndRow(3, $row, $val->level_spasi);
            $sheet->setCellValueByColumnAndRow(4, $row, $val->aggthn);
            $sheet->setCellValueByColumnAndRow(5, $row, $val->actcm_lalu);
            $sheet->setCellValueByColumnAndRow(6, $row, $val->aggcm);
            $sheet->setCellValueByColumnAndRow(7, $row, $val->actcm);
            $sheet->setCellValueByColumnAndRow(8, $row, $val->achiev);
            $sheet->setCellValueByColumnAndRow(9, $row, $val->growth);
            $sheet->setCellValueByColumnAndRow(10, $row, $val->actsd_lalu);
            $sheet->setCellValueByColumnAndRow(11, $row, $val->aggsd);
            $sheet->setCellValueByColumnAndRow(12, $row, $val->actsd);
            $sheet->setCellValueByColumnAndRow(13, $row, $val->achiev2);
			$sheet->setCellValueByColumnAndRow(14, $row, $val->growth2);
			$start = PHPExcel_Cell::stringFromColumnIndex(4);
			$end = PHPExcel_Cell::stringFromColumnIndex(14);
			$sheet->getStyle($start.$row.":".$end.$row)->getNumberFormat()->setFormatCode("#,##0_);[Red](#,##0)");
            $listAkun = $akun->get($val->kode_neraca);
            $level = $val->level_spasi;
            foreach ($listAkun as $item){
                $row++;
                $val  = json_decode(json_encode($item));
                $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_akun);
                $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
                $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
                $sheet->setCellValueByColumnAndRow(3, $row, $level + 1);
                $sheet->setCellValueByColumnAndRow(4, $row, $val->aggthn);
                $sheet->setCellValueByColumnAndRow(5, $row, $val->actcm_lalu);
                $sheet->setCellValueByColumnAndRow(6, $row, $val->aggcm);
                $sheet->setCellValueByColumnAndRow(7, $row, $val->actcm);
                $sheet->setCellValueByColumnAndRow(8, $row, $val->achiev);
                $sheet->setCellValueByColumnAndRow(9, $row, $val->growth);
                $sheet->setCellValueByColumnAndRow(10, $row, $val->actsd_lalu);
                $sheet->setCellValueByColumnAndRow(11, $row, $val->aggsd);
                $sheet->setCellValueByColumnAndRow(12, $row, $val->actsd);
                $sheet->setCellValueByColumnAndRow(13, $row, $val->achiev2);
				$sheet->setCellValueByColumnAndRow(14, $row, $val->growth2);
				$start = PHPExcel_Cell::stringFromColumnIndex(4);
				$end = PHPExcel_Cell::stringFromColumnIndex(14);
				$sheet->getStyle($start.$row.":".$end.$row)->getNumberFormat()->setFormatCode("#,##0_);[Red](#,##0)");
            }
            
        }
		$db = $this->getDb();
		$rs = $db->execute("select nama from bpc_lokasi where kode_lokasi =  '$induk' ");
		if ($row = $rs->FetchNextObject(false))
			$sheet->setTitle($row->nama);
		else 
			$sheet->setTitle($induk);
		
	}
    function downloadDataCFUAPAll($induk, $model, $periode, $tipe, $pembagi){
		$db = $this->getDb();
		error_log("$induk, $model, $periode, $tipe, $pembagi");
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 
        $data = $this->getDataEXSUMCFU3($induk, $model, $periode, $tipe, $pembagi);					
		$akun = $this->getDataEXSUMCFU3Akun($induk, $model,$periode, $tipe, $pembagi);
			
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$column = array("Account","Uraian","Tipe","Level","Budget Thn","Prev. Month Actual","CM Budget","CM Actual","CM Achiev","CM Growth","Ytd Prev. year","Ytd Budget","Ytd Actual","Achieve","Growth");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        
        foreach ($data["rs"]["rows"] as $val){
            $row++;
            $val  = json_decode(json_encode($val));
            $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_neraca);
            $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
            $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
            $sheet->setCellValueByColumnAndRow(3, $row, $val->level_spasi);
            $sheet->setCellValueByColumnAndRow(4, $row, $val->aggthn);
            $sheet->setCellValueByColumnAndRow(5, $row, $val->actcm_lalu);
            $sheet->setCellValueByColumnAndRow(6, $row, $val->aggcm);
            $sheet->setCellValueByColumnAndRow(7, $row, $val->actcm);
            $sheet->setCellValueByColumnAndRow(8, $row, $val->achiev);
            $sheet->setCellValueByColumnAndRow(9, $row, $val->growth);
            $sheet->setCellValueByColumnAndRow(10, $row, $val->actsd_lalu);
            $sheet->setCellValueByColumnAndRow(11, $row, $val->aggsd);
            $sheet->setCellValueByColumnAndRow(12, $row, $val->actsd);
            $sheet->setCellValueByColumnAndRow(13, $row, $val->achiev2);
			$sheet->setCellValueByColumnAndRow(14, $row, $val->growth2);
			$start = PHPExcel_Cell::stringFromColumnIndex(4);
			$end = PHPExcel_Cell::stringFromColumnIndex(14);
			$sheet->getStyle($start.$row.":".$end.$row)->getNumberFormat()->setFormatCode("#,##0_);[Red](#,##0)");
            $listAkun = $akun->get($val->kode_neraca);
            $level = $val->level_spasi;
            foreach ($listAkun as $item){
                $row++;
                $val  = json_decode(json_encode($item));
                $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_akun);
                $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
                $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
                $sheet->setCellValueByColumnAndRow(3, $row, $level + 1);
                $sheet->setCellValueByColumnAndRow(4, $row, $val->aggthn);
                $sheet->setCellValueByColumnAndRow(5, $row, $val->actcm_lalu);
                $sheet->setCellValueByColumnAndRow(6, $row, $val->aggcm);
                $sheet->setCellValueByColumnAndRow(7, $row, $val->actcm);
                $sheet->setCellValueByColumnAndRow(8, $row, $val->achiev);
                $sheet->setCellValueByColumnAndRow(9, $row, $val->growth);
                $sheet->setCellValueByColumnAndRow(10, $row, $val->actsd_lalu);
                $sheet->setCellValueByColumnAndRow(11, $row, $val->aggsd);
                $sheet->setCellValueByColumnAndRow(12, $row, $val->actsd);
                $sheet->setCellValueByColumnAndRow(13, $row, $val->achiev2);
				$sheet->setCellValueByColumnAndRow(14, $row, $val->growth2);
				$start = PHPExcel_Cell::stringFromColumnIndex(4);
				$end = PHPExcel_Cell::stringFromColumnIndex(14);
				$sheet->getStyle($start.$row.":".$end.$row)->getNumberFormat()->setFormatCode("#,##0_);[Red](#,##0)");
            }
            
        }
		$rs = $db->execute("select nama from bpc_lokasi where kode_lokasi =  '$induk' ");
		if ($row = $rs->FetchNextObject(false))
			$sheet->setTitle($row->nama);
		else $sheet->setTitle($induk);
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		if ($induk != "9000"){
			$rs = $db->execute("select kode_lokasi from bpc_lokasi where kode_induk =  '$induk' ");
			while ($row = $rs->FetchNextObject(false)){
				error_log("lokasi $row->kode_lokasi");
				$sheet = $objPHPExcel->createSheet();
				$this->downloadDataCFUAPSheet($sheet, $row->kode_lokasi, $model, $periode, $tipe, $pembagi);
			}
		}

		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/".$induk."-CFU_$namafile.xlsx");
	
 
		return "/tmp/".$induk."-CFU_$namafile.xlsx";
	}
	function downloadDataCFUAP($induk, $model, $periode, $tipe, $pembagi){
		$this->getDb();
		
		
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 
        $data = $this->getDataEXSUMCFU3($induk, $model, $periode, $tipe, $pembagi);					
		$akun = $this->getDataEXSUMCFU3Akun($induk, $model,$periode, $tipe, $pembagi);
			
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$column = array("Account","Uraian","Tipe","Level","Budget Thn","Prev. Month Actual","CM Budget","CM Actual","CM Achiev","CM Growth","Ytd Prev. year","Ytd Budget","Ytd Actual","Achieve","Growth");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        
        foreach ($data["rs"]["rows"] as $val){
            $row++;
            $val  = json_decode(json_encode($val));
            $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_neraca);
            $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
            $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
            $sheet->setCellValueByColumnAndRow(3, $row, $val->level_spasi);
            $sheet->setCellValueByColumnAndRow(4, $row, $val->aggthn);
            $sheet->setCellValueByColumnAndRow(5, $row, $val->actcm_lalu);
            $sheet->setCellValueByColumnAndRow(6, $row, $val->aggcm);
            $sheet->setCellValueByColumnAndRow(7, $row, $val->actcm);
            $sheet->setCellValueByColumnAndRow(8, $row, $val->achiev);
            $sheet->setCellValueByColumnAndRow(9, $row, $val->growth);
            $sheet->setCellValueByColumnAndRow(10, $row, $val->actsd_lalu);
            $sheet->setCellValueByColumnAndRow(11, $row, $val->aggsd);
            $sheet->setCellValueByColumnAndRow(12, $row, $val->actsd);
            $sheet->setCellValueByColumnAndRow(13, $row, $val->achiev2);
			$sheet->setCellValueByColumnAndRow(14, $row, $val->growth2);
			$start = PHPExcel_Cell::stringFromColumnIndex(4);
			$end = PHPExcel_Cell::stringFromColumnIndex(14);
			$sheet->getStyle($start.$row.":".$end.$row)->getNumberFormat()->setFormatCode("#,##0_);[Red](#,##0)");
            $listAkun = $akun->get($val->kode_neraca);
            $level = $val->level_spasi;
            foreach ($listAkun as $item){
                $row++;
                $val  = json_decode(json_encode($item));
                $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_akun);
                $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
                $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
                $sheet->setCellValueByColumnAndRow(3, $row, $level + 1);
                $sheet->setCellValueByColumnAndRow(4, $row, $val->aggthn);
                $sheet->setCellValueByColumnAndRow(5, $row, $val->actcm_lalu);
                $sheet->setCellValueByColumnAndRow(6, $row, $val->aggcm);
                $sheet->setCellValueByColumnAndRow(7, $row, $val->actcm);
                $sheet->setCellValueByColumnAndRow(8, $row, $val->achiev);
                $sheet->setCellValueByColumnAndRow(9, $row, $val->growth);
                $sheet->setCellValueByColumnAndRow(10, $row, $val->actsd_lalu);
                $sheet->setCellValueByColumnAndRow(11, $row, $val->aggsd);
                $sheet->setCellValueByColumnAndRow(12, $row, $val->actsd);
                $sheet->setCellValueByColumnAndRow(13, $row, $val->achiev2);
				$sheet->setCellValueByColumnAndRow(14, $row, $val->growth2);
				$start = PHPExcel_Cell::stringFromColumnIndex(4);
				$end = PHPExcel_Cell::stringFromColumnIndex(14);
				$sheet->getStyle($start.$row.":".$end.$row)->getNumberFormat()->setFormatCode("#,##0_);[Red](#,##0)");
            }
            
        }
 
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/CFU_$namafile.xlsx");
	
 
		return "/tmp/CFU_$namafile.xlsx";
	}
	function saveExsumAPToSummary($induk, $model, $periode, $tipe, $pembagi){
		$this->getDb();
		
		if (!isset($induk) || $induk == "") $induk = $this->lokasi;//
		$this->cleanUp();
		$data = $this->getDataEXSUMCFU3($induk, $model, $periode, $tipe, $pembagi);					
		$dataAkun = $this->getDataEXSUMCFU3Akun($induk, $model,$periode, $tipe, $pembagi);

		$rsUbis = $this->dbLib->execute("select kode_lokasi, nama, cocd, ba_consol  from bpc_lokasi where kode_lokasi = '$induk' ");
		if ($row = $rsUbis->FetchNextObject(false)){
			$rowCocd = $row;
		}
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_summary_exsum where periode = '$periode' and kode_fs = '$model' and kode_lokasi = '$induk' and kode_cfu = '-'  and status_nilai = '$tipe'  ");
		$sql->add("delete from bpc_summary_exsum_d where periode = '$periode' and kode_fs = '$model' and kode_lokasi = '$induk' and kode_cfu = '-' and status_nilai = '$tipe' ");
		foreach ($data["rs"]["rows"] as $val){
			$row = json_decode(json_encode($val));
			$sql->add(new server_util_Map(array(
					"tipe" => "param",
					"sql" => "insert into bpc_summary_exsum(
								kode_lokasi, kode_ubis_cons, kode_cfu, kode_neraca, nama,  tipe, jenis_akun, sum_header, level_spasi, kode_induk, rowindex, aggthn, aggbln, aggsd,  actbln, actsd, actblnlalu, actthnlalu, acvpsn, growthpsn, acvytdpsn, growthytypsn,  periode, no_urut, kode_fs, tgl_process, status_nilai)
								values(:0, :1, :2, :3, :4, :5, :6,:7,:8,:9,:10,:11,:12,:13,:14, :15, :16, :17, :18, :19, :20,:21,:22,:23,:24, sysdate,:26)",
					"value" => array($rowCocd->cocd, $rowCocd->ba_consol, '-', $row->kode_neraca,  str_replace("&nbsp;"," ",$row->nama), $row->tipe, $row->jenis_akun, $row->sum_header,
										$row->level_spasi, $row->kode_induk, $row->rowindex, $val["aggthn"], $val["aggcm"], $val["aggsd"], $val["actcm"], $val["actsd"], $val["actcm_lalu"], $val["actsd_lalu"], $val["achiev"],$val["growth"],$val["achiev2"],$val["growth2"], $periode, $row->rowindex, $model,0, $tipe )
				)));
			$akun = $dataAkun->get($row->kode_neraca);
			if ($akun){
				foreach ($akun as $val){
					$row = json_decode(json_encode($val));
					$sql->add(new server_util_Map(array(
								"tipe" => "param",
								"sql" => "insert into bpc_summary_exsum_d(
											kode_lokasi, kode_ubis_cons, kode_cfu, kode_akun, nama,  tipe, jenis_akun, sum_header, level_spasi, kode_neraca, rowindex,  aggthn, aggbln, aggsd,  actbln, actsd, actblnlalu, actthnlalu, acvpsn, growthpsn, acvytdpsn, growthytypsn, periode, no_urut, kode_fs, tgl_process, status_nilai)
											values(:0, :1, :2, :3, :4, :5, :6,:7,:8,:9,:10,:11,:12,:13,:14, :15, :16, :17, :18, :19, :20,:21,:22,:23,:24,sysdate,:26)",
								"value" => array($rowCocd->cocd, $rowCocd->ba_consol, '-', $row->kode_akun,  str_replace("&nbsp;"," ",$row->nama), $row->tipe, $row->jenis_akun, $row->sum_header,
												$row->level_spasi, $row->kode_neraca, $row->rowindex,  $val->aggthn, $val->aggcm, $val->aggsd, $val->actcm, $val->actsd, $val->actcm_lalu, $val->actsd_lalu, $val->achiev,$val->growth,$val->achiev2,$val->growth2, $periode, $row->rowindex, $model, 0, $tipe )
							)));
				}
			}
		}
		

		$ret = $this->dbLib->execArraySQL($sql);
		return $ret;

	}
    //------------- 
    function getDataCFUJejerAP($induk, $model, $periode, $tipe, $pembagi){
        global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
        if ($induk == "") $induk = $this->lokasi;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		///$thn2 = floatval(substr($periode,0,4)) - 1;
        if (strtoupper($tipe) == "GROSS" || $tipe == ""){
            $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
            $jenis = " and t.jenis in ('TB')";
            $filterBudget = " and not kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
        }else if (strtoupper($tipe) == "NETT"){
            $jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
            $filterBudget = " and not kode_cfu in ('CFUE')  ";
        }else {
            $jenis = "  ";
            $filterBudget = "  ";
        }
        
            $ubis = "";
			$rsUbis = $this->dbLib->execute("select kode_lokasi, nama from bpc_lokasi where kode_lokasi <> '9000'  order by rowindex");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as actsd_". $row->kode_cfu. "";
                $sql = " select x.kode_neraca, nvl(v.actsd, 0) as actsd
							from bpc_relakun x
                            left outer join (select x.kode_neraca
                                        , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                        , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                from bpc_relakun x
                                inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' and t.jenis = 'TB'
                                inner join bpc_cfu z on t.kode_cfu = z.kode_cfu $addFilter
                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and t.kode_lokasi = '$row->kode_lokasi' group by x.kode_neraca
                            ) v on v.kode_neraca = x.kode_neraca

							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' 
							union
							select '999999',  sum(nvl(v.actsd, 0)) as actsd
							from bpc_masakun a
                            left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' and t.jenis = 'TB'
                                        inner join bpc_cfu z on t.kode_cfu = z.kode_cfu 
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' and t.kode_lokasi = '$row->kode_lokasi'
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null
                            having sum(nvl(v.actsd, 0)) <> 0
                            ";
                //error_log($sql);
				
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_neraca, $line);
				}
				$dataUbis->set($row->kode_cfu, $itemUbis);
			}
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                
            }else {
                //$join1 = "";
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi  ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                //$join2 = "left outer join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
            }
        
            /*
            left outer join (select x.kode_neraca,
                                                                sum(nvl(case '$bln' when '01' then jan
                                                                         when '02' then (jan + feb  )
                                                                         when '03' then (jan + feb + mar  )
                                                                         when '04' then (jan + feb + mar + apr  )
                                                                         when '05' then (jan + feb + mar + apr + mei )
                                                                         when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                         when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                         when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                         when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                         when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                         when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                         when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                end,0)) as aggsd
															from bpc_relakun x
															inner join bpc_mapakun z on z.akun_konsol = x.kode_akun 
                                                            $join1
							                                inner join bpc_mbudget_rkm y on y.kode_akun = z.kode_akun and y.tahun = '$thn1' and y.jenis = 'S' and z.kode_lokasi = y.kode_lokasi
                                                            $join2
	                                                        where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
                                            
           */
        /*
        //UNMAPPED
        left outer join (select x.kode_akun, 
                                                            sum(nvl(case '$bln' when '01' then jan
                                                                     when '02' then (jan + feb  )
                                                                     when '03' then (jan + feb + mar  )
                                                                     when '04' then (jan + feb + mar + apr  )
                                                                     when '05' then (jan + feb + mar + apr + mei )
                                                                     when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                     when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                     when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                     when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                     when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                     when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                     when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                            end,0)) as aggsd
                                                        from bpc_masakun x
                                                        inner join bpc_mapakun z on z.akun_konsol = x.kode_akun  
                                                        inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and (t.kode_induk = '$induk' ) 
                                                        inner join bpc_mbudget_rkm y on y.kode_akun = z.kode_akun and y.tahun = '$thn1' and y.jenis = 'S' and t.kode_lokasi = y.kode_lokasi 
                                                        inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                               and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))
                                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                                        where x.kode_lokasi = '$lokasi' and b.kode_akun is null group by x.kode_akun            
                                                        having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0
                                                        ) y on y.kode_akun = a.kode_akun
                                        
        */
            $sql = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
													, nvl(t.actsd,0) as actsd
                                                     $field
											from bpc_neraca a
											left outer join (select x.kode_neraca
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' and t.jenis = 'TB'
                                                                    inner join bpc_cfu z on t.kode_cfu = z.kode_cfu $addFilter
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and z.kode_induk = '$induk' group by x.kode_neraca
                                                                ) t on t.kode_neraca = a.kode_neraca
                                         where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
										union 
										select '999999','UNMAPPED','-','BEBAN','-',0,'00',1000
                                            , sum(nvl(v.actsd, 0)) as actsd
                                             $field
                                        from bpc_masakun a
                                        left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun
                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                    from bpc_masakun x
                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun  and t.periode like '".$thn1."%' and t.jenis = 'TB'
                                                    inner join bpc_cfu z on t.kode_cfu = z.kode_cfu $addFilter
                                                    left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                                    where  b.kode_akun is null and x.kode_lokasi = '$lokasi' and z.kode_induk ='$induk'
                                                    group by x.kode_akun
                                                    having sum(nvl(t.nilai,0)) <> 0
                                        ) v on v.kode_akun = a.kode_akun
                                        where x.kode_akun is null and a.kode_lokasi ='$lokasi'
                                        having sum(nvl(v.actsd, 0)) <> 0
										 order by  rowindex";
            //error_log($sql);
            $rs = $this->dbLib->execute($sql);
            $node = "";
		$rootNode = new server_util_NodeNRC("00");
		$this->sumHeader = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			if (strtoupper($row->jenis_akun) == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $tmp = $itemUbis->get($row->kode_neraca);
                    eval ("\$row->actsd_$key = \$tmp->actsd;");
				}
				$row->jenis = "INC";
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    $tmp = $itemUbis->get($row->kode_neraca);
                    eval ("\$row->actsd_$key = \$tmp->actsd;");
				}
                $row->jenis = "EXP";
			}
			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$node->setData($row);
			if ($row->tipe == "SUMMARY")
				$this->sumHeader->set($row->kode_neraca, $node);

		}
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			//if ($lokasi == "10")
            {
				$this->summariesJejer($val);
				
				if ($val->data->sum_header != "-"){
					$summaryHeader = explode(",",$val->data->sum_header);

					foreach ($summaryHeader as $header){
						$nodeHeader = $this->sumHeader->get($header);
						if ($nodeHeader){
							foreach ($val->dataArray as $key => $value) {
								if ($key != "jenis" && $key != "kode_neraca" && $key != "nama" && $key != "tipe" && $key != "sum_header" && $key != "level_spasi" && $key != "rowindex"){
									$nodeHeader->dataArray[$key] += $value;
								}
							}
							$nodeHeader->data =(object) $nodeHeader->dataArray;
						}
					}
				}
			}
		}
		//perlu hitung ke summary
		$result = array('rs' => array('rows' => array() ) );
		$this->generateResultJejer($rootNode, $result);
        ///error_log("pembagi $pembagi ");
        //error_log(json_encode($result));
		return ($result);   
    }
    function getDataCFUJejerAPDetail($induk, $model, $periode, $neraca, $tipe,  $pembagi){
        global $satuan;
		$this->getDB();
		$this->dbLib = $this->db;
		if (!isset($pembagi)) $pembagi = 1000000000;
		$satuan = $pembagi;
        $lokasi = "9000";
		$thn1 = substr($periode,0,4);
        $bln = substr($periode,4,2);
		///$thn2 = floatval(substr($periode,0,4)) - 1;
        
            $ubis = "";
			$rsUbis = $this->dbLib->execute("select kode_cfu, nama, kode_lokasi, kode_ubis, rowindex, level_spasi from bpc_cfu where kode_induk = '$cfu'  order by rowindex");
			$sql = "";
			$field = "";
			$dataUbis = new server_util_Map();
			while ($row = $rsUbis->FetchNextObject(false)){
				$field .= ", 0  as ". $row->kode_cfu. ", 0  as actsd_". $row->kode_cfu. "";
                $sql = " select x.kode_akun,  nvl(v.nilai, 0) as actsd
							from bpc_relakun x
                            left outer join (select x.kode_neraca
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.jenis = 'TB' and t.periode like '".$thn1."%'
                                                                    inner join bpc_cfu z on t.kode_cfu = z.kode_cfu 
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and z.kode_cfu = '$row->kode_cfu' group by x.kode_neraca
                                                                ) v on v.kode_neraca = x.kode_neraca
                                                 
							where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and x.kode_neraca = '$induk'
                            union
							select a.kode_akun, sum(nvl(y.aggsd,0)) as aggsd, sum(nvl(v.actsd, 0)) as actsd
							from bpc_masakun a
                            left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                            left outer join (select x.kode_akun
                                                , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                        from bpc_masakun x
                                        inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.jenis = 'TB' and t.periode like '".$thn1."%' and t.jenis = 'TB'
                                        inner join bpc_cfu z on t.kode_cfu = z.kode_cfu 
                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                        where b.kode_akun is null and x.kode_lokasi = '$lokasi' and z.kode_cfu = '$row->kode_cfu' 
                                        group by x.kode_akun
                                        having sum(nvl(t.nilai,0)) <> 0
                            ) v on v.kode_akun = a.kode_akun
							where  a.kode_lokasi = '$lokasi' and x.kode_akun is null and '999999' = '$induk'
                            group by a.kode_akun
                            having sum(nvl(v.actsd, 0)) <> 0";
                
                $rs = $this->dbLib->execute($sql);
				$itemUbis = new server_util_Map();

				while ($line = $rs->FetchNextObject(false)){
					$itemUbis->set($line->kode_akun, $line);
				}
				$dataUbis->set($row->kode_cfu, $itemUbis);
			}
            if ($cfu != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$cfu' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
            }else {
                //$join1 = "";
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi ";//
                //$join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = y.kode_lokasi";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
	                                                           and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
            }
            /*
            left outer join (select x.kode_akun,
                                                                sum(nvl(case '$bln' when '01' then jan
                                                                         when '02' then (jan + feb  )
                                                                         when '03' then (jan + feb + mar  )
                                                                         when '04' then (jan + feb + mar + apr  )
                                                                         when '05' then (jan + feb + mar + apr + mei )
                                                                         when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                         when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                         when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                         when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                         when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                         when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                         when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                end,0)) as aggsd
															from bpc_relakun x
															inner join bpc_mapakun z on z.akun_konsol = x.kode_akun 
                                                            $join1
							                                inner join bpc_mbudget_rkm y on y.kode_akun = z.kode_akun and y.tahun = '$thn1' and jenis = 'S' and z.kode_lokasi = y.kode_lokasi
                                                            $join2
	                                                        where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_akun) b on b.kode_akun = d.kode_akun
                                                            
            //UNMAPPED
            left outer join (select x.kode_akun, 
                                                            sum(nvl(case '$bln' when '01' then jan
                                                                     when '02' then (jan + feb  )
                                                                     when '03' then (jan + feb + mar  )
                                                                     when '04' then (jan + feb + mar + apr  )
                                                                     when '05' then (jan + feb + mar + apr + mei )
                                                                     when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                     when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                     when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                     when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                     when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                     when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                     when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                            end,0)) as aggsd
                                                        from bpc_masakun x
                                                        inner join bpc_mapakun z on z.akun_konsol = x.kode_akun  
                                                        inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and (t.kode_induk = '$cfu' ) 
                                                        inner join bpc_mbudget_rkm y on y.kode_akun = z.kode_akun and y.tahun = '$thn1' and y.jenis = 'S' and t.kode_lokasi = y.kode_lokasi 
                                                        inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                               and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))
                                                        left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                                        where x.kode_lokasi = '$lokasi' and b.kode_akun is null group by x.kode_akun            
                                                        having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0
                                                        ) y on y.kode_akun = a.kode_akun
                                        
                                            
            */
            $sql = "select distinct d.kode_akun as kode_neraca, left_pad(concat(d.kode_akun,concat('-',e.nama)),a.level_spasi + 1) as nama, a.tipe,e.jenis as jenis_akun, a.sum_header, a.level_spasi + 1 as level_spasi, a.kode_induk, a.rowindex
													, nvl(t.actsd,0) as actsd
                                                    $field
											from bpc_neraca a
                                            inner join bpc_relakun d on d.kode_neraca = a.kode_neraca and a.kode_lokasi = d.kode_lokasi and d.kode_fs = a.kode_fs
                                            inner join bpc_masakun e on e.kode_akun = d.kode_akun and e.kode_lokasi = a.kode_lokasi 
											left outer join (select x.kode_akun
                                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.jenis = 'TB' and t.periode like '".$thn1."%' and t.jenis = 'TB'
                                                                    inner join bpc_cfu z on t.kode_cfu = z.kode_cfu 
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and z.kode_induk = '$induk' group by x.kode_akun
                                                                ) t on t.kode_akun = d.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$induk' 
                                        union
                                        select a.kode_akun, concat(a.kode_akun, concat('-',a.nama)) as nama,'-',a.jenis,'-',0,'00',1000
                                            , sum(nvl(v.actsd, 0)) as actsd
                                              $field
                                        from bpc_masakun a
                                        left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                        left outer join (select x.kode_akun
                                                            , sum(nvl(case when t.periode <= '$periode' then t.nilai else 0 end,0)) as actsd
                                                            , sum(nvl(case when t.periode = '$periode' then t.nilai else 0 end,0)) as actcm
                                                    from bpc_masakun x
                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' and t.jenis = 'TB'
                                                    inner join bpc_cfu z on t.kode_cfu = z.kode_cfu 
                                                    left outer join bpc_relakun b on b.kode_akun = x.kode_akun and b.kode_lokasi = x.kode_lokasi and b.kode_fs = '$model'
                                                    where  b.kode_akun is null and x.kode_lokasi = '$lokasi' and z.kode_induk ='$cfu'
                                                    group by x.kode_akun
                                                    having sum(nvl(t.nilai,0)) <> 0
                                        ) v on v.kode_akun = a.kode_akun
                                        where x.kode_akun is null and a.kode_lokasi ='$lokasi' and '999999' = '$induk'
                                        group by a.kode_akun, a.nama
                                        having  sum(nvl(v.actsd, 0)) <> 0
                                        order by kode_neraca";
            $rs = $this->dbLib->execute($sql);
            $node = "";
		$rootNode = new server_util_NodeNRC("00");
		$this->sumHeader = new server_util_Map();
        $result = array('rs' => array('rows' => array() ) );
		while ($row = $rs->FetchNextObject(false)){
            if (strtoupper($row->jenis_akun) == "PENDAPATAN"){
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    //$key = strtoupper($key);
                    $tmp = $itemUbis->get($row->kode_neraca);
                    if ($tmp == null){
                        eval ("\$row->$key = 0;");
                        eval ("\$row->actsd_$key = 0;");
                    }else {
                        eval ("\$row->$key = round( \$tmp->aggsd / $pembagi) ;");
                        eval ("\$row->actsd_$key = round(\$tmp->actsd / $pembagi) * -1;");
                        
                    }
					
				}
				$row->jenis = "INC";
                $row->actsd = round($row->actsd / $pembagi) * -1;
                //error_log("PDRPT " . json_encode($row));
			}else {
				foreach ($dataUbis->getArray() as $key => $itemUbis){
                    //$key = strtoupper($key);
					$tmp = $itemUbis->get($row->kode_neraca);
                    if ($tmp == null){
                        eval ("\$row->$key = 0;");
                        eval ("\$row->actsd_$key = 0;");
                    }else {
                        eval ("\$row->$key = \$tmp->aggsd / $pembagi;");
                        eval ("\$row->actsd_$key = \$tmp->actsd / $pembagi;");
                    }
				}
                $row->aggsd = $row->aggsd  / $pembagi;
                $row->actsd = round($row->actsd / $pembagi);
                $row->jenis = "EXP";
			}
                if ($row->aggsd != 0 || $row->actsd != 0)
			     $result["rs"]["rows"][] = (array)$row;
			
		}
        error_log("pembagi $pembagi");
		//error_log(json_encode($result));
		return ($result);   
    }
	//------------ 
	function downloadStruktur($struktur, $compCode = null){
		$this->getDb();
		
		if (!isset($compCode))
			$compCode = $this->getLokKonsol();
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");

		// Add Data in your file
		$sql = "select kode_neraca, nama, level_spasi, jenis_akun as tipe, kode_induk, rowindex , sum_header, kode_neraca nrc2
		from bpc_neraca a 
		where a.kode_fs = :1 and a.kode_lokasi = :0
		union 
		select a.kode_akun , b.nama, c.level_spasi + 1, b.jenis , a.kode_neraca, c.rowindex, '-' as sum_header , a.kode_neraca 
			from bpc_relakun a 
				inner join bpc_masakun b on b.kode_akun = a.kode_akun and b.kode_lokasi = a.kode_lokasi
				inner join bpc_neraca c on c.kode_neraca = a.kode_neraca and c.kode_fs = a.kode_fs and c.kode_lokasi = a.kode_lokasi
		where a.kode_lokasi = :0 and a.kode_fs = :1
							order by rowindex, nrc2,  kode_neraca";
		$rsPL = $this->db->execute($sql, array($compCode, $struktur));
		
					
		
		
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$column = array("Kode","Deskripsi","Level","Tipe","Induk","Sum Header");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$row++;
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		$first = true;
		while ($rowData = $rsPL->FetchNextObject(false)){
			$sheet->setCellValueByColumnAndRow(0, $row, $rowData->kode_neraca);
			$sheet->setCellValueByColumnAndRow(1, $row, $rowData->nama);
			$sheet->setCellValueByColumnAndRow(2, $row, $rowData->level_spasi);
			$sheet->setCellValueByColumnAndRow(3, $row, $rowData->tipe);
			$sheet->setCellValueByColumnAndRow(4, $row, $rowData->kode_induk);
			$sheet->setCellValueByColumnAndRow(5, $row, $rowData->sum_header);
			$row++;
		}
		
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/struktur_$struktur.xlsx");
	
 
		return "/tmp/struktur_$struktur.xlsx";
	}
	function downloadStrukturUncons($struktur, $compCode){
		$this->getDb();
		
		
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 
 
		// Add Data in your file
		$rsPL = $this->db->execute("select kode_neraca, nama, level_spasi, jenis_akun as tipe, kode_induk, rowindex 
			from exs_neraca a 
			where a.kode_fs = '$struktur' and a.kode_lokasi = '$compCode'
			union 
			select a.kode_akun , b.nama, c.level_spasi + 1, b.jenis , a.kode_neraca, c.rowindex + 1
				from exs_relakun a 
					inner join exs_masakun b on b.kode_akun = a.kode_akun and b.kode_lokasi = a.kode_lokasi
					inner join exs_neraca c on c.kode_neraca = a.kode_neraca and c.kode_fs = a.kode_fs and c.kode_lokasi = a.kode_lokasi
			where a.kode_lokasi = '$compCode' and a.kode_fs = '$struktur'
								order by rowindex, kode_neraca");
		
					
		
			
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$column = array("Kode","Deskripsi","Level","Tipe","Induk");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$row++;
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		$first = true;
		while ($rowData = $rsPL->FetchNextObject(false)){
			$sheet->setCellValueByColumnAndRow(0, $row, $rowData->kode_neraca);
			$sheet->setCellValueByColumnAndRow(1, $row, $rowData->nama);
			$sheet->setCellValueByColumnAndRow(2, $row, $rowData->level_spasi);
			$sheet->setCellValueByColumnAndRow(3, $row, $rowData->tipe);
			$sheet->setCellValueByColumnAndRow(4, $row, $rowData->kode_induk);
			$row++;
		}
		
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/struktur_$struktur.xlsx");
	
 
		return "/tmp/struktur_$struktur.xlsx";
	}
	function downloadUbis($compCode){
		$this->getDb();
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("FiPART")
						 ->setSubject("FiPART")
						 ->setDescription("FiPART")
						  ->setKeywords("FiPART")
							 ->setCategory("FiPART");
 
 
		// Add Data in your file
		$rsPL = $this->db->execute("select kode_ubis, nama, level_spasi,  'BA' as tipe, kode_induk, rowindex 
			from exs_ubis a 
			where   a.kode_lokasi = '$compCode'
			union 
			select a.kode_cc , a.nama, b.level_spasi + 1, 'CC' as tipe, a.kode_ubis, b.rowindex + 1
				from exs_cc a 
					inner join exs_ubis b on b.kode_ubis = a.kode_ubis and b.kode_lokasi = a.kode_lokasi
			where a.kode_lokasi = '$compCode' 
					order by rowindex, kode_ubis");
		
					
		
			
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$column = array("Kode","Deskripsi","Level","Tipe","Induk");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$row++;
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		$first = true;
		while ($rowData = $rsPL->FetchNextObject(false)){
			$sheet->setCellValueByColumnAndRow(0, $row, $rowData->kode_ubis);
			$sheet->setCellValueByColumnAndRow(1, $row, $rowData->nama);
			$sheet->setCellValueByColumnAndRow(2, $row, $rowData->level_spasi);
			$sheet->setCellValueByColumnAndRow(3, $row, $rowData->tipe);
			$sheet->setCellValueByColumnAndRow(4, $row, $rowData->kode_induk);
			$row++;
		}
		
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/ubis_$compCode.xlsx");
	
 
		return "/tmp/ubis_$compCode.xlsx";
	}
	//********************   Monthly Actual CFU
	function getDataCFUMonthlyActual($induk, $model, $periode, $tipe, $pembagi = 1000000000){
        try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->cfu;
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
                
        
           
            
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
                $jenis = " and t.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
				$filterBudget = " and not a.kode_cfu in ('CFUE') ";
            }else {
                $jenis = "  ";
				$filterBudget = "  ";
            }
                    
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                                   and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                if (strlen($induk) > 4)
                    $field = "z.kode_cfu ";
                else $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0 ";
                $filterCFU = " where a.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    ) ";
            }else {
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi  ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                               and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $field = "z.kode_induk ";
                $filterCons = " ";
                $filterCFU = " where a.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    )";
            }
            $addFilter = $addFilter . $filterCons;
            
            $sql2 = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
                                                        , nvl(c.jan,0) as jan
                                                        , nvl(c.feb,0) as feb
                                                        , nvl(c.mar,0) as mar
                                                        , nvl(c.apr,0) as apr
                                                        , nvl(c.mei,0) as mei
                                                        , nvl(c.jun,0) as jun 
                                                        , nvl(c.jul,0) as jul
														, nvl(c.aug,0) as aug 
                                                        , nvl(c.sep,0) as sep
														, nvl(c.okt,0) as okt 
                                                        , nvl(c.nop,0) as nop
														, nvl(c.des,0) as des
														, nvl(c.total,0) as total

														, nvl(d.jan,0) as jan2
                                                        , nvl(d.feb,0) as feb2
                                                        , nvl(d.mar,0) as mar2
                                                        , nvl(d.apr,0) as apr2
                                                        , nvl(d.mei,0) as mei2
                                                        , nvl(d.jun,0) as jun2
                                                        , nvl(d.jul,0) as jul2
														, nvl(d.aug,0) as aug2 
                                                        , nvl(d.sep,0) as sep2
														, nvl(d.okt,0) as okt2 
                                                        , nvl(d.nop,0) as nop2
														, nvl(d.des,0) as des2
														, nvl(d.total,0) as total2
                                                from bpc_neraca a
                                                left outer join (select x.kode_neraca
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as jan
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as feb
																			, sum( nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as mar
																			, sum( nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as apr
																			, sum( nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as mei
																			, sum( nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as jun
																			, sum( nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as jul
																			, sum( nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as aug
																			, sum( nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as sep
																			, sum( nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as okt
																			, sum( nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as nop
																			, sum( nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as des
																			, sum( nvl(t.nilai,0)) as total
                                                                    from bpc_relakun x
                                                                    inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu))  $addFilter 
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and $field = '$induk' group by x.kode_neraca
                                                                ) c on c.kode_neraca = a.kode_neraca
                                                 left outer join (select x.kode_neraca
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as jan
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as feb
																			, sum( nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as mar
																			, sum( nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as apr
																			, sum( nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as mei
																			, sum( nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as jun
																			, sum( nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as jul
																			, sum( nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as aug
																			, sum( nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as sep
																			, sum( nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as okt
																			, sum( nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as nop
																			, sum( nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as des
																			, sum( nvl(t.nilai,0)) as total
                                                                    from bpc_relakun x
                                                                    inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn2."%' $jenis
                                                                    inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu))  $addFilter 
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and $field = '$induk' group by x.kode_neraca
                                                                ) d on d.kode_neraca = a.kode_neraca

                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                           union
                                            select distinct 'UNMAPPED', 'UNMAPPED' as nama, '-' as tipe, 'PENDAPATAN' as jenis_akun, '-' as sum_header, 0 as level_spasi, '00' as kode_induk, 1000 as rowindex
                                                        , nvl(c.jan,0) as jan
                                                        , nvl(c.feb,0) as feb
                                                        , nvl(c.mar,0) as mar
                                                        , nvl(c.apr,0) as apr
                                                        , nvl(c.mei,0) as mei
                                                        , nvl(c.jun,0) as jun 
                                                        , nvl(c.jul,0) as jul
														, nvl(c.aug,0) as aug 
                                                        , nvl(c.sep,0) as sep
														, nvl(c.okt,0) as okt 
                                                        , nvl(c.nop,0) as nop
														, nvl(c.des,0) as des
														, nvl(c.total,0) as total
														, nvl(d.jan,0) as jan2
                                                        , nvl(d.feb,0) as feb2
                                                        , nvl(d.mar,0) as mar2
                                                        , nvl(d.apr,0) as apr2
                                                        , nvl(d.mei,0) as mei2
                                                        , nvl(d.jun,0) as jun2
                                                        , nvl(d.jul,0) as jul2
														, nvl(d.aug,0) as aug2 
                                                        , nvl(d.sep,0) as sep2
														, nvl(d.okt,0) as okt2 
                                                        , nvl(d.nop,0) as nop2
														, nvl(d.des,0) as des2
														, nvl(d.total,0) as total
                                                from bpc_masakun a
                                                left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as jan
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as feb
																			, sum( nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as mar
																			, sum( nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as apr
																			, sum( nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as mei
																			, sum( nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as jun
																			, sum( nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as jul
																			, sum( nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as aug
																			, sum( nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as sep
																			, sum( nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as okt
																			, sum( nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as nop
																			, sum( nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as des
																			, sum( nvl(t.nilai,0)) as total
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%'
                                                                    inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu))  $addFilter $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null and $field = '$induk' group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun

												left outer join (select x.kode_akun
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as jan
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as feb
																			, sum( nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as mar
																			, sum( nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as apr
																			, sum( nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as mei
																			, sum( nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as jun
																			, sum( nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as jul
																			, sum( nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as aug
																			, sum( nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as sep
																			, sum( nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as okt
																			, sum( nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as nop
																			, sum( nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as des
																			, sum( nvl(t.nilai,0)) as total
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn2."%'
                                                                    inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu))  $addFilter $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null and $field = '$induk' group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                                
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                             order by  rowindex";
            //error_log($sql2);
            $rs = $db->execute($sql2);
               
            $node = "";
            $rootNode = new server_util_NodeNRC("00");
            $this->sumHeader = new server_util_Map();
            while ($row = $rs->FetchNextObject(false)){
                if (strtoupper($row->jenis_akun) == "PENDAPATAN")
                    $row->jenis = 'INC';
                else $row->jenis = 'EXP';
                if ($node == ""){
                    $node = new server_util_NodeNRC($rootNode);
                }else if ($node->level == floatval($row->level_spasi) - 1 ){
                    $node = new server_util_NodeNRC($node);
                }else if ($node->level == floatval($row->level_spasi) ){
                    $node = new server_util_NodeNRC($node->owner);
                }else if ($node->level > floatval($row->level_spasi) ){
                    while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
                        $node = $node->owner;
                    }
                    $node = new server_util_NodeNRC($node->owner);
                }
                $node->setData($row);
                if ($row->tipe == "SUMMARY")
                    $this->sumHeader->set($row->kode_neraca, $node);

            }
            //error_log($this->sumHeader->getLength());
            foreach ($rootNode->childs as $key => $val){
                $this->summaries($val);
                if ($val->data->sum_header != "-"){
                    $summaryHeader = explode(",",$val->data->sum_header);

                    foreach ($summaryHeader as $header){
                        $nodeHeader = $this->sumHeader->get($header);
                        if ($nodeHeader){
                            $nodeHeader->data->jan += $val->data->jan;
                            $nodeHeader->data->feb += $val->data->feb;
                            $nodeHeader->data->mar += $val->data->mar;
                            $nodeHeader->data->apr += $val->data->apr;
                            $nodeHeader->data->mei += $val->data->mei;
                            $nodeHeader->data->jun += $val->data->jun;
                            $nodeHeader->data->jul += $val->data->jul;
							$nodeHeader->data->aug += $val->data->aug;
                            $nodeHeader->data->sep += $val->data->sep;
                            $nodeHeader->data->okt += $val->data->okt;
                            $nodeHeader->data->nop += $val->data->nop;
                            $nodeHeader->data->des += $val->data->des;
                            $nodeHeader->data->jan2 += $val->data->jan2;
                            $nodeHeader->data->feb2 += $val->data->feb2;
                            $nodeHeader->data->mar2 += $val->data->mar2;
                            $nodeHeader->data->apr2 += $val->data->apr2;
                            $nodeHeader->data->mei2 += $val->data->mei2;
                            $nodeHeader->data->jun2 += $val->data->jun2;
                            $nodeHeader->data->jul2 += $val->data->jul2;
							$nodeHeader->data->aug2 += $val->data->aug2;
                            $nodeHeader->data->sep2 += $val->data->sep2;
                            $nodeHeader->data->okt2 += $val->data->okt2;
                            $nodeHeader->data->nop2 += $val->data->nop2;
                            $nodeHeader->data->des2 += $val->data->des2;
                        }
                    }
                }
            }
            $this->pembagi = $pembagi;
            //perlu hitung ke summary
            $result = array('rs' => array('rows' => array() ) );
            $this->generateResult($rootNode, $result, $neraca);
            return ($result);    
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
	//------------ OnClick Item per  neraca 
	function getDataCFUMonthlyActualDetail($induk, $model, $periode, $tipe, $neraca,  $pembagi = 1000000000){
		try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->cfu;
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
                
        
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
                $jenis = " and t.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
				$filterBudget = " and not a.kode_cfu in ('CFUE') ";
            }else {
                $jenis = "  ";
				$filterBudget = "  ";
            }
                    
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                                   and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                if (strlen($induk) > 4)
                    $field = "z.kode_cfu ";
                else $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0 ";
                $filterCFU = " where a.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    ) ";
            }else {
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi  ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                               and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $field = "z.kode_induk ";
                $filterCons = " ";
                $filterCFU = " where a.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    )";
            }
            $addFilter = $addFilter . $filterCons;
            
            $sql2 = "select distinct b.kode_akun, left_pad(d.nama,a.level_spasi + 1) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
                                                        , nvl(c.jan,0) as jan
                                                        , nvl(c.feb,0) as feb
                                                        , nvl(c.mar,0) as mar
                                                        , nvl(c.apr,0) as apr
                                                        , nvl(c.mei,0) as mei
                                                        , nvl(c.jun,0) as jun 
                                                        , nvl(c.jul,0) as jul
														, nvl(c.aug,0) as aug 
                                                        , nvl(c.sep,0) as sep
														, nvl(c.okt,0) as okt 
                                                        , nvl(c.nop,0) as nop
														, nvl(c.des,0) as des
														, nvl(c.total,0) as total
														, nvl(d.jan,0) as jan
                                                        , nvl(d.feb,0) as feb
                                                        , nvl(d.mar,0) as mar
                                                        , nvl(d.apr,0) as apr
                                                        , nvl(d.mei,0) as mei
                                                        , nvl(d.jun,0) as jun 
                                                        , nvl(d.jul,0) as jul
														, nvl(d.aug,0) as aug 
                                                        , nvl(d.sep,0) as sep
														, nvl(d.okt,0) as okt 
                                                        , nvl(d.nop,0) as nop
														, nvl(d.des,0) as des
														, nvl(d.total,0) as total2
                                                from bpc_neraca a
												inner join bpc_relakun b on b.kode_neraca = a.kode_neraca and b.kode_fs = a.kode_fs and a.kode_lokasi = b.kode_lokasi
												inner join bpc_masakun d on d.kode_akun = b.kode_akun and d.kode_lokasi = a.kode_lokasi
                                                inner join (select x.kode_akun 
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as jan
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as feb
																			, sum( nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as mar
																			, sum( nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as apr
																			, sum( nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as mei
																			, sum( nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as jun
																			, sum( nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as jul
																			, sum( nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as aug
																			, sum( nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as sep
																			, sum( nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as okt
																			, sum( nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as nop
																			, sum( nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as des
																			, sum( nvl(t.nilai,0)) as total
                                                                    from bpc_relakun x
                                                                    inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu))  $addFilter 
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and $field = '$induk'  and x.kode_neraca = '$neraca' group by x.kode_akun
                                                                ) c on c.kode_akun = a.kode_akun
												left outer join (select x.kode_akun 
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as jan
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as feb
																			, sum( nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as mar
																			, sum( nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as apr
																			, sum( nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as mei
																			, sum( nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as jun
																			, sum( nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as jul
																			, sum( nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as aug
																			, sum( nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as sep
																			, sum( nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as okt
																			, sum( nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as nop
																			, sum( nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as des
																			, sum( nvl(t.nilai,0)) as total
                                                                    from bpc_relakun x
                                                                    inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn2."%' $jenis
                                                                    inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu))  $addFilter 
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and $field = '$induk'  and x.kode_neraca = '$neraca' group by x.kode_akun
                                                                ) d on d.kode_akun = a.kode_akun
                                                 
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' and a.kode_neraca = '$neraca' 
                                           union
                                            select distinct a.kode_akun , a.nama as nama, '-' as tipe, a.jenis as jenis_akun, '-' as sum_header, 0 as level_spasi, '00' as kode_induk, 1000 as rowindex
                                                        , nvl(c.jan,0) as jan
                                                        , nvl(c.feb,0) as feb
                                                        , nvl(c.mar,0) as mar
                                                        , nvl(c.apr,0) as apr
                                                        , nvl(c.mei,0) as mei
                                                        , nvl(c.jun,0) as jun 
                                                        , nvl(c.jul,0) as jul
														, nvl(c.aug,0) as aug 
                                                        , nvl(c.sep,0) as sep
														, nvl(c.okt,0) as okt 
                                                        , nvl(c.nop,0) as nop
														, nvl(c.des,0) as des
                                                from bpc_masakun a
                                                left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as jan
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as feb
																			, sum( nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as mar
																			, sum( nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as apr
																			, sum( nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as mei
																			, sum( nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as jun
																			, sum( nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as jul
																			, sum( nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as aug
																			, sum( nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as sep
																			, sum( nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as okt
																			, sum( nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as nop
																			, sum( nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as des
																			, sum( nvl(t.nilai,0)) as total
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%'
                                                                    inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu))  $addFilter $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null and $field = '$induk' group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                left outer join (select x.kode_akun
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as jan
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as feb
																			, sum( nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as mar
																			, sum( nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as apr
																			, sum( nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as mei
																			, sum( nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as jun
																			, sum( nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as jul
																			, sum( nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as aug
																			, sum( nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as sep
																			, sum( nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as okt
																			, sum( nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as nop
																			, sum( nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as des
																			, sum( nvl(t.nilai,0)) as total
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn2."%'
                                                                    inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu))  $addFilter $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null and $field = '$induk' group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) d on d.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null and 'UNMAPPED' = '$neraca'
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                             order by  rowindex";
            //error_log($sql2);
            $rs = $db->execute($sql2);
            $result = array('rs' => array('rows' => array() ) );   
            while ($row = $rs->FetchNextObject(false)){
                $result["rs"]["rows"][] = (array)$row;

            }

            $this->pembagi = $pembagi;
            //perlu hitung ke summary
            return ($result);    
        }catch(Exception $e){
            error_log($e->getMessage());
        }
	}
	//------------ untuk generate detail akun per Akun
	function getDataCFUMonthlyActualAkun($induk, $model, $periode, $tipe, $pembagi = 1000000000){
		try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->cfu;
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
                
        
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
                $jenis = " and t.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
				$filterBudget = " and not a.kode_cfu in ('CFUE') ";
            }else {
                $jenis = "  ";
				$filterBudget = "  ";
            }
                    
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                                   and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                if (strlen($induk) > 4)
                    $field = "z.kode_cfu ";
                else $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0 ";
                $filterCFU = " where a.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    ) ";
            }else {
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi  ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                               and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $field = "z.kode_induk ";
                $filterCons = " ";
                $filterCFU = " where a.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    )";
            }
            $addFilter = $addFilter . $filterCons;
            
            $sql2 = "select distinct a.kode_neraca, b.kode_akun, left_pad(d.nama,a.level_spasi + 1) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
                                                        , nvl(c.jan,0) as jan
                                                        , nvl(c.feb,0) as feb
                                                        , nvl(c.mar,0) as mar
                                                        , nvl(c.apr,0) as apr
                                                        , nvl(c.mei,0) as mei
                                                        , nvl(c.jun,0) as jun 
                                                        , nvl(c.jul,0) as jul
														, nvl(c.aug,0) as aug 
                                                        , nvl(c.sep,0) as sep
														, nvl(c.okt,0) as okt 
                                                        , nvl(c.nop,0) as nop
														, nvl(c.des,0) as des
                                                from bpc_neraca a
												inner join bpc_relakun b on b.kode_neraca = a.kode_neraca and b.kode_fs = a.kode_fs and a.kode_lokasi = b.kode_lokasi
												inner join bpc_masakun d on d.kode_akun = b.kode_akun and d.kode_lokasi = a.kode_lokasi
                                                inner join (select x.kode_akun 
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as jan
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as feb
																			, sum( nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as mar
																			, sum( nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as apr
																			, sum( nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as mei
																			, sum( nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as jun
																			, sum( nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as jul
																			, sum( nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as aug
																			, sum( nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as sep
																			, sum( nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as okt
																			, sum( nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as nop
																			, sum( nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as des
																			
                                                                    from bpc_relakun x
                                                                    inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu))  $addFilter 
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' and $field = '$induk'   group by x.kode_akun
                                                                ) c on c.kode_akun = a.kode_akun
                                                 
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                           union
                                            select distinct a.kode_akun , a.nama as nama, '-' as tipe, a.jenis as jenis_akun, '-' as sum_header, 0 as level_spasi, '00' as kode_induk, 1000 as rowindex
                                                        , nvl(c.jan,0) as jan
                                                        , nvl(c.feb,0) as feb
                                                        , nvl(c.mar,0) as mar
                                                        , nvl(c.apr,0) as apr
                                                        , nvl(c.mei,0) as mei
                                                        , nvl(c.jun,0) as jun 
                                                        , nvl(c.jul,0) as jul
														, nvl(c.aug,0) as aug 
                                                        , nvl(c.sep,0) as sep
														, nvl(c.okt,0) as okt 
                                                        , nvl(c.nop,0) as nop
														, nvl(c.des,0) as des
                                                from bpc_masakun a
                                                left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as jan
                                                                            , sum( nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as feb
																			, sum( nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as mar
																			, sum( nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as apr
																			, sum( nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as mei
																			, sum( nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as jun
																			, sum( nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as jul
																			, sum( nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as aug
																			, sum( nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as sep
																			, sum( nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as okt
																			, sum( nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as nop
																			, sum( nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as des
																			
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%'
                                                                    inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu))  $addFilter $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null and $field = '$induk' group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                             order by  kode_neraca";
            //error_log($sql2);
            $rs = $db->execute($sql2);
            $result = new server_util_Map();
			$neraca = "";   
            while ($row = $rs->FetchNextObject(false)){
                $tmp = $result->get($row->kode_neraca);
				if ($tmp == null)
					$tmp = array();
				$tmp[] = (array)$row;
				$result->set($row->kode_neraca, $tmp);
            }
            return ($result);    
        }catch(Exception $e){
            error_log($e->getMessage());
        }
	}
	function downloadDataCFUMonthlyActual($induk, $model, $periode, $tipe, $pembagi = 1000000000){
		$this->getDb();
		
		
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();

		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("CFU Monthly Actual")
						 ->setSubject("CFU")
						 ->setDescription("CFU Monthly Actual")
						  ->setKeywords("CFU")
							 ->setCategory("CFU");
 
        $data = $this->getDataCFUMonthlyActual($induk, $model, $periode, $tipe, $pembagi);					
		$akun = $this->getDataCFUMonthlyActualAkun($induk, $model,$periode, $tipe, $pembagi);
			
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$column = array("Account","Uraian","Tipe","Level","","");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        
        foreach ($data["rs"]["rows"] as $val){
            $row++;
            $val  = json_decode(json_encode($val));
            $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_neraca);
            $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
            $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
            $sheet->setCellValueByColumnAndRow(3, $row, $val->level_spasi);
            $sheet->setCellValueByColumnAndRow(4, $row, $val->aggthn);
            $sheet->setCellValueByColumnAndRow(5, $row, $val->actcm_lalu);
            $sheet->setCellValueByColumnAndRow(6, $row, $val->aggcm);
            $sheet->setCellValueByColumnAndRow(7, $row, $val->actcm);
            $sheet->setCellValueByColumnAndRow(8, $row, $val->achiev);
            $sheet->setCellValueByColumnAndRow(9, $row, $val->growth);
            $sheet->setCellValueByColumnAndRow(10, $row, $val->actsd_lalu);
            $sheet->setCellValueByColumnAndRow(11, $row, $val->aggsd);
            $sheet->setCellValueByColumnAndRow(12, $row, $val->actsd);
            $sheet->setCellValueByColumnAndRow(13, $row, $val->achiev2);
            $sheet->setCellValueByColumnAndRow(14, $row, $val->growth2);
            $listAkun = $akun->get($val->kode_neraca);
            $level = $val->level_spasi;
            foreach ($listAkun as $item){
                $row++;
                $val  = json_decode(json_encode($item));
                $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_akun);
                $sheet->setCellValueByColumnAndRow(1, $row, str_replace("&nbsp;"," ",$val->nama) );
                $sheet->setCellValueByColumnAndRow(2, $row, $val->jenis);
                $sheet->setCellValueByColumnAndRow(3, $row, $level + 1);
                $sheet->setCellValueByColumnAndRow(4, $row, $val->aggthn);
                $sheet->setCellValueByColumnAndRow(5, $row, $val->actcm_lalu);
                $sheet->setCellValueByColumnAndRow(6, $row, $val->aggcm);
                $sheet->setCellValueByColumnAndRow(7, $row, $val->actcm);
                $sheet->setCellValueByColumnAndRow(8, $row, $val->achiev);
                $sheet->setCellValueByColumnAndRow(9, $row, $val->growth);
                $sheet->setCellValueByColumnAndRow(10, $row, $val->actsd_lalu);
                $sheet->setCellValueByColumnAndRow(11, $row, $val->aggsd);
                $sheet->setCellValueByColumnAndRow(12, $row, $val->actsd);
                $sheet->setCellValueByColumnAndRow(13, $row, $val->achiev2);
                $sheet->setCellValueByColumnAndRow(14, $row, $val->growth2);
            }
            
        }
 
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/CFU_$namafile.xlsx");
	
 
		return "/tmp/CFU_$namafile.xlsx";
	}
	//********************* Monthly Budget CFU 
	function getDataCFUMonthlyBudget($induk, $model, $periode, $tipe, $pembagi = 1000000000){
        try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->cfu;
            if (!isset($pembagi)) $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
                
        
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
            }
            
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
                $jenis = " and t.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
				$filterBudget = " and not a.kode_cfu in ('CFUE') ";
            }else {
                $jenis = "  ";
				$filterBudget = "  ";
            }
                    
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                                   and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                if (strlen($induk) > 4)
                    $field = "z.kode_cfu ";
                else $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons,t.kode_ubis) > 0 ";
                $filterCFU = " where a.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    ) ";
            }else {
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi  ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                               and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $field = "z.kode_induk ";
                $filterCons = " ";
                $filterCFU = " where a.kode_cfu in (
                                        select kode_cfu from bpc_cfu where kode_induk = '$induk'
                                        union 
                                        select kode_cfu from bpc_cfu where kode_cfu = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        where b.kode_induk = '$induk'
                                        union 
                                        select a.kode_cfu from bpc_cfu a 
                                        inner join bpc_cfu b on b.kode_cfu = a.kode_induk 
                                        inner join bpc_cfu c on c.kode_cfu = b.kode_induk 
                                        where c.kode_induk = '$induk'
                                    )";
            }
            $addFilter = $addFilter . $filterCons;
            
            $sql2 = "select distinct a.kode_neraca, left_pad(a.nama,a.level_spasi) as nama, a.tipe,a.jenis_akun, a.sum_header, a.level_spasi, a.kode_induk, a.rowindex
                                                        , nvl(c.actsd,0) as actsd
                                                        , nvl(c.actcm,0) as actcm
                                                        , nvl(d.actcm_lalu,0) as actcm_lalu
                                                        , nvl(e.actsd,0) as actsd_lalu
                                                        , nvl(b.aggcm,0) as aggcm
                                                        , (nvl(b.aggsd,0)) as aggsd 
                                                        , (nvl(b2.aggthn,0)) as aggthn
                                                from bpc_neraca a
                                                left outer join (select x.kode_neraca,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_relakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                inner join (select distinct y.kode_group from BPC_CFU a 
                                                                    inner join bpc_mbudget_rkm y on y.tahun = '$thn1' and jenis = 'S' and a.kode_lokasi = y.kode_lokasi 
                                                                    inner join exs_ubis b on b.kode_ubis = y.kode_ubis and b.kode_lokasi = a.kode_lokasi 
                                                                    and (b.kode_induk = a.kode_ubis or b.kode_ubis in (select x.kode_ubis from exs_ubis x inner join exs_ubis y on y.kode_ubis = x.kode_induk and y.kode_lokasi = x.kode_lokasi where y.kode_induk = a.kode_ubis and y.kode_lokasi = a.kode_lokasi))
                                                                    $filterCFU  $filterBudget
                                                                    ) y on  w.orgs = y.kode_group  
                                                                where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' group by x.kode_neraca) b on b.kode_neraca = a.kode_neraca
                                               where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                           union
                                            select distinct 'UNMAPPED', 'UNMAPPED' as nama, '-' as tipe, 'PENDAPATAN' as jenis_akun, '-' as sum_header, 0 as level_spasi, '00' as kode_induk, 1000 as rowindex
                                                        , sum(nvl(c.actsd,0)) as actsd
                                                        , sum(nvl(c.actcm,0)) as actcm
                                                        , sum(nvl(d.actcm_lalu,0)) as actcm_lalu
                                                        , sum(nvl(e.actsd,0)) as actsd_lalu
                                                        , sum(nvl(b.aggcm,0)) as aggcm
                                                        , sum(nvl(b.aggsd,0)) as aggsd 
                                                        , sum(nvl(b2.aggthn,0)) as aggthn
                                                from bpc_masakun a
                                                left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                                left outer join (select x.kode_akun,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then (jan + feb  )
                                                                             when '03' then (jan + feb + mar  )
                                                                             when '04' then (jan + feb + mar + apr  )
                                                                             when '05' then (jan + feb + mar + apr + mei )
                                                                             when '06' then (jan + feb + mar + apr + mei + jun  )
                                                                             when '07' then (jan + feb + mar + apr + mei + jun + jul )
                                                                             when '08' then (jan + feb + mar + apr + mei + jun + jul + aug )
                                                                             when '09' then (jan + feb + mar + apr + mei + jun + jul + aug + sep )
                                                                             when '10' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt )
                                                                             when '11' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop )
                                                                             when '12' then (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des)
                                                                         end,0)) as aggsd,
                                                                    sum(nvl(case '$bln' when '01' then jan
                                                                             when '02' then feb
                                                                             when '03' then mar
                                                                             when '04' then apr
                                                                             when '05' then mei 
                                                                             when '06' then jun 
                                                                             when '07' then jul
                                                                             when '08' then aug
                                                                             when '09' then sep
                                                                             when '10' then okt
                                                                             when '11' then nop
                                                                             when '12' then des
                                                                        end,0)) as aggcm
                                                                from bpc_masakun x
                                                                inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi
                                                                inner join bpc_budget_osd w on w.kode_akun = x.kode_akun and w.periode = '$lastPeriode'
                                                                inner join (select distinct y.kode_group from BPC_CFU a 
                                                                    inner join bpc_mbudget_rkm y on y.tahun = '$thn1' and jenis = 'S' and a.kode_lokasi = y.kode_lokasi 
                                                                    inner join exs_ubis b on b.kode_ubis = y.kode_ubis and b.kode_lokasi = a.kode_lokasi 
                                                                    and (b.kode_induk = a.kode_ubis or b.kode_ubis in (select x.kode_ubis from exs_ubis x inner join exs_ubis y on y.kode_ubis = x.kode_induk and y.kode_lokasi = x.kode_lokasi where y.kode_induk = a.kode_ubis and y.kode_lokasi = a.kode_lokasi))
                                                                    $filterCFU
                                                                    ) y on  w.orgs = y.kode_group  
                                                                left outer join bpc_relakun o on o.kode_akun = x.kode_akun and o.kode_lokasi = x.kode_lokasi and o.kode_fs = '$model'
                                                                where  x.kode_lokasi = '$lokasi' and o.kode_neraca is null
                                                                group by x.kode_akun
                                                                having sum(nvl(jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des,0)) <> 0 ) b on b.kode_akun = a.kode_akun
                                                where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.actsd,0) <> 0 or nvl(b2.aggthn,0) <> 0)
                                             order by  rowindex";
            //error_log($sql2);
            $rs = $db->execute($sql2);
               
            $node = "";
            $rootNode = new server_util_NodeNRC("00");
            $this->sumHeader = new server_util_Map();
            while ($row = $rs->FetchNextObject(false)){
                if (strtoupper($row->jenis_akun) == "PENDAPATAN")
                    $row->jenis = 'INC';
                else $row->jenis = 'EXP';
                if ($node == ""){
                    $node = new server_util_NodeNRC($rootNode);
                }else if ($node->level == floatval($row->level_spasi) - 1 ){
                    $node = new server_util_NodeNRC($node);
                }else if ($node->level == floatval($row->level_spasi) ){
                    $node = new server_util_NodeNRC($node->owner);
                }else if ($node->level > floatval($row->level_spasi) ){
                    while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
                        $node = $node->owner;
                    }
                    $node = new server_util_NodeNRC($node->owner);
                }
                $node->setData($row);
                if ($row->tipe == "SUMMARY")
                    $this->sumHeader->set($row->kode_neraca, $node);

            }
            //error_log($this->sumHeader->getLength());
            foreach ($rootNode->childs as $key => $val){
                $this->summaries($val);
                if ($val->data->sum_header != "-"){
                    $summaryHeader = explode(",",$val->data->sum_header);

                    foreach ($summaryHeader as $header){
                        $nodeHeader = $this->sumHeader->get($header);
                        if ($nodeHeader){
                            $nodeHeader->data->aggthn += $val->data->aggthn;
                            $nodeHeader->data->aggcm += $val->data->aggcm;
                            $nodeHeader->data->actcm += $val->data->actcm;
                            $nodeHeader->data->aggsd += $val->data->aggsd;
                            $nodeHeader->data->actcm_lalu += $val->data->actcm_lalu;
                            $nodeHeader->data->actsd += $val->data->actsd;
                            $nodeHeader->data->actsd_lalu += $val->data->actsd_lalu;
                        }
                    }
                }
            }
            $this->pembagi = $pembagi;
            //perlu hitung ke summary
            $result = array('rs' => array('rows' => array() ) );
            $this->generateResult($rootNode, $result, $neraca);
            return ($result);    
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
	function getDataCFUMonthlyBudgetDetail($induk, $model, $periode, $tipe, $pembagi = 1000000000){

	}
	function getDataCFUMonthlyBudgetAkun($induk, $model, $periode, $tipe, $pembagi = 1000000000){

	} 
	function downloadDataCFUMonthlyBudget($induk, $model, $periode, $tipe, $pembagi = 1000000000){

	}
	//********************* Monthly Actual AP
	function getDataCFUAPMonthlyActual($compCode, $model, $periode, $tipe, $pembagi = 1000000000){

	}
	function getDataCFUAPMonthlyActualDetail($compCode, $model, $periode, $tipe, $pembagi = 1000000000){

	}
	function getDataCFUAPMonthlyActualAkun($compCode, $model, $periode, $tipe, $pembagi = 1000000000){

	}
	function downloadCFUAPMonthlyActual($compCode, $model, $periode, $tipe, $pembagi = 1000000000){

	}
	//********************* Monthly Budget AP
	function getDataCFUAPMonthlyBudget($compCode, $model, $periode, $tipe, $pembagi = 1000000000){

	}
	function getDataCFUAPMonthlyBudgetDetail($compCode, $model, $periode, $tipe, $pembagi = 1000000000){

	}
	function getDataCFUAPMonthlyBudgetAkun($compCode, $model, $periode, $tipe, $pembagi = 1000000000){

	}
	function downloadCFUAPMonthlyBudget($compCode, $model, $periode, $tipe, $pembagi = 1000000000){

	}
		
	 
	/************************************
	
	      CLEARING HOUSE  (F-4 & F13)
		
	*************************************/
	
	function getDataVendor($compCode){
		$db = $this->getDb();
		$sql = new server_util_arrayList();    
        $sql->add("delete from bpc_vendor_ap where kode_lokasi = '$compCode' ");


		//$rfc = new server_util_rfcLib("rra/sap");
		$rfc = $this->getSAPConnection($compCode);
		$login = new server_util_Map();
		//query 
		if (isset($this->sapuser)){
			$login->set("user", $this->sapuser);
			$login->set("passwd", $this->sappwd);
		}else{
			return "Koneksi SAP tidak di temukan untuk Comp Code $compCode";
		}

		
		$sapImp = new server_util_Map(array(
												"IM_BUKRS" => $compCode
											));
		$sapExpTable = new server_util_Map(array("BANKEYS","VLIST"));
		$sapImpTable = null;
		$dataSAP = $rfc->callRFC($login,"ZGET_LIST_VENDOR", $sapImp, $sapExpTable, $sapImpTable, null, true);
		
		/*
		LIFNR 	LAND1 	ORT01 	PSTLZ 	REGIO 	BEZEI 	ADRNR 	STR_SUPPL1 	POST_CODE1 	STRAS 	CITY1 	MCOD1 	MCOD2 	MCOD3 	TELBX 	TELF1 	STCEG 	AKONT 	VBUND
		0006000000 	ID 	JAKARTA TIMUR 	13350 	01 	DKI Jakarta 	0000024050 	RT.02/02 KEL.BALIMESTER 	13350 	JL.BASUKI RACHMAT NO.8D 	JAKARTA TIMUR 	KOPEGTEL DINASTI 		JAKARTA TIMUR 		8517172 	MUST BE UPDATED 	0020101001 	
		0006000001 	ID 	BOGOR 	16121 	02 	Jawa Barat 	0000024051 		16121 	JL.PENGADILAN NO.14 	BOGOR 	KOPEGTEL BOGOR 		BOGOR 		316123 	01.464.811.7.431.000 	0020101001 	
		0006000002
		*/
		$output = $dataSAP->get("VLIST");
		foreach ($output->getArray() as $val){
			$line = $val->get(0);
			$cust = $line->get("LIFNR");
			$nama =  str_replace("'","''", $line->get("MCOD1") );
			$alamat = "";//$line->get("STRAS");
			$kode = "";//$line->get("LAND1");
			$sql->add("insert into bpc_vendor_ap(kode_vendor, nama, kode_lokasi )
					values('$cust','$nama','$compCode')");
		}
		$ret = $db->execArraySQL($sql);
		return $ret;
	}
	function getCompCode($lokasi){
		$db = $this->getDb();
		error_log("select cocd from bpc_lokasi where kode_lokasi = '$lokasi'");
		$rs = $db->execute("select cocd from bpc_lokasi where kode_lokasi = '$lokasi'");
		if($row = $rs->FetchNextObject(false))
			return $row->cocd;
		else return "";
	}
	function getListVendor($compCode, $rowPerPage, $page){
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));
		//$rowPerPage = 50;
		$start = ($page - 1) * $rowPerPage;
		$end = $start + $rowPerPage;
		$rs = $db->execute("select count(*) as total
						from bpc_vendor_ap a 
							left outer join bpc_vendor_map b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
							left outer join bpc_vendor_group c on c.kode_vendor = b.kode_group
							left outer join bpc_vendor_related d on d.kode_vendor = b.kode_group and d.kode_lokasi = a.kode_lokasi 	
						where a.kode_lokasi = '$compCode'");
		$row = $rs->FetchNextObject(false);
		$total = $row->total;
		$rs = $db->LimitQuery("select a.kode_vendor, a.nama, 
						nvl(c.kode_vendor,'-') as kode_group
						, nvl(c.nama,'-') as nm_group,
						nvl(d.related,'0') as related
						from bpc_vendor_ap a 
							inner join bpc_lokasi e on e.cocd = a.kode_lokasi
							left outer join bpc_vendor_map b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
							left outer join bpc_vendor_group c on c.kode_vendor = b.kode_group
							left outer join bpc_vendor_related d on d.kode_vendor = b.kode_group and d.kode_lokasi = a.kode_lokasi 	
						where a.kode_lokasi = '$compCode'  order by a.kode_vendor", $rowPerPage, $start);
		while ($row = $rs->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array)$row;
		}
		$result["page"] = $page;
		$result["maxpage"] = ceil($total / $rowPerPage);
		$result["total"] = $total;
		return $result;
	}
	function findListVendor($compCode, $search){
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));
		//$rowPerPage = 50;
		$search = strtoupper($search);
		$rs = $db->LimitQuery("select a.kode_vendor, a.nama, 
						nvl(c.kode_vendor,'-') as kode_group, 
						nvl(c.nama,'-') as nm_group,
						nvl(d.related,'0') as related
						from bpc_vendor_ap a 
							inner join bpc_lokasi e on e.cocd = a.kode_lokasi
							left outer join bpc_vendor_map b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
							left outer join bpc_vendor_group c on c.kode_vendor = b.kode_group
							left outer join bpc_vendor_related d on d.kode_vendor = b.kode_group and d.kode_lokasi = a.kode_lokasi 	
						where a.kode_lokasi = '$compCode'  
						and (upper(a.nama) like '%$search%' or a.kode_vendor like '$search%' or c.kode_vendor like '$search%' or upper(c.nama) like '%$search%')
						order by a.kode_vendor",50,0);
		while ($row = $rs->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array)$row;
		}
		return $result;
	}
	/*
	Upload Vendor company code beserta mapping ke group, dan relatednya
	*/
	function editDataVendor($compCode, $vendor){
		$db = $this->getDb();
		$sql = new server_util_arrayList();

		if (isset($vendor->nama))
			$sql->add("update bpc_vendor_ap set nama = '". $vendor->nama ."' where kode_lokasi ='$compCode' and kode_vendor = '". $vendor->kode."' ");

		if (isset($vendor->flag)){
			$sql->add("delete from bpc_vendor_map  where kode_lokasi ='$compCode' and kode_vendor = '". $vendor->kode."'  ");
			$sql->add("insert into bpc_vendor_map(kode_vendor, kode_lokasi, kode_group)
				values('".$vendor->kode."','$compCode', '". $vendor->group ."')");
		}
		if (isset($vendor->flag)){
			$sql->add("delete bpc_vendor_related  where kode_lokasi ='$compCode' and kode_vendor = '". $vendor->group."' ");
			$sql->add("delete bpc_conspack_d  where kode_lokasi ='$compCode' and kode_group = '". $vendor->group."' and modul ='F13' ");
			if ($vendor->flag != "0" && $vendor->flag != "-" && $vendor->flag != ""){
				$sql->add("insert into bpc_vendor_related (kode_lokasi, kode_vendor, related)values('".$compCode."','".$vendor->group."','". $vendor->flag ."' )");
				$sql->add("insert into bpc_conspack_d (kode_lokasi, kode_group, kode_klp, modul)values('".$compCode."','".$vendor->group."','". $vendor->flag ."','F13' )");
			}
		}
		
		return $db->execArraySQL($sql);
	}
	function uploadDataVendorAP($compCode, $userlog, $data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_vendor_ap where kode_lokasi ='$compCode'");
		$tmpGroup = new server_util_Map();
		$group = "";
		foreach ($data as $val){
			$sql->add("insert into bpc_vendor_ap(kode_vendor, nama,  kode_lokasi)
				values('".$val->vendor."','".$val->nama."','$compCode')");
		}
		$ret = $db->execArraySQL($sql);
		return $ret;
		
	}
	function uploadDataVendorTmp($compCode, $data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_vendor_ap_tmp where kode_lokasi ='$compCode'");
		$tmpGroup = new server_util_Map();
		$group = "";
		foreach ($data as $val){
			error_log(json_encode($val));
			$sql->add("insert into bpc_vendor_ap_tmp(kode_vendor, nama,  kode_lokasi)
				values('".$val->vendor."','".$val->nama."','$compCode')");
		}
		$ret = $db->execArraySQL($sql);
		return $ret;
		
	}

	function uploadVendorFromTmp($compCode, $userlog, $data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_vendor_ap where kode_lokasi ='$compCode'");
		$sql->add("insert into bpc_vendor_ap(kode_vendor, nama,  kode_lokasi)
				select kode_vendor, nama, kode_lokasi from bpc_vendor_ap_tmp where kode_lokasi = '$compCode'");
		$ret = $db->execArraySQL($sql);
		return $ret;
		
	}
	function uploadDataVendor($compCode, $userlog, $data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_vendor_ap where kode_lokasi ='$compCode'");
		$sql->add("delete from bpc_vendor_map where kode_lokasi ='$compCode'");
		$sql->add("delete from bpc_vendor_related where kode_lokasi ='$compCode'");
		$sql->add("delete from bpc_conspack_d where kode_lokasi ='$compCode' and modul = 'F13' ");
		$tmpGroup = new server_util_Map();
		$group = "";
		foreach ($data as $val){
			$sql->add("insert into bpc_vendor_ap(kode_vendor, nama,  kode_lokasi)
				values('".$val->vendor."','".$val->nama."','$compCode')");
				
			$sql->add("insert into bpc_vendor_map(kode_vendor, kode_lokasi, kode_group)
				values('".$val->vendor."','$compCode', '". $val->group ."')");
			$group = $tmpGroup->get($val->group); 
			if ($group == null){
				$obj = json_decode(json_encode(array("vendor" => $val->group, "flag" => $val->flag)));
				$tmpGroup->set($val->group, $obj);
			}
		}
		$listRelated = array();
		foreach ($tmpGroup->getArray() as $key => $value) {
			if ($value->flag != "0" && $value->flag != "-")
				$listRelated[] = $value;
		}
		
		
		foreach ($listRelated as $val){
			$sql->add("insert into bpc_vendor_related(kode_vendor, related, kode_lokasi)
				values('".$val->vendor."','".$val->flag."','$compCode')");
			$sql->add("insert into bpc_conspack_d(kode_klp, modul, kode_lokasi, kode_group)values('".$val->flag."','F13','$compCode','') ");
		}
		
		$ret = $db->execArraySQL($sql);
		//$this->uploadDataRelatedVendor($compCode, $listRelated);
		return $ret;
		
	}
	function getListVendorTmp($compCode, $rowPerPage, $page){
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));
		//$rowPerPage = 50;
		$start = ($page - 1) * $rowPerPage;
		$end = $start + $rowPerPage;
		$rs = $db->execute("select count(*) as total
						from bpc_vendor_ap_tmp a 
							left outer join bpc_vendor_map b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
							left outer join bpc_vendor_group c on c.kode_vendor = b.kode_group
							left outer join bpc_vendor_related d on d.kode_vendor = b.kode_group and d.kode_lokasi = a.kode_lokasi 	
						where a.kode_lokasi = '$compCode'");
		$row = $rs->FetchNextObject(false);
		$total = $row->total;
		$rs = $db->LimitQuery("select a.kode_vendor, a.nama, 
						nvl(c.kode_vendor,'-') as kode_group
						, nvl(c.nama,'-') as nm_group,
						nvl(d.related,'0') as related
						from bpc_vendor_ap_tmp a 
							inner join bpc_lokasi e on e.cocd = a.kode_lokasi
							left outer join bpc_vendor_map b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
							left outer join bpc_vendor_group c on c.kode_vendor = b.kode_group
							left outer join bpc_vendor_related d on d.kode_vendor = b.kode_group and d.kode_lokasi = a.kode_lokasi 	
						where a.kode_lokasi = '$compCode'  order by a.kode_vendor", $rowPerPage, $start);
		while ($row = $rs->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array)$row;
		}
		$result["page"] = $page;
		$result["maxpage"] = ceil($total / $rowPerPage);
		$result["total"] = $total;
		return $result;
	}
	function findListVendorTmp($compCode, $search){
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));
		//$rowPerPage = 50;
		$search = strtoupper($search);
		$rs = $db->LimitQuery("select a.kode_vendor, a.nama, 
						nvl(c.kode_vendor,'-') as kode_group, 
						nvl(c.nama,'-') as nm_group,
						nvl(d.related,'0') as related
						from bpc_vendor_ap_tmp a 
							inner join bpc_lokasi e on e.cocd = a.kode_lokasi
							left outer join bpc_vendor_map b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
							left outer join bpc_vendor_group c on c.kode_vendor = b.kode_group
							left outer join bpc_vendor_related d on d.kode_vendor = b.kode_group and d.kode_lokasi = a.kode_lokasi 	
						where a.kode_lokasi = '$compCode'  
						and (upper(a.nama) like '%$search%' or a.kode_vendor like '$search%' or c.kode_vendor like '$search%' or upper(c.nama) like '%$search%')
						order by a.kode_vendor",50,0);
		while ($row = $rs->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array)$row;
		}
		return $result;
	}
	function uploadDataRelatedVendor($compCode, $data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_vendor_related where kode_lokasi ='$compCode'");
		foreach ($data as $val){
			$sql->add("insert into bpc_vendor_related(kode_vendor, related, kode_lokasi)
				values('".$val->vendor."','".$val->flag."','$compCode')");
			
		}
		return $db->execArraySQL($sql);
	}
	function uploadDataMapVendor($compCode, $data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_vendor_map where kode_lokasi ='$compCode'");
		$sql->add("delete from bpc_vendor_related where kode_lokasi ='$compCode'");
		$sql->add("delete from bpc_conspack_d where kode_lokasi ='$compCode' and modul = 'F13' ");
		$tmpGroup = new server_util_Map();
		$group = "";
		foreach ($data as $val){
			$sql->add("insert into bpc_vendor_map(kode_vendor, kode_lokasi, kode_group)
				values('".$val->vendor."','$compCode', '". $val->group ."')");
			$group = $tmpGroup->get($val->group); 
			if ($group == null){
				$obj = json_decode(json_encode(array("vendor" => $val->group, "flag" => $val->flag)));
				$tmpGroup->set($val->group, $obj);
			}
		}
		$listRelated = array();
		foreach ($tmpGroup->getArray() as $key => $value) {
			$listRelated[] = $value;
		}
		
		
		foreach ($listRelated as $val){
			$sql->add("insert into bpc_vendor_related(kode_vendor, related, kode_lokasi)
				values('".$val->vendor."','".$val->flag."','$compCode')");
			$sql->add("insert into bpc_conspack_d(kode_klp, modul, kode_lokasi, kode_group)
				values('".$val->flag."','F13','$compCode','".$val->vendor."')");
		}
		return $db->execArraySQL($sql);
		
	}
	function getListVendorMapTmp($compCode, $rowPerPage, $page){
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));
		//$rowPerPage = 50;
		$start = ($page - 1) * $rowPerPage;
		$end = $start + $rowPerPage;
		$rs = $db->execute("select count(*) as total
						from bpc_vendor_ap a 
							left outer join bpc_vendor_map_tmp b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
							left outer join bpc_vendor_group c on c.kode_vendor = b.kode_group
							left outer join bpc_vendor_related_tmp d on d.kode_vendor = b.kode_group and d.kode_lokasi = a.kode_lokasi 	
						where a.kode_lokasi = '$compCode'");
		$row = $rs->FetchNextObject(false);
		$total = $row->total;
		$rs = $db->LimitQuery("select a.kode_vendor, a.nama, 
						nvl(c.kode_vendor,'-') as kode_group
						, nvl(c.nama,'-') as nm_group,
						nvl(d.related,'0') as related
						from bpc_vendor_ap a 
							inner join bpc_lokasi e on e.cocd = a.kode_lokasi
							left outer join bpc_vendor_map_tmp b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
							left outer join bpc_vendor_group c on c.kode_vendor = b.kode_group
							left outer join bpc_vendor_related_tmp d on d.kode_vendor = b.kode_group and d.kode_lokasi = a.kode_lokasi 	
						where a.kode_lokasi = '$compCode'  order by a.kode_vendor", $rowPerPage, $start);
		while ($row = $rs->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array)$row;
		}
		$result["page"] = $page;
		$result["maxpage"] = ceil($total / $rowPerPage);
		$result["total"] = $total;
		return $result;
	}
	function uploadDataMapVendorTmp($compCode, $data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_vendor_map_tmp where kode_lokasi ='$compCode'");
		$sql->add("delete from bpc_vendor_related_tmp where kode_lokasi ='$compCode'");
		$tmpGroup = new server_util_Map();
		$group = "";
		foreach ($data as $val){
			error_log(json_encode($val));
			if ($val->vendor != "" && strtoupper($val->vendor) != "KODE VENDOR"){
				$sql->add("insert into bpc_vendor_map_tmp(kode_vendor, kode_lokasi, kode_group)
					values('".$val->vendor."','$compCode', '". $val->group ."')");
				$group = $tmpGroup->get($val->group); 
				if ($group == null){
					$obj = json_decode(json_encode(array("vendor" => $val->group, "flag" => $val->flag)));
					$tmpGroup->set($val->group, $obj);
				}
			}
		}
		$listRelated = array();
		foreach ($tmpGroup->getArray() as $key => $value) {
			$listRelated[] = $value;
		}
		
		
		foreach ($listRelated as $val){
			$sql->add("insert into bpc_vendor_related_tmp(kode_vendor, related, kode_lokasi)
				values('".$val->vendor."','".$val->flag."','$compCode')");
			
		}
		return $db->execArraySQL($sql);
		
	}
	function uploadVendorMapFromTmp($compCode){
		try{
			$db = $this->getDb();
			$sql = new server_util_arrayList();
			$sql->add("delete from bpc_vendor_map where kode_lokasi ='$compCode'");
			$sql->add("delete from bpc_vendor_related where kode_lokasi ='$compCode'");
			$sql->add("delete from bpc_conspack_d where kode_lokasi ='$compCode' and modul = 'F13'");
			$sql->add("insert into bpc_vendor_map select * from bpc_vendor_map_tmp where kode_lokasi='$compCode' ");
			$sql->add("insert into bpc_vendor_related select * from bpc_vendor_related_tmp where kode_lokasi = '$compCode' ");
			$sql->add("insert into bpc_conspack_d(kode_klp, modul, kode_lokasi, kode_group) select related, 'F13', '$compCode', kode_vendor from bpc_vendor_related_tmp where kode_lokasi = '$compCode' ");
			error_log("Save from TMP");
			$ret = $db->execArraySQL($sql);
			error_log($ret);
		}catch(Exception $e){

		}
		return $ret;

	}
	function downloadDataVendor($compCode){
		$db = $this->getDb();
		
		
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 
 
		// Add Data in your file
		
		
					
		
			
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$column = array("Kode Vendor","Nama","Related","Kode Group","Nama Group");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
			
	
		// Rename worksheet
		$objPHPExcel->getActiveSheet()->setTitle('Vendor');
 		
 		$rs = $db->execute("select a.kode_vendor, a.nama, 
						nvl(b.kode_vendor,'-') as kode_group, nvl(c.nama,'-') as nm_group,
						nvl(d.related,'0') as related
						from bpc_vendor_ap a 
							inner join bpc_lokasi e on e.cocd = a.kode_lokasi
							left outer join bpc_vendor_map b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
							left outer join bpc_vendor_group c on c.kode_vendor = b.kode_group
							left outer join bpc_vendor_related d on d.kode_vendor = b.kode_group and d.kode_lokasi = a.kode_lokasi 	
						where a.kode_lokasi = '$compCode'  order by a.kode_vendor");
		$row++;
		while ($line = $rs->FetchNextObject(false)){
			$sheet->setCellValueByColumnAndRow(0, $row, $line->kode_vendor);
			$sheet->setCellValueByColumnAndRow(1, $row, $line->nama);
			$sheet->setCellValueByColumnAndRow(2, $row, $line->kode_group);
			$sheet->setCellValueByColumnAndRow(3, $row, $line->nm_group);
			$sheet->setCellValueByColumnAndRow(4, $row, $line->related);
			$row++;
		}
 
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/$compCode-vendorMap.xlsx");
	
 
		return "/tmp/$compCode-vendorMap.xlsx";	
	}
	
	/*
	Lokasi konsol
	*/
	function uploadDataVendorGroup($userlog, $data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$lokasi = "9000";
		$sql->add("delete from bpc_vendor_group where kode_lokasi  ='$lokasi'");
		$sql->add("delete from bpc_cust_group where kode_lokasi  ='$lokasi'");
		foreach ($data as $val){
			if (substr($val->vendor,0,1) != "V")
				$val->vendor = "V" . $val->vendor; 
			$sql->add("insert into bpc_vendor_group(kode_vendor, nama, related_telkom, related_cons ,kode_lokasi, userlog, tgl_update)
				values('".$val->vendor."','".str_replace("'","''",$val->nama)."','".$val->flag1."','".$val->flag2."','$lokasi','$userlog', sysdate)");
			
		}
		$sql->add("insert into bpc_cust_group(kode_cust, nama, related_telkom, related_cons ,kode_lokasi, userlog, tgl_update)
					 select concat ('C', substr(kode_vendor,2,5)), nama, related_telkom, related_cons ,kode_lokasi, userlog, tgl_update from bpc_vendor_group where kode_lokasi  ='$lokasi' ");
		
		return $db->execArraySQL($sql);
	}
	function uploadDataVendorGroupFromTmp($userlog, $data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$lokasi = "9000";
		$sql->add("delete from bpc_vendor_group where kode_lokasi  ='$lokasi'");
		$sql->add("delete from bpc_cust_group where kode_lokasi  ='$lokasi'");
		$sql->add("delete from bpc_conspack_d where kode_lokasi  ='$lokasi'");

		$sql->add("insert into bpc_vendor_group(kode_vendor, nama, related_telkom, related_cons ,kode_lokasi, userlog, tgl_update)
					 select kode_vendor, nama, related_telkom, related_cons ,kode_lokasi, userlog, tgl_update from bpc_vendor_group_tmp");
		$sql->add("insert into bpc_conspack_d select related_telkom, 'F13', '$lokasi', kode_vendor from bpc_vendor_group_tmp");
		$sql->add("insert into bpc_conspack_d select related_telkom, 'F4', '$lokasi', concat ('C', substr(kode_vendor,2,5)) from bpc_vendor_group_tmp");
		//optional tambah cust asumsi vendor dan cust sama 

		$sql->add("insert into bpc_cust_group(kode_cust, nama, related_telkom, related_cons ,kode_lokasi, userlog, tgl_update)
					 select concat ('C', substr(kode_vendor,2,5)), nama, related_telkom, related_cons ,kode_lokasi, userlog, tgl_update from bpc_vendor_group_tmp");
		return $db->execArraySQL($sql);
	}
	function uploadDataVendorGroupTmp($userlog, $data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$lokasi = "9000";
		$sql->add("delete from bpc_vendor_group_tmp where kode_lokasi  ='$lokasi'");
		
		foreach ($data as $val){
			if (strtoupper( $val->vendor) != "KODE"){
				if ($val->vendor != null) {
					if (substr($val->vendor,0,1) != "V")
						$val->vendor = "V" . $val->vendor; 
					$sql->add("insert into bpc_vendor_group_tmp(kode_vendor, nama, related_telkom, related_cons ,kode_lokasi, userlog, tgl_update)
						values('".$val->vendor."','".str_replace("'","''",$val->nama)."','".$val->flag1."','".$val->flag2."','$lokasi','$userlog', sysdate)");
				}
			}
			
		}
		return $db->execArraySQL($sql);
	}
	function getListVendorGroup($compCode, $rowPerPage, $page){
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));
		//$rowPerPage = 50;
		$start = ($page - 1) * $rowPerPage;
		$end = $start + $rowPerPage;
		$rs = $db->execute("select count(*) as total
						from bpc_vendor_group a
						where kode_lokasi = '$compCode'");
		$row = $rs->FetchNextObject(false);
		$total = $row->total;
		$rs = $db->LimitQuery("select a.kode_vendor, a.nama, related_telkom, related_cons  
						
						from bpc_vendor_group a
							 	
						where kode_lokasi = '$compCode'  order by kode_vendor", $rowPerPage, $start);
		while ($row = $rs->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array)$row;
		}
		$result["page"] = $page;
		$result["maxpage"] = ceil($total / $rowPerPage);
		$result["total"] = $total;
		return $result;
	}
	function getListVendorGroupTmp($compCode, $rowPerPage, $page){
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));
		//$rowPerPage = 50;
		$start = ($page - 1) * $rowPerPage;
		$end = $start + $rowPerPage;
		$rs = $db->execute("select count(*) as total
						from bpc_vendor_group_tmp a
						where kode_lokasi = '$compCode'");
		$row = $rs->FetchNextObject(false);
		$total = $row->total;
		$rs = $db->LimitQuery("select a.kode_vendor, a.nama, related_telkom, related_cons  
						
						from bpc_vendor_group_tmp a
							 	
						where kode_lokasi = '$compCode'  order by kode_vendor", $rowPerPage, $start);
		while ($row = $rs->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array)$row;
		}
		$result["page"] = $page;
		$result["maxpage"] = ceil($total / $rowPerPage);
		$result["total"] = $total;
		return $result;
	}
	function findListVendorGroup($compCode, $search){
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));
		$search = strtoupper($search);
		$rs = $db->execute("select count(*) as total
						from bpc_vendor_group a
						where kode_lokasi = '$compCode'
						and (upper(a.nama) like '%$search%' or a.kode_vendor like '$search%') 
						");
		$row = $rs->FetchNextObject(false);
		$total = $row->total;
		$rs = $db->LimitQuery("select a.kode_vendor, a.nama, related_telkom, related_cons  
						from bpc_vendor_group a
						where kode_lokasi = '$compCode'
						and (upper(a.nama) like '%$search%' or a.kode_vendor like '$search%' )  
						order by kode_vendor", 50, 0);
		while ($row = $rs->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array)$row;
		}
		$result["page"] = $page;
		$result["maxpage"] = ceil($total / $rowPerPage);
		$result["total"] = $total;
		return $result;
	}
	function loadVendorGroup($compCode, $kode){
		$db = $this->getDb();
		$result = array();
		$rs = $db->LimitQuery("select a.kode_vendor, a.nama, related_telkom, related_cons  
						from bpc_vendor_group a
						where kode_lokasi = '$compCode'
						and kode_vendor = '$kode'  
						order by kode_vendor", 50, 0);
		while ($row = $rs->FetchNextObject(false)){
			$result = (array)$row;
		}
		
		return $result;
	}
	function editVendorGroup($compCode, $vendor, $userlog){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		//$lokasi = "9000";

		if (substr($vendor->kode,0,1) == "V")
			$cust = "C" . substr($vendor->kode,1,5);
		else {
			$cust = "C" . $vendor->kode;
			$vendor->kode = "V" . $vendor->kode;
		}
		$rs = $db->execute("select kode_vendor from bpc_vendor_group where kode_lokasi ='$compCode' and kode_vendor = '". $vendor->kode."'");
		if ($row = $rs->FetchNextObject(false)){
			$sql->add("update bpc_vendor_group set nama='". $vendor->nama ."', related_telkom = '". $vendor->flag ."', related_cons = '". $vendor->flag ."' where kode_lokasi ='$compCode' and kode_vendor = '". $vendor->kode."' ");
			$sql->add("update bpc_cust_group set nama='". $vendor->nama ."', related_telkom = '". $vendor->flag ."', related_cons = '". $vendor->flag ."' where kode_lokasi ='$compCode' and kode_cust = '". $cust ."' ");	
		}else {
			$sql->add("insert into bpc_vendor_group(kode_vendor, nama, related_telkom, related_cons ,kode_lokasi, userlog, tgl_update)
					values
					('". $vendor->kode."','". $vendor->nama."', '". $vendor->flag."','". $vendor->flag."', '$compCode', '$userlog', sysdate) ");
			$sql->add("insert into bpc_cust_group(kode_cust, nama, related_telkom, related_cons ,kode_lokasi, userlog, tgl_update)
					values
					('". $cust."','". $vendor->nama."', '". $vendor->flag."','". $vendor->flag."', '$compCode', '$userlog', sysdate)");
		}

		
		
		if (isset($vendor->flag)){
			$sql->add("delete bpc_vendor_related  where kode_lokasi ='$compCode' and kode_vendor = '". $vendor->kode."' ");
			$sql->add("delete bpc_conspack_d  where kode_lokasi ='$compCode' and kode_group = '". $vendor->kode."' and modul = 'F13' ");
			$sql->add("delete bpc_conspack_d  where kode_lokasi ='$compCode' and kode_group = '". $cust."' and modul = 'F4' ");
			if ($vendor->flag != "0"){
				$sql->add("insert into bpc_vendor_related (kode_lokasi, kode_vendor, related)values('".$compCode."','".$vendor->kode."','". $vendor->flag ."' )");
				$sql->add("insert into bpc_conspack_d (kode_lokasi, kode_group, kode_klp, modul)values('".$compCode."','".$vendor->kode."','". $vendor->flag ."','F13' )");
				$sql->add("insert into bpc_conspack_d (kode_lokasi, kode_group, kode_klp, modul)values('".$compCode."','".$cust."','". $vendor->flag ."','F4' )");
			}
		}

		return $db->execArraySQL($sql);
	}
	function deleteVendorGroup($compCode, $vendor){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_vendor_group where kode_vendor = '". $vendor."' and kode_lokasi = '$compCode'");
		
		return $db->execArraySQL($sql);
	}

	function uploadDataAP($userid, $compCode, $data, $periode){
		//periode, kode_vendor, kode_lokasi, curr, kurs, nilai, tgl_duedate, kurs_adj, userid, tgl_update
		$db = $this->getDb();


		$rs = $db->execute("select status_app from bpc_vendor_sum where kode_lokasi = '$compCode' and periode = '$periode' ");
		if ($row = $rs->FetchNextObject(false)){
			if ($row->status_app == 1){
				return "Data sudah disubmit ke Telko";
			}
		}

		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_vendor_sum where kode_lokasi ='$compCode' and periode = '$periode'");
		$lokKonsol = $this->getCompCodeConsol();
		$rsOther1 = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$lokKonsol' and tipe = 'OT_THIRD' and modul = 'FR' ");
		if ($row = $rsOther1->FetchNextObject(false)){
			$kodeOtherThird = $row->kode_klp;
		}
		foreach ($data as $val){
			$related = "";
			$rs = $db->execute("select related from bpc_cust_related where kode_cust = '$val->cust' and kode_lokasi = '$compCode'  ");
			if ($row = $rs->FetchNextObject(false))
				$related1 = $row->related;
			else $related1 = "C99999";
			$rs = $db->execute("select related from bpc_cust_related where kode_cust = '$val->cust' and kode_lokasi = '$lokKonsol'  ");
			if ($row = $rs->FetchNextObject(false))
				$related2 = $row->related;
			else $related2 = $kodeOtherThird;
			$sql->add("insert into bpc_vendor_sum(periode, kode_vendor, kode_lokasi, curr, kurs,nilai_orig,  nilai, kode_akun, tgl_duedate, kurs_adj, userid, tgl_update, keterangan, related_ap, related_group)
				values('$periode','". $val->vendor ."','".$compCode."','".$val->curr."','". $val->kurs ."','". floatval($val->nilai_orig)."','". floatval($val->nilai) ."','". $val->akun ."',null,0, '$userid',sysdate,'$val->keterangan','$related1','$related2')");
			
			$sql->add("delete bpc_vendor_ap_ket   where kode_lokasi = '$compCode' and periode = '$periode' and kode_vendor = '$val->vendor'  ");
			if ($val->keterangan <> '-' && $val->keterangan <> "" && strlen($val->keterangan) > 4)
				$sql->add("insert into bpc_vendor_ap_ket(kode_lokasi, kode_vendor, periode, keterangan)
						values('$compCode','$val->vendor','$periode','$val->keterangan') ");
		}
		return $db->execArraySQL($sql);
	}
	/*
	CURRENCY
	*/
	function getKurs($curr, $tgl = null, $type = null, $rfc = null){
		$login = new server_util_Map();
		$rfc = $this->getSAPConnection("1000");
		if (isset($this->sapuser)){
			$login->set("user", $this->sapuser);
			$login->set("passwd", $this->sappwd);
		}else{
			return "Koneksi SAP tidak di temukan untuk Comp Code";
		}
		if (!isset($tgl) )
			$tgl = date("Ymd");
		if (!isset($type))
			$type = "B";	
		$sapImp = new server_util_Map(array(
												"DATE" => $tgl,
												"FROM_CURR" => $curr,
												"RATE_TYPE" => $type,
												"TO_CURRNCY" => "IDR"
											));
		$sapExpTable = null;//new server_util_Map(array("EXCH_RATE","RETURN"));
		$sapImpTable = null;
		$sapExp = new server_util_Map(array("EXCH_RATE","RETURN"));
		//echo "Get SAP<br>";
		$dataSAP = $rfc->callRFC($login,"ZFMFI_EXCHANGERATE", $sapImp, $sapExpTable, $sapImpTable, $sapExp, false, true);
		
		$output = $dataSAP->get("EXCH_RATE");
		//RATE_TYPE 	FROM_CURR 	TO_CURRNCY 	VALID_FROM 	EXCH_RATE 	FROM_FACTOR 	TO_FACTOR 	EXCH_RATE_V 	FROM_FACTOR_V 	TO_FACTOR_V
			
		return $output->getArray();

	}
	//---------- Currency
	function addCurr($compCode, $curr, $nilai, $periode, $userlog){
		try{
			$db = $this->getDb();
			$sql = new server_util_arrayList();
			$sql->add("delete from bpc_param_curr where curr = '$curr' and kode_lokasi = '$compCode' and periode = '$periode'");
			$sql->add("insert into bpc_param_curr(kode_lokasi, curr, nilai, periode, user_update, tgl_update)values
						('$compCode','$curr','$nilai', '$periode','$userlog',now())");
			return $db->execArraySQL($sql);
		}catch(Exception $e){
			error_log($e->getMessage());
		}	
	}
	function loadCurr($compCode, $periode){
		$db = $this->getDb();
		$rs = $db->execute("select curr, nilai from bpc_param_curr where kode_lokasi = '$compCode' and periode = '$periode' ");
		$result = array();
		while ($row = $rs->FetchNextObject(false)){
			$result[] = (array)$row;
		}
		return $result;
	}
	//---------- SAP Connection
	function addSAPConn($kode, $nama, $ip, $sysnum, $clientid, $router, $userlog){
		try{
			$db = $this->getDb();
			$sql = new server_util_arrayList();
			$sql->add("delete from bpc_sapconn where kode = '$kode' ");
			$sql->add("insert into bpc_sapconn(kode, desk, ip, sys_id, ins_num, sap_router, userlog, tgl_update)values
						('$kode','$nama','$ip', '$sysnum','$clientid','$router','$userlog',now())");
			return $db->execArraySQL($sql);
		}catch(Exception $e){
			error_log($e->getMessage());
		}	
	}
	function getSAPConn($kode){
		try{
			$db = $this->getDb();
			$rs = $db->execute("select * from bpc_sapconn where kode = '$kode' ");
			if ($row = $rs->FetchNextObject(false)){
				return (array)$row;
			}
			return null;
		}catch(Exception $e){
			error_log($e->getMessage());
		}	
	}
	function loadSAPConn($search = ""){
		$db = $this->getDb();
		$rs = $db->execute("select kode, desk, ip, sys_id, ins_num, sap_router from bpc_sapconn where desk like '%$search%' or ip like '%$search%' ");
		$result = array();
		while ($row = $rs->FetchNextObject(false)){
			$result[] = (array)$row;
		}
		return $result;
	}
	function setCompCodeSAPConn($compCode, $idConn, $sapuser, $sappwd, $userlog){
		try{
			$db = $this->getDb();
			$sql = new server_util_arrayList();
			$sql->add("delete from bpc_conn where kode_lokasi = '$compCode' ");
			$sql->add("insert into bpc_conn(kode_lokasi, kode_server, sapuser, sappwd, userlog, tgl_update)values
						('$compCode','$idConn','$sapuser', '$sappwd','$userlog',now())");
			return $db->execArraySQL($sql);
		}catch(Exception $e){
			error_log($e->getMessage());
		}	
	}
	function getCompCodeSAPConn($compCode){
		try{
			$db = $this->getDb();
			$rs = $db->execute("select a.kode_lokasi, a.nama
							, c.kode as kode_server, c.desk, c.ip, c.sys_id, c.ins_num, c.sap_router 
							, b.sapuser, b.sappwd
					from bpc_lokasi a 
						left outer join bpc_conn b on b.kode_lokasi = a.cocd 
						left outer join bpc_sapconn c on c.kode = b.kode_server
					 where a.cocd = '$compCode'");
			if ($row = $rs->FetchNextObject(false)){
				return (array)$row;
			}
			return null;
		}catch(Exception $e){
			error_log($e->getMessage());
		}	
	}
	function loadCompCodeConn($search = ""){
		$db = $this->getDb();
		$rs = $db->execute("select a.cocd, a.nama, a.no_urut
							, c.kode as kode_server, c.desk, c.ip, c.sys_id, c.ins_num, c.sap_router 
							, b.sapuser
					from bpc_lokasi a 
						left outer join bpc_conn b on b.kode_lokasi = a.cocd 
						left outer join bpc_sapconn c on c.kode = b.kode_server
					 where a.nama like '%$search%' or a.cocd like '%$search%' or c.ip like '%$search%'
					 order by a.cocd ");
		$result = array();
		while ($row = $rs->FetchNextObject(false)){
			$result[] = (array)$row;
		}
		return $result;
	}
	//-------------------------------
	function getDataAPFromRFC($compCode, $tgl, $periode, $kurs2, $vendor1, $vendor2){
		$db = $this->getDb();
		$sql = new server_util_arrayList();   
		$sql->add("delete from bpc_vendor_det where kode_lokasi = '$compCode' and periode = '$periode' ");
		//$sql->add("delete from bpc_vendor_sum where kode_lokasi = '$compCode' and periode = '$periode' ");

		//$rfc = new server_util_rfcLib("rra/sap");
		$login = new server_util_Map();
		//query 
		
		$rfc = $this->getSAPConnection($compCode);
		if (isset($this->sapuser)){
			$login->set("user", $this->sapuser);
			$login->set("passwd", $this->sappwd);
		}else{
			return "Koneksi SAP tidak di temukan untuk Comp Code $compCode";
		}
		$sapImp = new server_util_Map(array(
												"IM_BUKRS" => $compCode,
												"IM_KEYDATE" => $tgl,
												"IM_NOTEDITEMS" => " "
											));
		$vendor = new server_util_arrayList();
		if ($vendor2 == ""){
			if ($vendor1 == "")
				$vendor1 = "*";
			$vendor->add(array("SIGN"=>"I","OPTION"=>"CP","LOW"=> $vendor1,"HIGH"=> $vendor2));
		}else {
			$vendor->add(array("SIGN"=>"I","OPTION"=>"BT","LOW"=> $vendor1,"HIGH"=> $vendor2));
		}
		$sapExpTable = new server_util_Map(array("LINEITEMS"));
		$sapImpTable = new server_util_Map(array("T_LIFNR" => $vendor));
		//echo "Get SAP<br>";
		$dataSAP = $rfc->callRFC($login,"ZGET_OPENITEM_FBL1N", $sapImp, $sapExpTable, $sapImpTable, null, false, true );

		$rfcConnect = $dataSAP->get("rfc");

		//echo "done SAP<br>";
		 /*
		 	//periode, kode_cust, kode_lokasi, curr, kurs, nilai, tgl_duedate, kurs_adj, userid, tgl_update, keterangan, ref_doc, tgl_post, tgl_entry, tgl_doc, kode_ba 
		
          COMP_CODE 	VENDOR 	SP_GL_IND 	CLEAR_DATE 	CLR_DOC_NO 	ALLOC_NMBR 	FISC_YEAR 	DOC_NO 	ITEM_NUM 	PSTNG_DATE 	DOC_DATE 	ENTRY_DATE 	CURRENCY 	LOC_CURRCY 	REF_DOC_NO 	DOC_TYPE 	FIS_PERIOD 	POST_KEY 	DB_CR_IND 	BUS_AREA 	TAX_CODE 	LC_AMOUNT 	AMT_DOCCUR 	LC_TAX 	TX_DOC_CUR 	ITEM_TEXT 	BRANCH 	BLINE_DATE 	PMNTTRMS 	DSCT_DAYS1 	DSCT_DAYS2 	NETTERMS 	DSCT_PCT1 	DSCT_PCT2 	DISC_BASE 	DSC_AMT_LC 	DSC_AMT_DC 	PYMT_METH 	PMNT_BLOCK 	FIXEDTERMS 	INV_REF 	INV_YEAR 	INV_ITEM 	DUNN_BLOCK 	DUNN_KEY 	LAST_DUNN 	DUNN_LEVEL 	DUNN_AREA 	W_TAX_CODE 	W_TAX_BASE 	WI_TAX_AMT 	DOC_STATUS 	NXT_DOCTYP 	VAT_REG_NO 	EXEMPT_NO 	W_TAX_EXPT 	REASON_CDE 	PMTMTHSUPL 	REF_KEY_1 	REF_KEY_2 	T_CURRENCY 	AMOUNT 	NET_AMOUNT 	NAME 	NAME_2 	NAME_3 	NAME_4 	POSTL_CODE 	CITY 	COUNTRY 	STREET 	PO_BOX 	POBX_PCD 	POBK_CURAC 	BANK_ACCT 	BANK_KEY 	BANK_CTRY 	TAX_NO_1 	TAX_NO_2 	TAX 	EQUAL_TAX 	REGION 	CTRL_KEY 	INSTR_KEY 	PAYEE_CODE 	LANGU 	BILL_LIFE 	BE_TAXCODE 	BILLTAX_LC 	BILLTAX_FC 	LC_COL_CHG 	COLL_CHARG 	CHGS_TX_CD 	ISSUE_DATE 	USAGEDATE 	BILL_USAGE 	DOMICILE 	DRAWER 	CTRBNK_LOC 	DRAW_CITY1 	DRAWEE 	DRAW_CITY2 	DISCT_DAYS 	DISCT_RATE 	ACCEPTED 	BILLSTATUS 	PRTEST_IND 	BE_DEMAND 	OBJ_TYPE 	REF_DOC 	REF_ORG_UN 	REVERSAL_DOC 	SP_GL_TYPE 	NEG_POSTNG 	REF_DOC_NO_LONG 	VBUND
				1000 	0006103132 		00000000 		KOREKSI POT TELKOM 	2012 	0100081696 	2 	20120531 	20120531 	20120604 	IDR 	IDR 	REKLAS PPH 21 	SA 	5 	31 	H 	T009 		13120114.0000- 	13120114.0000- 	0.0000 	0.0000 	KOREKSI HONOR KONSULTAN DEKOM MEI 12 		20120531 	T001 	0 	0 	0 	0.000 	0.000 	13120114.0000- 	0.0000 	0.0000 					0 	0 			00000000 	0 		XX 	118081026.0000 	0.0000 					0.0000 					IDR 	13120114.0000 	0.0000 																								0 		0.0000 	0.0000 	0.0000 	0.0000 		00000000 	00000000 								0 	0.00000 					BKPF 	0100081696 	10002012 				REKLAS PPH 21 	

            */
		$output = $dataSAP->get("LINEITEMS");
		$groupKurs = new server_util_Map();
		foreach ($output->getArray() as $val){
			$line = $val->get(0);
			///error_log(json_encode($line->getArray()) );
			
			$vendor = $line->get("VENDOR");
			//if (substr($vendor,0,2) == "00" && strlen($vendor) == 10 )
			//	$vendor = substr($vendor,2,8);

			$curr = $line->get("CURRENCY");
			$kurs = 1;

			$dc = $line->get("DB_CR_IND");
			$nilai_orig = floatval($line->get("AMT_DOCCUR"));
			$nilai = floatval($line->get("LC_AMOUNT"));

			if ($dc == "H") {
				$nilai_orig = -$nilai_orig;
				$nilai = -$nilai;
			}

			$akun = $line->get("HKONT");
			
			$tgl_duedate = $line->get("BLINE_DAT");
			$tgl_duedate = "to_date('$tgl_duedate','YYYYmmdd')";

			$ket = $line->get("ITEM_TEXT");
			
			$ref_doc = $line->get("DOC_NO");

			$tgl_post = $line->get("PSTNG_DATE");
			$tgl_entry = $line->get("ENTRY_DATE");
			$tgl_doc = $line->get("DOC_DATE");
			$ba = $line->get("BUS_AREA");
			$sql->add("insert into bpc_vendor_det(periode, kode_vendor, kode_lokasi, curr, kurs, nilai, nilai_orig,  tgl_duedate, kurs_adj, userid, tgl_update, keterangan, ref_doc, tgl_post, tgl_entry, tgl_doc, kode_ba, kode_akun, tgl_rfc)
				values('$periode','". $vendor ."','".$compCode."','".$curr."','". $kurs ."','". $nilai ."','". $nilai_orig ."', ".$tgl_duedate." ,'". $kurs2 ."', '$userid',sysdate, '". str_replace("'","''", $ket) ."', '". $ref_doc ."', '". $tgl_post ."', '". $tgl_entry ."', '". $tgl_doc ."', '". $ba ."','$akun','$tgl')");
		}
		/*

		$sql->add("insert into bpc_vendor_sum(periode, kode_vendor, kode_lokasi, curr, kurs, nilai, nilai_orig, tgl_duedate, kurs_adj, userid, tgl_update, kode_akun, status_sap)
					select a.periode, b.kode_group, a.kode_lokasi, a.curr, kurs, sum(nilai) as nilai, sum(nilai_orig) as nilai_orig, sysdate, 0,   '$userid',sysdate, a.kode_akun,'1'
					from bpc_vendor_det a 
					inner join bpc_vendor_map b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
					where a.kode_lokasi = '$compCode' and a.periode ='$periode'
					group by a.periode, b.kode_group, a.kode_lokasi, a.curr, kurs, a.kode_akun ");
		*/
		$ret = $db->execArraySQL($sql);
		
		$sql = new server_util_arrayList();
		$rs = $db->execute("select distinct curr from bpc_vendor_det a where a.kode_lokasi = '$compCode' and a.periode ='$periode' and curr <> 'IDR' "); 
	    while ($row = $rs->FetchNextObject(false)){
			$nilai = $this->getParamKurs($compCode, $periode);
			if ($nilai == 0){
				$nilai = $this->getParamKurs("9000", $periode);
			}
			$nilai = floatval($nilai);
			$sql->add("update bpc_vendor_det set kurs_adj = $nilai where kode_lokasi = '$compCode' and periode ='$periode' and curr = '". $row->curr ."' ");	
		}
		$rt = $db->execArraySQL($sql);
		
		return $ret;
	}
	function getParamKurs($compCode, $periode){
		$rs = $this->db->execute("select nilai from bpc_param_curr where kode_lokasi = '$compCode' and periode = '$periode' ");
		if($row = $rs->FetchNextObject(false)){
			return $row->nilai;
		}else return 1;
	}
	function saveRFCAPDetail($compCode,$tgl, $periode){
		$db = $this->getDb();
		$rs = $db->execute("select status_app from bpc_vendor_sum where kode_lokasi = '$compCode' and periode = '$periode' ");
		if ($row = $rs->FetchNextObject(false)){
			if ($row->status_app == 1){
				return "Data sudah disubmit ke Telkom";
			}
		}
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_vendor_sum where kode_lokasi = '$compCode' and periode = '$periode' ");
		$sql->add("insert into bpc_vendor_sum(periode, kode_vendor, kode_lokasi, curr, kurs, nilai, nilai_orig, tgl_duedate, kurs_adj, userid, tgl_update, kode_akun, status_sap)
					select a.periode, nvl(b.kode_group,'V99999') as kode_group, a.kode_lokasi, a.curr, kurs_adj, sum(nilai) as nilai, sum(nilai_orig) as nilai_orig, sysdate, kurs_adj,   '$userid',sysdate, a.kode_akun,'1'
					from bpc_vendor_det a 
					left outer join bpc_vendor_map b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
					where a.kode_lokasi = '$compCode' and a.periode ='$periode'
					group by a.periode, b.kode_group, a.kode_lokasi, a.curr, kurs_adj, a.kode_akun ");
		$rt = $db->execArraySQL($sql);
		$sql = new server_util_arrayList();
		$rs = $db->execute("select distinct curr from bpc_vendor_sum a where a.kode_lokasi = '$compCode' and a.periode ='$periode' and curr <> 'IDR' "); 
	    while ($row = $rs->FetchNextObject(false)){
			$nilai = $this->getParamKurs($compCode, $periode);
			if ($nilai == 0){
				$nilai = $this->getParamKurs("9000", $periode);
			}
			$nilai = floatval($nilai);
			$sql->add("update bpc_vendor_sum set kurs = $nilai where kode_lokasi = '$compCode' and periode ='$periode' and curr = '". $row->curr ."' ");	
		}
		$rt = $db->execArraySQL($sql);
		return $rt;
	}
	function getListAP($compCode, $periode){
		//F-4
		//Kode Vendor, Keterangan, Related, CURR, Amount, KURS, nilai Rupiah
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));
		$rs = $db->execute("select b.kode_vendor, nvl(a.nama,'-') as nama
							, sum(b.nilai) as nilai, b.kurs, b.curr, b.kode_akun
							, sum(b.nilai_orig) as nilai_orig, nvl(c.related,'0') as related
						 from bpc_vendor_sum b 
						 	 left outer join bpc_vendor_group a  on b.kode_vendor = a.kode_vendor
							  left outer join bpc_vendor_related c on c.kode_vendor = a.kode_vendor and c.kode_lokasi = b.kode_lokasi  
						 where b.kode_lokasi = '$compCode'  and b.periode = '$periode'
						 group by b.kode_vendor, a.nama , b.kurs, b.curr, c.related, b.kode_akun");
		$first = true;
		$totalCurr = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array)$row;
		}	 
		
		return $result;
	}
	function getListJenisVendor($compCode){
		$db = $this->getDb();
		//$rs = $db->execute("select id, desk from bpc_jenis_vendor order by id");
		$rs = $db->execute("select kode_klp as id, nama from bpc_conspack_m where kode_lokasi = '$compCode' and level_spasi >= 2 and modul ='F13' order by kode_klp");
		$result = array();
		while ($row = $rs->FetchNextObject(false)){
			$result[] = (array) $row;
		}
		if (count($result) == 0 && $compCode != "9000"){
			return $this->getListJenisVendor("9000");
		} 
		return $result;
	}

	function getListAPDetail($compCode, $periode){
		//F-4
		//Kode Vendor, Keterangan, Related, CURR, Amount, KURS, nilai Rupiah
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));
		$rs = $db->execute("select b.kode_vendor, nvl(a.nama,'-') as nama, nvl(d.kode_vendor,'-') as kode_group, nvl(d.nama,'-') as nm_group
							, sum(b.nilai) as nilai, b.kurs, b.curr, b.kode_akun
							, sum(b.nilai_orig) as nilai_orig, nvl(c.related,'0') as related
						 from bpc_vendor_det b 
						 	 left join bpc_vendor_ap a on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
							  left outer join bpc_vendor_map e on e.kode_vendor = a.kode_vendor and e.kode_lokasi = a.kode_lokasi	
							  left outer join bpc_vendor_group d on d.kode_vendor = e.kode_group
							  left outer join bpc_vendor_related c on c.kode_vendor = a.kode_vendor and c.kode_lokasi = b.kode_lokasi  
						 where b.kode_vendor like '$vendor%' and b.kode_lokasi = '$compCode'  and b.periode = '$periode'
						 group by b.kode_vendor, a.nama ,d.kode_vendor, d.nama, b.kurs, b.curr, c.related, b.kode_akun");
		$first = true;
		$totalCurr = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array)$row;
		}	 
		
		return $result;
	}
	function reportHutangVendorAP($compCode, $vendor, $periode){
		//F-4
		//Kode Vendor, Keterangan, Related, CURR, Amount, KURS, nilai Rupiah
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));
		$rs = $db->execute("
						select kode_vendor, nama, level_spasi, rowindex, kurs, curr, related, 
						 sum(nilai) as nilai, sum(nilai_orig) as nilai_orig 
						 from (
						select case when b.kode_vendor is null then 'ZZZZZ' else a.kode_vendor end as kode_vendor, nvl(b.nama,'Others') as nama, 2 as level_spasi, 2 as rowindex
							, sum(a.nilai) as nilai, a.kurs, a.curr
							, sum(a.nilai_orig) as nilai_orig, nvl(c.related,'0') as related
						 from bpc_vendor_sum a 
						 	 left outer join bpc_vendor_group b on b.kode_vendor = a.kode_vendor
							  left outer join bpc_vendor_related c on c.kode_vendor = a.kode_vendor and c.kode_lokasi = a.kode_lokasi  
						 where a.kode_vendor like '$vendor%' and a.kode_lokasi = '$compCode'  and a.periode = '$periode'
						 group by a.kode_vendor, b.kode_vendor, b.nama , a.kurs, a.curr,c.related
						 union 
						 select 'ZZZZZ', 'Others', 2 as level_spasi, 2 as rowindex
							, sum(b.nilai) as nilai, b.kurs, b.curr
							, sum(b.nilai_orig) as nilai_orig, '0' as related
						 from bpc_vendor_ap a
						 	   inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi  
							   left outer join bpc_vendor_map d on d.kode_vendor = a.kode_vendor and d.kode_lokasi = a.kode_lokasi 
						 where a.kode_vendor like '$vendor%' and b.kode_lokasi = '$compCode'  and b.periode = '$periode' and d.kode_group is null
						 group by  b.kurs, b.curr ) a 
						 group by kode_vendor, nama, level_spasi, rowindex, kurs, curr, related
						 order by related desc, curr desc, kode_vendor");
		$first = true;
		$totalCurr = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){

			if ($related != $row->related){
				if ($row->related == 1)
					$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "PIHAK BERELASI", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 0, "rowindex" => 0);
				else if ($row->related == 0){
					$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;b. Berdasarkan mata uang", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 1, "rowindex" => 1);
					foreach ($totalCurr->getArray() as $key => $value) {
						$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$key", "nilai" => $value[0], "kurs" => $value[2], "curr" => $key, "nilai_orig" => $value[1], "related" => $row->related , "level_spasi" => 2,  "rowindex" => 2);
					}	
					$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "PIHAK KETIGA", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 0, "rowindex" => 0);
					$totalCurr = new server_util_Map();		
				}
				if ($row->related == 1)
					$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;a. Berdasarkan Pemasok", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 1, "rowindex" => 1);
				else 
					$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;a. Berdasarkan Pelanggan", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 1, "rowindex" => 1);
				$related = $row->related;			
			}	
			$totalPerCurr = $totalCurr->get($row->curr);
			if ($totalPerCurr == null){
				$totalPerCurr = array($row->nilai, $row->nilai_orig, $row->kurs);
			}else {
				$totalPerCurr[0] = $totalPerCurr[0] + $row->nilai;
				$totalPerCurr[1] = $totalPerCurr[1] + $row->nilai_orig; 
			}
			$totalCurr->set($row->curr, $totalPerCurr);
			$row->nama = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" . $row->nama;
			$result["rs"]["rows"][] = (array)$row;
		}	

		

		$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;b. Berdasarkan mata uang", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 1, "rowindex" => 1);
		foreach ($totalCurr->getArray() as $key => $value) {
			$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$key", "nilai" => $value[0], "kurs" => $value[2], "curr" => $key, "nilai_orig" => $value[1], "related" => $row->related , "level_spasi" => 2,  "rowindex" => 2);
		}
		return $result;
	}
	function reportHutangVendorAP2($compCode, $vendor, $periode){
		//F-4
		//Kode Vendor, Keterangan, Related, CURR, Amount, KURS, nilai Rupiah
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()),"detailTotal" => array("rs" => array("rows" => array())));
		$strukturLok = $compCode;
		$rs = $db->execute("select distinct kode_lokasi from bpc_conspack_m where kode_lokasi = '$compCode' ");
		if ($row = $rs->FetchNextObject(false)){

		}else {
			$strukturLok = "9000";
		}
		$rsNilai = $db->execute("select nilai_min from bpc_param_nilai where kode_lokasi = '$compCode' and modul = 'AP' ");
		$nilai = 0;

		if ($row = $rsNilai->FetchNextObject(false)){
			$nilai = $row->nilai_min;
		}
		$kodeThirdParty = "F210";
		$rs3rd = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'THIRDPARTY' and modul = 'F13' ");
		if ($row = $rs3rd->FetchNextObject(false)){
			$kodeThirdParty = $row->kode_klp;
		}
		$rsOther1 = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'OT_RELATED' and modul = 'F13' ");
		if ($row = $rsOther1->FetchNextObject(false)){
			$kodeOtherRelated = $row->kode_klp;
		}

		$rsOther1 = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'OT_THIRD' and modul = 'F13' ");
		if ($row = $rsOther1->FetchNextObject(false)){
			$kodeOtherThird = $row->kode_klp;
		}
		///select max(periode) from bpc_param_curr where comp_code = '$compCode'

		$sql = "select a.kode_klp as kode_vendor, left_pad(a.nama, a.level_spasi) as nama, a.level_spasi, a.rowindex
							, 0 as nilai, 0 as nilai_orig
							, 1 as kurs, '-' as curr
							, a.tipe
							, '-' as keterangan
					  from bpc_conspack_m a 
					  where a.kode_lokasi = '$strukturLok' and a.modul = 'F13'
					  union 
					  select b.kode_vendor, left_pad(b.nama, a.level_spasi + 1) as nama, a.level_spasi + 1 as level_spasi, a.rowindex
					  	, sum(b.nilai) as nilai, sum(b.nilai_orig) as nilai_orig
						, 1 as kurs, b.curr
						, 'akun' as tipe
						, '-' as keterangan
					  from bpc_conspack_m a
					  					inner join (
											  select a.kode_klp, e.kode_vendor, e.nama, d.NILAI, d.nilai_orig, d.curr
																from bpc_conspack_d a 
														inner join bpc_vendor_sum d on d.kode_vendor = a.kode_group    
														inner join bpc_vendor_group e on e.kode_vendor = d.kode_vendor               
										where a.kode_lokasi = '$compCode' and d.kode_lokasi = '$compCode' and a.modul = 'F13' and d.periode = '$periode'
										union all
										select '$kodeOtherThird' as kode_klp, 'V99999' as kode_vendor, 'Others' as nama, b.NILAI, b.nilai_orig, b.curr
													from  bpc_vendor_sum b 
														left outer join bpc_vendor_map d on d.kode_group = b.kode_vendor and d.kode_lokasi = b.kode_lokasi and d.kode_group <> '-'
										where b.kode_lokasi = '$compCode' and b.periode = '$periode' and d.kode_group is null
										union all
										select '$kodeThirdParty' as kode_klp,  e.kode_vendor, e.nama, b.NILAI, b.nilai_orig, b.curr
																from bpc_vendor_sum b
														inner join bpc_vendor_group e on e.kode_vendor = b.kode_vendor               
														left outer join bpc_conspack_d d on d.kode_group = b.kode_vendor and d.kode_lokasi = '$compCode' and d.modul = 'F13'
										where b.kode_lokasi = '$compCode' and b.periode = '$periode' and d.kode_group is null
										
										) b on b.kode_klp = a.kode_klp 
										where a.kode_lokasi = '$strukturLok' and a.modul = 'F13' 
										group by a.kode_klp, b.kode_vendor, b.nama,  a.rowindex,a.level_spasi, b.curr, a.tipe 
										having abs(sum(b.nilai)) >= $nilai
						union 
					  select b.kode_vendor, left_pad(b.nama, a.level_spasi + 1) as nama, a.level_spasi + 1 as level_spasi, a.rowindex
					  	, sum(b.nilai) as nilai, sum(b.nilai_orig) as nilai_orig
						, 1 as kurs, b.curr
						, 'akun' as tipe
						, '-' as keterangan
					  from bpc_conspack_m a
					  					inner join (
											  select case when b.kode_vendor_group is null then '$kodeOtherRelated' else a.kode_klp end  as kode_klp, e.kode_vendor, e.nama, d.NILAI, d.nilai_orig, d.curr
																from bpc_conspack_d a 
														inner join bpc_vendor_sum d on d.kode_vendor = a.kode_group    
														inner join bpc_vendor_group e on e.kode_vendor = d.kode_vendor
														left outer join bpc_lokasi b on b.kode_vendor_group = a.kode_group
										where a.kode_lokasi = '$compCode' and d.kode_lokasi = '$compCode'  and a.modul = 'F13' and d.periode = '$periode'
										union all
										select '$kodeOtherThird' as kode_klp, 'V99999' as kode_vendor, 'Others' as nama, b.NILAI, b.nilai_orig, b.curr
													from  bpc_vendor_sum b 
														left outer join bpc_vendor_map d on d.kode_group = b.kode_vendor and d.kode_lokasi = b.kode_lokasi and d.kode_group <> '-'
										where b.kode_lokasi = '$compCode' and b.periode = '$periode'  and d.kode_group is null
										union all
										select '$kodeOtherThird' as kode_klp,  e.kode_vendor, e.nama, b.NILAI, b.nilai_orig, b.curr
																from  bpc_vendor_sum b 
														inner join bpc_vendor_group e on e.kode_vendor = b.kode_vendor               
														left outer join bpc_conspack_d d on d.kode_group = b.kode_vendor and d.kode_lokasi = '$compCode' and d.modul = 'F13'
										where b.kode_lokasi = '$compCode' and b.periode = '$periode' and d.kode_group is null
										
										) b on b.kode_klp = a.kode_klp 
										where a.kode_lokasi = '$strukturLok' and a.modul = 'F13' 
										group by a.kode_klp, b.kode_vendor, b.nama,  a.rowindex,a.level_spasi, b.curr, a.tipe 
										having abs(sum(b.nilai)) < $nilai
						
										order by rowindex, level_spasi
							";
		//error_log("F13 :> $sql");
		$rs = $db->execute($sql);
		$first = true;
		$rootNode = new server_util_NodeNRC("00");
		$totalCurr = new server_util_Map();

		

		while ($row = $rs->FetchNextObject(false)){
			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$row->keterangan = $this->getDataCommentVendor($compCode, $periode, $row->kode_vendor);
			
			$node->setData($row);
			if ($row->curr != "-"){
				$totalPerCurr = $totalCurr->get($row->curr);
				if ($totalPerCurr == null){
					$totalPerCurr = array($row->nilai, $row->nilai_orig, $row->kurs);
				}else {
					$totalPerCurr[0] = $totalPerCurr[0] + $row->nilai;
					$totalPerCurr[1] = $totalPerCurr[1] + $row->nilai_orig; 
				}
				$totalCurr->set($row->curr, $totalPerCurr);
			}
			
			if ($row->tipe == "SUMMARY")
			{
				foreach ($totalCurr->getArray() as $key => $value) {
					$level = "";
					for ($i = 0; $i < $row->level_spasi; $i++){
						$level .= "&nbsp;&nbsp;&nbsp;&nbsp;";
					}
					$tmp = array("kode_vendor" => $row->kode_vendor . $key, "nama" => $level . "$key","kode_group" => "", "nama_group" => "", "nilai" => $value[0], "kurs" => $value[2], "curr" => $key, "nilai_orig" => $value[1], "related" => $row->related , "level_spasi" => $row->level_spasi + 1,  "rowindex" => $row->rowindex);
					$nodeTmp = new server_util_NodeNRC($node);
					$tmp = json_decode(json_encode($tmp));
					$nodeTmp->setData($tmp);
				}
				
				$totalCurr = new server_util_Map();
			}
		}
		//error_log("Done Summmary");
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			$this->summariesKKP($val);
		}
		//error_log("Done Leveing");
		//perlu hitung ke summary
		$this->generateResultKKP($rootNode, $result);
		
		$result["total"] = $total;
		$rs = $db->execute("select
							 sum(b.nilai) as nilai,  b.curr
							, sum(b.nilai_orig) as nilai_orig
						 from bpc_vendor_sum b
						 where b.kode_vendor like '$vendor%' and b.kode_lokasi = '$compCode'  and b.periode = '$periode'
						 group by b.curr 
						 order by b.curr");
		
		while ($row = $rs->FetchNextObject(false)) {
			$result["detailTotal"]["rs"]["rows"][] = (array)$row;
		}
		//error_log(json_encode($result["rs"]["rows"]));
		return $result;
	}
	function downloadReportVendorAP($compCode, $vendor, $periode){
		try{
			$db = $this->getDb();
			

			uses("server_modules_codeplex_PHPExcel",false);
			$objPHPExcel = new PHPExcel();
			// Set document properties
			$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
							->setLastModifiedBy("MA")
							->setTitle("REPORT F13")
							->setSubject("F13")
							->setDescription("Report F13 (Hutang)")
							->setKeywords("F13")
								->setCategory("Intercompany");
	
	
				
			$objPHPExcel->setActiveSheetIndex(0);
			$sheet = $objPHPExcel->getActiveSheet();
			$sharedStyle1 = new PHPExcel_Style();
			$sharedStyle1->applyFromArray(
				array('fill' 	=> array(
											'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
											'color'		=> array('argb' => 'FFCCFFCC')
										),
					'alignment' => array(
                                      'wrap'       => true,
									  'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                            ),
					'borders' => array(
											'allborders'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										),
					'font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    )
					));
			$style_num = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => false,
                            ),
                           'alignment' => array(
                                      'wrap'       => false,
                                      'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                            ),
                     );
        	$style_title = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    ),
                     );
			$rs = $db->execute("select nama from bpc_lokasi where cocd = '$compCode' ");
			$nama = "";
			if ($row = $rs->FetchNextObject(false)){
				$nama = $row->nama;
			}

			$sheet->setCellValueByColumnAndRow(0, 1, strtoupper($nama));
			$sheet->setCellValueByColumnAndRow(0, 2, "ANAK PERUSAHAAN PT TELKOM");
			$sheet->setCellValueByColumnAndRow(0, 3, "UTANG USAHA & HUTANG LAINNYA");
			$sheet->setCellValueByColumnAndRow(0, 4, "PER $periode");
			$sheet->getStyle("A1:A4")->applyFromArray($style_title);
			$sheet->getStyle("A1:A4")->getFont()->setSize(12);
			$sheet->mergeCells("A1:C1");
			$sheet->mergeCells("A2:C2");
			$sheet->mergeCells("A3:C3");
			$sheet->mergeCells("A4:C4");
			

			$sheet->getColumnDimension('A')->setWidth(5);
			$sheet->getColumnDimension('B')->setWidth(5);
			$sheet->getColumnDimension('C')->setWidth(35);
			$sheet->getColumnDimension('D')->setWidth(11);
			$sheet->getColumnDimension('E')->setWidth(15);
			$sheet->getColumnDimension('F')->setWidth(15);
			$sheet->getColumnDimension('G')->setWidth(15);

			$column = array("Keterangan","MATA UANG"," NILAI DALAM MATA UANG ASAL (ORIGINAL) "," KURS VALUTA ASING ","SETARA RUPIAH (IDR)");
			$col = 0;
			$row = 7;
			foreach ($column as $value){
				$sheet->setCellValueByColumnAndRow($col, $row, $value);
				$col++;
				if ($col == 1){
					$col = 3;
				}
			}
			$sheet->getRowDimension('7')->setRowHeight(40);
			$sheet->mergeCells("A7:C7");

			$row++;
			$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
			$sheet->setSharedStyle($sharedStyle1,"A7:".$end."7");
			$first = true;
			$totalCurr = array();
			$rs = $db->execute("select a.kode_vendor, a.nama, 2 as level_spasi, 2 as rowindex
							, sum(b.nilai) as nilai, b.kurs, b.curr
							, sum(b.nilai_orig) as nilai_orig, nvl(c.related,'0') as related
						 from bpc_vendor_group a 
						 	 inner join bpc_vendor_sum b on b.kode_vendor = a.kode_vendor
							  left outer join bpc_vendor_related c on c.kode_vendor = a.kode_vendor and c.kode_lokasi = b.kode_lokasi  
						 where a.kode_vendor like '$vendor%' and b.kode_lokasi = '$compCode'  and b.periode = '$periode'
						 group by a.kode_vendor, a.nama , b.kurs, b.curr,c.related
						 union 
						select 'ZZZZZ', 'Others', 2 as level_spasi, 2 as rowindex
							, sum(b.nilai) as nilai, b.kurs, b.curr
							, sum(b.nilai_orig) as nilai_orig, '0' as related
						 from bpc_vendor_ap a
						 	   inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi  
							   left outer join bpc_vendor_map d on d.kode_vendor = a.kode_vendor and d.kode_lokasi = a.kode_lokasi 
						 where a.kode_vendor like '%' and b.kode_lokasi = '1010'  and b.periode = '201606' and d.kode_group is null
						 group by  b.kurs, b.curr
						 order by related desc,curr desc, kode_vendor");
			$totalCurr = new server_util_Map();
			$related = "";
			$row++;
			while ($rowVal = $rs->FetchNextObject(false)){
				if ($related != $rowVal->related){
					if ($rowVal->related == 1){
						$sheet->setCellValueByColumnAndRow(0, $row, "UTANG USAHA PIHAK BERELASI");
						$sheet->getStyle("A$row:C$row")->applyFromArray($style_title);
						$sheet->mergeCells("A$row:C$row");
						$sheet->setCellValueByColumnAndRow(3, $row, "");
						$sheet->setCellValueByColumnAndRow(4, $row, "");
						$sheet->setCellValueByColumnAndRow(5, $row, "");
						$sheet->setCellValueByColumnAndRow(6, $row, "");
						$row++;
					}else if ($rowVal->related == 0){
						$sheet->setCellValueByColumnAndRow(0, $row, "");
						$sheet->setCellValueByColumnAndRow(1, $row, "b.Berdasarkan mata uang");
						$sheet->mergeCells("B$row:C$row");
						$sheet->setCellValueByColumnAndRow(3, $row, "");
						$sheet->setCellValueByColumnAndRow(4, $row, "");
						$sheet->setCellValueByColumnAndRow(5, $row, "");
						$sheet->setCellValueByColumnAndRow(6, $row, "");
						
						$row++;
						foreach ($totalCurr->getArray() as $key => $value) {
							$sheet->setCellValueByColumnAndRow(0, $row, "");
							$sheet->setCellValueByColumnAndRow(1, $row, "");
							$sheet->setCellValueByColumnAndRow(2, $row, $key);
							$sheet->setCellValueByColumnAndRow(3, $row, $key);
							$sheet->setCellValueByColumnAndRow(4, $row, $value[0]);
							$sheet->setCellValueByColumnAndRow(5, $row, $value[2]);
							$sheet->setCellValueByColumnAndRow(6, $row, $value[1]);
							$sheet->getStyle("D$row:G$row")->getNumberFormat()->setFormatCode('#,##0');
							$row++;
						}	
						//$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "PIHAK KETIGA", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 0, "rowindex" => 0);
						$sheet->setCellValueByColumnAndRow(0, $row, "UTANG USAHA PIHAK KETIGA");
						$sheet->getStyle("A$row:C$row")->applyFromArray($style_title);
						$sheet->mergeCells("A$row:C$row");
						$sheet->setCellValueByColumnAndRow(3, $row, "");
						$sheet->setCellValueByColumnAndRow(4, $row, "");
						$sheet->setCellValueByColumnAndRow(5, $row, "");
						$sheet->setCellValueByColumnAndRow(6, $row, "");
						$row++;		
					}
					//$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;a.Berdasarkan Pemasok", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 1, "rowindex" => 1);
					$sheet->setCellValueByColumnAndRow(0, $row, "");
					if ($rowVal->related == 1)
						$sheet->setCellValueByColumnAndRow(1, $row, "a.Berdasarkan Pemasok");
					else $sheet->setCellValueByColumnAndRow(1, $row, "a.Berdasarkan Pelanggan (Perusahaan swasta)");
					$sheet->mergeCells("B$row:C$row");
					$sheet->setCellValueByColumnAndRow(3, $row, "");
					$sheet->setCellValueByColumnAndRow(4, $row, "");
					$sheet->setCellValueByColumnAndRow(5, $row, "");
					$sheet->setCellValueByColumnAndRow(6, $row, "");
					$row++;
					$related = $rowVal->related;			
				}	
				$totalPerCurr = $totalCurr->get($rowVal->curr);
				if ($totalPerCurr == null){
					$totalPerCurr = array($rowVal->nilai, $rowVal->nilai_orig, $rowVal->kurs);
				}else {
					$totalPerCurr[0] = $totalPerCurr[0] + $rowVal->nilai;
					$totalPerCurr[1] = $totalPerCurr[1] + $rowVal->nilai_orig; 
				}
				$totalCurr->set($rowVal->curr, $totalPerCurr);


				$sheet->setCellValueByColumnAndRow(0, $row, "");
				$sheet->setCellValueByColumnAndRow(2, $row, $rowVal->nama);
				$sheet->setCellValueByColumnAndRow(3, $row, $rowVal->curr);
				$sheet->setCellValueByColumnAndRow(4, $row, $rowVal->nilai_orig);
				$sheet->setCellValueByColumnAndRow(5, $row, $rowVal->kurs);
				$sheet->setCellValueByColumnAndRow(6, $row, $rowVal->nilai);
				$sheet->getStyle("D$row:G$row")->getNumberFormat()->setFormatCode('#,##0');
				$row++;
			}
			$sheet->setCellValueByColumnAndRow(0, $row, "");
			$sheet->setCellValueByColumnAndRow(1, $row, "b.Berdasarkan mata uang");
			$sheet->mergeCells("B$row:C$row");
			$sheet->setCellValueByColumnAndRow(3, $row, "");
			$sheet->setCellValueByColumnAndRow(4, $row, "");
			$sheet->setCellValueByColumnAndRow(5, $row, "");
			$sheet->setCellValueByColumnAndRow(6, $row, "");
			$row++;
			foreach ($totalCurr->getArray() as $key => $value) {
				$sheet->setCellValueByColumnAndRow(0, $row, "");
				$sheet->setCellValueByColumnAndRow(1, $row, "");
				$sheet->setCellValueByColumnAndRow(2, $row, $key);
				$sheet->setCellValueByColumnAndRow(3, $row, $key);
				$sheet->setCellValueByColumnAndRow(4, $row, $value[0]);
				$sheet->setCellValueByColumnAndRow(5, $row, $value[2]);
				$sheet->setCellValueByColumnAndRow(6, $row, $value[1]);
				$sheet->getStyle("D$row:G$row")->getNumberFormat()->setFormatCode('#,##0');
				$row++;
			}	
			
			// Set active sheet index to the first sheet, so Excel opens this as the first sheet
			$objPHPExcel->setActiveSheetIndex(0);
	
	
			// Save Excel 2007 file
			$namafile = MD5(date("r"));
			global $serverDir;
			$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
			$objWriter->save($serverDir . "/tmp/F13-$compCode.xlsx");
		
	
			return "/tmp/F13-$compCode.xlsx";
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}
	function downloadReportVendorAP2($compCode, $vendor, $periode){
		try{
			$db = $this->getDb();
			

			uses("server_modules_codeplex_PHPExcel",false);
			$objPHPExcel = new PHPExcel();
			// Set document properties
			$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
							->setLastModifiedBy("MA")
							->setTitle("REPORT F13")
							->setSubject("F13")
							->setDescription("Report F13 (Hutang)")
							->setKeywords("F13")
								->setCategory("Intercompany");
	
	
				
			$objPHPExcel->setActiveSheetIndex(0);
			$sheet = $objPHPExcel->getActiveSheet();
			$sharedStyle1 = new PHPExcel_Style();
			$sharedStyle1->applyFromArray(
				array('fill' 	=> array(
											'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
											'color'		=> array('argb' => 'FFCCFFCC')
										),
					'alignment' => array(
                                      'wrap'       => true,
									  'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                            ),
					'borders' => array(
											'allborders'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										),
					'font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    )
					));
			$style_num = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => false,
                            ),
                           'alignment' => array(
                                      'wrap'       => false,
                                      'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                            ),
                     );
        	$style_title = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    ),
                     );
			$rs = $db->execute("select nama from bpc_lokasi where cocd = '$compCode' ");
			$nama = "";
			if ($row = $rs->FetchNextObject(false)){
				$nama = $row->nama;
			}

			$sheet->setCellValueByColumnAndRow(0, 1, strtoupper($nama));
			$sheet->setCellValueByColumnAndRow(0, 2, "ANAK PERUSAHAAN PT TELKOM");
			$sheet->setCellValueByColumnAndRow(0, 3, "UTANG USAHA & HUTANG LAINNYA");
			$sheet->setCellValueByColumnAndRow(0, 4, "PER $periode");
			$sheet->getStyle("A1:A4")->applyFromArray($style_title);
			$sheet->getStyle("A1:A4")->getFont()->setSize(12);
			$sheet->mergeCells("A1:C1");
			$sheet->mergeCells("A2:C2");
			$sheet->mergeCells("A3:C3");
			$sheet->mergeCells("A4:C4");
			

			$sheet->getColumnDimension('A')->setWidth(5);
			$sheet->getColumnDimension('B')->setWidth(5);
			$sheet->getColumnDimension('C')->setWidth(35);
			$sheet->getColumnDimension('D')->setWidth(11);
			$sheet->getColumnDimension('E')->setWidth(15);
			$sheet->getColumnDimension('F')->setWidth(15);
			$sheet->getColumnDimension('G')->setWidth(15);

			$column = array("Keterangan","MATA UANG"," NILAI DALAM MATA UANG ASAL (ORIGINAL) "," KURS VALUTA ASING ","SETARA RUPIAH (IDR)");
			$col = 0;
			$row = 7;
			foreach ($column as $value){
				$sheet->setCellValueByColumnAndRow($col, $row, $value);
				$col++;
				if ($col == 1){
					$col = 3;
				}
			}
			$sheet->getRowDimension('7')->setRowHeight(40);
			$sheet->mergeCells("A7:C7");

			$row++;
			$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
			$sheet->setSharedStyle($sharedStyle1,"A7:".$end."7");
			$first = true;
			$totalCurr = array();
			$result = $this->reportHutangVendorAP2($compCode, $vendor, $periode);
			$totalCurr = new server_util_Map();
			$related = "";
			$row++;
			foreach($result["rs"]["rows"] as $val){
				$rowVal = json_decode(json_encode($val));
				//$sheet->setCellValueByColumnAndRow(0, $row, $rowVal->kode_vendor);
				$nama = str_replace("&nbsp;","",$rowVal->nama);
				$level = "";
				for ($i = 0; $i < $rowVal->level_spasi - 2; $i++){
					$level .= "   ";
				}

				if ($rowVal->tipe != 'akun' ){
					$sheet->setCellValueByColumnAndRow(0 + $rowVal->level_spasi, $row, $nama);	
				}else {
					$sheet->setCellValueByColumnAndRow(1, $row, $rowVal->kode_vendor);
					$sheet->setCellValueByColumnAndRow(2, $row, $level . $nama);
				}
				$sheet->setCellValueByColumnAndRow(3, $row, $rowVal->curr);
				$sheet->setCellValueByColumnAndRow(4, $row, $rowVal->nilai_orig);
				$sheet->setCellValueByColumnAndRow(5, $row, $rowVal->kurs);
				$sheet->setCellValueByColumnAndRow(6, $row, $rowVal->nilai);
				$sheet->getStyle("D$row:G$row")->getNumberFormat()->setFormatCode('#,##0');
				$row++;
			}
			// Set active sheet index to the first sheet, so Excel opens this as the first sheet
			$objPHPExcel->setActiveSheetIndex(0);
	
	
			// Save Excel 2007 file
			$namafile = MD5(date("r"));
			global $serverDir;
			$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
			$objWriter->save($serverDir . "/tmp/F13-$compCode.xlsx");
		
	
			return "/tmp/F13-$compCode.xlsx";
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}
	function reportHutangVendorAPDetail($compCode, $vendor, $periode){
		//F-4
		//Kode Vendor, Keterangan, Related, CURR, Amount, KURS, nilai Rupiah
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()), "total" => 0, "detailTotal" => array("rs" => array("rows" => array())));

		$rs = $db->execute("select a.kode_vendor, a.nama, 2 as level_spasi, 2 as rowindex
							, nvl(e.kode_vendor,'-') as kode_group, nvl(e.nama,'-') as nama_group
							, sum(b.nilai) as nilai, b.kurs, b.curr
							, sum(b.nilai_orig) as nilai_orig, nvl(c.related,'0') as related
						 from bpc_vendor_ap a
						 	   inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi  
							   left outer join bpc_vendor_map d on d.kode_vendor = a.kode_vendor and d.kode_lokasi = a.kode_lokasi 
							   left outer join bpc_vendor_group e on e.kode_vendor = d.kode_group 	
						 	  left outer join bpc_vendor_related c on c.kode_vendor = e.kode_vendor and c.kode_lokasi = b.kode_lokasi  
						 where a.kode_vendor like '$vendor%' and b.kode_lokasi = '$compCode'  and b.periode = '$periode'
						 group by a.kode_vendor, a.nama , e.kode_vendor, e.nama, b.kurs, b.curr,c.related
						 order by related desc, kode_vendor");
		$first = true;
		$totalCurr = new server_util_Map();
		$totalRelated = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){

			if ($related != $row->related){
				if ($row->related == 1)
					$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "PIHAK BERELASI","kode_group" => "", "nama_group" => "", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 0, "rowindex" => 0);
				else if ($row->related == 0){
					$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;b. Berdasarkan mata uang","kode_group" => "", "nama_group" => "", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => 0 , "level_spasi" => 1, "rowindex" => 1);
					foreach ($totalCurr->getArray() as $key => $value) {
						$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$key","kode_group" => "", "nama_group" => "", "nilai" => $value[0], "kurs" => $value[2], "curr" => $key, "nilai_orig" => $value[1], "related" =>0 , "level_spasi" => 2,  "rowindex" => 2);
					}	
					$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "PIHAK KETIGA","kode_group" => "", "nama_group" => "", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => 0 , "level_spasi" => 0, "rowindex" => 0);
					$index3rd = count($result["rs"]["rows"]) - 1;
					$totalCurr = new server_util_Map();			
				}
				if ($row->related == 1)
					$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;a. Berdasarkan Pemasok","kode_group" => "", "nama_group" => "", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 1, "rowindex" => 1);
				else {
					if (!isset($row->related))
						$row->related = 0; 
					$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;a. Berdasarkan Pelanggan","kode_group" => "", "nama_group" => "", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 1, "rowindex" => 1);
				}
				$related = $row->related;			
			}	
			$totalPerCurr = $totalCurr->get($row->curr);
			if ($totalPerCurr == null){
				$totalPerCurr = array($row->nilai, $row->nilai_orig, $row->kurs);
			}else {
				$totalPerCurr[0] = $totalPerCurr[0] + $row->nilai;
				$totalPerCurr[1] = $totalPerCurr[1] + $row->nilai_orig; 
			}
			$totalPerRelated = $totalRelated->get($row->related);
			if ($totalPerRelated == null){
				$totalPerRelated = array($row->nilai, $row->nilai_orig, $row->kurs);
			}else {
				$totalPerRelated[0] = $totalPerRelated[0] + $row->nilai;
				$totalPerRelated[1] = $totalPerRelated[1] + $row->nilai_orig;
			}
			$totalRelated->set($row->related,$totalPerRelated );
			$totalCurr->set($row->curr, $totalPerCurr);
			$row->nama = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" . $row->nama;
			$total += $row->nilai;
			$result["rs"]["rows"][] = (array)$row;

		}	
		//error_log(json_encode($result));
		$relatedHeader = $result["rs"]["rows"][0];
		$tmp = $totalRelated->get(1);
		$relatedHeader["nilai"] = $tmp[0];
		//$relatedHeader["nilai_orig"] = $tmp[1];
		///error_log(); 
		$result["rs"]["rows"][0] = $relatedHeader;

		$relatedHeader = $result["rs"]["rows"][$index3rd];
		$tmp = $totalRelated->get(0);
		$relatedHeader["nilai"] = $tmp[0];
		//$relatedHeader["nilai_orig"] = $tmp[1];
		$result["rs"]["rows"][$index3rd] = $relatedHeader;

		

		$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;b. Berdasarkan mata uang","kode_group" => "", "nama_group" => "", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 1, "rowindex" => 1);
		foreach ($totalCurr->getArray() as $key => $value) {
			$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$key","kode_group" => "", "nama_group" => "", "nilai" => $value[0], "kurs" => $value[2], "curr" => $key, "nilai_orig" => $value[1], "related" => $row->related , "level_spasi" => 2,  "rowindex" => 2);
		}
		$result["total"] = $total;
		$rs = $db->execute("select
							 sum(b.nilai) as nilai,  b.curr
							, sum(b.nilai_orig) as nilai_orig
						 from bpc_vendor_ap a
						 	   inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
						 where a.kode_vendor like '$vendor%' and b.kode_lokasi = '$compCode'  and b.periode = '$periode'
						 group by b.curr 
						 order by b.curr");
		
		while ($row = $rs->FetchNextObject(false)) {
			$result["detailTotal"]["rs"]["rows"][] = (array)$row;
		}

		return $result;
	}
	/* summariesKKP function.
	 * digunakan untuk menghitung summary untuk report jejer bulanan
	 * @access public
	 * @param mixed &$item	: item yang akan di proses
	 * @return void
	 */
	function summariesKKP(&$item, $addField = null){
		
		$fields = array("nilai", "nilai_orig","kurs", "nilai_adj","nilai_adjusted","ag1","ag3","ag6","ag12","ag13","total1","bd1","bd3","bd6","bd12","bd13","total2","nilai_net","nilai_bill","nilai_unbill");
		if (isset($addField)){
			foreach($addField as $val)
				$fields[] = $val;
		}
		foreach ($item->childs as $val){
			$this->summariesKKP($val,$addField);
			if ($val->dataArray["tipe"] != "SUMMARY"){
				foreach ($val->dataArray as $key => $value) {
					if ($key != "kode_vendor" && $key != "kode_cust" && $key != "kode_group" && $key != "nama_group"  && $key != "kurs" && $key != "kode_klp" && $key != "tipe" && $key != "kode_induk" && $key != "rowindex" && $key != "nama" && $key != "level_spasi" )
					{
						$item->dataArray[$key] += $value;
					}
				}
			}
		}
		//error_log("Sum Header ". $item->data->sum_header);
		if ($item->data->sum_header != "-" && $item->data->sum_header != "" && $item->data->tipe != "akun"){
			$summaryHeader = explode(",",$item->data->sum_header);

			foreach ($summaryHeader as $header){
				$nodeHeader = $this->sumHeader->get($header);
				if ($nodeHeader){
					foreach($fields as $f){
						//eval("\$nodeHeader->data->". $f ." += \$val->data->". $f.";");
						$nodeHeader->dataArray[$f] += $item->dataArray[$f];
					}
					
				}
			}
		}
	}

	/**
	 * generateResultKKP function.
	 * digunakan untuk generate data jejer bulanan per record
	 * @access public
	 * @param mixed $item	: item yang akan di proses
	 * @param mixed &$result	: array penampung prosess generate
	 * @return void
	 */
	function generateResultKKP($item, &$result){
		global $satuan;
		foreach ($item->childs as $val){
			/*
			if ($val->dataArray["level_spasi"] == 0){
				$val->dataArray["nilai"] = round($val->dataArray["nilai"] / 2); 
			}
			*/
			$result["rs"]["rows"][] = $val->dataArray;
			$this->generateResultKKP($val, $result);
		}
	}
	function reportHutangVendorAPDetail2($compCode, $vendor, $periode){
		//F-4
		//Kode Vendor, Keterangan, Related, CURR, Amount, KURS, nilai Rupiah
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()), "total" => 0, "detailTotal" => array("rs" => array("rows" => array())));
		$strukturLok = $compCode;
		$rs = $db->execute("select distinct kode_lokasi from bpc_conspack_m where kode_lokasi = '$compCode' and modul = 'F13' ");
		if ($row = $rs->FetchNextObject(false)){

		}else {
			$strukturLok = "9000";
		}
		$rsNilai = $db->execute("select nilai_min from bpc_param_nilai where kode_lokasi = '$compCode' and modul = 'AP' ");
		$nilai = 0;

		if ($row = $rsNilai->FetchNextObject(false)){
			$nilai = $row->nilai_min;
		}
		$kodeThirdParty = "F210";
		$rs3rd = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'THIRDPARTY' and modul = 'F13' ");
		if ($row = $rs3rd->FetchNextObject(false)){
			$kodeThirdParty = $row->kode_klp;
		}
		$rsOther1 = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'OT_RELATED' and modul = 'F13' ");
		if ($row = $rsOther1->FetchNextObject(false)){
			$kodeOtherRelated = $row->kode_klp;
		}

		$rsOther1 = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'OT_THIRD' and modul = 'F13' ");
		if ($row = $rsOther1->FetchNextObject(false)){
			$kodeOtherThird = $row->kode_klp;
		}

		$sql = "select a.kode_klp as kode_vendor, left_pad(a.nama, a.level_spasi) as nama, a.level_spasi, a.rowindex
							, 0 as nilai, 0 as nilai_orig
							, 1 as kurs, '-' as curr
							, '-' as kode_group, '-' as nama_group
							, a.tipe
					  from bpc_conspack_m a 
					  where a.kode_lokasi = '$strukturLok' and a.modul = 'F13'
					  union 
					  select b.kode_vendor, left_pad(b.nama, a.level_spasi + 1) as nama, a.level_spasi + 1 as level_spasi, a.rowindex
					  	, sum(b.nilai) as nilai, sum(b.nilai_orig) as nilai_orig
						, 1 as kurs, b.curr
						, b.kode_group, b.nama_group 
						, 'akun' as tipe
					  from bpc_conspack_m a
					  					inner join (select a.kode_klp, c.kode_vendor, c.nama, d.NILAI, d.nilai_orig, d.curr, e.kode_vendor as kode_group, e.nama as nama_group
																from bpc_conspack_d a 
														inner join bpc_vendor_map b on b.kode_group = a.kode_group  
														inner join bpc_vendor_ap c on c.kode_vendor = b.kode_vendor and c.kode_lokasi = b.kode_lokasi
														inner join bpc_vendor_det d on d.kode_vendor = c.kode_vendor and d.kode_lokasi = c.kode_lokasi    
														inner join bpc_vendor_group e on e.kode_vendor = b.kode_group               
										where a.kode_lokasi = '$compCode' and b.kode_lokasi ='$compCode' and a.modul = 'F13' and d.periode = '$periode'
										union all
										select '$kodeOtherThird' as kode_klp, a.kode_vendor, a.nama, b.NILAI, b.nilai_orig, b.curr, 'V99999' as kode_group , 'Others' as nama_group
													from bpc_vendor_ap a
														inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
														left outer join bpc_vendor_map d on d.kode_vendor = a.kode_vendor and d.kode_lokasi = a.kode_lokasi and d.kode_group <> '-'
										where a.kode_lokasi = '$compCode' and b.periode = '$periode' and d.kode_group is null
										union all
										select '$kodeOtherThird' as kode_klp,  a.kode_vendor, a.nama, b.NILAI, b.nilai_orig, b.curr, e.kode_vendor as kode_group, e.nama as nama_group
																from bpc_vendor_ap a
														inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
														inner join bpc_vendor_map c on c.kode_vendor = a.kode_vendor and c.kode_lokasi = a.kode_lokasi 
														inner join bpc_vendor_group e on e.kode_vendor = c.kode_group               
														left outer join bpc_conspack_d d on d.kode_group = c.kode_group and d.kode_lokasi = '$compCode' and d.modul = 'F13'
										where a.kode_lokasi = '$compCode' and b.periode = '$periode' and d.kode_group is null) b on b.kode_klp = a.kode_klp 
										where a.kode_lokasi = '$strukturLok' and a.modul = 'F13' 
										group by a.kode_klp, b.kode_vendor, b.nama,  a.rowindex,a.level_spasi, b.curr, b.kode_group, b.nama_group, a.tipe
										having sum(abs(b.nilai)) >= $nilai 
							union 
							select b.kode_vendor, left_pad(b.nama, a.level_spasi + 1) as nama, a.level_spasi + 1 as level_spasi, a.rowindex
								, sum(b.nilai) as nilai, sum(b.nilai_orig) as nilai_orig
								, 1 as kurs, b.curr
								, b.kode_group, b.nama_group 
								, 'akun' as tipe
							from bpc_conspack_m a
												inner join (select case when f.kode_vendor_group is null then '$kodeOtherRelated' else a.kode_klp end as kode_klp, c.kode_vendor, c.nama, d.NILAI, d.nilai_orig, d.curr, e.kode_vendor as kode_group, e.nama as nama_group
																		from bpc_conspack_d a 
																inner join bpc_vendor_map b on b.kode_group = a.kode_group  
																inner join bpc_vendor_ap c on c.kode_vendor = b.kode_vendor and c.kode_lokasi = b.kode_lokasi
																inner join bpc_vendor_det d on d.kode_vendor = c.kode_vendor and d.kode_lokasi = c.kode_lokasi    
																inner join bpc_vendor_group e on e.kode_vendor = b.kode_group   
																left outer join bpc_lokasi f on f.kode_vendor_group = e.kode_vendor            
												where a.kode_lokasi = '$compCode' and b.kode_lokasi ='$compCode' and a.modul = 'F13' and d.periode = '$periode'
												union all
												select '$kodeOtherThird' as kode_klp, a.kode_vendor, a.nama, b.NILAI, b.nilai_orig, b.curr, 'V99999' as kode_group , 'Others' as nama_group
															from bpc_vendor_ap a
																inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
																left outer join bpc_vendor_map d on d.kode_vendor = a.kode_vendor and d.kode_lokasi = a.kode_lokasi and d.kode_group <> '-'
												where a.kode_lokasi = '$compCode' and b.periode = '$periode' and d.kode_group is null
												union all
												select '$kodeOtherThird' as kode_klp,  a.kode_vendor, a.nama, b.NILAI, b.nilai_orig, b.curr, e.kode_vendor as kode_group, e.nama as nama_group
																		from bpc_vendor_ap a
																inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
																inner join bpc_vendor_map c on c.kode_vendor = a.kode_vendor and c.kode_lokasi = a.kode_lokasi 
																inner join bpc_vendor_group e on e.kode_vendor = c.kode_group               
																left outer join bpc_conspack_d d on d.kode_group = c.kode_group and d.kode_lokasi = '$compCode' and d.modul = 'F13'
												where a.kode_lokasi = '$compCode' and b.periode = '$periode' and d.kode_group is null) b on b.kode_klp = a.kode_klp 
												where a.kode_lokasi = '$strukturLok' and a.modul = 'F13' 
												group by a.kode_klp, b.kode_vendor, b.nama,  a.rowindex,a.level_spasi, b.curr, b.kode_group, b.nama_group, a.tipe
												having sum(abs(b.nilai)) < $nilai
										order by rowindex, level_spasi
							";
		//error_log($sql);
		$rs = $db->execute($sql);
		$first = true;
		$rootNode = new server_util_NodeNRC("00");
		$totalCurr = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$node->setData($row);
			if ($row->curr != "-"){
				$totalPerCurr = $totalCurr->get($row->curr);
				if ($totalPerCurr == null){
					$totalPerCurr = array($row->nilai, $row->nilai_orig, $row->kurs);
				}else {
					$totalPerCurr[0] = $totalPerCurr[0] + $row->nilai;
					$totalPerCurr[1] = $totalPerCurr[1] + $row->nilai_orig; 
				}
				$totalCurr->set($row->curr, $totalPerCurr);
			}
			
			if ($row->tipe == "SUMMARY"){
				foreach ($totalCurr->getArray() as $key => $value) {
					$level = "";
					for ($i = 0; $i < $row->level_spasi; $i++){
						$level .= "&nbsp;&nbsp;&nbsp;&nbsp;";
					}
					$tmp = array("kode_vendor" => $row->kode_vendor . $key, "nama" => $level."$key","kode_group" => "", "nama_group" => "", "nilai" => $value[0], "kurs" => $value[2], "curr" => $key, "nilai_orig" => $value[1], "related" => $row->related , "level_spasi" => $row->level_spasi + 1,  "rowindex" => $row->rowindex);
					$nodeTmp = new server_util_NodeNRC($node);
					$tmp = json_decode(json_encode($tmp));
					$nodeTmp->setData($tmp);
				}
				$totalCurr = new server_util_Map();
			}
		}
		//error_log("Done Summmary");
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			$this->summariesKKP($val);
		}
		//error_log("Done Leveing");
		//perlu hitung ke summary
		$this->generateResultKKP($rootNode, $result);
		
		$result["total"] = $total;
		$rs = $db->execute("select
							 sum(b.nilai) as nilai,  b.curr
							, sum(b.nilai_orig) as nilai_orig
						 from bpc_vendor_ap a
						 	   inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
						 where a.kode_vendor like '$vendor%' and b.kode_lokasi = '$compCode'  and b.periode = '$periode'
						 group by b.curr 
						 order by b.curr");
		
		while ($row = $rs->FetchNextObject(false)) {
			$result["detailTotal"]["rs"]["rows"][] = (array)$row;
		}
		//error_log(json_encode($result));
		return $result;
	}
	function downloadReportVendorAPDetail($compCode, $vendor, $periode){
		try{
			$db = $this->getDb();
			

			uses("server_modules_codeplex_PHPExcel",false);
			$objPHPExcel = new PHPExcel();
			// Set document properties
			$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
							->setLastModifiedBy("MA")
							->setTitle("REPORT F13")
							->setSubject("F13")
							->setDescription("Report F13 (Hutang)")
							->setKeywords("F13")
								->setCategory("Intercompany");
	
	
				
			$objPHPExcel->setActiveSheetIndex(0);
			$sheet = $objPHPExcel->getActiveSheet();
			$sharedStyle1 = new PHPExcel_Style();
			$sharedStyle1->applyFromArray(
				array('fill' 	=> array(
											'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
											'color'		=> array('argb' => 'FFCCFFCC')
										),
					'alignment' => array(
                                      'wrap'       => true,
									  'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                            ),
					'borders' => array(
											'allborders'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										),
					'font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    )
					));
			$style_num = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => false,
                            ),
                           'alignment' => array(
                                      'wrap'       => false,
                                      'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                            ),
                     );
        	$style_title = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    ),
                     );
			$rs = $db->execute("select nama from bpc_lokasi where cocd = '$compCode' ");
			$nama = "";
			if ($row = $rs->FetchNextObject(false)){
				$nama = $row->nama;
			}

			$sheet->setCellValueByColumnAndRow(0, 1, strtoupper($nama));
			$sheet->setCellValueByColumnAndRow(0, 2, "ANAK PERUSAHAAN PT TELKOM");
			$sheet->setCellValueByColumnAndRow(0, 3, "UTANG USAHA & HUTANG LAINNYA");
			$sheet->setCellValueByColumnAndRow(0, 4, "PER $periode");
			$sheet->getStyle("A1:A4")->applyFromArray($style_title);
			$sheet->getStyle("A1:A4")->getFont()->setSize(12);
			$sheet->mergeCells("A1:C1");
			$sheet->mergeCells("A2:C2");
			$sheet->mergeCells("A3:C3");
			$sheet->mergeCells("A4:C4");
			

			$sheet->getColumnDimension('A')->setWidth(5);
			$sheet->getColumnDimension('B')->setWidth(5);
			$sheet->getColumnDimension('C')->setWidth(35);
			$sheet->getColumnDimension('D')->setWidth(11);
			$sheet->getColumnDimension('E')->setWidth(15);
			$sheet->getColumnDimension('F')->setWidth(15);
			$sheet->getColumnDimension('G')->setWidth(15);

			$column = array("Keterangan","MATA UANG","VENDOR GROUP","NAMA GROUP"," NILAI DALAM MATA UANG ASAL (ORIGINAL) "," KURS VALUTA ASING ","SETARA RUPIAH (IDR)");
			$col = 0;
			$row = 7;
			foreach ($column as $value){
				$sheet->setCellValueByColumnAndRow($col, $row, $value);
				$col++;
				if ($col == 1){
					$col = 3;
				}
			}
			$sheet->getRowDimension('7')->setRowHeight(40);
			$sheet->mergeCells("A7:C7");

			$row++;
			$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
			$sheet->setSharedStyle($sharedStyle1,"A7:".$end."7");
			$first = true;
			$totalCurr = array();
			$rs = $db->execute("select a.kode_vendor, a.nama, 2 as level_spasi, 2 as rowindex
							, nvl(e.kode_vendor,'-') as kode_group, nvl(e.nama,'-') as nama_group
							, sum(b.nilai) as nilai, b.kurs, b.curr
							, sum(b.nilai_orig) as nilai_orig, nvl(c.related,'0') as related
						 from bpc_vendor_ap a
						 	   inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi  
							   left outer join bpc_vendor_map d on d.kode_vendor = a.kode_vendor and d.kode_lokasi = a.kode_lokasi 
							   left outer join bpc_vendor_group e on e.kode_vendor = d.kode_group 	
						 	  left outer join bpc_vendor_related c on c.kode_vendor = e.kode_vendor and c.kode_lokasi = b.kode_lokasi  
						 where a.kode_vendor like '$vendor%' and b.kode_lokasi = '$compCode'  and b.periode = '$periode'
						 group by a.kode_vendor, a.nama , e.kode_vendor, e.nama, b.kurs, b.curr,c.related
						 order by related desc, kode_vendor");
			$totalCurr = new server_util_Map();
			$related = "";
			$row++;
			while ($rowVal = $rs->FetchNextObject(false)){
				if ($related != $rowVal->related){
					if ($rowVal->related == 1){
						$sheet->setCellValueByColumnAndRow(0, $row, "UTANG USAHA PIHAK BERELASI");
						$sheet->getStyle("A$row:C$row")->applyFromArray($style_title);
						$sheet->mergeCells("A$row:C$row");
						$sheet->setCellValueByColumnAndRow(3, $row, "");
						$sheet->setCellValueByColumnAndRow(4, $row, "");
						$sheet->setCellValueByColumnAndRow(5, $row, "");
						$sheet->setCellValueByColumnAndRow(6, $row, "");
						$row++;
					}else if ($rowVal->related == 0){
						$sheet->setCellValueByColumnAndRow(0, $row, "");
						$sheet->setCellValueByColumnAndRow(1, $row, "b.Berdasarkan mata uang");
						$sheet->mergeCells("B$row:C$row");
						$sheet->setCellValueByColumnAndRow(3, $row, "");
						$sheet->setCellValueByColumnAndRow(4, $row, "");
						$sheet->setCellValueByColumnAndRow(5, $row, "");
						$sheet->setCellValueByColumnAndRow(6, $row, "");
						
						$row++;
						foreach ($totalCurr->getArray() as $key => $value) {
							$sheet->setCellValueByColumnAndRow(0, $row, "");
							$sheet->setCellValueByColumnAndRow(1, $row, "");
							$sheet->setCellValueByColumnAndRow(2, $row, $key);
							$sheet->setCellValueByColumnAndRow(3, $row, $key);
							$sheet->setCellValueByColumnAndRow(4, $row, $value[0]);
							$sheet->setCellValueByColumnAndRow(5, $row, $value[2]);
							$sheet->setCellValueByColumnAndRow(6, $row, $value[1]);
							$sheet->getStyle("D$row:G$row")->getNumberFormat()->setFormatCode('#,##0');
							$row++;
						}	
						//$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "PIHAK KETIGA", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 0, "rowindex" => 0);
						$sheet->setCellValueByColumnAndRow(0, $row, "UTANG USAHA PIHAK KETIGA");
						$sheet->getStyle("A$row:C$row")->applyFromArray($style_title);
						$sheet->mergeCells("A$row:C$row");
						$sheet->setCellValueByColumnAndRow(3, $row, "");
						$sheet->setCellValueByColumnAndRow(4, $row, "");
						$sheet->setCellValueByColumnAndRow(5, $row, "");
						$sheet->setCellValueByColumnAndRow(6, $row, "");
						$row++;		
						$totalCurr = array();
					}
					//$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;a.Berdasarkan Pemasok", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 1, "rowindex" => 1);
					$sheet->setCellValueByColumnAndRow(0, $row, "");
					if ($rowVal->related == 1)
						$sheet->setCellValueByColumnAndRow(1, $row, "a.Berdasarkan Pemasok");
					else $sheet->setCellValueByColumnAndRow(1, $row, "a.Berdasarkan Pelanggan (Perusahaan swasta)");
					$sheet->mergeCells("B$row:C$row");
					$sheet->setCellValueByColumnAndRow(3, $row, "");
					$sheet->setCellValueByColumnAndRow(4, $row, "");
					$sheet->setCellValueByColumnAndRow(5, $row, "");
					$sheet->setCellValueByColumnAndRow(6, $row, "");
					$row++;
					$related = $rowVal->related;			
				}	
				$totalPerCurr = $totalCurr->get($rowVal->curr);
				if ($totalPerCurr == null){
					$totalPerCurr = array($rowVal->nilai, $rowVal->nilai_orig, $rowVal->kurs);
				}else {
					$totalPerCurr[0] = $totalPerCurr[0] + $rowVal->nilai;
					$totalPerCurr[1] = $totalPerCurr[1] + $rowVal->nilai_orig; 
				}
				$totalCurr->set($rowVal->curr, $totalPerCurr);


				$sheet->setCellValueByColumnAndRow(0, $row, "");
				$sheet->setCellValueByColumnAndRow(2, $row, $rowVal->nama);
				$sheet->setCellValueByColumnAndRow(3, $row, $rowVal->curr);
				$sheet->setCellValueByColumnAndRow(4, $row, $rowVal->nilai_orig);
				$sheet->setCellValueByColumnAndRow(5, $row, $rowVal->kurs);
				$sheet->setCellValueByColumnAndRow(6, $row, $rowVal->nilai);
				$sheet->getStyle("D$row:G$row")->getNumberFormat()->setFormatCode('#,##0');
				$row++;
			}
			$sheet->setCellValueByColumnAndRow(0, $row, "");
			$sheet->setCellValueByColumnAndRow(1, $row, "b.Berdasarkan mata uang");
			$sheet->mergeCells("B$row:C$row");
			$sheet->setCellValueByColumnAndRow(3, $row, "");
			$sheet->setCellValueByColumnAndRow(4, $row, "");
			$sheet->setCellValueByColumnAndRow(5, $row, "");
			$sheet->setCellValueByColumnAndRow(6, $row, "");
			$row++;
			foreach ($totalCurr->getArray() as $key => $value) {
				$sheet->setCellValueByColumnAndRow(0, $row, "");
				$sheet->setCellValueByColumnAndRow(1, $row, "");
				$sheet->setCellValueByColumnAndRow(2, $row, $key);
				$sheet->setCellValueByColumnAndRow(3, $row, $key);
				$sheet->setCellValueByColumnAndRow(4, $row, $value[0]);
				$sheet->setCellValueByColumnAndRow(5, $row, $value[2]);
				$sheet->setCellValueByColumnAndRow(6, $row, $value[1]);
				$sheet->getStyle("D$row:G$row")->getNumberFormat()->setFormatCode('#,##0');
				$row++;
			}	
			
			// Set active sheet index to the first sheet, so Excel opens this as the first sheet
			$objPHPExcel->setActiveSheetIndex(0);
	
	
			// Save Excel 2007 file
			$namafile = MD5(date("r"));
			global $serverDir;
			$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
			$objWriter->save($serverDir . "/tmp/F13-$compCode.xlsx");
		
	
			return "/tmp/F13-$compCode.xlsx";
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}
	function downloadReportVendorAPDetail2($compCode, $vendor, $periode){
		try{
			$db = $this->getDb();
			

			uses("server_modules_codeplex_PHPExcel",false);
			$objPHPExcel = new PHPExcel();
			// Set document properties
			$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
							->setLastModifiedBy("MA")
							->setTitle("REPORT F13")
							->setSubject("F13")
							->setDescription("Report F13 (Hutang)")
							->setKeywords("F13")
								->setCategory("Intercompany");
	
	
				
			$objPHPExcel->setActiveSheetIndex(0);
			$sheet = $objPHPExcel->getActiveSheet();
			$sharedStyle1 = new PHPExcel_Style();
			$sharedStyle1->applyFromArray(
				array('fill' 	=> array(
											'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
											'color'		=> array('argb' => 'FFCCFFCC')
										),
					'alignment' => array(
                                      'wrap'       => true,
									  'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                            ),
					'borders' => array(
											'allborders'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										),
					'font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    )
					));
			$style_num = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => false,
                            ),
                           'alignment' => array(
                                      'wrap'       => false,
                                      'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                            ),
                     );
        	$style_title = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    ),
                     );
			$rs = $db->execute("select nama from bpc_lokasi where cocd = '$compCode' ");
			$nama = "";
			if ($row = $rs->FetchNextObject(false)){
				$nama = $row->nama;
			}

			$sheet->setCellValueByColumnAndRow(0, 1, strtoupper($nama));
			$sheet->setCellValueByColumnAndRow(0, 2, "ANAK PERUSAHAAN PT TELKOM");
			$sheet->setCellValueByColumnAndRow(0, 3, "UTANG USAHA & HUTANG LAINNYA");
			$sheet->setCellValueByColumnAndRow(0, 4, "PER $periode");
			$sheet->getStyle("A1:A4")->applyFromArray($style_title);
			$sheet->getStyle("A1:A4")->getFont()->setSize(12);
			$sheet->mergeCells("A1:C1");
			$sheet->mergeCells("A2:C2");
			$sheet->mergeCells("A3:C3");
			$sheet->mergeCells("A4:C4");
			

			$sheet->getColumnDimension('A')->setWidth(5);
			$sheet->getColumnDimension('B')->setWidth(5);
			$sheet->getColumnDimension('C')->setWidth(35);
			$sheet->getColumnDimension('D')->setWidth(11);
			$sheet->getColumnDimension('E')->setWidth(15);
			$sheet->getColumnDimension('F')->setWidth(15);
			$sheet->getColumnDimension('G')->setWidth(15);
			$sheet->getColumnDimension('H')->setWidth(15);
			$sheet->getColumnDimension('I')->setWidth(15);

			$column = array("Keterangan","VENDOR GROUP","NAMA GROUP","MATA UANG"," NILAI DALAM MATA UANG ASAL (ORIGINAL) "," KURS VALUTA ASING ","SETARA RUPIAH (IDR)");
			$col = 0;
			$row = 7;
			foreach ($column as $value){
				$sheet->setCellValueByColumnAndRow($col, $row, $value);
				$col++;
				if ($col == 1){
					$col = 3;
				}
			}
			$sheet->getRowDimension('7')->setRowHeight(40);
			$sheet->mergeCells("A7:C7");

			$row++;
			$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
			$sheet->setSharedStyle($sharedStyle1,"A7:".$end."7");
			$first = true;
			$totalCurr = array();
			$result = $this->reportHutangVendorAPDetail2($compCode, $vendor, $periode);
			$totalCurr = new server_util_Map();
			$related = "";
			$row++;
			foreach($result["rs"]["rows"] as $val){
				$rowVal = json_decode(json_encode($val));
				
				$nama = str_replace("&nbsp;","",$rowVal->nama);
				$level = "";
				for ($i = 0; $i < $rowVal->level_spasi - 2; $i++){
					$level .= "   ";
				}

				if ($rowVal->tipe != 'akun' ){
					$sheet->setCellValueByColumnAndRow(0 + $rowVal->level_spasi, $row, $nama);	
				}else{
					$sheet->setCellValueByColumnAndRow(1, $row, $rowVal->kode_vendor);
					$sheet->setCellValueByColumnAndRow(2, $row, $level . $nama);
				}
				$sheet->setCellValueByColumnAndRow(3, $row, $rowVal->kode_group);
				$sheet->setCellValueByColumnAndRow(4, $row, $rowVal->nama_group);
				$sheet->setCellValueByColumnAndRow(5, $row, $rowVal->curr);
				$sheet->setCellValueByColumnAndRow(6, $row, $rowVal->nilai_orig);
				$sheet->setCellValueByColumnAndRow(7, $row, $rowVal->kurs);
				$sheet->setCellValueByColumnAndRow(8, $row, $rowVal->nilai);
				$sheet->getStyle("F$row:I$row")->getNumberFormat()->setFormatCode('#,##0');
				$row++;
			}
			// Set active sheet index to the first sheet, so Excel opens this as the first sheet
			$objPHPExcel->setActiveSheetIndex(0);
	
	
			// Save Excel 2007 file
			$namafile = MD5(date("r"));
			global $serverDir;
			$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
			$objWriter->save($serverDir . "/tmp/F13-$compCode.xlsx");
		
	
			return "/tmp/F13-$compCode.xlsx";
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}
	function reportHutangVendorAPGroup($compCode, $vendor, $periode){
		//F-4
		//Kode Vendor, Keterangan, Related, CURR, Amount, KURS, nilai Rupiah
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));
		$rs = $db->execute("select a.kode_vendor, a.nama, 2 as level_spasi, 2 as rowindex
							, sum(b.nilai) as nilai, b.kurs, b.curr
							, sum(b.nilai_orig) as nilai_orig, nvl(a.related_cons,'0') as related
						 from bpc_vendor_group a 
						 	 inner join bpc_vendor_sum b on b.kode_vendor = a.kode_vendor							    
						 where a.kode_vendor like '$vendor%'  and b.periode = '$periode'
						 group by a.kode_vendor, a.nama , b.kurs, b.curr,a.related_cons
						 union 

						 order by related desc, kode_vendor");
		$first = true;
		$totalCurr = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){

			if ($related != $row->related){
				if ($row->related == 1)
					$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "PIHAK BERELASI", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 0, "rowindex" => 0);
				else if ($row->related == 0){
					$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;b.Berdasarkan mata uang", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 1, "rowindex" => 1);
					foreach ($totalCurr->getArray() as $key => $value) {
						$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$key", "nilai" => $value[0], "kurs" => $value[2], "curr" => $key, "nilai_orig" => $value[1], "related" => $row->related , "level_spasi" => 2,  "rowindex" => 2);
					}	
					$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "PIHAK KETIGA", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 0, "rowindex" => 0);		
				}
				$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;a.Berdasarkan Pemasok", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 1, "rowindex" => 1);
				$related = $row->related;			
			}	
			$totalPerCurr = $totalCurr->get($row->curr);
			if ($totalPerCurr == null){
				$totalPerCurr = array($row->nilai, $row->nilai_orig, $row->kurs);
			}else {
				$totalPerCurr[0] = $totalPerCurr[0] + $row->nilai;
				$totalPerCurr[1] = $totalPerCurr[1] + $row->nilai_orig; 
			}
			$totalCurr->set($row->curr, $totalPerCurr);
			$row->nama = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" . $row->nama;
			$result["rs"]["rows"][] = (array)$row;
		}	 
		$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;b.Berdasarkan mata uang", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 1, "rowindex" => 1);
		foreach ($totalCurr->getArray() as $key => $value) {
			$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$key", "nilai" => $value[0], "kurs" => $value[2], "curr" => $key, "nilai_orig" => $value[1], "related" => $row->related , "level_spasi" => 2,  "rowindex" => 2);
		}
		return $result;
	}
	function downloadReportVendorAPGroup($compCode, $vendor, $periode){
		try{
			$db = $this->getDb();
			

			uses("server_modules_codeplex_PHPExcel",false);
			$objPHPExcel = new PHPExcel();
			// Set document properties
			$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
							->setLastModifiedBy("MA")
							->setTitle("REPORT F13")
							->setSubject("F13")
							->setDescription("Report F13 (Hutang)")
							->setKeywords("F13")
								->setCategory("Intercompany");
	
	
				
			$objPHPExcel->setActiveSheetIndex(0);
			$sheet = $objPHPExcel->getActiveSheet();
			$sharedStyle1 = new PHPExcel_Style();
			$sharedStyle1->applyFromArray(
				array('fill' 	=> array(
											'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
											'color'		=> array('argb' => 'FFCCFFCC')
										),
					'alignment' => array(
                                      'wrap'       => true,
									  'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                            ),
					'borders' => array(
											'allborders'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										),
					'font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    )
					));
			$style_num = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => false,
                            ),
                           'alignment' => array(
                                      'wrap'       => false,
                                      'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                            ),
                     );
        	$style_title = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    ),
                     );
			$rs = $db->execute("select nama from bpc_lokasi where cocd = '$compCode' ");
			$nama = "";
			if ($row = $rs->FetchNextObject(false)){
				$nama = $row->nama;
			}

			$sheet->setCellValueByColumnAndRow(0, 1, strtoupper($nama));
			$sheet->setCellValueByColumnAndRow(0, 2, "ANAK PERUSAHAAN PT TELKOM");
			$sheet->setCellValueByColumnAndRow(0, 3, "UTANG USAHA & HUTANG LAINNYA");
			$sheet->setCellValueByColumnAndRow(0, 4, "PER $periode");
			$sheet->getStyle("A1:A4")->applyFromArray($style_title);
			$sheet->getStyle("A1:A4")->getFont()->setSize(12);
			$sheet->mergeCells("A1:C1");
			$sheet->mergeCells("A2:C2");
			$sheet->mergeCells("A3:C3");
			$sheet->mergeCells("A4:C4");
			

			$sheet->getColumnDimension('A')->setWidth(5);
			$sheet->getColumnDimension('B')->setWidth(5);
			$sheet->getColumnDimension('C')->setWidth(35);
			$sheet->getColumnDimension('D')->setWidth(11);
			$sheet->getColumnDimension('E')->setWidth(15);
			$sheet->getColumnDimension('F')->setWidth(15);
			$sheet->getColumnDimension('G')->setWidth(15);

			$column = array("Keterangan","MATA UANG"," NILAI DALAM MATA UANG ASAL (ORIGINAL) "," KURS VALUTA ASING ","SETARA RUPIAH (IDR)");
			$col = 0;
			$row = 7;
			foreach ($column as $value){
				$sheet->setCellValueByColumnAndRow($col, $row, $value);
				$col++;
				if ($col == 1){
					$col = 3;
				}
			}
			$sheet->getRowDimension('7')->setRowHeight(40);
			$sheet->mergeCells("A7:C7");

			$row++;
			$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
			$sheet->setSharedStyle($sharedStyle1,"A7:".$end."7");
			$first = true;
			$totalCurr = array();
			$rs = $db->execute("select a.kode_vendor, a.nama, 2 as level_spasi, 2 as rowindex
							, sum(b.nilai) as nilai, b.kurs, b.curr
							, sum(b.nilai_orig) as nilai_orig, nvl(a.related_cons,'0') as related
						 from bpc_vendor_group a 
						 	 inner join bpc_vendor_sum b on b.kode_vendor = a.kode_vendor
						 where a.kode_vendor like '$vendor%' and b.kode_lokasi = '$compCode' and b.periode = '$periode'
						 group by a.kode_vendor, a.nama , b.kurs, b.curr,a.related_cons
						 order by related desc, kode_vendor");
			$totalCurr = new server_util_Map();
			$related = "";
			$row++;
			while ($rowVal = $rs->FetchNextObject(false)){
				if ($related != $rowVal->related){
					if ($rowVal->related == 1){
						$sheet->setCellValueByColumnAndRow(0, $row, "UTANG USAHA PIHAK BERELASI");
						$sheet->getStyle("A$row:C$row")->applyFromArray($style_title);
						$sheet->mergeCells("A$row:C$row");
						$sheet->setCellValueByColumnAndRow(3, $row, "");
						$sheet->setCellValueByColumnAndRow(4, $row, "");
						$sheet->setCellValueByColumnAndRow(5, $row, "");
						$sheet->setCellValueByColumnAndRow(6, $row, "");
						$row++;
					}else if ($rowVal->related == 0){
						$sheet->setCellValueByColumnAndRow(0, $row, "");
						$sheet->setCellValueByColumnAndRow(1, $row, "b.Berdasarkan mata uang");
						$sheet->mergeCells("B$row:C$row");
						$sheet->setCellValueByColumnAndRow(3, $row, "");
						$sheet->setCellValueByColumnAndRow(4, $row, "");
						$sheet->setCellValueByColumnAndRow(5, $row, "");
						$sheet->setCellValueByColumnAndRow(6, $row, "");
						
						$row++;
						foreach ($totalCurr->getArray() as $key => $value) {
							$sheet->setCellValueByColumnAndRow(0, $row, "");
							$sheet->setCellValueByColumnAndRow(1, $row, "");
							$sheet->setCellValueByColumnAndRow(2, $row, $key);
							$sheet->setCellValueByColumnAndRow(3, $row, $key);
							$sheet->setCellValueByColumnAndRow(4, $row, $value[0]);
							$sheet->setCellValueByColumnAndRow(5, $row, $value[2]);
							$sheet->setCellValueByColumnAndRow(6, $row, $value[1]);
							$sheet->getStyle("D$row:G$row")->getNumberFormat()->setFormatCode('#,##0');
							$row++;
						}	
						//$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "PIHAK KETIGA", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 0, "rowindex" => 0);
						$sheet->setCellValueByColumnAndRow(0, $row, "UTANG USAHA PIHAK KETIGA");
						$sheet->getStyle("A$row:C$row")->applyFromArray($style_title);
						$sheet->mergeCells("A$row:C$row");
						$sheet->setCellValueByColumnAndRow(3, $row, "");
						$sheet->setCellValueByColumnAndRow(4, $row, "");
						$sheet->setCellValueByColumnAndRow(5, $row, "");
						$sheet->setCellValueByColumnAndRow(6, $row, "");
						$row++;		
					}
					//$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;a.Berdasarkan Pemasok", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 1, "rowindex" => 1);
					$sheet->setCellValueByColumnAndRow(0, $row, "");
					if ($rowVal->related == 1)
						$sheet->setCellValueByColumnAndRow(1, $row, "a.Berdasarkan Pemasok");
					else $sheet->setCellValueByColumnAndRow(1, $row, "a.Berdasarkan Pelanggan (Perusahaan swasta)");
					$sheet->mergeCells("B$row:C$row");
					$sheet->setCellValueByColumnAndRow(3, $row, "");
					$sheet->setCellValueByColumnAndRow(4, $row, "");
					$sheet->setCellValueByColumnAndRow(5, $row, "");
					$sheet->setCellValueByColumnAndRow(6, $row, "");
					$row++;
					$related = $rowVal->related;			
				}	
				$totalPerCurr = $totalCurr->get($rowVal->curr);
				if ($totalPerCurr == null){
					$totalPerCurr = array($rowVal->nilai, $rowVal->nilai_orig, $rowVal->kurs);
				}else {
					$totalPerCurr[0] = $totalPerCurr[0] + $rowVal->nilai;
					$totalPerCurr[1] = $totalPerCurr[1] + $rowVal->nilai_orig; 
				}
				$totalCurr->set($rowVal->curr, $totalPerCurr);


				$sheet->setCellValueByColumnAndRow(0, $row, "");
				$sheet->setCellValueByColumnAndRow(2, $row, $rowVal->nama);
				$sheet->setCellValueByColumnAndRow(3, $row, $rowVal->curr);
				$sheet->setCellValueByColumnAndRow(4, $row, $rowVal->nilai_orig);
				$sheet->setCellValueByColumnAndRow(5, $row, $rowVal->kurs);
				$sheet->setCellValueByColumnAndRow(6, $row, $rowVal->nilai);
				$sheet->getStyle("D$row:G$row")->getNumberFormat()->setFormatCode('#,##0');
				$row++;
			}
			$sheet->setCellValueByColumnAndRow(0, $row, "");
			$sheet->setCellValueByColumnAndRow(1, $row, "b.Berdasarkan mata uang");
			$sheet->mergeCells("B$row:C$row");
			$sheet->setCellValueByColumnAndRow(3, $row, "");
			$sheet->setCellValueByColumnAndRow(4, $row, "");
			$sheet->setCellValueByColumnAndRow(5, $row, "");
			$sheet->setCellValueByColumnAndRow(6, $row, "");
			$row++;
			foreach ($totalCurr->getArray() as $key => $value) {
				$sheet->setCellValueByColumnAndRow(0, $row, "");
				$sheet->setCellValueByColumnAndRow(1, $row, "");
				$sheet->setCellValueByColumnAndRow(2, $row, $key);
				$sheet->setCellValueByColumnAndRow(3, $row, $key);
				$sheet->setCellValueByColumnAndRow(4, $row, $value[0]);
				$sheet->setCellValueByColumnAndRow(5, $row, $value[2]);
				$sheet->setCellValueByColumnAndRow(6, $row, $value[1]);
				$sheet->getStyle("D$row:G$row")->getNumberFormat()->setFormatCode('#,##0');
				$row++;
			}	
			
			// Set active sheet index to the first sheet, so Excel opens this as the first sheet
			$objPHPExcel->setActiveSheetIndex(0);
	
	
			// Save Excel 2007 file
			$namafile = MD5(date("r"));
			global $serverDir;
			$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
			$objWriter->save($serverDir . "/tmp/F13-$compCode.xlsx");
		
	
			return "/tmp/F13-$compCode.xlsx";
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}
	function reportHutangVendorAPGroup2($compCode, $vendor, $periode){
		//F-4
		//Kode Vendor, Keterangan, Related, CURR, Amount, KURS, nilai Rupiah
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()), "total" => 0, "detailTotal" => array("rs" => array("rows" => array())));
		$strukturLok = $compCode;
		$rs = $db->execute("select distinct kode_lokasi from bpc_conspack_m where kode_lokasi = '$compCode' and modul = 'F13' ");
		if ($row = $rs->FetchNextObject(false)){

		}else {
			$strukturLok = "9000";
		}
		$rsNilai = $db->execute("select nilai_min from bpc_param_nilai where kode_lokasi = '$compCode' and modul = 'AP' ");
		$nilai = 0;

		$vm = $db->execute("select value1, value2 from bpc_rules where kode_rules='VALUATION' ");
		if ($rowVm = $vm->FetchNextObject(false)){
			$kodeVMRelated = $rowVm->value2;
			$kodeVMTP = $rowVm->value1;
		}

		if ($row = $rsNilai->FetchNextObject(false)){
			$nilai = $row->nilai_min;
		}
		$kodeThirdParty = "F210";
		$rs3rd = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'THIRDPARTY' and modul = 'F13' ");
		if ($row = $rs3rd->FetchNextObject(false)){
			$kodeThirdParty = $row->kode_klp;
		}
		$rsOther1 = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'OT_RELATED' and modul = 'F13' ");
		if ($row = $rsOther1->FetchNextObject(false)){
			$kodeOtherRelated = $row->kode_klp;
		}

		$rsOther1 = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'OT_THIRD' and modul = 'F13' ");
		if ($row = $rsOther1->FetchNextObject(false)){
			$kodeOtherThird = $row->kode_klp;
		}
		$sql = "select a.kode_klp as kode_vendor, left_pad(a.nama, a.level_spasi) as nama, a.level_spasi, a.rowindex
							, 0 as nilai, 0 as nilai_orig
							, 1 as kurs, '-' as curr
							, a.tipe
					  from bpc_conspack_m a 
					  where a.kode_lokasi = '$strukturLok' and a.modul = 'F13'
					  union 
					  select b.kode_vendor, left_pad(b.nama, a.level_spasi + 1) as nama, a.level_spasi + 1  as level_spasi, a.rowindex
					  	, sum(b.nilai) as nilai, sum(b.nilai_orig) as nilai_orig
						, 1 as kurs, b.curr
						, 'akun' as tipe
					  from bpc_conspack_m a
					  					inner join (select a.kode_klp, e.kode_vendor, e.nama, d.NILAI, d.nilai_orig, d.curr
																from bpc_conspack_d a 
														inner join bpc_vendor_map b on b.kode_group = a.kode_group  and b.kode_lokasi = a.kode_lokasi 
														inner join bpc_vendor_ap c on c.kode_vendor = b.kode_vendor and c.kode_lokasi = b.kode_lokasi
														inner join bpc_vendor_det d on d.kode_vendor = c.kode_vendor and d.kode_lokasi = c.kode_lokasi    
														inner join bpc_vendor_group e on e.kode_vendor = b.kode_group               
										where a.kode_lokasi = '$compCode' and b.kode_lokasi ='$compCode' and a.modul = 'F13' and d.periode = '$periode'
										union all
										select '$kodeOtherThird' as kode_klp, 'V99999' as kode_vendor, 'Others' as nama, b.NILAI, b.nilai_orig, b.curr
													from bpc_vendor_ap a
														inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
														left outer join bpc_vendor_map d on d.kode_vendor = a.kode_vendor and d.kode_lokasi = a.kode_lokasi and d.kode_group <> '-'
										where a.kode_lokasi = '$compCode' and b.periode = '$periode' and d.kode_group is null
										union all
										select '$kodeOtherThird' as kode_klp,  e.kode_vendor, e.nama, b.NILAI, b.nilai_orig, b.curr
																from bpc_vendor_ap a
														inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
														inner join bpc_vendor_map c on c.kode_vendor = a.kode_vendor and c.kode_lokasi = a.kode_lokasi 
														inner join bpc_vendor_group e on e.kode_vendor = c.kode_group               
														left outer join bpc_conspack_d d on d.kode_group = c.kode_group and d.kode_lokasi = a.kode_lokasi and d.modul = 'F13'
										where a.kode_lokasi = '$compCode' and b.periode = '$periode' and d.kode_group is null) b on b.kode_klp = a.kode_klp 
										where a.kode_lokasi = '$strukturLok' and a.modul = 'F13' 
										group by a.kode_klp, b.kode_vendor, b.nama,  a.rowindex,a.level_spasi, b.curr, a.tipe
										having sum(abs(b.nilai)) >= $nilai 
						 union 
					  select b.kode_vendor, left_pad(b.nama, a.level_spasi + 1) as nama, a.level_spasi + 1 as level_spasi , a.rowindex
					  	, sum(b.nilai) as nilai, sum(b.nilai_orig) as nilai_orig
						, 1 as kurs, b.curr
						, 'akun' as tipe
					  from bpc_conspack_m a
					  					inner join (select case when f.kode_vendor_group is null then '$kodeOtherRelated' else a.kode_klp end as kode_klp, e.kode_vendor, e.nama, d.NILAI, d.nilai_orig, d.curr
																from bpc_conspack_d a 
														inner join bpc_vendor_map b on b.kode_group = a.kode_group and b.kode_lokasi = a.kode_lokasi 
														inner join bpc_vendor_ap c on c.kode_vendor = b.kode_vendor and c.kode_lokasi = b.kode_lokasi
														inner join bpc_vendor_det d on d.kode_vendor = c.kode_vendor and d.kode_lokasi = c.kode_lokasi    
														inner join bpc_vendor_group e on e.kode_vendor = b.kode_group  
														left outer join bpc_lokasi f on f.kode_vendor_group = e.kode_vendor             
										where a.kode_lokasi = '$compCode' and b.kode_lokasi ='$compCode' and a.modul = 'F13' and d.periode = '$periode'
										union all
										select '$kodeOtherThird' as kode_klp, 'V99999' as kode_vendor, 'Others' as nama, b.NILAI, b.nilai_orig, b.curr
													from bpc_vendor_ap a
														inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
														left outer join bpc_vendor_map d on d.kode_vendor = a.kode_vendor and d.kode_lokasi = a.kode_lokasi and d.kode_group <> '-'
										where a.kode_lokasi = '$compCode' and b.periode = '$periode' and d.kode_group is null
										union all
										select '$kodeOtherThird' as kode_klp,  e.kode_vendor, e.nama, b.NILAI, b.nilai_orig, b.curr
																from bpc_vendor_ap a
														inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
														inner join bpc_vendor_map c on c.kode_vendor = a.kode_vendor and c.kode_lokasi = a.kode_lokasi 
														inner join bpc_vendor_group e on e.kode_vendor = c.kode_group               
														left outer join bpc_conspack_d d on d.kode_group = c.kode_group and d.kode_lokasi = a.kode_lokasi and d.modul = 'F13'
										where a.kode_lokasi = '$compCode' and b.periode = '$periode' and d.kode_group is null) b on b.kode_klp = a.kode_klp 
										where a.kode_lokasi = '$strukturLok' and a.modul = 'F13' 
										group by a.kode_klp, b.kode_vendor, b.nama,  a.rowindex,a.level_spasi, b.curr, a.tipe
										having sum(abs(b.nilai)) < $nilai 
										order by rowindex, level_spasi
							";
		//error_log("APGroup2 :>" . $sql);
		$rs = $db->execute($sql);
		$first = true;
		$rootNode = new server_util_NodeNRC("00");
		$totalCurr = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$node->setData($row);
			if ($row->curr != "-"){
				$totalPerCurr = $totalCurr->get($row->curr);
				if ($totalPerCurr == null){
					$totalPerCurr = array($row->nilai, $row->nilai_orig, $row->kurs);
				}else {
					$totalPerCurr[0] = $totalPerCurr[0] + $row->nilai;
					$totalPerCurr[1] = $totalPerCurr[1] + $row->nilai_orig; 
				}
				$totalCurr->set($row->curr, $totalPerCurr);
			}
			
			if ($row->tipe == "SUMMARY"){
				foreach ($totalCurr->getArray() as $key => $value) {
					$tmp = array("kode_vendor" => $row->kode_vendor . $key, "nama" => "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$key","kode_group" => "", "nama_group" => "", "nilai" => $value[0], "kurs" => $value[2], "curr" => $key, "nilai_orig" => $value[1], "related" => $row->related , "level_spasi" => $row->level_spasi,  "rowindex" => $row->rowindex);
					$nodeTmp = new server_util_NodeNRC($node);
					$tmp = json_decode(json_encode($tmp));
					$nodeTmp->setData($tmp);
				}
				$totalCurr = new server_util_Map();
			}
		}
		//error_log("Done Summmary");
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			$this->summariesKKP($val);
		}
		//error_log("Done Leveing");
		//perlu hitung ke summary
		$this->generateResultKKP($rootNode, $result);
		
		$result["total"] = $total;
		$rs = $db->execute("select
							 sum(b.nilai) as nilai,  b.curr
							, sum(b.nilai_orig) as nilai_orig
						 from bpc_vendor_ap a
						 	   inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
						 where a.kode_vendor like '$vendor%' and b.kode_lokasi = '$compCode'  and b.periode = '$periode'
						 group by b.curr 
						 order by b.curr");
		
		while ($row = $rs->FetchNextObject(false)) {
			$result["detailTotal"]["rs"]["rows"][] = (array)$row;
		}
		//error_log(json_encode($result));
		return $result;
	}
	function downloadReportVendorAPGroup2($compCode, $vendor, $periode){
		try{
			$db = $this->getDb();
			

			uses("server_modules_codeplex_PHPExcel",false);
			$objPHPExcel = new PHPExcel();
			// Set document properties
			$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
							->setLastModifiedBy("MA")
							->setTitle("REPORT F13")
							->setSubject("F13")
							->setDescription("Report F13 (Hutang)")
							->setKeywords("F13")
								->setCategory("Intercompany");
	
	
				
			$objPHPExcel->setActiveSheetIndex(0);
			$sheet = $objPHPExcel->getActiveSheet();
			$sharedStyle1 = new PHPExcel_Style();
			$sharedStyle1->applyFromArray(
				array('fill' 	=> array(
											'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
											'color'		=> array('argb' => 'FFCCFFCC')
										),
					'alignment' => array(
                                      'wrap'       => true,
									  'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                            ),
					'borders' => array(
											'allborders'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										),
					'font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    )
					));
			$style_num = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => false,
                            ),
                           'alignment' => array(
                                      'wrap'       => false,
                                      'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                            ),
                     );
        	$style_title = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    ),
                     );
			$rs = $db->execute("select nama from bpc_lokasi where cocd = '$compCode' ");
			$nama = "";
			if ($row = $rs->FetchNextObject(false)){
				$nama = $row->nama;
			}

			$sheet->setCellValueByColumnAndRow(0, 1, strtoupper($nama));
			$sheet->setCellValueByColumnAndRow(0, 2, "ANAK PERUSAHAAN PT TELKOM");
			$sheet->setCellValueByColumnAndRow(0, 3, "UTANG USAHA & HUTANG LAINNYA");
			$sheet->setCellValueByColumnAndRow(0, 4, "PER $periode");
			$sheet->getStyle("A1:A4")->applyFromArray($style_title);
			$sheet->getStyle("A1:A4")->getFont()->setSize(12);
			$sheet->mergeCells("A1:C1");
			$sheet->mergeCells("A2:C2");
			$sheet->mergeCells("A3:C3");
			$sheet->mergeCells("A4:C4");
			

			$sheet->getColumnDimension('A')->setWidth(5);
			$sheet->getColumnDimension('B')->setWidth(5);
			$sheet->getColumnDimension('C')->setWidth(35);
			$sheet->getColumnDimension('D')->setWidth(11);
			$sheet->getColumnDimension('E')->setWidth(15);
			$sheet->getColumnDimension('F')->setWidth(15);
			$sheet->getColumnDimension('G')->setWidth(15);

			$column = array("Keterangan","MATA UANG"," NILAI DALAM MATA UANG ASAL (ORIGINAL) "," KURS VALUTA ASING ","SETARA RUPIAH (IDR)");
			$col = 0;
			$row = 7;
			foreach ($column as $value){
				$sheet->setCellValueByColumnAndRow($col, $row, $value);
				$col++;
				if ($col == 1){
					$col = 3;
				}
			}
			$sheet->getRowDimension('7')->setRowHeight(40);
			$sheet->mergeCells("A7:C7");

			$row++;
			$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
			$sheet->setSharedStyle($sharedStyle1,"A7:".$end."7");
			$first = true;
			$totalCurr = array();
			$result = $this->reportHutangVendorAPGroup2($compCode, $vendor, $periode);
			$totalCurr = new server_util_Map();
			$related = "";
			$row++;
			foreach($result["rs"]["rows"] as $val){
				$rowVal = json_decode(json_encode($val));
				$sheet->setCellValueByColumnAndRow(0, $row, $rowVal->kode_klp);
				$nama = str_replace("&nbsp;","",$rowVal->nama);
				$level = "";
				for ($i = 0; $i < $rowVal->level_spasi - 2; $i++){
					$level .= "   ";
				}
				if ($rowVal->tipe != 'akun' ){
					$sheet->setCellValueByColumnAndRow(0 + $rowVal->level_spasi, $row, $nama);	
				}else
					$sheet->setCellValueByColumnAndRow(2, $row, $level . $nama);
				$sheet->setCellValueByColumnAndRow(3, $row, $rowVal->curr);
				$sheet->setCellValueByColumnAndRow(4, $row, $rowVal->nilai_orig);
				$sheet->setCellValueByColumnAndRow(5, $row, $rowVal->kurs);
				$sheet->setCellValueByColumnAndRow(6, $row, $rowVal->nilai);
				$sheet->getStyle("D$row:F$row")->getNumberFormat()->setFormatCode('#,##0');
				$row++;
			}
			
			// Set active sheet index to the first sheet, so Excel opens this as the first sheet
			$objPHPExcel->setActiveSheetIndex(0);
	
	
			// Save Excel 2007 file
			$namafile = MD5(date("r"));
			global $serverDir;
			$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
			$objWriter->save($serverDir . "/tmp/F13-$compCode.xlsx");
		
	
			return "/tmp/F13-$compCode.xlsx";
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}
	function reportJejerVendorAP($cocd, $vendor, $periode){
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));


		$fields = array();
		$rs = $db->execute("select cocd, nama from bpc_lokasi where kode_induk = '9000' and not cocd in ('0','96','97','98','M','E') ");
		$dataUbis = new server_util_Map();
		while ($row = $rs->FetchNextObject(false) ){
			$fields .= " 0 as c_" . $row->cocd;
			$rs2 = $db->execute("select kode_vendor, nama, level_spasi, rowindex, kurs, curr, related, 
						 sum(nilai) as nilai, sum(nilai_orig) as nilai_orig 
						 from (
						select case when b.kode_vendor is null then 'ZZZZZ' else a.kode_vendor end as kode_vendor, nvl(b.nama,'Others') as nama, 2 as level_spasi, 2 as rowindex
							, sum(a.nilai) as nilai, a.kurs, a.curr
							, sum(a.nilai_orig) as nilai_orig, nvl(c.related,'0') as related
						 from bpc_vendor_sum a 
						 	 left outer join bpc_vendor_group b on b.kode_vendor = a.kode_vendor
							  left outer join bpc_vendor_related c on c.kode_vendor = a.kode_vendor and c.kode_lokasi = a.kode_lokasi  
						 where a.kode_vendor like '$vendor%'  and a.kode_lokasi ='". $row->cocd ."'  and a.periode = '$periode'
						 group by a.kode_vendor, b.kode_vendor, b.nama , a.kurs, a.curr,c.related
						 union 
						 select 'ZZZZZ', 'Others', 2 as level_spasi, 2 as rowindex
							, sum(b.nilai) as nilai, b.kurs, b.curr
							, sum(b.nilai_orig) as nilai_orig, '0' as related
						 from bpc_vendor_ap a
						 	   inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi  
							   left outer join bpc_vendor_map d on d.kode_vendor = a.kode_vendor and d.kode_lokasi = a.kode_lokasi 
						 where a.kode_vendor like '$vendor%'  and a.kode_lokasi ='". $row->cocd ."'  and b.periode = '$periode' and d.kode_group is null
						 group by  b.kurs, b.curr ) a 
						 group by kode_vendor, nama, level_spasi, rowindex, kurs, curr, related
						 order by related desc, kode_vendor");
				$itemUbis = new server_util_Map();

				while ($line = $rs2->FetchNextObject(false)){
					$itemUbis->set($line->kode_vendor . $line->curr, $line);
				}
				$dataUbis->set($row->cocd, $itemUbis);

		}
		$rs = $db->execute("select kode_vendor, nama, level_spasi, rowindex, kurs, curr, related, 
						 sum(nilai) as nilai, sum(nilai_orig) as nilai_orig 
						 from (
						select case when b.kode_vendor is null then 'ZZZZZ' else a.kode_vendor end as kode_vendor, nvl(b.nama,'Others') as nama, 2 as level_spasi, 2 as rowindex
							, sum(a.nilai) as nilai, a.kurs, a.curr
							, sum(a.nilai_orig) as nilai_orig, nvl(c.related,'0') as related
						 from bpc_vendor_sum a 
						 	 left outer join bpc_vendor_group b on b.kode_vendor = a.kode_vendor
							  left outer join bpc_vendor_related c on c.kode_vendor = a.kode_vendor and c.kode_lokasi = a.kode_lokasi  
						 where a.kode_vendor like '$vendor%'   and a.periode = '$periode'
						 group by a.kode_vendor, b.kode_vendor, b.nama , a.kurs, a.curr,c.related
						 union 
						 select 'ZZZZZ', 'Others', 2 as level_spasi, 2 as rowindex
							, sum(b.nilai) as nilai, b.kurs, b.curr
							, sum(b.nilai_orig) as nilai_orig, '0' as related
						 from bpc_vendor_ap a
						 	   inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi  
							   left outer join bpc_vendor_map d on d.kode_vendor = a.kode_vendor and d.kode_lokasi = a.kode_lokasi 
						 where a.kode_vendor like '$vendor%'   and b.periode = '$periode' and d.kode_group is null
						 group by  b.kurs, b.curr ) a 
						 group by kode_vendor, nama, level_spasi, rowindex, kurs, curr, related
						 order by related desc, kode_vendor");
		$first = true;
		$totalCurr = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			foreach ($dataUbis->getArray() as $key => $itemUbis){
				$tmp = $itemUbis->get($row->kode_vendor . $row->curr);
				if ($tmp == null){
					eval("\$row->nilai_$key = 0;");
					eval("\$row->nilai_orig_$key = 0;");
				}else {
					eval ("\$row->nilai_$key = $tmp->nilai ;");
					eval ("\$row->nilai_orig_$key = $tmp->nilai_orig ;");
				}

			}

			if ($related != $row->related){
				if ($row->related == 1)
					$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "PIHAK BERELASI", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 0, "rowindex" => 0);
				else if ($row->related == 0){
					$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;b. Berdasarkan mata uang", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 1, "rowindex" => 1);
					foreach ($totalCurr->getArray() as $key => $value) {
						$item = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$key", "nilai" => $value[0], "kurs" => $value[2], "curr" => $key, "nilai_orig" => $value[1], "related" => $row->related , "level_spasi" => 2,  "rowindex" => 2);
						$ix = 3;
						foreach ($dataUbis->getArray() as $key => $itemUbis){
							$item["nilai_$key"] = $value[$ix];
							$ix++;
							$item["nilai_orig_$key"] = $value[$ix];
							$ix++;
						}
						$result["rs"]["rows"][] = $item;
					}	
					$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "PIHAK KETIGA", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 0, "rowindex" => 0);
					
					$totalCurr = new server_util_Map();		
				}
				if ($row->related == 1)
					$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;a. Berdasarkan Pemasok", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 1, "rowindex" => 1);
				else 
					$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;a. Berdasarkan Pelanggan", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 1, "rowindex" => 1);
				$related = $row->related;			
			}	
			$totalPerCurr = $totalCurr->get($row->curr);
			if ($totalPerCurr == null){
				$totalPerCurr = array($row->nilai, $row->nilai_orig, $row->kurs);
				foreach ($dataUbis->getArray() as $key => $itemUbis){
					eval ("\$totalPerCurr[] = \$row->nilai_$key;");
					eval ("\$totalPerCurr[] = \$row->nilai_orig_$key;");
				}
			}else {
				$totalPerCurr[0] = $totalPerCurr[0] + $row->nilai;
				$totalPerCurr[1] = $totalPerCurr[1] + $row->nilai_orig;
				$ix = 3;
				foreach ($dataUbis->getArray() as $key => $itemUbis){
					eval ("\$totalPerCurr[$ix] = \$totalPerCurr[$ix] + \$row->nilai_$key;");
					$ix++;
					eval ("\$totalPerCurr[$ix] = \$totalPerCurr[$ix] + \$row->nilai_orig_$key;");
					$ix++;
				} 
			}
			$totalCurr->set($row->curr, $totalPerCurr);
			$row->nama = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" . $row->nama;
			$result["rs"]["rows"][] = (array)$row;
		}	

		

		$result["rs"]["rows"][] = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;b. Berdasarkan mata uang", "nilai" => 0, "kurs" => 0, "curr" => "", "nilai_orig" => 0, "related" => $row->related , "level_spasi" => 1, "rowindex" => 1);
		foreach ($totalCurr->getArray() as $key => $value) {
			$item = array("kode_vendor" => "","nama" => "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$key", "nilai" => $value[0], "kurs" => $value[2], "curr" => $key, "nilai_orig" => $value[1], "related" => $row->related , "level_spasi" => 2,  "rowindex" => 2);
			$ix = 3;
			foreach ($dataUbis->getArray() as $key => $itemUbis){
				$item["nilai_$key"] = $value[$ix];
				$ix++;
				$item["nilai_orig_$key"] = $value[$ix];
				$ix++;
			}
			$result["rs"]["rows"][] = $item;
		}
		//error_log(json_encode($result));
		return $result;
	}
	function reportJejerVendorAP2($cocd, $vendor, $periode){
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));

		if ($cocd == "") $cocd = "9000";

		$strukturLok = "9000";
		$fields = array();
		$rs = $db->execute("select cocd, nama from bpc_lokasi where kode_induk in ( select kode_lokasi from bpc_lokasi where cocd = '$cocd' ) and not cocd in ('0','96','97','98','M','E') ");

		$rsNilai = $db->execute("select nilai_min from bpc_param_nilai where kode_lokasi = '$cocd' and modul = 'AP' ");
		$nilai = 0;

		if ($row = $rsNilai->FetchNextObject(false)){
			$nilai = $row->nilai_min;
		}
		$kodeThirdParty = "F210";
		$rs3rd = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'THIRDPARTY' and modul = 'F13' ");
		if ($row = $rs3rd->FetchNextObject(false)){
			$kodeThirdParty = $row->kode_klp;
		}
		$rsOther1 = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'OT_RELATED' and modul = 'F13' ");
		if ($row = $rsOther1->FetchNextObject(false)){
			$kodeOtherRelated = $row->kode_klp;
		}

		$rsOther1 = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'OT_THIRD' and modul = 'F13' ");
		if ($row = $rsOther1->FetchNextObject(false)){
			$kodeOtherThird = $row->kode_klp;
		}

		$dataUbis = new server_util_Map();
		while ($row = $rs->FetchNextObject(false) ){
			$fields .= " 0 as c_" . $row->cocd;
			$filterLokasi = "(select kode_lokasi from bpc_lokasi start with kode_lokasi = '$row->cocd' connect by kode_induk = prior kode_lokasi )";
			$rs2 = $db->execute("select b.kode_vendor
					  	, sum(b.nilai) as nilai, sum(b.nilai_orig) as nilai_orig
						, 1 as kurs, b.curr
					  from bpc_conspack_m a
					  					inner join (select a.kode_klp, e.kode_vendor, e.nama, d.NILAI, d.nilai_orig, d.curr
																from bpc_conspack_d a 
														inner join bpc_vendor_map b on b.kode_group = a.kode_group  
														inner join bpc_vendor_ap c on c.kode_vendor = b.kode_vendor and c.kode_lokasi = b.kode_lokasi
														inner join bpc_vendor_det d on d.kode_vendor = c.kode_vendor and d.kode_lokasi = c.kode_lokasi    
														inner join bpc_vendor_group e on e.kode_vendor = b.kode_group               
										where a.kode_lokasi = '$strukturLok' and c.kode_lokasi in $filterLokasi and a.modul = 'F13' and d.periode = '$periode'
										union all
										select 'F210' as kode_klp, 'V99999' as kode_vendor, 'Others' as nama, b.NILAI, b.nilai_orig, b.curr
													from bpc_vendor_ap a
														inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
														left outer join bpc_vendor_map d on d.kode_vendor = a.kode_vendor and d.kode_lokasi = a.kode_lokasi and d.kode_group <> '-'
										where a.kode_lokasi in $filterLokasi and b.periode = '$periode' and d.kode_group is null
										union all
										select 'F210' as kode_klp,  e.kode_vendor, e.nama, b.NILAI, b.nilai_orig, b.curr
																from bpc_vendor_ap a
														inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
														inner join bpc_vendor_map c on c.kode_vendor = a.kode_vendor and c.kode_lokasi = a.kode_lokasi 
														inner join bpc_vendor_group e on e.kode_vendor = c.kode_group               
														left outer join bpc_conspack_d d on d.kode_group = c.kode_group and d.kode_lokasi = '$strukturLok' and d.modul = 'F13'
										where a.kode_lokasi in $filterLokasi and b.periode = '$periode' and d.kode_group is null) b on b.kode_klp = a.kode_klp 

										where a.kode_lokasi = '$strukturLok' and a.modul = 'F13' 
										group by b.kode_vendor,  a.rowindex,  b.curr 
										having abs(sum(b.nilai)) >= $nilai
										order by rowindex
							");
				$itemUbis = new server_util_Map();

				while ($line = $rs2->FetchNextObject(false)){
					$itemUbis->set($line->kode_vendor . $line->curr, $line);
				}
				$dataUbis->set($row->cocd, $itemUbis);

		}

		$filterLokasi = "(select kode_lokasi from bpc_lokasi start with kode_lokasi = '$cocd' connect by kode_induk = prior kode_lokasi )"; 		
		$sql = "select a.kode_klp as kode_vendor, left_pad(a.nama, a.level_spasi) as nama, a.level_spasi, a.rowindex
							, 0 as nilai, 0 as nilai_orig
							, 1 as kurs, '-' as curr
							, a.tipe
					  from bpc_conspack_m a 
					  where a.kode_lokasi = '$strukturLok' and a.modul = 'F13'
					  union 
					  select b.kode_vendor, left_pad(b.nama, a.level_spasi + 1) as nama, a.level_spasi + 1 , a.rowindex
					  	, sum(b.nilai) as nilai, sum(b.nilai_orig) as nilai_orig
						, 1 as kurs, b.curr
						, a.tipe
					  from bpc_conspack_m a
					  					inner join (select a.kode_klp, e.kode_vendor, e.nama, d.NILAI, d.nilai_orig, d.curr
																from bpc_conspack_d a 
														inner join bpc_vendor_map b on b.kode_group = a.kode_group 
														inner join bpc_vendor_ap c on c.kode_vendor = b.kode_vendor and c.kode_lokasi = b.kode_lokasi
														inner join bpc_vendor_det d on d.kode_vendor = c.kode_vendor and d.kode_lokasi = c.kode_lokasi    
														inner join bpc_vendor_group e on e.kode_vendor = b.kode_group               
										where a.kode_lokasi like '$strukturLok' and c.kode_lokasi in $filterLokasi and a.modul = 'F13' and d.periode = '$periode'
										union all
										select '$kodeOtherThird' as kode_klp, 'V99999' as kode_vendor, 'Others' as nama, b.NILAI, b.nilai_orig, b.curr
													from bpc_vendor_ap a
														inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
														left outer join bpc_vendor_map d on d.kode_vendor = a.kode_vendor and d.kode_lokasi = a.kode_lokasi and d.kode_group <> '-'
										where a.kode_lokasi  in $filterLokasi and b.periode = '$periode' and d.kode_group is null
										union all
										select '$kodeThirdParty' as kode_klp,  e.kode_vendor, e.nama, b.NILAI, b.nilai_orig, b.curr
																from bpc_vendor_ap a
														inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
														inner join bpc_vendor_map c on c.kode_vendor = a.kode_vendor and c.kode_lokasi = a.kode_lokasi 
														inner join bpc_vendor_group e on e.kode_vendor = c.kode_group               
														left outer join bpc_conspack_d d on d.kode_group = c.kode_group and d.kode_lokasi = '$strukturLok' and d.modul = 'F13'
										where a.kode_lokasi  in $filterLokasi and b.periode = '$periode' and d.kode_group is null) b on b.kode_klp = a.kode_klp 
										where a.kode_lokasi = '$strukturLok' and a.modul = 'F13' 
										group by a.kode_klp, b.kode_vendor, b.nama,  a.rowindex,a.level_spasi, b.curr, a.tipe
										having abs(sum(b.nilai)) >= $nilai 
						union 
						select b.kode_vendor, left_pad(b.nama, a.level_spasi + 1) as nama, a.level_spasi + 1 , a.rowindex
					  	, sum(b.nilai) as nilai, sum(b.nilai_orig) as nilai_orig
						, 1 as kurs, b.curr
						, a.tipe
					  from bpc_conspack_m a
					  					inner join (select '$kodeOtherRelated' as kode_klp, e.kode_vendor, e.nama, d.NILAI, d.nilai_orig, d.curr
																from bpc_conspack_d a 
														inner join bpc_vendor_map b on b.kode_group = a.kode_group 
														inner join bpc_vendor_ap c on c.kode_vendor = b.kode_vendor and c.kode_lokasi = b.kode_lokasi
														inner join bpc_vendor_det d on d.kode_vendor = c.kode_vendor and d.kode_lokasi = c.kode_lokasi    
														inner join bpc_vendor_group e on e.kode_vendor = b.kode_group               
										where a.kode_lokasi like '$strukturLok' and c.kode_lokasi  in $filterLokasi and a.modul = 'F13' and d.periode = '$periode'
										union all
										select '$kodeOtherThird' as kode_klp, 'V99999' as kode_vendor, 'Others' as nama, b.NILAI, b.nilai_orig, b.curr
													from bpc_vendor_ap a
														inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
														left outer join bpc_vendor_map d on d.kode_vendor = a.kode_vendor and d.kode_lokasi = a.kode_lokasi and d.kode_group <> '-'
										where a.kode_lokasi  in $filterLokasi and b.periode = '$periode' and d.kode_group is null
										union all
										select '$kodeThirdParty' as kode_klp,  e.kode_vendor, e.nama, b.NILAI, b.nilai_orig, b.curr
																from bpc_vendor_ap a
														inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
														inner join bpc_vendor_map c on c.kode_vendor = a.kode_vendor and c.kode_lokasi = a.kode_lokasi 
														inner join bpc_vendor_group e on e.kode_vendor = c.kode_group               
														left outer join bpc_conspack_d d on d.kode_group = c.kode_group and d.kode_lokasi = '$strukturLok' and d.modul = 'F13'
										where a.kode_lokasi  in $filterLokasi and b.periode = '$periode' and d.kode_group is null) b on b.kode_klp = a.kode_klp 
										where a.kode_lokasi = '$strukturLok' and a.modul = 'F13' 
										group by a.kode_klp, b.kode_vendor, b.nama,  a.rowindex,a.level_spasi, b.curr, a.tipe
										having abs(sum(b.nilai)) < $nilai 
										order by rowindex
							";
		//error_log($sql);
		$rs = $db->execute($sql);
		
		$first = true;
		$totalCurr = new server_util_Map();
		$rootNode = new server_util_NodeNRC("00");
		$totalCurr = new server_util_Map();
		
		while ($row = $rs->FetchNextObject(false)){
			foreach ($dataUbis->getArray() as $key => $itemUbis){
				$tmp = $itemUbis->get($row->kode_vendor . $row->curr);
				if ($tmp == null){
					eval("\$row->nilai_$key = 0;");
					eval("\$row->nilai_orig_$key = 0;");
				}else {
					eval ("\$row->nilai_$key = $tmp->nilai ;");
					eval ("\$row->nilai_orig_$key = $tmp->nilai_orig ;");
				}

			}

			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$node->setData($row);
			if ($row->curr != "-"){
				$totalPerCurr = $totalCurr->get($row->curr);
				if ($totalPerCurr == null){
					$totalPerCurr = array($row->nilai, $row->nilai_orig, $row->kurs);
				}else {
					$totalPerCurr[0] = $totalPerCurr[0] + $row->nilai;
					$totalPerCurr[1] = $totalPerCurr[1] + $row->nilai_orig; 
				}
				$totalCurr->set($row->curr, $totalPerCurr);
			}
			
			if ($row->tipe == "SUMMARY"){
				foreach ($totalCurr->getArray() as $key => $value) {
					$tmp = array("kode_vendor" => $row->kode_vendor . $key, "nama" => "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$key","kode_group" => "", "nama_group" => "", "nilai" => $value[0], "kurs" => $value[2], "curr" => $key, "nilai_orig" => $value[1], "related" => $row->related , "level_spasi" => 2,  "rowindex" => 2);
					$nodeTmp = new server_util_NodeNRC($node);
					$tmp = json_decode(json_encode($tmp));
					$nodeTmp->setData($tmp);
				}
				$totalCurr = new server_util_Map();
			}
		}	
		//error_log("Done Summmary");
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			$this->summariesKKP($val);
		}
		//error_log("Done Leveing");
		//perlu hitung ke summary
		$this->generateResultKKP($rootNode, $result);
		
		$result["total"] = $total;
		$rs = $db->execute("select
							 sum(b.nilai) as nilai,  b.curr
							, sum(b.nilai_orig) as nilai_orig
						 from bpc_vendor_ap a
						 	   inner join bpc_vendor_det b on b.kode_vendor = a.kode_vendor and b.kode_lokasi = a.kode_lokasi
						 where a.kode_vendor like '$vendor%' and b.kode_lokasi like '$cocd%'  and b.periode = '$periode'
						 group by b.curr 
						 order by b.curr");
		
		while ($row = $rs->FetchNextObject(false)) {
			$result["detailTotal"]["rs"]["rows"][] = (array)$row;
		}

		return $result;
	}
	function logUploadAP($periode){
		$db = $this->getDb();

		$rs = $db->execute("select distinct a.cocd, a.nama, nvl(b.periode,'0') as sap, nvl(c.periode, '0') as upl, nvl(c.status_sap,'0') as status   from bpc_lokasi a 
								left outer join bpc_vendor_det b on b.kode_lokasi = a.cocd and b.periode = '$periode'
								left outer join bpc_vendor_sum c on c.kode_lokasi = a.cocd and c.periode = '$periode'
								where a.kode_Induk = '9000' and cocd not in ('E','98','97','96')
								order by a.cocd");
		$result = array();
		while ($row = $rs->FetchNextObject(false)){
			if ($row->status == "0"){//pasti upload
				if ($row->upl != "0"){
					$row->det = "<img src='icon/circle_red.png' width=20 height=20 />";
					$row->upl = "<img src='icon/circle_green.png' width=20 height=20 />";
				}else if ($row->sap == "0"){
					$row->upl = "<img src='icon/circle_red.png' width=20 height=20 />";
					$row->det = "<img src='icon/circle_red.png' width=20 height=20 />";
				}else {
					$row->upl = "<img src='icon/circle_red.png' width=20 height=20 />";
					$row->det = "<img src='icon/circle_green.png' width=20 height=20 />";
				}
				
			}else if ($row->status == "1" ){//pasti lewat SAP
				$row->upl = "<img src='icon/circle_red.png' width=20 height=20 />";
				$row->det = "<img src='icon/circle_green.png' width=20 height=20 />";
			}
			$result[] = (array)$row;
		}
		return $result;

	}
	function submitAP($compCode, $userid){
		$db = $this->getDb();
	}
	//---------------------------------------- END 
	/*
	CUSTOMER
	*/
	/*------------------------ MASTER CUST */
	function getDataCustomer($compCode){
		$db = $this->getDb();
		$sql = new server_util_arrayList();    
        $sql->add("delete from bpc_cust_ap where kode_lokasi = '$compCode' ");
		$login = new server_util_Map();
		$rfc = $this->getSAPConnection($compCode);
		if (isset($this->sapuser)){
			$login->set("user", $this->sapuser);
			$login->set("passwd", $this->sappwd);
		}else{
			return "Koneksi SAP tidak di temukan untuk Comp Code $compCode";
		}
		$sapImp = new server_util_Map(array(
												"IM_BUKRS" => $compCode
											));
		$sapExpTable = new server_util_Map(array("VLIST"));
		$sapImpTable = null;
		$dataSAP = $rfc->callRFC($login,"ZGET_LIST_CUSTOMER", $sapImp, $sapExpTable, $sapImpTable, null, true);
		 /*
                    KUNNR 	    LAND1 	ORT01 	    PSTLZ 	REGIO 	BEZEI 	    ADRNR 	        STR_SUPPL1 	POST_CODE1 	STRAS 	                    CITY1 	    MCOD1 	                    MCOD2 	        MCOD3 	        TELBX 	            TELF1 	STCEG 	AKONT 	VBUND
                    0000000001 	ID 	    BANDUNG 	40133 	02 	    Jawa Barat 	0000024631 		            40133 	    JL. ASIA AFRIKA NO. 119 	BANDUNG 	BANK BNI (PLACEMENT) 		                BANDUNG 		022-4239726 		0011231001 	

                    */
		$output = $dataSAP->get("VLIST");
		foreach ($output->getArray() as $val){
			$line = $val->get(0);
			$cust = $line->get("KUNNR");
			$nama =  str_replace("'","''", $line->get("MCOD1") );
			$alamat = "";//$line->get("STRAS");
			$kode = "";//$line->get("LAND1");
			$sql->add("insert into bpc_cust_ap(kode_cust, nama, kode_lokasi )
					values('$cust','$nama','$compCode')");
		}
		$ret = $db->execArraySQL($sql);
		return $ret;
	}
	function getListCust($compCode, $rowPerPage, $page){
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));
		//$rowPerPage = 50;
		$start = ($page - 1) * $rowPerPage;
		$end = $start + $rowPerPage;
		$rs = $db->execute("select count(*) as total
						from bpc_cust_ap a 
							left outer join bpc_cust_map b on b.kode_cust = a.kode_cust and b.kode_lokasi = a.kode_lokasi
							left outer join bpc_cust_group c on c.kode_cust = b.kode_group
							left outer join bpc_cust_related d on d.kode_cust = b.kode_group and d.kode_lokasi = a.kode_lokasi 	
						where a.kode_lokasi = '$compCode'");
		$row = $rs->FetchNextObject(false);
		$total = $row->total;
		$rs = $db->LimitQuery("select a.kode_cust, a.nama, 
						nvl(c.kode_cust,'-') as kode_group
						, nvl(c.nama,'-') as nm_group,
						nvl(d.related,'0') as related
						from bpc_cust_ap a 
							inner join bpc_lokasi e on e.cocd = a.kode_lokasi
							left outer join bpc_cust_map b on b.kode_cust = a.kode_cust and b.kode_lokasi = a.kode_lokasi
							left outer join bpc_cust_group c on c.kode_cust = b.kode_group
							left outer join bpc_cust_related d on d.kode_cust = b.kode_group and d.kode_lokasi = a.kode_lokasi 	
						where a.kode_lokasi = '$compCode'  order by a.kode_cust", $rowPerPage, $start);
		while ($row = $rs->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array)$row;
		}
		$result["page"] = $page;
		$result["maxpage"] = ceil($total / $rowPerPage);
		$result["total"] = $total;
		return $result;
	}
	function findListCust($compCode, $search){
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));
		//$rowPerPage = 50;
		$search = strtoupper($search);
		$rs = $db->LimitQuery("select a.kode_cust, a.nama, 
						nvl(c.kode_cust,'-') as kode_group, 
						nvl(c.nama,'-') as nm_group,
						nvl(d.related,'0') as related
						from bpc_cust_ap a 
							inner join bpc_lokasi e on e.cocd = a.kode_lokasi
							left outer join bpc_cust_map b on b.kode_cust = a.kode_cust and b.kode_lokasi = a.kode_lokasi
							left outer join bpc_cust_group c on c.kode_cust = b.kode_group
							left outer join bpc_cust_related d on d.kode_cust = b.kode_group and d.kode_lokasi = a.kode_lokasi 	
						where a.kode_lokasi = '$compCode'  
						and (upper(a.nama) like '%$search%' or a.kode_cust like '$search%' or upper(c.nama) like '%$search%')
						order by a.kode_cust",50,0);
		while ($row = $rs->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array)$row;
		}
		return $result;
	}
	function editDataCust($compCode, $cust){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		if (isset($cust->nama))
			$sql->add("update bpc_cust_ap set nama = '".$cust->nama."' where kode_lokasi ='$compCode' and kode_cust = '". $cust->kode."' ");
		
		if (isset($cust->group)){
			$sql->add("delete from bpc_cust_map  where kode_lokasi ='$compCode' and kode_cust = '". $cust->kode."'  ");
			$sql->add("insert into bpc_cust_map(kode_cust, kode_lokasi, kode_group)
				values('".$cust->kode."','$compCode', '". $cust->group ."')");
		}
		
		if (isset($cust->flag)){
			$sql->add("delete bpc_cust_related  where kode_lokasi ='$compCode' and kode_cust = '". $cust->group."' ");
			$sql->add("delete bpc_conspack_d  where kode_lokasi ='$compCode' and kode_group = '". $cust->group."' and modul ='F4' ");
			if ($cust->flag != "0" && $cust->flag != "-" && $cust->flag != ""){
				$sql->add("insert into bpc_cust_related (kode_lokasi, kode_cust, related)values('".$compCode."','".$cust->group."','". $cust->flag ."' )");
				$sql->add("insert into bpc_conspack_d (kode_lokasi, kode_group, kode_klp,modul)values('".$compCode."','".$cust->group."','". $cust->flag ."','F4' )");
			}
			
		}
		
		return $db->execArraySQL($sql);
	}
	function uploadDataCustAP($compCode, $userlog, $data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_cust_ap where kode_lokasi ='$compCode'");
		$tmpGroup = new server_util_Map();
		$group = "";
		foreach ($data as $val){
			$sql->add("insert into bpc_cust_ap(kode_cust, nama,  kode_lokasi)
				values('".$val->cust."','".$val->nama."','$compCode')");
		}
		
		$ret = $db->execArraySQL($sql);
		return $ret;
		
	}
	function uploadDataCustTmp($compCode,$data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_cust_ap_tmp where kode_lokasi ='$compCode'");
		$tmpGroup = new server_util_Map();
		$group = "";
		foreach ($data as $val){
			$val->cust = trim($val->cust);
			$sql->add("insert into bpc_cust_ap_tmp(kode_cust, nama,  kode_lokasi)
				values('".$val->cust."','".$val->nama."','$compCode')");
		}
		$ret = $db->execArraySQL($sql);
		//$this->uploadDataRelatedVendor($compCode, $listRelated);
		return $ret;
		
	}
	function uploadCustFromTmp($compCode, $userlog, $data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_cust_ap where kode_lokasi ='$compCode'");
		$sql->add("insert into bpc_cust_ap(kode_cust, nama,  kode_lokasi)
				select kode_cust, nama, kode_lokasi from bpc_cust_ap_tmp where kode_lokasi = '$compCode'");
		$ret = $db->execArraySQL($sql);
		return $ret;
		
	}
	function uploadDataCust($compCode, $userlog, $data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_cust_ap where kode_lokasi ='$compCode'");
		$sql->add("delete from bpc_cust_map where kode_lokasi ='$compCode'");
		$sql->add("delete from bpc_cust_related where kode_lokasi ='$compCode'");
		$sql->add("delete from bpc_conspack_d where kode_lokasi ='$compCode' and modul ='F4'");
		$tmpGroup = new server_util_Map();
		$group = "";
		foreach ($data as $val){
			$sql->add("insert into bpc_cust_ap(kode_cust, nama,  kode_lokasi)
				values('".$val->cust."','".$val->nama."','$compCode')");
				
			$sql->add("insert into bpc_cust_map(kode_cust, kode_lokasi, kode_group)
				values('".$val->cust."','$compCode', '". $val->group ."')");
			$group = $tmpGroup->get($val->group); 
			if ($group == null){
				$obj = json_decode(json_encode(array("cust" => $val->group, "flag" => $val->flag)));
				$tmpGroup->set($val->group, $obj);
			}
		}
		$listRelated = array();
		foreach ($tmpGroup->getArray() as $key => $value) {
			$listRelated[] = $value;
		}
		
		
		foreach ($listRelated as $val){
			$sql->add("insert into bpc_cust_related(kode_cust, related, kode_lokasi)
				values('".$val->cust."','".$val->flag."','$compCode')");
			$sql->add("insert into bpc_conspack_d (kode_lokasi, kode_group, kode_klp,modul)values('".$compCode."','".$val->cust."','". $cust->flag ."','F4' )");
		}
		
		$ret = $db->execArraySQL($sql);
		//$this->uploadDataRelatedVendor($compCode, $listRelated);
		return $ret;
		
	}
	function uploadDataRelatedCust($compCode, $data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_cust_related where kode_lokasi ='$compCode'");
		
		foreach ($data as $val){
			$sql->add("insert into bpc_cust_related(kode_cust, related, kode_lokasi, kode_group)
				values('".$val->cust."','".$val->flag."','$compCode','".$val->group."')");
			
		}
		return $db->execArraySQL($sql);
	}
	function getListJenisCust($compCode){
		$db = $this->getDb();
		//$rs = $db->execute("select id, desk from bpc_jenis_vendor order by id");
		$rs = $db->execute("select kode_klp as id, nama from bpc_conspack_m where kode_lokasi = '$compCode' and level_spasi >= 2 and modul ='F4' order by kode_klp");
		$result = array();
		while ($row = $rs->FetchNextObject(false)){
			$result[] = (array) $row;
		}
		if (count($result) == 0 && $compCode != "9000"){
			return $this->getListJenisVendor("9000");
		} 
		return $result;
	}
	//----------------------- Map Cust 
	function getListCustMapTmp($compCode, $rowPerPage, $page){
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));
		//$rowPerPage = 50;
		$start = ($page - 1) * $rowPerPage;
		$end = $start + $rowPerPage;
		$rs = $db->execute("select count(*) as total
						from bpc_cust_ap a 
							left outer join bpc_cust_map_tmp b on b.kode_cust = a.kode_cust and b.kode_lokasi = a.kode_lokasi
							left outer join bpc_cust_group c on c.kode_cust = b.kode_group
							left outer join bpc_cust_related_tmp d on d.kode_cust  = b.kode_group and d.kode_lokasi = a.kode_lokasi 	
						where a.kode_lokasi = '$compCode'");
		$row = $rs->FetchNextObject(false);
		$total = $row->total;
		$rs = $db->LimitQuery("select a.kode_cust, a.nama, 
						nvl(c.kode_cust,'-') as kode_group
						, nvl(c.nama,'-') as nm_group,
						nvl(d.related,'0') as related
						from bpc_cust_ap a 
							inner join bpc_lokasi e on e.cocd = a.kode_lokasi
							left outer join bpc_cust_map_tmp b on b.kode_cust = a.kode_cust and b.kode_lokasi = a.kode_lokasi
							left outer join bpc_cust_group c on c.kode_cust = b.kode_group
							left outer join bpc_cust_related_tmp d on d.kode_cust = b.kode_group and d.kode_lokasi = a.kode_lokasi 	
						where a.kode_lokasi = '$compCode'  order by a.kode_cust", $rowPerPage, $start);
		while ($row = $rs->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array)$row;
		}
		$result["page"] = $page;
		$result["maxpage"] = ceil($total / $rowPerPage);
		$result["total"] = $total;
		return $result;
	}
	
	function uploadDataMapCust($compCode, $data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_cust_map where kode_lokasi ='$compCode'");
		$sql->add("delete from bpc_cust_related where kode_lokasi ='$compCode'");
		$sql->add("delete from bpc_conspack_d where kode_lokasi ='$compCode' and modul ='F4' ");
		$tmpGroup = new server_util_Map();
		$group = "";
		foreach ($data as $val){
			$sql->add("insert into bpc_cust_map(kode_cust, kode_lokasi, kode_group)
				values('".$val->cust."','$compCode', '". $val->group ."')");
			$group = $tmpGroup->get($val->group); 
			if ($group == null){
				$obj = json_decode(json_encode(array("cust" => $val->group, "flag" => $val->flag)));
				$tmpGroup->set($val->group, $obj);
			}
		}
		$listRelated = array();
		foreach ($tmpGroup->getArray() as $key => $value) {
			$listRelated[] = $value;
		}
		
		
		foreach ($listRelated as $val){
			$sql->add("insert into bpc_cust_related(kode_cust, related, kode_lokasi)
				values('".$val->cust."','".$val->flag."','$compCode')");
			$sql->add("insert into bpc_conspack_d(kode_group, kode_klp, kode_lokasi, modul)
				values('".$val->cust."','".$val->flag."','$compCode','F4')");
		}
		return $db->execArraySQL($sql);
		
	}
	function uploadDataMapCustTmp($compCode, $data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		error_log($compCode);
		
		$sql->add("delete from bpc_cust_map_tmp where kode_lokasi ='$compCode'");
		$sql->add("delete from bpc_cust_related_tmp where kode_lokasi ='$compCode'");
		$tmpGroup = new server_util_Map();
		$group = "";
		foreach ($data as $val){
			error_log(json_encode($val));
			if ($val->cust != "" && strtoupper($val->cust) != "KODE CUST"){
				$klp = $val->group;
				if (substr($klp,0,1) == "V")
					$klp = "C" . substr($klp,1,6);
				$sql->add("insert into bpc_cust_map_tmp(kode_cust, kode_lokasi, kode_group)
					values('".$val->cust."','$compCode', '". $klp ."')");
				$group = $tmpGroup->get($group); 
				if ($group == null){
					$obj = json_decode(json_encode(array("cust" => $klp, "flag" => $val->flag)));
					$tmpGroup->set($klp, $obj);
				}
			}
		}
		$listRelated = array();
		foreach ($tmpGroup->getArray() as $key => $value) {
			$listRelated[] = $value;
		}
		
		
		foreach ($listRelated as $val){
			$sql->add("insert into bpc_cust_related_tmp(kode_cust, related, kode_lokasi)
				values('".$val->cust."','".$val->flag."','$compCode')");
		}
		$ret = $db->execArraySQL($sql);
		error_log($ret);
		return ;
		
	}
	function uploadCustMapFromTmp($compCode){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_cust_map where kode_lokasi ='$compCode'");
		$sql->add("delete from bpc_cust_related where kode_lokasi ='$compCode'");
		$sql->add("delete from bpc_conspack_d where kode_lokasi ='$compCode' and modul = 'F4' ");
		$sql->add("insert into bpc_cust_map select * from bpc_cust_map_tmp where kode_lokasi='$compCode' ");
		$sql->add("insert into bpc_cust_related select * from bpc_cust_related_tmp where kode_lokasi = '$compCode' ");
		$sql->add("insert into bpc_conspack_d(kode_group, kode_klp, kode_lokasi, modul) select distinct kode_cust, related, kode_lokasi, 'F4' from bpc_cust_related_tmp where kode_lokasi = '$compCode' ");
		$ret = $db->execArraySQL($sql);
		return $ret;

	}
	function downloadDataCust($compCode){
		$db = $this->getDb();
		
		
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 
 
		// Add Data in your file
		
		
					
		
			
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$column = array("Kode Cust","Nama","Related","Kode Group","Nama Group");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
			
	
		// Rename worksheet
		$objPHPExcel->getActiveSheet()->setTitle('Cust');
 		
		$sql = "select a.kode_cust, a.nama, 
						nvl(b.kode_cust,'-') as kode_group, nvl(c.nama,'-') as nm_group,
						nvl(d.related,'0') as related
						from bpc_cust_ap a 
							inner join bpc_lokasi e on e.cocd = a.kode_lokasi
							left outer join bpc_cust_map b on b.kode_cust= a.kode_cust and b.kode_lokasi = a.kode_lokasi
							left outer join bpc_cust_group c on c.kode_cust = b.kode_group
							left outer join bpc_cust_related d on d.kode_cust = b.kode_group and d.kode_lokasi = a.kode_lokasi 	
						where a.kode_lokasi = '$compCode'  order by a.kode_cust";
		error_log($compCode);
 		$rs = $db->execute($sql);

		$row++;
		while ($line = $rs->FetchNextObject(false)){
			$sheet->setCellValueByColumnAndRow(0, $row, $line->kode_cust);
			$sheet->setCellValueByColumnAndRow(1, $row, $line->nama);
			$sheet->setCellValueByColumnAndRow(2, $row, $line->kode_group);
			$sheet->setCellValueByColumnAndRow(3, $row, $line->nm_group);
			$sheet->setCellValueByColumnAndRow(4, $row, $line->related);
			$row++;
		}
 
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/$compCode-custMap.xlsx");
	
 
		return "/tmp/$compCode-custMap.xlsx";	
	}
	function downloadDataGroup($compCode){
		$db = $this->getDb();
		
		
		$this->cleanUp();
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
 
 
		// Set document properties
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 
 
		// Add Data in your file
		
		
					
		
			
		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									)
				 ));
		$column = array("Kode Cust","Nama","Related","Kode Group","Nama Group");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
			
	
		// Rename worksheet
		$objPHPExcel->getActiveSheet()->setTitle('Cust Group');
 		
		$sql = "select a.kode_cust, a.nama, 
						nvl(d.related,'0') as related
						from bpc_cust_group a 
							left outer join bpc_cust_related d on d.kode_cust = a.kode_cust and d.kode_lokasi = a.kode_lokasi 	
						where a.kode_lokasi = '$compCode'  order by a.kode_cust";
		$rs = $db->execute($sql);

		$row++;
		while ($line = $rs->FetchNextObject(false)){
			$sheet->setCellValueByColumnAndRow(0, $row, $line->kode_cust);
			$sheet->setCellValueByColumnAndRow(1, $row, $line->nama);
			$sheet->setCellValueByColumnAndRow(42, $row, $line->related);
			$row++;
		}
		
		$sheet = $objPHPExcel->createSheet();
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
 		$sheet->setTitle('Vendor Group');

		$sql = "select a.kode_vendor, a.nama, 
						nvl(d.related,'0') as related
						from bpc_vendor_group a 
							left outer join bpc_vendor_related d on d.kode_vendor = a.kode_vendor and d.kode_lokasi = a.kode_lokasi 	
						where a.kode_lokasi = '$compCode'  order by a.kode_vendor";
		$rs = $db->execute($sql);

		$row++;
		while ($line = $rs->FetchNextObject(false)){
			$sheet->setCellValueByColumnAndRow(0, $row, $line->kode_vendor);
			$sheet->setCellValueByColumnAndRow(1, $row, $line->nama);
			$sheet->setCellValueByColumnAndRow(42, $row, $line->related);
			$row++;
		}

		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);


 
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/$compCode-custMap.xlsx");
	
 
		return "/tmp/$compCode-custMap.xlsx";	
	}
	//--------------- Cust Group
	function uploadDataCustGroup($data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$lokasi = "9000";
		$sql->add("delete from bpc_cust where kode_lokasi ='$lokasi'");
		
		foreach ($data as $val){
			$sql->add("insert into bpc_cust(kode_cust, nama, related_telkom, related_group, kode_lokasi)
				values('".$val->cust."','".str_replace("'","''",$val->nama)."','".$val->flag1."','".$val->flag2."','$lokasi')");
		}
		return $db->execArraySQL($sql);
	}
	
	function editCustGroup($cust){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$lokasi = "9000";
		$sql->add("update bpc_cust set nama='". $cust->nama ."', related_telkom = '". $cust->flag1 ."', related_group = '". $cust->flag2 ."' where kode_lokasi ='$lokasi' and kode_cust = '". $cust->kode."' ");
		
		return $db->execArraySQL($sql);
	}
	
	function deleteCustGroup($cust){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$lokasi = "9000";
		$sql->add("delete from bpc_cust where kode_lokasi ='$lokasi' and kode_cust = '". $cust->kode."' ");
		
		return $db->execArraySQL($sql);
	}
	//---------------- Upload F-4
	function uploadDataAR($userid, $compCode, $data, $periode){
		//periode, kode_vendor, kode_lokasi, curr, kurs, nilai, tgl_duedate, kurs_adj, userid, tgl_update
		$db = $this->getDb();

		$rs = $db->execute("select status_app from bpc_cust_sum where kode_lokasi = '$compCode' and periode = '$periode' ");
		if ($row = $rs->FetchNextObject(false)){
			if ($row->status_app == 1){
				return "Data sudah disubmit ke Telkom";
			}
		}

		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_cust_sum where kode_lokasi ='$compCode' and periode = '$periode'");
		
		$lokKonsol = $this->getCompCodeConsol();
		$rsOther1 = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$lokKonsol' and tipe = 'OT_THIRD' and modul = 'F4' ");
		if ($row = $rsOther1->FetchNextObject(false)){
			$kodeOtherThird = $row->kode_klp;
		}
		foreach ($data as $val){
			$val->nilai_adj = floatval($val->nilai_adj);
			$val->ag1 = floatval($val->ag1);
			$val->ag3 = floatval($val->ag3);
			$val->ag6 = floatval($val->ag6);
			$val->ag12 = floatval($val->ag12);
			$val->ag13 = floatval($val->ag13);
			$val->bd1 = floatval($val->bd1);
			$val->bd3 = floatval($val->bd3);
			$val->bd6 = floatval($val->bd6);
			$val->bd12 = floatval($val->bd12);
			$val->bd13 = floatval($val->bd13);
			$val->bill = floatval($val->bill);
			$val->unbill = floatval($val->unbill);
			$val->net = floatval($val->net);
			$val->total1 = floatval($val->total1);
			
			$related = "";
			$rs = $db->execute("select related from bpc_cust_related where kode_cust = '$val->cust' and kode_lokasi = '$compCode'  ");
			if ($row = $rs->FetchNextObject(false))
				$related1 = $row->related;
			else $related1 = "C99999";
			$rs = $db->execute("select related from bpc_cust_related where kode_cust = '$val->cust' and kode_lokasi = '$lokKonsol'  ");
			if ($row = $rs->FetchNextObject(false))
				$related2 = $row->related;
			else $related2 = $kodeOtherThird;

			$sql->add("insert into bpc_cust_sum(periode, kode_cust, kode_lokasi, curr, kurs, nilai, tgl_duedate, kode_akun, kurs_adj, userid, tgl_update, 
					nilai_orig, nilai_adj, ag1, ag3, ag6, ag9, ag12, ag13, bd1, bd3, bd6, bd9, bd12, bd13, nilai_bill, nilai_unbill, nilai_net, nilai_total, desk, status_bill, keterangan, related_ap, related_group  )
				values('$periode','". $val->cust ."','".$compCode."','".$val->curr."','". $val->kurs ."','". $val->nilai ."', null, '".$val->akun."' ,0, '$userid',sysdate,
				    '". $val->nilai_orig."', '". $val->nilai_adj ."', '".$val->ag1."', '".$val->ag3."', '".$val->ag6."', '0',
					'".$val->ag12."', '".$val->ag13."', '".$val->bd1."', '".$val->bd3."', '".$val->bd6."', '0', '".$val->bd12."', '".$val->bd13."',
					'".$val->bill."', '".$val->unbill."','". $val->net ."' , '". $val->total1 ."', '". $val->nama ."','". $val->status_bill."','$val->keterangan','$related','$related2' )");
			
			$sql->add("delete bpc_cust_ar_ket   where kode_lokasi = '$compCode' and periode = '$periode' and kode_cust = '$cust'  ");
			if ($val->keterangan <> '-' && $val->keterangan <> "" && strlen($val->keterangan) > 4)
				$sql->add("insert into bpc_cust_ar_ket(kode_lokasi, kode_cust, periode, keterangan)
						values('$compCode','$cust','$periode','$val->keterangan') ");
		
		}
		return $db->execArraySQL($sql);
	}
	function _date_range_limit($start, $end, $adj, $a, $b, $result)
	{
		if ($result[$a] < $start) {
			$result[$b] -= intval(($start - $result[$a] - 1) / $adj) + 1;
			$result[$a] += $adj * intval(($start - $result[$a] - 1) / $adj + 1);
		}

		if ($result[$a] >= $end) {
			$result[$b] += intval($result[$a] / $adj);
			$result[$a] -= $adj * intval($result[$a] / $adj);
		}

		return $result;
	}

	function _date_range_limit_days($base, $result)
	{
		$days_in_month_leap = array(31, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);
		$days_in_month = array(31, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);

		$base = $this->_date_range_limit(1, 13, 12, "m", "y", $base);

		$year = $base["y"];
		$month = $base["m"];

		if (!$result["invert"]) {
			while ($result["d"] < 0) {
				$month--;
				if ($month < 1) {
					$month += 12;
					$year--;
				}

				$leapyear = $year % 400 == 0 || ($year % 100 != 0 && $year % 4 == 0);
				$days = $leapyear ? $days_in_month_leap[$month] : $days_in_month[$month];

				$result["d"] += $days;
				$result["m"]--;
			}
		} else {
			while ($result["d"] < 0) {
				$leapyear = $year % 400 == 0 || ($year % 100 != 0 && $year % 4 == 0);
				$days = $leapyear ? $days_in_month_leap[$month] : $days_in_month[$month];

				$result["d"] += $days;
				$result["m"]--;

				$month++;
				if ($month > 12) {
					$month -= 12;
					$year++;
				}
			}
		}

		return $result;
	}

	function _date_normalize($base, $result)
	{
		$result = _date_range_limit(0, 60, 60, "s", "i", $result);
		$result = _date_range_limit(0, 60, 60, "i", "h", $result);
		$result = _date_range_limit(0, 24, 24, "h", "d", $result);
		$result = _date_range_limit(0, 12, 12, "m", "y", $result);

		$result = $this->_date_range_limit_days($base, $result);

		$result = $this->_date_range_limit(0, 12, 12, "m", "y", $result);

		return $result;
	}

	/**
	* Accepts two unix timestamps.
	*/
	function _date_diff($one, $two)
	{
		$invert = false;
		if ($one > $two) {
			list($one, $two) = array($two, $one);
			$invert = true;
		}

		$key = array("y", "m", "d", "h", "i", "s");
		$a = array_combine($key, array_map("intval", explode(" ", date("Y m d H i s", $one))));
		$b = array_combine($key, array_map("intval", explode(" ", date("Y m d H i s", $two))));

		$result = array();
		$result["y"] = $b["y"] - $a["y"];
		$result["m"] = $b["m"] - $a["m"];
		$result["d"] = $b["d"] - $a["d"];
		$result["h"] = $b["h"] - $a["h"];
		$result["i"] = $b["i"] - $a["i"];
		$result["s"] = $b["s"] - $a["s"];
		$result["invert"] = $invert ? 1 : 0;
		$result["days"] = intval(abs(($one - $two)/86400));

		if ($invert) {
			$this->_date_normalize($a, $result);
		} else {
			$this->_date_normalize($b, $result);
		}

		return $result;
	}
	/*
	$date = "1986-11-10 19:37:22";

	print_r(_date_diff(strtotime($date), time()));
	print_r(_date_diff(time(), strtotime($date)));
	*/
	function dateDiff ($d1, $d2) {

		// Return the number of days between the two dates:    
		return round(abs(strtotime($d1) - strtotime($d2))/86400);

	} // end function dateDiff
	function getListAkunAR($compCode){
		$db = $this->getDb();
		$result = new server_util_Map();
		$rs = $db->execute("select kode_akun, status from bpc_akunbill where kode_lokasi = '$compCode' ");
		while ($row = $rs->FetchNextObject(false)){
			$result->set($row->kode_akun, $row->status);
		}	
		return $result;
	}
	function splitARRequest(){
		
	}
	function getDataARFromRFC($compCode, $tgl, $cust1, $cust2, $periode, $kurs2){
		try{
			$db = $this->getDb();
			
			$login = new server_util_Map();
			//query 
			$rfc = $this->getSAPConnection($compCode);
			if (isset($this->sapuser)){
				$login->set("user", $this->sapuser);
				$login->set("passwd", $this->sappwd);
			}else{
				return "Koneksi SAP tidak di temukan untuk Comp Code $compCode";
			}
			$sapImp = new server_util_Map(array(
													"IM_BUKRS" => $compCode,
													"IM_KEYDATE" => $tgl,
													"IM_NOTEDITEMS" => " ",
													"IM_SECINDEX" => " "
													
												));
			$vendor = new server_util_arrayList();
			if ($cust2 == ""){
				if ($cust1 == "")
					$cust1 = "*";
				$vendor->add(array("SIGN"=>"I","OPTION"=>"CP","LOW"=> $cust1,"HIGH"=> $cust2));
			}else {
				$vendor->add(array("SIGN"=>"I","OPTION"=>"BT","LOW"=> $cust1,"HIGH"=> $cust2));
			}
			
			$sapExpTable = new server_util_Map(array("LINEITEMS"));
			$sapImpTable = new server_util_Map(array("T_KUNNR" => $vendor));
			//echo "Get SAP<br>";
			$dataSAP = $rfc->callRFC($login,"ZGET_OPENITEM_FBL5N", $sapImp, $sapExpTable, $sapImpTable, null, true);
			$sql  = "select status_umur, persen from bpc_param_agingar where periode = '$periode' and kode_lokasi = '$compCode' order by status_umur";
			$rs = $db->execute($sql);
			$persenAging = new server_util_Map();
			while ($row = $rs->FetchNextObject(false)){
				$persenAging->set("U" .$row->status_umur."", $row->persen);
			}

			///echo "done SAP<br> $dataSAP";
			/*
				//periode, kode_cust, kode_lokasi, curr, kurs, nilai, tgl_duedate, kurs_adj, userid, tgl_update, keterangan, ref_doc, tgl_post, tgl_entry, tgl_doc, kode_ba 
			
			COMP_CODE 	CUSTOMER 	SP_GL_IND 	CLEAR_DATE 	CLR_DOC_NO 	ALLOC_NMBR 	FISC_YEAR 	DOC_NO 	ITEM_NUM 	PSTNG_DATE 	DOC_DATE 	ENTRY_DATE 	CURRENCY 	LOC_CURRCY 	REF_DOC_NO 	DOC_TYPE 	FIS_PERIOD 	POST_KEY 	DB_CR_IND 	BUS_AREA 	TAX_CODE 	LC_AMOUNT 	AMT_DOCCUR 	LC_TAX 	TX_DOC_CUR 	ITEM_TEXT 	BRANCH 	BLINE_DATE 	PMNTTRMS 	DSCT_DAYS1 	DSCT_DAYS2 	NETTERMS 	DSCT_PCT1 	DSCT_PCT2 	DISC_BASE 	DSC_AMT_LC 	DSC_AMT_DC 	PYMT_METH 	PMNT_BLOCK 	FIXEDTERMS 	INV_REF 	INV_YEAR 	INV_ITEM 	DUNN_BLOCK 	DUNN_KEY 	LAST_DUNN 	DUNN_LEVEL 	DUNN_AREA 	DOC_STATUS 	NXT_DOCTYP 	VAT_REG_NO 	REASON_CDE 	PMTMTHSUPL 	REF_KEY_1 	REF_KEY_2 	T_CURRENCY 	AMOUNT 	NET_AMOUNT 	NAME 	NAME_2 	NAME_3 	NAME_4 	POSTL_CODE 	CITY 	COUNTRY 	STREET 	PO_BOX 	POBX_PCD 	POBK_CURAC 	BANK_ACCT 	BANK_KEY 	BANK_CTRY 	TAX_NO_1 	TAX_NO_2 	TAX 	EQUAL_TAX 	REGION 	CTRL_KEY 	INSTR_KEY 	PAYEE_CODE 	LANGU 	BILL_LIFE 	BE_TAXCODE 	BILLTAX_LC 	BILLTAX_FC 	LC_COL_CHG 	COLL_CHARG 	CHGS_TX_CD 	ISSUE_DATE 	USAGEDATE 	BILL_USAGE 	DOMICILE 	DRAWER 	CTRBNK_LOC 	DRAW_CITY1 	DRAWEE 	DRAW_CITY2 	DISCT_DAYS 	DISCT_RATE 	ACCEPTED 	BILLSTATUS 	PRTEST_IND 	BE_DEMAND 	OBJ_TYPE 	REF_DOC 	REF_ORG_UN 	REVERSAL_DOC 	SP_GL_TYPE 	NEG_POSTNG 	REF_DOC_NO_LONG 	BILL_DOC 	VBUND 	HKONT
						1000 	0088000001 		00000000 		20131231 	2013 	1800000239 	1 	20131231 	20131231 	20140425 	IDR 	IDR 	IC10010000003860 	DR 	12 	01 	S 	T701 		11000.0000 	11000.0000 	0.0000 	0.0000 	*tes sender telkom 		20140225 	0001 	0 	0 	0 	0.000 	0.000 	11000.0000 	0.0000 	0.0000 					0 	0 			00000000 	0 									IDR 	11000.0000 	0.0000 																								0 		0.0000 	0.0000 	0.0000 	0.0000 		00000000 	00000000 								0 	0.00000 					BKPF 	1800000239 	10002013 				IC10010000003860 		001001 	0011101311
									0 	0.00000 					BKPF 	0100081696 	10002012 				REKLAS PPH 21 	

				*/
			$akunAR = $this->getListAkunAR($compCode);

			$sql = new server_util_arrayList();    
			if ($cust2 == ""){
				if ($cust1 == "")
					$cust1 = "*";
				$vendor->add(array("SIGN"=>"I","OPTION"=>"CP","LOW"=> $cust1,"HIGH"=> $cust2));
			}else {
				$vendor->add(array("SIGN"=>"I","OPTION"=>"BT","LOW"=> $cust1,"HIGH"=> $cust2));
			}

			if ($cust1 == "*")
				$sql->add("delete from bpc_cust_det where kode_lokasi = '$compCode' and periode  = '$periode' ");
			else if ($cust2 != ""){
				$sql->add("delete from bpc_cust_det where kode_lokasi = '$compCode' and periode  = '$periode' and kode_cust between '$cust1' and '$cust2' ");
			}

			$current = substr($tgl,0,4) . "-" .substr($tgl,4,2) ."-". substr($tgl, 6,2);//date("Y-m-d");20160605
			$output = $dataSAP->get("LINEITEMS");
			foreach ($output->getArray() as $val){
				$line = $val->get(0);
				///error_log("Line " . json_encode($line->getArray()));
				$cust = $line->get("CUSTOMER");
				$curr = $line->get("CURRENCY");
				$kurs = 1;
				$no_akun = $line->get("HKONT");
				$dc = $line->get("DB_CR_IND");
				$nilai = floatval($line->get("LC_AMOUNT"));
				$nilai_orig = floatval($line->get("AMT_DOCCUR"));
				
				if ($dc == "H"){
					$nilai = -$nilai;
					$nilai_orig = -$nilai_orig;
				}
				$tgl_duedate = $line->get("BLINE_DATE");
				$ag1 = 0;
				$ag3 = 0;
				$ag6 = 0;
				$ag12 = 0;
				$ag13 = 0;
				$bd1 = 0;
				$bd3 = 0;
				$bd6 = 0;
				$bd12 = 0;
				$bd13 = 0;
				if ($tgl_duedate != "00000000") {
					$bsline_date = substr($tgl_duedate, 0,4) . '-' . substr($tgl_duedate, 4,2) ."-".substr($tgl_duedate, 6,2);
					$tgl_duedate = "to_date('$tgl_duedate','YYYYmmdd')";
				}else {
					$tgl_duedate = "to_date('19700101','YYYYmmdd')";
					$bsline_date = "1970-01-01";
				}
				//----- hiutng aging berdasar BSLINE DATE
				$umur = $this->dateDiff($current, date($bsline_date) );
				if ($umur <= 30){
					$ag1 = $nilai;
					$persen = $persenAging->get("U0");
					if ($persen == null)
						$persen = 0;
					$bd1 =  $persen * $nilai / 100;
				}else if ($umur <= 90){
					$ag3 = $nilai;
					$persen = $persenAging->get("U1");
					if ($persen == null)
						$persen = 0;
					$bd3 =  $persen * $nilai / 100;
				}else if ($umur <= 180){
					$ag6 = $nilai;
					$persen = $persenAging->get("U2");
					
					if ($persen == null)
						$persen = 0;
					$bd6 =  $persen * $nilai / 100;
				}else if ($umur <= 360){
					$persen = $persenAging->get("U3");
					
					if ($persen == null)
						$persen = 0;
					$bd12 =  $persen * $nilai / 100;
					$ag12 = $nilai;
				}else {
					$ag13 = $nilai;
					$persen = $persenAging->get("U4");
					if ($persen == null)
						$persen = 0;
					$bd13 =  $persen * $nilai / 100;
				}
				$ket = $line->get("ITEM_TEXT");
				$ref_doc = $line->get("REF_DOC");
				$tgl_post = $line->get("PSTNG_DATE");
				$tgl_entry = $line->get("ENTRY_DATE");
				$tgl_doc = $line->get("DOC_DATE");
				$ba = $line->get("BUS_AREA");
				$net = $nilai - ($bd1 + $bd3 + $bd6 + $bd12 + $bd12);
				$unbill = 0;
				$bill = 0;
				$status = $akunAR->get($no_akun);
				if (!isset($status)){
					$bill = $nilai;
					$status = "bill";
				}else {
					if (substr($status,0,1) == "B" ){
						$bill = $nilai;
						$status = "bill";
					}else{
						$unbill = $nilai;
						$status = "unbill";
					}
				}

				//if (substr($no_akun,0,3) == "001")
				//					$bill = $nilai;
				//else $unbill = $nilai;
				$sql->add("insert into bpc_cust_det(periode, kode_cust, kode_lokasi, curr, kurs, nilai, nilai_orig, tgl_duedate, kurs_adj, userid, tgl_update, keterangan, ref_doc, tgl_post, tgl_entry, tgl_doc, kode_ba, ag1, ag3, ag6, ag12, ag13, bd1, bd3, bd6, bd12, bd13, kode_akun, nilai_adj,  nilai_net, nilai_bill, nilai_unbill , status_bill)
								values('$periode','". $cust ."','".$compCode."','".$curr."','". $kurs ."','". $nilai ."','$nilai_orig', ".$tgl_duedate." ,'". $kurs2 ."', '$userid',sysdate, '". str_replace("'","''", $ket) ."', '". $ref_doc ."', '". $tgl_post ."', '". $tgl_entry ."', '". $tgl_doc ."', '". $ba ."'
											 , $ag1, $ag3, $ag6, $ag12, $ag13, $bd1, $bd3, $bd6, $bd12, $bd13
											 , '$no_akun',0, $net, $bill, $unbill,'$status' )");

				
			}
			$ret = $db->execArraySQL($sql);

			return $ret;
		}catch(Exception $e){
			error_log("FBL5N ". $e->getMessage());
		}
	}
	function saveRFCARDetail($compCode, $tgl, $periode){
		try{
			$db = $this->getDb();
			$rs = $db->execute("select distinct status_app from bpc_cust_sum where kode_lokasi = '$compCode' and periode = '$periode' ");
			if ($row = $rs->FetchNextObject(false)){
				if ($row->status_app == 1){
					return "Data sudah disubmit ke Telko";
				}
			}
			$sql = new server_util_arrayList();
			$sql->add("delete from bpc_cust_sum where kode_lokasi = '$compCode' and periode = '$periode' ");
			$rs = $db->execute("select distinct curr from bpc_cust_det a where a.kode_lokasi = '$compCode' and a.periode ='$periode' and curr <> 'IDR' "); 
			while ($row = $rs->FetchNextObject(false)){
				$nilai = $this->getParamKurs($compCode, $periode);
				if ($nilai == 0){
					$nilai = $this->getParamKurs("9000", $periode);
				}
				$nilai = floatval($nilai);
				$sql->add("update bpc_cust_det set kurs_adj = $nilai where kode_lokasi = '$compCode' and periode ='$periode' and curr = '". $row->curr ."' ");	
			}
			$sql->add("insert into bpc_cust_sum(periode, kode_cust, kode_lokasi, curr, kurs, nilai, nilai_orig, tgl_duedate, kurs_adj, userid, tgl_update, kode_akun, status_sap,
							nilai_adj, ag1, ag3, ag6, ag12, ag13, bd1, bd3, bd6, bd12, bd13, nilai_net,nilai_total, nilai_bill, nilai_unbill, status_bill )
						select a.periode, nvl(b.kode_group,'C99999') as kode_group, a.kode_lokasi, a.curr, kurs_adj, sum(nilai) as nilai, sum(nilai_orig) as nilai_orig, sysdate, kurs_adj,   '$userid',sysdate, a.kode_akun,'1'
								, sum(nilai_adj) as nilai_adj
								, sum(a.ag1) as ag1, sum(a.ag3) as ag3, sum(a.ag6) as ag6, sum(a.ag12) as ag12, sum(a.ag13) as ag13
								, sum(a.bd1) as bd1, sum(a.bd3) as bd3, sum(a.bd6) as bd6, sum(a.bd12) as bd12, sum(a.bd13) as bd13
								, sum(a.nilai - a.bd1 + a.bd3 + a.bd6 + a.bd12 + a.bd13) as net
								, sum(a.ag1 + a.ag3 + a.ag6 + a.ag12 + a.ag13) as total
								, sum(a.nilai_bill) as bill
								, sum(a.nilai_unbill) as unbill
								, a.status_bill
						from bpc_cust_det a 
						left outer join bpc_cust_map b on b.kode_cust= a.kode_cust and b.kode_lokasi = a.kode_lokasi
						where a.kode_lokasi = '$compCode' and a.periode ='$periode'
						group by a.periode, b.kode_group, a.kode_lokasi, a.curr, kurs_adj, a.kode_akun, a.status_bill ");
			
			$rt = $db->execArraySQL($sql);
			error_log($rt);
			return $rt;
		}catch(Exception $e){
			error_log($e->getMessage() );
		}
	}
	function addPersenAging($compCode, $data, $periode){
		$db = $this->getDb();
		//$data->persen = str_replace(",",".",$data->persen);
		$db->execute("delete from bpc_param_agingar where kode_lokasi = '$compCode' and periode = '$periode' and status_umur = '". $data->status ."' " );
		$ret = $db->execute("insert into bpc_param_agingar(kode_lokasi, periode, persen, status_umur)
					values ('$compCode', '$periode','". $data->persen ."','". $data->status ."')");
		return $ret;
	}
	function getPersenAging($compCode, $periode, $status){
		try{

			$db = $this->getDb();
			$result = array();
			$rs = $db->execute("select persen, status_umur from bpc_param_agingar where periode = '$periode' and kode_lokasi = '$compCode' and status_umur = '$status'");
			//error_log($rs);
			if ($row = $rs->FetchNextObject(false)){
				return $row->persen;
			}
			return 0;
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}
	function listPersenAging($compCode, $periode){
		$db = $this->getDb();
		$result = array();
		$rs = $db->execute("select persen, status_umur from bpc_param_agingar where periode = '$periode' and kode_lokasi = '$compCode' order by status_umur");
		while ($row = $rs->FetchNextObject(false)){
			$result[] = (array) $row;
		}
		return $result;
	}
	function getListAR($compCode, $periode){
		//F-4
		//Kode Vendor, Keterangan, Related, CURR, Amount, KURS, nilai Rupiah
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));
		$rs = $db->execute("select b.kode_cust, b.desk as nama, nvl(a.nama,'-') as nm_group
							, sum(b.nilai) as nilai, b.kurs, b.curr 
							, sum(b.nilai_orig) as nilai_orig
							, nvl(c.related,'0') as related
							, sum(b.ag1) as ag1, sum(b.ag3) as ag3, sum(b.ag6) as ag6, sum(b.ag12) as ag12, sum(b.ag13) as ag13
							, sum(b.ag1 + b.ag3 + b.ag6 + b.ag12 + b.ag13) as total1
							, sum(b.bd1) as bd1, sum(b.bd3) as bd3, sum(b.bd6) as bd6, sum(b.bd12) as bd12, sum(b.bd13) as bd13
							, sum(b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13) as total2
							, sum(b.nilai - b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13) as net
							, sum(b.nilai_bill) as bill, sum(b.nilai_unbill) as unbill
						 from  bpc_cust_sum b
						 	 left outer join bpc_cust_group a  on b.kode_cust = a.kode_cust
							  left outer join bpc_cust_related c on c.kode_cust = a.kode_cust and c.kode_lokasi = b.kode_lokasi  
						 where b.kode_lokasi = '$compCode'  and b.periode = '$periode'
						 group by b.kode_cust, a.nama , b.kurs, b.curr, c.related, b.desk");
		$first = true;
		$totalCurr = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array)$row;
		}	 
		
		return $result;
	}
	function getListARDetail($compCode, $periode){
		//F-4
		//Kode Vendor, Keterangan, Related, CURR, Amount, KURS, nilai Rupiah
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));
		$rs = $db->execute("select b.kode_cust, nvl(a.nama,'-') as nama, nvl(d.kode_cust,'-') as kode_group, nvl(d.nama,'-') as nm_group
							, sum(b.nilai) as nilai, b.kurs, b.curr 
							, b.kode_akun
							, sum(b.nilai_orig) as nilai_orig, nvl(c.related,'0') as related
							, sum(b.ag1) as ag1, sum(b.ag3) as ag3, sum(b.ag6) as ag6, sum(b.ag12) as ag12, sum(b.ag13) as ag13
							, sum(b.ag1 + b.ag3 + b.ag6 + b.ag12 + b.ag13) as total1
							, sum(b.bd1) as bd1, sum(b.bd3) as bd3, sum(b.bd6) as bd6, sum(b.bd12) as bd12, sum(b.bd13) as bd13
							, sum(b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13) as total2
							, sum(b.nilai - (b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13) ) as net
							, sum(b.nilai_bill) as bill, sum(b.nilai_unbill) as unbill
						 from bpc_cust_det b 
						 	 left outer join bpc_cust_ap a on b.kode_cust = a.kode_cust and b.kode_lokasi = a.kode_lokasi
							  left outer join bpc_cust_map e on e.kode_cust = a.kode_cust and e.kode_lokasi = a.kode_lokasi	
							  left outer join bpc_cust_group d on d.kode_cust = e.kode_group
							  left outer join bpc_cust_related c on c.kode_cust = a.kode_cust and c.kode_lokasi = b.kode_lokasi  
						 where b.kode_cust like '%' and b.kode_lokasi = '$compCode'  and b.periode = '$periode'
						 group by b.kode_cust, a.nama ,d.kode_cust, d.nama, b.kurs, b.curr, c.related,b.kode_akun");
		$first = true;
		$totalCurr = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array)$row;
		}	 
		
		return $result;
	}
	function getReportAR($compCode, $periode){
		
	}
	function getReportConsolARAP($periode){
			
	}
	function simpanDataStrukturConsPack($lokasi, $modul, $master, $detail, $userlog){
		$db = $this->getDb();
		$sql = new server_util_arrayList();

		$sql->add("delete from bpc_conspack_m where kode_lokasi = '$lokasi' and modul = '$modul' ");
		$sql->add("delete from bpc_conspack_d where kode_lokasi  ='$lokasi' and modul = '$modul' ");

		foreach ($master as $key => $val) {
			$sql->add("insert into bpc_conspack_m(kode_lokasi, modul, kode_klp, nama, kode_induk, level_spasi, rowindex, tipe, user_log, tgl_update, sum_header)
				values('$lokasi','$modul','$val->kode_klp','$val->nama','$val->kode_induk','$val->level_spasi', '$val->rowindex', '$val->tipe', '$userlog', sysdate,'".$val->sum_header."') ");
		}

		foreach ($detail as $key => $value) {
			$sql->add("insert into bpc_conspack_d(kode_lokasi, modul, kode_klp, kode_group)values
				('$lokasi','$modul','$value->kode_klp','$value->kode_group')");
		}
		$ret = $db->execArraySQL($sql);
		return $ret;
	}
	//--- Report F4
	function reportPiutangCustAPDetail2($compCode, $cust, $periode){
		//F-4
		//Kode cust, Keterangan, Related, CURR, Amount, KURS, nilai Rupiah
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()),"detailTotal" => array("rs" => array("rows" => array())));
		$strukturLok = $compCode;
		$rs = $db->execute("select distinct kode_lokasi from bpc_conspack_m where kode_lokasi = '$compCode' and modul ='F4' ");
		if ($row = $rs->FetchNextObject(false)){

		}else {
			$strukturLok = "9000";
		}
		$rsNilai = $db->execute("select nilai_min from bpc_param_nilai where kode_lokasi = '$compCode' and modul = 'AR' ");
		$nilai = 0;

		$vm = $db->execute("select value1, value2 from bpc_rules where kode_rules='VALUATION' ");
		if ($rowVm = $vm->FetchNextObject(false)){
			$kodeVMRelated = "C". substr($rowVm->value2,1,4);
			$kodeVMTP = "C". substr($rowVm->value1,1,4);
		}

		if ($row = $rsNilai->FetchNextObject(false)){
			$nilai = $row->nilai_min;
		}
		$kodeThirdParty = "F210";
		$rs3rd = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'THIRDPARTY' and modul = 'F4' ");
		if ($row = $rs3rd->FetchNextObject(false)){
			$kodeThirdParty = $row->kode_klp;
		}
		$rsOther1 = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'OT_RELATED' and modul = 'F4' ");
		if ($row = $rsOther1->FetchNextObject(false)){
			$kodeOtherRelated = $row->kode_klp;
		}

		$rsOther1 = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'OT_THIRD' and modul = 'F4' ");
		if ($row = $rsOther1->FetchNextObject(false)){
			$kodeOtherThird = $row->kode_klp;
		}

		$rs = $db->execute("select a.kode_klp as kode_cust, left_pad(a.nama, a.level_spasi) as nama, a.level_spasi, a.rowindex
							, 0 as nilai, 0 as nilai_orig, 0 as nilai_adj, 0 as nilai_adjusted
							, 0 as ag1, 0 as ag3, 0 as ag6, 0 as ag12, 0 as ag13, 0 as total1
							, 0 as bd1, 0 as bd3, 0 as bd6, 0 as bd12, 0 as bd13, 0 as total2
							, 0 as nilai_total, 0 as nilai_bill, 0 as nilai_unbill, 0 as nilai_net  
							, 1 as kurs, '-' as curr
							, '-' as kode_group, '-' as nama_group
							, a.tipe
							, a.sum_header
							,'-' as status_bill
					  from bpc_conspack_m a 
					  where a.kode_lokasi = '$strukturLok' and a.modul = 'F4'
					  union 
					  select b.kode_cust, left_pad(b.nama, a.level_spasi + 1) as nama, a.level_spasi + 1 as level_spasi, a.rowindex
					  	, sum(b.nilai) as nilai, sum(b.nilai_orig) as nilai_orig
						, sum(nilai_adj) as nilai_adj, sum(nilai + nilai_adj)  as nilai_adjusted
						, sum(b.ag1) as ag1, sum(b.ag3) as ag3, sum(b.ag6) as ag6,  sum(b.ag12) as ag12,  sum(b.ag13) as ag13,  sum(b.ag1 + b.ag3 + b.ag6 + b.ag12 + b.ag13) as total1
						, sum(b.bd1) as bd1, sum(b.bd3) as bd3, sum(b.bd6) as bd6,  sum(b.bd12) as bd12,  sum(b.bd13) as bd13,  sum(b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13) as total2
						, sum(b.nilai_total) as nilai_total, sum(b.nilai_bill) as nilai_bill, sum(b.nilai_unbill) as nilai_unbill
						, sum(b.nilai_net) as nilai_net, 1 as kurs, b.curr
						, b.kode_group, b.nama_group
						, 'akun' as tipe
						, a.sum_header
						, b.status_bill
					  from bpc_conspack_m a
					  					inner join (
											  select a.kode_klp, c.kode_cust, c.nama, e.kode_cust as kode_group, e.nama as nama_group
											  			 , d.NILAI, d.nilai_orig, d.curr, d.nilai_adj 
														 , d.ag1, d.ag3, d.ag6, d.ag12, d.ag13, d.ag1 + d.ag3 + d.ag6 + d.ag12 + d.ag13 as total1
														 , d.bd1, d.bd3, d.bd6, d.bd12, d.bd13, d.bd1 + d.bd3 + d.bd6 + d.bd12 + d.bd13 as total2
														 , d.nilai_total, d.nilai_bill, d.nilai_unbill
														 , d.nilai_net 
														 , d.status_bill
													from bpc_conspack_d a 
														inner join bpc_cust_map b on b.kode_group = a.kode_group and b.kode_lokasi = a.kode_lokasi   
														inner join bpc_cust_ap c on c.kode_cust = b.kode_cust and c.kode_lokasi = b.kode_lokasi
														inner join bpc_cust_det d on d.kode_cust = c.kode_cust and d.kode_lokasi = c.kode_lokasi    
														inner join bpc_cust_group e on e.kode_cust = b.kode_group               
										where a.kode_lokasi = '$compCode' and b.kode_lokasi = '$compCode' and a.modul = 'F4' and d.periode = '$periode'
										union all
										select '$kodeOtherThird' as kode_klp, a.kode_cust, a.nama, 'C99999' as kode_group, 'Others' as nama_group
														, b.NILAI, b.nilai_orig, b.curr, b.nilai_adj 
														 , b.ag1, b.ag3, b.ag6, b.ag12, b.ag13, b.ag1 + b.ag3 + b.ag6 + b.ag12 + b.ag13 as total1
														 , b.bd1, b.bd3, b.bd6, b.bd12, b.bd13, b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13 as total2
														 , b.nilai_total, b.nilai_bill, b.nilai_unbill
														 , b.nilai_net
														 , b.status_bill
													from bpc_cust_ap a
														inner join bpc_cust_det b on b.kode_cust = a.kode_cust and b.kode_lokasi = a.kode_lokasi
														left outer join bpc_cust_map d on d.kode_cust = a.kode_cust and d.kode_lokasi = a.kode_lokasi and d.kode_group <> '-'
										where a.kode_lokasi = '$compCode' and b.periode = '$periode' and d.kode_group is null
										union all
										select '$kodeThirdParty' as kode_klp, a.kode_cust, a.nama,  e.kode_cust as kode_group, e.nama as nama_group
																, b.NILAI, b.nilai_orig, b.curr, b.nilai_adj 
														 , b.ag1, b.ag3, b.ag6, b.ag12, b.ag13, b.ag1 + b.ag3 + b.ag6 + b.ag12 + b.ag13 as total1
														 , b.bd1, b.bd3, b.bd6, b.bd12, b.bd13, b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13 as total2
														 , b.nilai_total, b.nilai_bill, b.nilai_unbill
														 , b.nilai_net
														 , b.status_bill

													from bpc_cust_ap a
														inner join bpc_cust_det b on b.kode_cust = a.kode_cust and b.kode_lokasi = a.kode_lokasi
														inner join bpc_cust_map c on c.kode_cust = a.kode_cust and c.kode_lokasi = a.kode_lokasi 
														inner join bpc_cust_group e on e.kode_cust = c.kode_group               
														left outer join bpc_conspack_d d on d.kode_group = c.kode_group and d.kode_lokasi = b.kode_lokasi and d.modul = 'F4'
										where a.kode_lokasi = '$compCode' and b.periode = '$periode' and d.kode_group is null
										
										) b on b.kode_klp = a.kode_klp 
										where a.kode_lokasi = '$strukturLok' and a.modul = 'F4' 
										group by a.kode_klp, b.kode_cust, b.nama,  a.rowindex,a.level_spasi, b.curr, a.tipe , b.kode_group, b.nama_group, a.sum_header, b.status_bill
										having abs(sum(b.nilai)) >= $nilai
						union 
					  select b.kode_cust, left_pad(b.nama, a.level_spasi + 1) as nama, a.level_spasi + 1 as level_spasi, a.rowindex
					  	, sum(b.nilai) as nilai, sum(b.nilai_orig) as nilai_orig
						, sum(nilai_adj) as nilai_adj, sum(nilai + nilai_adj)  as nilai_adjusted
						, sum(b.ag1) as ag1, sum(b.ag3) as ag3, sum(b.ag6) as ag6,  sum(b.ag12) as ag12,  sum(b.ag13) as ag13,  sum(b.ag1 + b.ag3 + b.ag6 + b.ag12 + b.ag13) as total1
						, sum(b.bd1) as bd1, sum(b.bd3) as bd3, sum(b.bd6) as bd6,  sum(b.bd12) as bd12,  sum(b.bd13) as bd13,  sum(b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13) as total2
						, sum(b.nilai_total) as nilai_total, sum(b.nilai_bill) as nilai_bill, sum(b.nilai_unbill) as nilai_unbill
						, sum(b.nilai_net) as nilai_net
						, 1 as kurs, b.curr
						, b.kode_group, b.nama_group
						, 'akun' as tipe
						, a.sum_header
						, '-' as status_bill
					  from bpc_conspack_m a
					  					inner join (
											  select case when f.kode_cust_group is null then '$kodeOtherRelated' else a.kode_klp end as kode_klp, c.kode_cust, c.nama, e.kode_cust as kode_group, e.nama as nama_group
											  						 , d.NILAI, d.nilai_orig, d.curr, d.nilai_adj 
																	, d.ag1, d.ag3, d.ag6, d.ag12, d.ag13, d.ag1 + d.ag3 + d.ag6 + d.ag12 + d.ag13 as total1
																	, d.bd1, d.bd3, d.bd6, d.bd12, d.bd13, d.bd1 + d.bd3 + d.bd6 + d.bd12 + d.bd13 as total2
																	, d.nilai_total, d.nilai_bill, d.nilai_unbill
																	, d.nilai_net
																	, d.status_bill
													from bpc_conspack_d a 
														inner join bpc_cust_map b on b.kode_group = a.kode_group and a.kode_lokasi = b.kode_lokasi 
														inner join bpc_cust_ap c on c.kode_cust = b.kode_cust and c.kode_lokasi = b.kode_lokasi
														inner join bpc_cust_det d on d.kode_cust = c.kode_cust and d.kode_lokasi = c.kode_lokasi    
														inner join bpc_cust_group e on e.kode_cust = b.kode_group
														left outer join bpc_lokasi f on f.kode_cust_group = e.kode_cust                 
										where a.kode_lokasi = '$compCode' and b.kode_lokasi = '$compCode'  and a.modul = 'F4' and d.periode = '$periode'
										union all
										select '$kodeOtherThird' as kode_klp, a.kode_cust, a.nama, 'C99999' as kode_group, 'Others' as nama
														, b.NILAI, b.nilai_orig, b.curr, b.nilai_adj 
														 , b.ag1, b.ag3, b.ag6, b.ag12, b.ag13, b.ag1 + b.ag3 + b.ag6 + b.ag12 + b.ag13 as total1
														 , b.bd1, b.bd3, b.bd6, b.bd12, b.bd13, b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13 as total2
														 , b.nilai_total, b.nilai_bill, b.nilai_unbill
														 , b.nilai_net
														 , b.status_bill
													from bpc_cust_ap a
														inner join bpc_cust_det b on b.kode_cust = a.kode_cust and b.kode_lokasi = a.kode_lokasi
														left outer join bpc_cust_map d on d.kode_cust = a.kode_cust and d.kode_lokasi = a.kode_lokasi and d.kode_group <> '-'
										where a.kode_lokasi = '$compCode' and b.periode = '$periode' and d.kode_group is null
										union all
										select '$kodeOtherThird' as kode_klp, a.kode_cust, a.nama,  e.kode_cust as kode_group, e.nama as nama_group
														, b.NILAI, b.nilai_orig, b.curr, b.nilai_adj 
														 , b.ag1, b.ag3, b.ag6, b.ag12, b.ag13, b.ag1 + b.ag3 + b.ag6 + b.ag12 + b.ag13 as total1
														 , b.bd1, b.bd3, b.bd6, b.bd12, b.bd13, b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13 as total2
														 , b.nilai_total, b.nilai_bill, b.nilai_unbill
														 , b.nilai_net
														 , b.status_bill
													from bpc_cust_ap a
														inner join bpc_cust_det b on b.kode_cust = a.kode_cust and b.kode_lokasi = a.kode_lokasi
														inner join bpc_cust_map c on c.kode_cust = a.kode_cust and c.kode_lokasi = a.kode_lokasi 
														inner join bpc_cust_group e on e.kode_cust = c.kode_group               
														left outer join bpc_conspack_d d on d.kode_group = c.kode_group and d.kode_lokasi = b.kode_lokasi and d.modul = 'F4'
										where a.kode_lokasi = '$compCode' and b.periode = '$periode' and d.kode_group is null
										
										) b on b.kode_klp = a.kode_klp 
										where a.kode_lokasi = '$strukturLok' and a.modul = 'F4' 
										group by a.kode_klp, b.kode_cust, b.nama,  a.rowindex,a.level_spasi, b.curr, a.tipe , b.kode_group, b.nama_group, a.sum_header, b.status_bill
										having abs(sum(b.nilai)) < $nilai
						
										order by rowindex, level_spasi
							");
		$first = true;
		$rootNode = new server_util_NodeNRC("00");
		$totalCurr = new server_util_Map();
		$this->sumHeader = new server_util_Map();
		$fields = array("nilai", "nilai_orig","kurs", "nilai_adj","nilai_adjusted","ag1","ag3","ag6","ag12","ag13","total1","bd1","bd3","bd6","bd12","bd13","total2","nilai_net","nilai_bill","nilai_unbill");
		while ($row = $rs->FetchNextObject(false)){
			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$node->setData($row);
			if ($row->curr != "-"){
				$totalPerCurr = $totalCurr->get($row->curr);
				if ($totalPerCurr == null){
					$totalPerCurr = array($row->nilai, $row->nilai_orig, $row->kurs, $row->nilai_adj, $row->nilai_adjusted, 
							$row->ag1, $row->ag3, $row->ag6, $row->ag12, $row->ag13, $row->total1, 
							$row->bd1, $row->bd3, $row->bd6, $row->bd12, $row->bd13, $row->total2,
							$row->nilai_net, $row->nilai_bill, $row->nilai_unbill );
				}else {
					$totalPerCurr[0] = $totalPerCurr[0] + $row->nilai;
					$totalPerCurr[1] = $totalPerCurr[1] + $row->nilai_orig; 
					$totalPerCurr[3] = $totalPerCurr[3] + $row->nilai_adj;
					$totalPerCurr[4] = $totalPerCurr[4] + $row->nilai_adjusted;
					$totalPerCurr[5] = $totalPerCurr[5] + $row->ag1;
					$totalPerCurr[6] = $totalPerCurr[6] + $row->ag3;
					$totalPerCurr[7] = $totalPerCurr[7] + $row->ag6;
					$totalPerCurr[8] = $totalPerCurr[8] + $row->ag12;
					$totalPerCurr[9] = $totalPerCurr[9] + $row->ag13;
					$totalPerCurr[10] = $totalPerCurr[10] + $row->total1;
					$totalPerCurr[11] = $totalPerCurr[11] + $row->bd1;
					$totalPerCurr[12] = $totalPerCurr[12] + $row->bd3;
					$totalPerCurr[13] = $totalPerCurr[13] + $row->bd6;
					$totalPerCurr[14] = $totalPerCurr[14] + $row->bd12;
					$totalPerCurr[15] = $totalPerCurr[15] + $row->bd13;
					$totalPerCurr[16] = $totalPerCurr[16] + $row->total2;
					$totalPerCurr[17] = $totalPerCurr[17] + $row->nilai_net;
					$totalPerCurr[18] = $totalPerCurr[18] + $row->nilai_bill;
					$totalPerCurr[19] = $totalPerCurr[19] + $row->nilai_unbill;

				}
				$totalCurr->set($row->curr, $totalPerCurr);
			}
			if ($row->tipe == "TOTAL"){
				$this->sumHeader->set($row->kode_cust, $node);
			}
			if ($row->tipe == "SUMMARY")
			{
				$fields = array("nilai", "nilai_orig","kurs",  "nilai_adj","nilai_adjusted","ag1","ag3","ag6","ag12","ag13","total1","bd1","bd3","bd6","bd12","bd13","total2","nilai_net","nilai_bill","nilai_unbill");
				foreach ($totalCurr->getArray() as $key => $value) {
					$level = "";
					for ($i = 0; $i < $row->level_spasi; $i++){
						$level .= "&nbsp;&nbsp;&nbsp;&nbsp;";
					}
					$tmp = array("kode_cust" => $row->kode_vendor . $key, "nama" => $level . "$key","kode_group" => "", "nama_group" => "", "nilai" => $value[0], "kurs" => $value[2], "curr" => $key, "nilai_orig" => $value[1], "related" => $row->related , "level_spasi" => $row->level_spasi + 1,  "rowindex" => $row->rowindex + 1);
					foreach($fields as $key => $val){
						$tmp[$val] = $value[$key];
					}
					$nodeTmp = new server_util_NodeNRC($node);
					$tmp = json_decode(json_encode($tmp));
					$nodeTmp->setData($tmp);
				}
				
				$totalCurr = new server_util_Map();
			}
		}
		//error_log("Done Summmary");
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			$this->summariesKKP($val);
			if ($val->data->sum_header != "-" && $val->data->sum_header != ""){
				$summaryHeader = explode(",",$val->data->sum_header);

				foreach ($summaryHeader as $header){
					$nodeHeader = $this->sumHeader->get($header);
					if ($nodeHeader){
						foreach($fields as $f){
							eval("\$nodeHeader->data->". $f ." += \$val->data->". $f.";");
						}
						
					}
				}
			}
		}
		//error_log("Done Leveing");
		//perlu hitung ke summary
		$this->generateResultKKP($rootNode, $result);
		
		$result["total"] = $total;
		$rs = $db->execute("select
							 sum(b.nilai) as nilai,  b.curr
							, sum(b.nilai_orig) as nilai_orig
							, sum(nilai_adj) as nilai_adj, sum(nilai + nilai_adj)  as nilai_adjusted
							, sum(b.ag1) as ag1, sum(b.ag3) as ag3, sum(b.ag6) as ag6,  sum(b.ag12) as ag12,  sum(b.ag13) as ag13,  sum(b.ag1 + b.ag3 + b.ag6 + b.ag12 + b.ag13) as total1
							, sum(b.bd1) as bd1, sum(b.bd3) as bd3, sum(b.bd6) as bd6,  sum(b.bd12) as bd12,  sum(b.bd13) as bd13,  sum(b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13) as total2
							, sum(b.nilai_total) as nilai_total, sum(b.nilai_bill) as nilai_bill, sum(b.nilai_unbill) as nilai_unbill
							, sum(b.nilai_net) as nilai_net
						 from bpc_cust_ap a
						 	   inner join bpc_cust_det b on b.kode_cust = a.kode_cust and b.kode_lokasi = a.kode_lokasi
						 where a.kode_cust like '$cust%' and b.kode_lokasi = '$compCode'  and b.periode = '$periode'
						 group by b.curr 
						 order by b.curr");
		
		while ($row = $rs->FetchNextObject(false)) {
			$result["detailTotal"]["rs"]["rows"][] = (array)$row;
		}
		//error_log(json_encode($result["rs"]["rows"]));
		return $result;
	}
	function downloadReportCustAPDetail2($compCode, $cust, $periode){
		try{
			$db = $this->getDb();
			

			uses("server_modules_codeplex_PHPExcel",false);
			$objPHPExcel = new PHPExcel();
			// Set document properties
			$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
							->setLastModifiedBy("MA")
							->setTitle("REPORT F4 DETAIL")
							->setSubject("F4")
							->setDescription("Report F4 (Hutang)")
							->setKeywords("F4")
								->setCategory("Intercompany");
	
	
				
			$objPHPExcel->setActiveSheetIndex(0);
			$sheet = $objPHPExcel->getActiveSheet();
			$sharedStyle1 = new PHPExcel_Style();
			$sharedStyle1->applyFromArray(
				array('fill' 	=> array(
											'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
											'color'		=> array('argb' => 'FFCCFFCC')
										),
					'alignment' => array(
                                      'wrap'       => true,
									  'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                            ),
					'borders' => array(
											'allborders'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										),
					'font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    )
					));
			$style_num = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => false,
                            ),
                           'alignment' => array(
                                      'wrap'       => false,
                                      'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                            ),
                     );
        	$style_title = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    ),
                     );
			$rs = $db->execute("select nama from bpc_lokasi where cocd = '$compCode' ");
			$nama = "";
			if ($row = $rs->FetchNextObject(false)){
				$nama = $row->nama;
			}

			$sheet->setCellValueByColumnAndRow(0, 1, strtoupper($nama));
			$sheet->setCellValueByColumnAndRow(0, 2, "ANAK PERUSAHAAN PT TELKOM");
			$sheet->setCellValueByColumnAndRow(0, 3, "PIUTANG USAHA");
			$sheet->setCellValueByColumnAndRow(0, 4, "PER $periode");
			$sheet->getStyle("A1:A4")->applyFromArray($style_title);
			$sheet->getStyle("A1:A4")->getFont()->setSize(12);
			$sheet->mergeCells("A1:C1");
			$sheet->mergeCells("A2:C2");
			$sheet->mergeCells("A3:C3");
			$sheet->mergeCells("A4:C4");
			

			$sheet->setCellValueByColumnAndRow(0, 1, strtoupper($nama));
			$sheet->setCellValueByColumnAndRow(0, 2, "ANAK PERUSAHAAN PT TELKOM");
			$sheet->setCellValueByColumnAndRow(0, 3, "UTANG USAHA & HUTANG LAINNYA");
			$sheet->setCellValueByColumnAndRow(0, 4, "PER $periode");
			$sheet->getStyle("A1:A4")->applyFromArray($style_title);
			$sheet->getStyle("A1:A4")->getFont()->setSize(12);
			$sheet->mergeCells("A1:C1");
			$sheet->mergeCells("A2:C2");
			$sheet->mergeCells("A3:C3");
			$sheet->mergeCells("A4:C4");
			

			$sheet->getColumnDimension('A')->setWidth(5);
			$sheet->getColumnDimension('B')->setWidth(5);
			$sheet->getColumnDimension('C')->setWidth(35);
			$sheet->getColumnDimension('D')->setWidth(11);
			$sheet->getColumnDimension('E')->setWidth(15);
			$sheet->getColumnDimension('F')->setWidth(15);
			$sheet->getColumnDimension('G')->setWidth(15);
			$sheet->getColumnDimension('H')->setWidth(15);
			$sheet->getColumnDimension('I')->setWidth(15);
			$sheet->getColumnDimension('J')->setWidth(15);
			$sheet->getColumnDimension('K')->setWidth(15);
			$sheet->getColumnDimension('L')->setWidth(15);
			$sheet->getColumnDimension('M')->setWidth(15);
			$sheet->getColumnDimension('N')->setWidth(15);
			$sheet->getColumnDimension('O')->setWidth(15);
			$sheet->getColumnDimension('P')->setWidth(15);
			$sheet->getColumnDimension('Q')->setWidth(15);
			$sheet->getColumnDimension('R')->setWidth(15);
			$sheet->getColumnDimension('S')->setWidth(15);
			$sheet->getColumnDimension('T')->setWidth(15);
			$sheet->getColumnDimension('U')->setWidth(15);
			$sheet->getColumnDimension('V')->setWidth(15);
			$sheet->getColumnDimension('W')->setWidth(15);
			$sheet->getColumnDimension('X')->setWidth(15);
			$sheet->getColumnDimension('Y')->setWidth(15);
			$sheet->getColumnDimension('Z')->setWidth(15);

			$column = array("KETERANGAN","CUST. GROUP","NAMA GROUP","MATA UANG"," NILAI DALAM MATA UANG ASAL (ORIGINAL) "," KURS VALUTA ASING ","SETARA RUPIAH (IDR)","NO AKUN","STATUS BILL","ADJUSTMENT","ADJUSTED","UMUR PIUTANG","PENYISIHAN PIUTANG RAGU-RAGU","TOTAL NET","BILL","UNBILL");
			//< 1 Bulan	1 - 3 Bulan	4 - 6 Bulan	7 - 12 Bulan	> 12 Bulan	Total (gross)
					
			$subColumn = array("< 1 Bulan"," 1-3 Bulan","4-6 Bulan","7-12 Bulan","> 12 Bulan");
			$col = 0;
			$row = 7;
			foreach ($column as $key => $value){
				$sheet->setCellValueByColumnAndRow($col, $row, $value);
				$colAbjad = PHPExcel_Cell::stringFromColumnIndex($col);
				if ($key == 10 || $key == 11){
					$max = $col + 5;
					//$col+= 6 ;
					$end = PHPExcel_Cell::stringFromColumnIndex($max);
					$sheet->mergeCells($colAbjad."7:".$end."7");
					$sheet->setSharedStyle($sharedStyle1,$colAbjad. "7:".$end."7");
					$col += 6;
				}else if ($col == 0){
					$col = 3;
					$sheet->mergeCells("A7:C8");
					$sheet->setSharedStyle($sharedStyle1,"A7:C8");
				}else {
					$sheet->mergeCells($colAbjad."7:".$colAbjad."8");
					$sheet->setSharedStyle($sharedStyle1,$colAbjad. "7:".$colAbjad."8");
					$col++;
				}

				
			}
			$col = 12;
			for ($i =1; $i<=2;$i++){
				foreach ($subColumn as $keySub => $val){
					$colChar = PHPExcel_Cell::stringFromColumnIndex($col);
					$sheet->setCellValueByColumnAndRow($col, 8, $val);
					$sheet->setSharedStyle($sharedStyle1,$colChar. "8:".$colChar."8");
					$col++;
				}
				if ($i == 1){
					$colChar = PHPExcel_Cell::stringFromColumnIndex($col);
					$sheet->setCellValueByColumnAndRow($col, 8, "Total Gross");
					$sheet->setSharedStyle($sharedStyle1,$colChar. "8:".$colChar."8");
				}else {
					$colChar = PHPExcel_Cell::stringFromColumnIndex($col);
					$sheet->setCellValueByColumnAndRow($col, 8, "Total Penyisihan");
					$sheet->setSharedStyle($sharedStyle1,$colChar. "8:".$colChar."8");
				}
				$col++;
			}
			

			$sheet->getRowDimension('7')->setRowHeight(40);
			

			$row+=5;
			$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
			$sheet->setSharedStyle($sharedStyle1,"A7:".$end."7");
			$first = true;
			$totalCurr = array();
			$result = $this->reportPiutangCustAPDetail2($compCode, $cust, $periode);
			$totalCurr = new server_util_Map();
			$related = "";
			$row++;
			foreach($result["rs"]["rows"] as $val){
				$rowVal = json_decode(json_encode($val));
				
				$nama = str_replace("&nbsp;","",$rowVal->nama);
				$level = "";
				for ($i = 0; $i < $rowVal->level_spasi - 2; $i++){
					$level .= "   ";
				}

				if ($rowVal->tipe != 'akun' ){
					$sheet->setCellValueByColumnAndRow(0 + $rowVal->level_spasi, $row, $nama);	
				}else{
					$sheet->setCellValueByColumnAndRow(1, $row, "");
					$sheet->setCellValueByColumnAndRow(2, $row, $level . $nama);
				}
				$sheet->setCellValueByColumnAndRow(3, $row, $rowVal->kode_group);
				$sheet->setCellValueByColumnAndRow(4, $row, $rowVal->nama_group);
				$sheet->setCellValueByColumnAndRow(5, $row, $rowVal->curr);
				$sheet->setCellValueByColumnAndRow(6, $row, $rowVal->nilai_orig);
				$sheet->setCellValueByColumnAndRow(7, $row, $rowVal->kurs);
				$sheet->setCellValueByColumnAndRow(8, $row, $rowVal->nilai);
				$sheet->setCellValueByColumnAndRow(9, $row, $rowVal->no_akun);
				$sheet->setCellValueByColumnAndRow(10, $row, $rowVal->status_bill);
				$sheet->setCellValueByColumnAndRow(11, $row, $rowVal->nilai_adj);
				$sheet->setCellValueByColumnAndRow(12, $row, $rowVal->nilai_adjusted);
				$sheet->setCellValueByColumnAndRow(13, $row, $rowVal->ag1);
				$sheet->setCellValueByColumnAndRow(14, $row, $rowVal->ag3);
				$sheet->setCellValueByColumnAndRow(15, $row, $rowVal->ag6);
				$sheet->setCellValueByColumnAndRow(16, $row, $rowVal->ag12);
				$sheet->setCellValueByColumnAndRow(17, $row, $rowVal->ag13);
				$sheet->setCellValueByColumnAndRow(18, $row, $rowVal->total1);

				$sheet->setCellValueByColumnAndRow(19, $row, $rowVal->bd1);
				$sheet->setCellValueByColumnAndRow(20, $row, $rowVal->bd3);
				$sheet->setCellValueByColumnAndRow(21, $row, $rowVal->bd6);
				$sheet->setCellValueByColumnAndRow(22, $row, $rowVal->bd12);
				$sheet->setCellValueByColumnAndRow(23, $row, $rowVal->bd13);
				$sheet->setCellValueByColumnAndRow(24, $row, $rowVal->total2);
				$sheet->setCellValueByColumnAndRow(25, $row, $rowVal->nilai_net);
				$sheet->setCellValueByColumnAndRow(26, $row, $rowVal->nilai_bill);
				$sheet->setCellValueByColumnAndRow(27, $row, $rowVal->nilai_unbill);


				$sheet->getStyle("F$row:AB$row")->getNumberFormat()->setFormatCode('#,##0');
				$row++;
			}
			// Set active sheet index to the first sheet, so Excel opens this as the first sheet
			$objPHPExcel->setActiveSheetIndex(0);
	
	
			// Save Excel 2007 file
			$namafile = MD5(date("r"));
			global $serverDir;
			$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
			$objWriter->save($serverDir . "/tmp/F4-$compCode.xlsx");
		
	
			return "/tmp/F4-$compCode.xlsx";
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}
	function getDataCommentCust($compCode, $periode, $cust){
		$db = $this->getDb();
		$rs = $db->execute("select keterangan from bpc_cust_ar_ket where kode_lokasi = '$compCode' and kode_cust = '$cust' and periode = '$periode' ");
		$ket = "<ol>";
		while ($row = $rs->FetchNextObject()){
			$ket .= "<li>". $row->keterangan."</li>" ;	
		}
		$ket .= "</ol>";
		return $ket;
	}
	function getDataCommentVendor($compCode, $periode, $vendor){
		$db = $this->getDb();
		$rs = $db->execute("select keterangan from bpc_vendor_ap_ket where kode_lokasi = '$compCode' and kode_vendor = '$vendor' and periode = '$periode' ");
		$ket = "<ol>";
		while ($row = $rs->FetchNextObject()){
			$ket .= "<li>". $row->keterangan."</li>" ;	
		}
		$ket .= "</ol>";
		return $ket;
	}
	function reportPiutangCustAPGroup2($compCode, $cust, $periode){
		//F-4
		//Kode Vendor, Keterangan, Related, CURR, Amount, KURS, nilai Rupiah
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()), "total" => 0, "detailTotal" => array("rs" => array("rows" => array())));
		$strukturLok = $compCode;
		$rs = $db->execute("select distinct kode_lokasi from bpc_conspack_m where kode_lokasi = '$compCode' and modul ='F4' ");
		if ($row = $rs->FetchNextObject(false)){

		}else {
			$strukturLok = "9000";
		}
		$rsNilai = $db->execute("select nilai_min from bpc_param_nilai where kode_lokasi = '$compCode' and modul = 'AR' ");
		$nilai = 0;

		if ($row = $rsNilai->FetchNextObject(false)){
			$nilai = $row->nilai_min;
		}
		$kodeThirdParty = "F210";
		$rs3rd = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'THIRDPARTY' and modul = 'F4' ");
		if ($row = $rs3rd->FetchNextObject(false)){
			$kodeThirdParty = $row->kode_klp;
		}
		$rsOther1 = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'OT_RELATED' and modul = 'F4' ");
		if ($row = $rsOther1->FetchNextObject(false)){
			$kodeOtherRelated = $row->kode_klp;
		}

		$rsOther1 = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'OT_THIRD' and modul = 'F4' ");
		if ($row = $rsOther1->FetchNextObject(false)){
			$kodeOtherThird = $row->kode_klp;
		}
		$sql = "select a.kode_klp as kode_cust, left_pad(a.nama, a.level_spasi) as nama, a.level_spasi, a.rowindex
							, 0 as nilai, 0 as nilai_orig, 0 as nilai_adj, 0 as nilai_adjusted
							, 0 as ag1, 0 as ag3, 0 as ag6, 0 as ag12, 0 as ag13, 0 as total1
							, 0 as bd1, 0 as bd3, 0 as bd6, 0 as bd12, 0 as bd13, 0 as total2
							, 0 as nilai_total, 0 as nilai_bill, 0 as nilai_unbill, 0 as nilai_net  
							, 1 as kurs, '-' as curr
							, a.tipe
							, a.kode_induk as kode_induk
							, a.sum_header
							,'-' as status_bill
							, '-' as keterangan
					  from bpc_conspack_m a 
					  where a.kode_lokasi = '$strukturLok' and a.modul = 'F4'
					  
					  union 
					  select b.kode_cust, left_pad(b.nama, a.level_spasi + 1) as nama, a.level_spasi + 1 as level_spasi, a.rowindex
					  	, sum(b.nilai) as nilai, sum(b.nilai_orig) as nilai_orig
						, sum(nilai_adj) as nilai_adj, sum(nilai + nilai_adj)  as nilai_adjusted
						, sum(b.ag1) as ag1, sum(b.ag3) as ag3, sum(b.ag6) as ag6,  sum(b.ag12) as ag12,  sum(b.ag13) as ag13,  sum(b.ag1 + b.ag3 + b.ag6 + b.ag12 + b.ag13) as total1
						, sum(b.bd1) as bd1, sum(b.bd3) as bd3, sum(b.bd6) as bd6,  sum(b.bd12) as bd12,  sum(b.bd13) as bd13,  sum(b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13) as total2
						, sum(b.nilai_total) as nilai_total, sum(b.nilai_bill) as nilai_bill, sum(b.nilai_unbill) as nilai_unbill
						, sum(b.nilai_net) as nilai_net  
						, b.kurs, b.curr
						, 'akun' as tipe
						, a.kode_klp as kode_induk
						, a.sum_header
						, b.status_bill 
						, '-' as keterangan
					  from bpc_conspack_m a
					  					inner join (select a.kode_klp, b.kode_cust, c.nama
										  				 , b.NILAI, b.nilai_orig, b.curr, b.nilai_adj 
														 , b.ag1, b.ag3, b.ag6, b.ag12, b.ag13, b.ag1 + b.ag3 + b.ag6 + b.ag12 + b.ag13 as total1
														 , b.bd1, b.bd3, b.bd6, b.bd12, b.bd13, b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13 as total2
														 , b.nilai_total, b.nilai_bill, b.nilai_unbill
														 , b.nilai_net
														 , b.status_bill
														 , b.kurs
														 , b.keterangan
													from bpc_conspack_d a 
														inner join bpc_cust_sum b on b.kode_cust = a.kode_group
														inner join bpc_cust_group c on c.kode_cust = b.kode_cust 
										where a.kode_lokasi = '$strukturLok' and b.kode_lokasi ='$compCode' and a.modul = 'F4' and b.periode = '$periode'
										union all
										select '$kodeThirdParty' as kode_klp,  b.kode_cust, a.nama 
													 	 , b.NILAI, b.nilai_orig, b.curr, b.nilai_adj 
														 , b.ag1, b.ag3, b.ag6, b.ag12, b.ag13, b.ag1 + b.ag3 + b.ag6 + b.ag12 + b.ag13 as total1
														 , b.bd1, b.bd3, b.bd6, b.bd12, b.bd13, b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13 as total2
														 , b.nilai_total, b.nilai_bill, b.nilai_unbill
														 , b.nilai_net
														 , b.status_bill
														 , b.kurs
														 , b.keterangan
													from bpc_cust_sum b  
														inner join bpc_cust_group a on a.kode_cust = b.kode_cust              
														left outer join bpc_conspack_d d on d.kode_group = b.kode_cust and d.kode_lokasi = '$strukturLok' and d.modul = 'F4'
										where b.kode_lokasi = '$compCode' and b.periode = '$periode' and d.kode_group is null
										union all
										select '$kodeThirdParty' as kode_klp,  b.kode_cust, b.desk as nama 
													 	 , b.NILAI, b.nilai_orig, b.curr, b.nilai_adj 
														 , b.ag1, b.ag3, b.ag6, b.ag12, b.ag13, b.ag1 + b.ag3 + b.ag6 + b.ag12 + b.ag13 as total1
														 , b.bd1, b.bd3, b.bd6, b.bd12, b.bd13, b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13 as total2
														 , b.nilai_total, b.nilai_bill, b.nilai_unbill
														 , b.nilai_net
														 , b.status_bill
														 , b.kurs
														 , b.keterangan
													from bpc_cust_sum b  
														left outer join bpc_cust_group a on a.kode_cust = b.kode_cust 
										where b.kode_lokasi = '$compCode' and b.periode = '$periode' and a.kode_cust is null) b on b.kode_klp = a.kode_klp 
										where a.kode_lokasi = '$strukturLok' and a.modul = 'F4' 
										group by a.kode_klp, b.kode_cust, b.nama,  a.rowindex,a.level_spasi, b.curr, b.kurs,  a.tipe, kode_induk, sum_header, status_bill
										having abs(sum(b.nilai)) >= $nilai
					union 
					  select b.kode_cust, left_pad(b.nama, a.level_spasi + 1) as nama, a.level_spasi + 1 as level_spasi, a.rowindex
					  	, sum(b.nilai) as nilai, sum(b.nilai_orig) as nilai_orig
						, sum(nilai_adj) as nilai_adj, sum(nilai + nilai_adj)  as nilai_adjusted
						, sum(b.ag1) as ag1, sum(b.ag3) as ag3, sum(b.ag6) as ag6,  sum(b.ag12) as ag12,  sum(b.ag13) as ag13,  sum(b.ag1 + b.ag3 + b.ag6 + b.ag12 + b.ag13) as total1
						, sum(b.bd1) as bd1, sum(b.bd3) as bd3, sum(b.bd6) as bd6,  sum(b.bd12) as bd12,  sum(b.bd13) as bd13,  sum(b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13) as total2
						, sum(b.nilai_total) as nilai_total, sum(b.nilai_bill) as nilai_bill, sum(b.nilai_unbill) as nilai_unbill
						, sum(b.nilai_net) as nilai_net  
						, b.kurs, b.curr
						, 'akun' as tipe
						, a.kode_klp as kode_induk
						, a.sum_header
						, b.status_bill
						, '-' as keterangan
					  from bpc_conspack_m a
					  					inner join (select case when d.kode_cust_group is null then '$kodeOtherRelated' else a.kode_klp end as kode_klp, b.kode_cust, c.nama
										  				 , b.NILAI, b.nilai_orig, b.curr, b.nilai_adj 
														 , b.ag1, b.ag3, b.ag6, b.ag12, b.ag13, b.ag1 + b.ag3 + b.ag6 + b.ag12 + b.ag13 as total1
														 , b.bd1, b.bd3, b.bd6, b.bd12, b.bd13, b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13 as total2
														 , b.nilai_total, b.nilai_bill, b.nilai_unbill
														 , b.nilai_net
														 , b.status_bill
														 , b.kurs
														 , b.keterangan
													from bpc_conspack_d a 
														inner join bpc_cust_sum b on b.kode_cust = a.kode_group
														inner join bpc_cust_group c on c.kode_cust = b.kode_cust
														left outer join bpc_lokasi d on d.kode_cust_group = a.kode_group  
										where a.kode_lokasi = '$strukturLok' and b.kode_lokasi ='$compCode' and a.modul = 'F4' and b.periode = '$periode'
										union all
										select '$kodeThirdParty' as kode_klp,  b.kode_cust, a.nama 
													 	 , b.NILAI, b.nilai_orig, b.curr, b.nilai_adj 
														 , b.ag1, b.ag3, b.ag6, b.ag12, b.ag13, b.ag1 + b.ag3 + b.ag6 + b.ag12 + b.ag13 as total1
														 , b.bd1, b.bd3, b.bd6, b.bd12, b.bd13, b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13 as total2
														 , b.nilai_total, b.nilai_bill, b.nilai_unbill
														 , b.nilai_net
														 , b.status_bill
														 , b.kurs
														 , b.keterangan
													from bpc_cust_sum b  
														inner join bpc_cust_group a on a.kode_cust = b.kode_cust              
														left outer join bpc_conspack_d d on d.kode_group = b.kode_cust and d.kode_lokasi = '$strukturLok' and d.modul = 'F4'
										where b.kode_lokasi = '$compCode' and b.periode = '$periode' and d.kode_group is null
										union all
										select '$kodeThirdParty' as kode_klp,  b.kode_cust, b.desk as nama 
													 	 , b.NILAI, b.nilai_orig, b.curr, b.nilai_adj 
														 , b.ag1, b.ag3, b.ag6, b.ag12, b.ag13, b.ag1 + b.ag3 + b.ag6 + b.ag12 + b.ag13 as total1
														 , b.bd1, b.bd3, b.bd6, b.bd12, b.bd13, b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13 as total2
														 , b.nilai_total, b.nilai_bill, b.nilai_unbill
														 , b.nilai_net
														 , b.status_bill
														 , b.kurs
														 , b.keterangan
													from bpc_cust_sum b  
														left outer join bpc_cust_group a on a.kode_cust = b.kode_cust 
										where b.kode_lokasi = '$compCode' and b.periode = '$periode' and a.kode_cust is null
										) b on b.kode_klp = a.kode_klp 
										where a.kode_lokasi = '$strukturLok' and a.modul = 'F4' 
										group by a.kode_klp, b.kode_cust, b.nama,  a.rowindex,a.level_spasi, b.curr, b.kurs,  a.tipe, kode_induk, sum_header, status_bill
										having abs(sum(b.nilai)) < $nilai						
										order by rowindex, level_spasi
							";
		//error_log($sql);
		$rs = $db->execute($sql);
		$first = true;
		$rootNode = new server_util_NodeNRC("00");
		$totalCurr = new server_util_Map();
		$this->sumHeader = new server_util_Map();
		$fields = array("nilai", "nilai_orig","kurs", "nilai_adj","nilai_adjusted","ag1","ag3","ag6","ag12","ag13","total1","bd1","bd3","bd6","bd12","bd13","total2","nilai_net","nilai_bill","nilai_unbill");
		while ($row = $rs->FetchNextObject(false)){
			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$row->keterangan = $this->getDataCommentCust($compCode, $periode, $row->kode_cust);
			$node->setData($row);
			if ($row->curr != "-"){
				$totalPerCurr = $totalCurr->get($row->curr);
				if ($totalPerCurr == null){
					$totalPerCurr = array($row->nilai, $row->nilai_orig, $row->kurs, $row->nilai_adj, $row->nilai_adjusted, 
							$row->ag1, $row->ag3, $row->ag6, $row->ag12, $row->ag13, $row->total1, 
							$row->bd1, $row->bd3, $row->bd6, $row->bd12, $row->bd13, $row->total2,
							$row->nilai_net, $row->nilai_bill, $row->nilai_unbill );
				}else {
					$totalPerCurr[0] = $totalPerCurr[0] + $row->nilai;
					$totalPerCurr[1] = $totalPerCurr[1] + $row->nilai_orig; 
					$totalPerCurr[3] = $totalPerCurr[3] + $row->nilai_adj;
					$totalPerCurr[4] = $totalPerCurr[4] + $row->nilai_adjusted;
					$totalPerCurr[5] = $totalPerCurr[5] + $row->ag1;
					$totalPerCurr[6] = $totalPerCurr[6] + $row->ag3;
					$totalPerCurr[7] = $totalPerCurr[7] + $row->ag6;
					$totalPerCurr[8] = $totalPerCurr[8] + $row->ag12;
					$totalPerCurr[9] = $totalPerCurr[9] + $row->ag13;
					$totalPerCurr[10] = $totalPerCurr[10] + $row->total1;
					$totalPerCurr[11] = $totalPerCurr[11] + $row->bd1;
					$totalPerCurr[12] = $totalPerCurr[12] + $row->bd3;
					$totalPerCurr[13] = $totalPerCurr[13] + $row->bd6;
					$totalPerCurr[14] = $totalPerCurr[14] + $row->bd12;
					$totalPerCurr[15] = $totalPerCurr[15] + $row->bd13;
					$totalPerCurr[16] = $totalPerCurr[16] + $row->total2;
					$totalPerCurr[17] = $totalPerCurr[17] + $row->nilai_net;
					$totalPerCurr[18] = $totalPerCurr[18] + $row->nilai_bill;
					$totalPerCurr[19] = $totalPerCurr[19] + $row->nilai_unbill;

				}
				$totalCurr->set($row->curr, $totalPerCurr);
			}
			if ($row->tipe == "TOTAL"){
				$this->sumHeader->set($row->kode_cust, $node);
			}
			
			if ($row->tipe == "SUMMARY"){
				foreach ($totalCurr->getArray() as $key => $value) {
					
					$tmp = array("kode_cust" => $row->kode_cust . $key, "nama" => "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$key","kode_group" => "", "nama_group" => "", 
														"curr" => $key, "tipe" => "akun", 
														"related" => $row->related , "level_spasi" => $row->level_spasi + 1,  "rowindex" => $row->rowindex + 1);
					foreach($fields as $key => $val){
						$tmp[$val] = $value[$key];
					}
					$nodeTmp = new server_util_NodeNRC($node);
					$tmp = json_decode(json_encode($tmp));
					$nodeTmp->setData($tmp);
				}
				$totalCurr = new server_util_Map();
			}
		}
		//error_log("Done Summmary");
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			$this->summariesKKP($val);
			if ($val->data->sum_header != "-" && $val->data->sum_header != ""){
				$summaryHeader = explode(",",$val->data->sum_header);

				foreach ($summaryHeader as $header){
					$nodeHeader = $this->sumHeader->get($header);
					if ($nodeHeader){
						foreach($fields as $f){
							eval("\$nodeHeader->data->". $f ." += \$val->data->". $f.";");
						}
						
					}
				}
			}
		}
		//error_log("Done Leveing");
		//perlu hitung ke summary
		$this->generateResultKKP($rootNode, $result);
		
		$result["total"] = $total;
		$rs = $db->execute("select
							 sum(b.nilai) as nilai,  b.curr
							, sum(b.nilai_orig) as nilai_orig
							, sum(nilai_adj) as nilai_adj, sum(nilai + nilai_adj)  as nilai_adjusted
							, sum(b.ag1) as ag1, sum(b.ag3) as ag3, sum(b.ag6) as ag6,  sum(b.ag12) as ag12,  sum(b.ag13) as ag13,  sum(b.ag1 + b.ag3 + b.ag6 + b.ag12 + b.ag13) as total1
							, sum(b.bd1) as bd1, sum(b.bd3) as bd3, sum(b.bd6) as bd6,  sum(b.bd12) as bd12,  sum(b.bd13) as bd13,  sum(b.bd1 + b.bd3 + b.bd6 + b.bd12 + b.bd13) as total2
							, sum(b.nilai_total) as nilai_total, sum(b.nilai_bill) as nilai_bill, sum(b.nilai_unbill) as nilai_unbill
							, sum(b.nilai_net) as nilai_net  
						 from bpc_cust_sum b 
						 where b.kode_cust like '$cust%' and b.kode_lokasi = '$compCode'  and b.periode = '$periode'
						 group by b.curr 
						 order by b.curr");
		
		while ($row = $rs->FetchNextObject(false)) {
			$result["detailTotal"]["rs"]["rows"][] = (array)$row;
		}
		//error_log(json_encode($result));
		return $result;
	}
			 
	function downloadReportCustAPGroup2($compCode, $cust, $periode){
		try{
			$db = $this->getDb();
			
			//error_log("Generate Report");
			uses("server_modules_codeplex_PHPExcel",false);
			$objPHPExcel = new PHPExcel();
			// Set document properties
			$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
							->setLastModifiedBy("FA")
							->setTitle("REPORT F4")
							->setSubject("F4")
							->setDescription("Report F4 (PIUTANG)")
							->setKeywords("F4")
								->setCategory("Intercompany");
	
	
				
			$objPHPExcel->setActiveSheetIndex(0);
			$sheet = $objPHPExcel->getActiveSheet();
			$sharedStyle1 = new PHPExcel_Style();
			$sharedStyle1->applyFromArray(
				array('fill' 	=> array(
											'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
											'color'		=> array('argb' => 'FFCCFFCC')
										),
					'alignment' => array(
                                      'wrap'       => true,
									  'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                            ),
					'borders' => array(
											'allborders'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										),
					'font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    )
					));
			$sharedStyle2 = new PHPExcel_Style();
			$sharedStyle2->applyFromArray(
				array('fill' 	=> array(
											'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
											'color'		=> array('argb' => 'FFFFD600')
										),
					'borders' => array(
											'allborders'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										),
					'font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    )
					));
			$style_num = new PHPExcel_Style();
			$style_num->applyFromArray(array('alignment' => array(
                                      'wrap'       => false,
                                      'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                            ),
                     ));
        	$style_title = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    ),
                     );
			$rs = $db->execute("select nama from bpc_lokasi where cocd = '$compCode' ");
			$nama = "";
			if ($row = $rs->FetchNextObject(false)){
				$nama = $row->nama;
			}

			$sheet->setCellValueByColumnAndRow(0, 1, strtoupper($nama));
			$sheet->setCellValueByColumnAndRow(0, 2, "ANAK PERUSAHAAN PT TELKOM");
			$sheet->setCellValueByColumnAndRow(0, 3, "UTANG USAHA & HUTANG LAINNYA");
			$sheet->setCellValueByColumnAndRow(0, 4, "PER $periode");
			$sheet->getStyle("A1:A4")->applyFromArray($style_title);
			$sheet->getStyle("A1:A4")->getFont()->setSize(12);
			$sheet->mergeCells("A1:C1");
			$sheet->mergeCells("A2:C2");
			$sheet->mergeCells("A3:C3");
			$sheet->mergeCells("A4:C4");
			

			$sheet->getColumnDimension('A')->setWidth(5);
			$sheet->getColumnDimension('B')->setWidth(5);
			$sheet->getColumnDimension('C')->setWidth(35);
			$sheet->getColumnDimension('D')->setWidth(11);
			$sheet->getColumnDimension('E')->setWidth(15);
			$sheet->getColumnDimension('F')->setWidth(15);
			$sheet->getColumnDimension('G')->setWidth(15);
			$sheet->getColumnDimension('H')->setWidth(15);
			$sheet->getColumnDimension('I')->setWidth(15);
			$sheet->getColumnDimension('J')->setWidth(15);
			$sheet->getColumnDimension('K')->setWidth(15);
			$sheet->getColumnDimension('L')->setWidth(15);
			$sheet->getColumnDimension('M')->setWidth(15);
			$sheet->getColumnDimension('N')->setWidth(15);
			$sheet->getColumnDimension('O')->setWidth(15);
			$sheet->getColumnDimension('P')->setWidth(15);
			$sheet->getColumnDimension('Q')->setWidth(15);
			$sheet->getColumnDimension('R')->setWidth(15);
			$sheet->getColumnDimension('S')->setWidth(15);
			$sheet->getColumnDimension('T')->setWidth(15);
			$sheet->getColumnDimension('U')->setWidth(15);
			$sheet->getColumnDimension('V')->setWidth(15);
			$sheet->getColumnDimension('W')->setWidth(15);
			$sheet->getColumnDimension('X')->setWidth(15);
			$sheet->getColumnDimension('Y')->setWidth(15);
			$sheet->getColumnDimension('Z')->setWidth(15);

			$column = array("KETERANGAN","CUST. GROUP","MATA UANG"," NILAI DALAM MATA UANG ASAL (ORIGINAL) "," KURS VALUTA ASING ","SETARA RUPIAH (IDR)","NO AKUN","STATUS BILL","ADJUSTMENT","ADJUSTED","UMUR PIUTANG","PENYISIHAN PIUTANG RAGU-RAGU","TOTAL NET","BILL","UNBILL");
			//< 1 Bulan	1 - 3 Bulan	4 - 6 Bulan	7 - 12 Bulan	> 12 Bulan	Total (gross)
					
			$subColumn = array("< 1 Bulan"," 1-3 Bulan","4-6 Bulan","7-12 Bulan","> 12 Bulan");
			$col = 0;
			$row = 7;
			foreach ($column as $key => $value){
				$sheet->setCellValueByColumnAndRow($col, $row, $value);
				$colAbjad = PHPExcel_Cell::stringFromColumnIndex($col);
				if ($key == 10 || $key == 11){
					$max = $col + 5;
					//$col+= 6 ;
					$end = PHPExcel_Cell::stringFromColumnIndex($max);
					$sheet->mergeCells($colAbjad."7:".$end."7");
					$sheet->setSharedStyle($sharedStyle1,$colAbjad. "7:".$end."7");
					$col += 6;
				}else if ($col == 0){
					$col = 3;
					$sheet->mergeCells("A7:C8");
					$sheet->setSharedStyle($sharedStyle1,"A7:C8");
				}else {
					$sheet->mergeCells($colAbjad."7:".$colAbjad."8");
					$sheet->setSharedStyle($sharedStyle1,$colAbjad. "7:".$colAbjad."8");
					$col++;
				}

				
			}
			$col = 12;
			for ($i =1; $i<=2;$i++){
				foreach ($subColumn as $keySub => $val){
					$colChar = PHPExcel_Cell::stringFromColumnIndex($col);
					$sheet->setCellValueByColumnAndRow($col, 8, $val);
					$sheet->setSharedStyle($sharedStyle1,$colChar. "8:".$colChar."8");
					$col++;
				}
				if ($i == 1){
					$colChar = PHPExcel_Cell::stringFromColumnIndex($col);
					$sheet->setCellValueByColumnAndRow($col, 8, "Total Gross");
					$sheet->setSharedStyle($sharedStyle1,$colChar. "8:".$colChar."8");
				}else {
					$colChar = PHPExcel_Cell::stringFromColumnIndex($col);
					$sheet->setCellValueByColumnAndRow($col, 8, "Total Penyisihan");
					$sheet->setSharedStyle($sharedStyle1,$colChar. "8:".$colChar."8");
				}
				$col++;
			}
			
			$sheet->getRowDimension('7')->setRowHeight(40);
			//$sheet->mergeCells("A7:C7");

			$row+=3;
			$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
			
			$first = true;
			$totalCurr = array();
			$result = $this->reportPiutangCustAPGroup2($compCode, $cust, $periode);
			$totalCurr = new server_util_Map();
			$related = "";
			$row++;
			$tmpCode = "";
			$detailPrinted = false;
			foreach($result["rs"]["rows"] as $val){
				$rowVal = json_decode(json_encode($val));
				$sheet->setCellValueByColumnAndRow(0, $row, $rowVal->kode_klp);
				$nama = str_replace("&nbsp;","",$rowVal->nama);
				$level = "";
				for ($i = 0; $i < $rowVal->level_spasi - 2; $i++){
					$level .= "   ";
				}
				if ($rowVal->tipe != 'akun' && $rowVal->tipe != "TOTAL" ){
					//error_log("tmpCode $tmpCode level $rowVal->level_spasi $rowVal->kode_cust $rowVal->kode_induk");
					$sheet->setCellValueByColumnAndRow(0 + $rowVal->level_spasi, $row, $nama);
					
					if (floatval($rowVal->level_spasi) <= 1){
						$rowTmp = json_decode(json_encode((array)$rowVal));
						$tmpCode = $rowVal->kode_induk;
						
					}
					
					$detailPrinted = false;
						
				}else{  
					$detailPrinted = true;
					
					$sheet->setCellValueByColumnAndRow(2, $row, $level . $nama);
					$sheet->setCellValueByColumnAndRow(3, $row, $rowVal->kode_cust);
					$sheet->setCellValueByColumnAndRow(4, $row, $rowVal->curr);
					$sheet->setCellValueByColumnAndRow(5, $row, $rowVal->nilai_orig);
					$sheet->setCellValueByColumnAndRow(6, $row, $rowVal->kurs);
					$sheet->setCellValueByColumnAndRow(7, $row, $rowVal->nilai);
					$sheet->setCellValueByColumnAndRow(8, $row, $rowVal->kode_akun);
					$sheet->setCellValueByColumnAndRow(9, $row, $rowVal->status_bill);
					$sheet->setCellValueByColumnAndRow(10, $row, $rowVal->nilai_adj);
					$sheet->setCellValueByColumnAndRow(11, $row, $rowVal->nilai_adjusted);
					$sheet->setCellValueByColumnAndRow(12, $row, $rowVal->ag1);
					$sheet->setCellValueByColumnAndRow(13, $row, $rowVal->ag3);
					$sheet->setCellValueByColumnAndRow(14, $row, $rowVal->ag6);
					$sheet->setCellValueByColumnAndRow(15, $row, $rowVal->ag12);
					$sheet->setCellValueByColumnAndRow(16, $row, $rowVal->ag13);
					$sheet->setCellValueByColumnAndRow(17, $row, $rowVal->total1);

					$sheet->setCellValueByColumnAndRow(18, $row, $rowVal->bd1);
					$sheet->setCellValueByColumnAndRow(19, $row, $rowVal->bd3);
					$sheet->setCellValueByColumnAndRow(20, $row, $rowVal->bd6);
					$sheet->setCellValueByColumnAndRow(21, $row, $rowVal->bd12);
					$sheet->setCellValueByColumnAndRow(22, $row, $rowVal->bd13);
					$sheet->setCellValueByColumnAndRow(23, $row, $rowVal->total2);
					$sheet->setCellValueByColumnAndRow(24, $row, $rowVal->nilai_net);
					$sheet->setCellValueByColumnAndRow(25, $row, $rowVal->nilai_bill);
					$sheet->setCellValueByColumnAndRow(26, $row, $rowVal->nilai_unbill);
					$sheet->getStyle("E$row:Z$row")->getNumberFormat()->setFormatCode('#,##0');
					if ($rowVal->tipe == "TOTAL"){
						$sheet->setSharedStyle($sharedStyle2,"A$row:Z$row");
						$sheet->getStyle("E$row:AA$row")->getNumberFormat()->setFormatCode('#,##0');
					}
				}
				$row++;
			}
			
			$sharedStyle3 = new PHPExcel_Style();
			$sharedStyle3->applyFromArray(
				array('borders' => array(
											'allborders'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										),
					'font' =>
                                    array('color' =>
                                      array('rgb' => '000000')
                                    )
					));
			

			$row += 3;
			$sheet->setCellValueByColumnAndRow(2, $row, "RINGKASAN");
			$sheet->getStyle("C$row:C$row")->getFont()->setItalic(true);
			$rowSummary = $result["detailTotal"]["rs"]["rows"];
			$row++;
			$sheet->setCellValueByColumnAndRow(2, $row, "Mata Uang");
			$sheet->setCellValueByColumnAndRow(3, $row, "Nilai dalam mata uang asing");
			$sheet->setCellValueByColumnAndRow(4, $row, "Kurs valuta asing");
			$sheet->setCellValueByColumnAndRow(5, $row, "Setara Rupiah (IDR)");
			$sheet->setSharedStyle($sharedStyle3,"C$row:F$row");
			$sheet->getStyle("C$row:F$row")->getFont()->setBold(true);
			//Mata Uang	Nilai dalam mata uang asing	 Kurs valuta asing 	Setara Rupiah (IDR)
			$rs = $db->execute("select curr, nilai from bpc_param_curr where kode_lokasi = '$compCode' and periode = (select max(periode) from bpc_param_curr where periode like '$periode%' ) ");
			$kurs = new server_util_Map();
			while ($line = $rs->FetchNextObject(false)){
				$kurs->set($line->curr, $line->nilai);
			}
			$row++;
			$total1 = 0;
			$total2 = 0;
			foreach($rowSummary as $val){
				$sheet->setCellValueByColumnAndRow(2, $row, $val["curr"]);
				$sheet->setCellValueByColumnAndRow(3, $row, $val["nilai_orig"]);
				$nilaiKurs = $kurs->get($val["curr"]);
				$sheet->setCellValueByColumnAndRow(4, $row, $nilaiKurs);
				$sheet->setCellValueByColumnAndRow(5, $row, $val["nilai"]);
				$sheet->setSharedStyle($sharedStyle3,"C$row:F$row");
				$total1 += $val["nilai_orig"];
				$total2 += $val["nilai"];
				$sheet->getStyle("C$row:F$row")->getNumberFormat()->setFormatCode('#,##0');
				$row++;
			}
			$sheet->mergeCells("C$row:E$row");
			$sheet->setSharedStyle($style_num,"C$row:C$row");
			$sheet->setCellValueByColumnAndRow(2, $row, "Total");
			$sheet->getStyle("E$row:E$row")->getFont()->setBold(true);
			$sheet->setCellValueByColumnAndRow(5, $row, $total2);
			$sheet->getStyle("F$row:F$row")->getNumberFormat()->setFormatCode('#,##0');
			$row++;
			$sheet->mergeCells("C$row:E$row");
			$sheet->setSharedStyle($style_num,"C$row:E$row");
			$sheet->setCellValueByColumnAndRow(2, $row, "PER POSISI KEUANGAN");
			$row++;
			$sheet->mergeCells("C$row:E$row");
			$sheet->setSharedStyle($style_num,"C$row:E$row");
			$sheet->setCellValueByColumnAndRow(2, $row, "SELISIH");
			$row++;
			$sheet->mergeCells("C$row:E$row");
			$sheet->setCellValueByColumnAndRow(2, $row, "kontrol cek = selisih seharusnya NIHIL");
			$sheet->setSharedStyle($style_num,"C$row:E$row");
			$sheet->getStyle("C$row:C$row")->getFont()->setBold(true);
			$sheet->getStyle("C$row:C$row")->getFont()->setItalic(true);
			

			// Set active sheet index to the first sheet, so Excel opens this as the first sheet
			$objPHPExcel->setActiveSheetIndex(0);
	
	
			// Save Excel 2007 file
			$namafile = MD5(date("r"));
			global $serverDir;
			$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
			$objWriter->save($serverDir . "/tmp/F4-$compCode.xlsx");
		
			return "/tmp/F4-$compCode.xlsx";
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}
	function reportJejerCustAP2($cocd, $cust, $periode){
		$db = $this->getDb();
		$result = array("rs" => array("rows" => array()));

		if ($cocd == "") $cocd = "9000";

		$strukturLok = "9000";
		$fields = array();
		

		$rsNilai = $db->execute("select nilai_min from bpc_param_nilai where kode_lokasi = '$cocd' and modul = 'AR' ");
		$nilai = 0;

		if ($row = $rsNilai->FetchNextObject(false)){
			$nilai = $row->nilai_min;
		}
		$kodeThirdParty = "F210";
		$rs3rd = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'THIRDPARTY' and modul = 'F4' ");
		if ($row = $rs3rd->FetchNextObject(false)){
			$kodeThirdParty = $row->kode_klp;
		}
		$rsOther1 = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'OT_RELATED' and modul = 'F4' ");
		if ($row = $rsOther1->FetchNextObject(false)){
			$kodeOtherRelated = $row->kode_klp;
		}

		$rsOther1 = $db->execute("select kode_klp from bpc_conspack_m where kode_lokasi = '$strukturLok' and tipe = 'OT_THIRD' and modul = 'F4' ");
		if ($row = $rsOther1->FetchNextObject(false)){
			$kodeOtherThird = $row->kode_klp;
		}
		$rs = $db->execute("select cocd, nama from bpc_lokasi where kode_induk in ( select kode_lokasi from bpc_lokasi where cocd = '$cocd' ) and not cocd in ('0','96','97','98','M','E') ");
		$dataUbis = new server_util_Map();
		$extraField = array();
		while ($row = $rs->FetchNextObject(false) ){
			$fields .= " 0 as c_" . $row->cocd;
			$extraField[] = "nilai_" . $row->cocd;
			$extraField[] = "nilai_orig_" . $row->cocd;
			$filterLokasi = "(select kode_lokasi from bpc_lokasi start with kode_lokasi ='$row->cocd' connect by kode_induk = prior kode_lokasi )";
			$rs2 = $db->execute("select b.kode_cust
					  	, sum(b.nilai) as nilai, sum(b.nilai_orig) as nilai_orig
						, 1 as kurs, b.curr
					  from bpc_conspack_m a
					  					inner join (select a.kode_klp, e.kode_cust, e.nama, d.NILAI, d.nilai_orig, d.curr
																from bpc_conspack_d a 
														inner join bpc_cust_map b on b.kode_group = a.kode_group  
														inner join bpc_cust_ap c on c.kode_cust = b.kode_cust and c.kode_lokasi = b.kode_lokasi
														inner join bpc_cust_det d on d.kode_cust = c.kode_cust and d.kode_lokasi = c.kode_lokasi    
														inner join bpc_cust_group e on e.kode_cust = b.kode_group               
										where a.kode_lokasi = '$strukturLok' and c.kode_lokasi in $filterLokasi and a.modul = 'F4' and d.periode = '$periode'
										union all
										select '$kodeOtherThird' as kode_klp, 'V99999' as kode_cust, 'Others' as nama, b.NILAI, b.nilai_orig, b.curr
													from bpc_cust_ap a
														inner join bpc_cust_det b on b.kode_cust = a.kode_cust and b.kode_lokasi = a.kode_lokasi
														left outer join bpc_cust_map d on d.kode_cust = a.kode_cust and d.kode_lokasi = a.kode_lokasi and d.kode_group <> '-'
										where a.kode_lokasi in $filterLokasi and b.periode = '$periode' and d.kode_group is null
										union all
										select '$kodeOtherThird' as kode_klp,  e.kode_cust, e.nama, b.NILAI, b.nilai_orig, b.curr
																from bpc_cust_ap a
														inner join bpc_cust_det b on b.kode_cust = a.kode_cust and b.kode_lokasi = a.kode_lokasi
														inner join bpc_cust_map c on c.kode_cust = a.kode_cust and c.kode_lokasi = a.kode_lokasi 
														inner join bpc_cust_group e on e.kode_cust = c.kode_group               
														left outer join bpc_conspack_d d on d.kode_group = c.kode_group and d.kode_lokasi = '$strukturLok' and d.modul = 'F4'
										where a.kode_lokasi in $filterLokasi and b.periode = '$periode' and d.kode_group is null) b on b.kode_klp = a.kode_klp 

										where a.kode_lokasi = '$strukturLok' and a.modul = 'F4' 
										group by b.kode_cust,  a.rowindex,  b.curr 
										order by rowindex
							");
				$itemUbis = new server_util_Map();

				while ($line = $rs2->FetchNextObject(false)){
					$itemUbis->set($line->kode_cust . $line->curr, $line);
				}
				$dataUbis->set($row->cocd, $itemUbis);

		}

		$filterLokasi = "(select kode_lokasi from bpc_lokasi start with kode_lokasi ='$cocd' connect by kode_induk = prior kode_lokasi )";
		$sql = "select a.kode_klp as kode_cust, left_pad(a.nama, a.level_spasi) as nama, a.level_spasi, a.rowindex
							, 0 as nilai, 0 as nilai_orig
							, 1 as kurs, '-' as curr
							, a.tipe
							, a.kode_induk as kode_induk
							, a.sum_header
					  from bpc_conspack_m a 
					  where a.kode_lokasi = '$strukturLok' and a.modul = 'F4'
					  union 
					  select b.kode_cust, left_pad(b.nama, a.level_spasi + 1) as nama, a.level_spasi + 1  as level_spasi, a.rowindex
					  	, sum(b.nilai) as nilai, sum(b.nilai_orig) as nilai_orig
						, 1 as kurs, b.curr
						, 'akun' as tipe
						, a.kode_klp as kode_induk
						, a.sum_header
					  from bpc_conspack_m a
					  					inner join (select a.kode_klp, e.kode_cust, e.nama, d.NILAI, d.nilai_orig, d.curr
																from bpc_conspack_d a 
														inner join bpc_cust_map b on b.kode_group = a.kode_group 
														inner join bpc_cust_ap c on c.kode_cust = b.kode_cust and c.kode_lokasi = b.kode_lokasi
														inner join bpc_cust_det d on d.kode_cust = c.kode_cust and d.kode_lokasi = c.kode_lokasi    
														inner join bpc_cust_group e on e.kode_cust = b.kode_group               
										where a.kode_lokasi like '$strukturLok' and c.kode_lokasi in $filterLokasi and a.modul = 'F4' and d.periode = '$periode'
										union all
										select '$kodeOtherThird' as kode_klp, 'V99999' as kode_cust, 'Others' as nama, b.NILAI, b.nilai_orig, b.curr
													from bpc_cust_ap a
														inner join bpc_cust_det b on b.kode_cust = a.kode_cust and b.kode_lokasi = a.kode_lokasi
														left outer join bpc_cust_map d on d.kode_cust = a.kode_cust and d.kode_lokasi = a.kode_lokasi and d.kode_group <> '-'
										where a.kode_lokasi in $filterLokasi and b.periode = '$periode' and d.kode_group is null
										union all
										select '$kodeThirdParty' as kode_klp,  e.kode_cust, e.nama, b.NILAI, b.nilai_orig, b.curr
																from bpc_cust_ap a
														inner join bpc_cust_det b on b.kode_cust = a.kode_cust and b.kode_lokasi = a.kode_lokasi
														inner join bpc_cust_map c on c.kode_cust = a.kode_cust and c.kode_lokasi = a.kode_lokasi 
														inner join bpc_cust_group e on e.kode_cust = c.kode_group               
														left outer join bpc_conspack_d d on d.kode_group = c.kode_group and d.kode_lokasi = '$strukturLok' and d.modul = 'F4'
										where a.kode_lokasi in $filterLokasi and b.periode = '$periode' and d.kode_group is null) b on b.kode_klp = a.kode_klp 
										where a.kode_lokasi = '$strukturLok' and a.modul = 'F4' 
										group by a.kode_klp, b.kode_cust, b.nama,  a.rowindex,a.level_spasi, b.curr, a.tipe, a.sum_header
										having abs(sum(b.nilai)) >= $nilai 
						union 
						select b.kode_cust, left_pad(b.nama, a.level_spasi + 1) as nama, a.level_spasi + 1  as level_spasi, a.rowindex
					  	, sum(b.nilai) as nilai, sum(b.nilai_orig) as nilai_orig
						, 1 as kurs, b.curr
						, 'akun' as tipe
						, a.kode_klp as kode_induk
						, a.sum_header
					  from bpc_conspack_m a
					  					inner join (select case when f.kode_cust_group is null then '$kodeOtherRelated' else a.kode_klp end as kode_klp, e.kode_cust, e.nama, d.NILAI, d.nilai_orig, d.curr
																from bpc_conspack_d a 
														inner join bpc_cust_map b on b.kode_group = a.kode_group 
														inner join bpc_cust_ap c on c.kode_cust = b.kode_cust and c.kode_lokasi = b.kode_lokasi
														inner join bpc_cust_det d on d.kode_cust = c.kode_cust and d.kode_lokasi = c.kode_lokasi    
														inner join bpc_cust_group e on e.kode_cust = b.kode_group
														left outer join bpc_lokasi f on f.kode_cust_group = e.kode_cust                 
										where a.kode_lokasi like '$strukturLok' and c.kode_lokasi in $filterLokasi and a.modul = 'F4' and d.periode = '$periode'
										union all
										select '$kodeOtherThird' as kode_klp, 'V99999' as kode_cust, 'Others' as nama, b.NILAI, b.nilai_orig, b.curr
													from bpc_cust_ap a
														inner join bpc_cust_det b on b.kode_cust = a.kode_cust and b.kode_lokasi = a.kode_lokasi
														left outer join bpc_cust_map d on d.kode_cust = a.kode_cust and d.kode_lokasi = a.kode_lokasi and d.kode_group <> '-'
										where a.kode_lokasi in $filterLokasi and b.periode = '$periode' and d.kode_group is null
										union all
										select '$kodeThirdParty' as kode_klp,  e.kode_cust, e.nama, b.NILAI, b.nilai_orig, b.curr
																from bpc_cust_ap a
														inner join bpc_cust_det b on b.kode_cust = a.kode_cust and b.kode_lokasi = a.kode_lokasi
														inner join bpc_cust_map c on c.kode_cust = a.kode_cust and c.kode_lokasi = a.kode_lokasi 
														inner join bpc_cust_group e on e.kode_cust = c.kode_group               
														left outer join bpc_conspack_d d on d.kode_group = c.kode_group and d.kode_lokasi = '$strukturLok' and d.modul = 'F4'
										where a.kode_lokasi in $filterLokasi and b.periode = '$periode' and d.kode_group is null) b on b.kode_klp = a.kode_klp 
										where a.kode_lokasi = '$strukturLok' and a.modul = 'F4' 
										group by a.kode_klp, b.kode_cust, b.nama,  a.rowindex,a.level_spasi, b.curr, a.tipe, a.sum_header
										having abs(sum(b.nilai)) < $nilai 
										order by rowindex, level_spasi
							";
		///error_log($sql);
		$rs = $db->execute($sql);
		
		$first = true;
		$totalCurr = new server_util_Map();
		$rootNode = new server_util_NodeNRC("00");
		$totalCurr = new server_util_Map();
		$this->sumHeader = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			foreach ($dataUbis->getArray() as $key => $itemUbis){
				$tmp = $itemUbis->get($row->kode_cust . $row->curr);
				if ($tmp == null){
					eval("\$row->nilai_$key = 0;");
					eval("\$row->nilai_orig_$key = 0;");
				}else {
					eval ("\$row->nilai_$key = $tmp->nilai ;");
					eval ("\$row->nilai_orig_$key = $tmp->nilai_orig ;");
				}

			}

			if ($node == ""){
				$node = new server_util_NodeNRC($rootNode);
			}else if ($node->level == floatval($row->level_spasi) - 1 ){
				$node = new server_util_NodeNRC($node);
			}else if ($node->level == floatval($row->level_spasi) ){
				$node = new server_util_NodeNRC($node->owner);
			}else if ($node->level > floatval($row->level_spasi) ){
				while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
					$node = $node->owner;
				}
				$node = new server_util_NodeNRC($node->owner);
			}
			$node->setData($row);
			if ($row->tipe == "TOTAL"){
				$this->sumHeader->set($row->kode_cust, $node);
			}
			if ($row->curr != "-"){
				$totalPerCurr = $totalCurr->get($row->curr);
				$tmpRow = (array)$row;
				if ($totalPerCurr == null){
					$totalPerCurr = array($row->nilai, $row->nilai_orig, $row->kurs);
					//foreach ($dataUbis->getArray() as $key => $itemUbis){
					foreach ($extraField as $field){
						$totalPerCurr[] = $tmpRow[$field];
						//$totalPerCurr[] = $tmpRow["nilai_orig_".$key];
					}
				}else {
					$totalPerCurr[0] = $totalPerCurr[0] + $row->nilai;
					$totalPerCurr[1] = $totalPerCurr[1] + $row->nilai_orig;
					$index = 3; 
					foreach ($extraField as $field){
						$totalPerCurr[$index] = $totalPerCurr[$index] + $tmpRow[$field];
						//$totalPerCurr[$index + 1] = $totalPerCurr[$index + 1] + $tmpRow["nilai_orig_".$key];
						$index++;
					}
				}
				$totalCurr->set($row->curr, $totalPerCurr);
			}
			
			if ($row->tipe == "SUMMARY"){
				foreach ($totalCurr->getArray() as $key => $value) {
					$tmp = array("kode_cust" => $row->kode_cust . $key, "nama" => "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$key","tipe"=>"akun","kode_group" => "", "nama_group" => "", "nilai" => $value[0], "kurs" => $value[2], "curr" => $key, "nilai_orig" => $value[1], "related" => $row->related , "level_spasi" => 2,  "rowindex" => 2);
					$nodeTmp = new server_util_NodeNRC($node);
					$index = 3;
					//foreach ($dataUbis->getArray() as $key => $itemUbis){
					foreach ($extraField as $field){
						$tmp[$field] = $value[$index];
						//$tmp["nilai_orig_".$key] = $value[$index + 1];
						$index++; 
					}
					$tmp = json_decode(json_encode($tmp));
					$nodeTmp->setData($tmp);
				}
				$totalCurr = new server_util_Map();
			}
		}	
		//error_log("Done Summmary");
		//error_log($this->sumHeader->getLength());
		foreach ($rootNode->childs as $key => $val){
			$this->summariesKKP($val, $extraField);
			if ($val->data->sum_header != "-" && $val->data->sum_header != ""){
				$summaryHeader = explode(",",$val->data->sum_header);

				foreach ($summaryHeader as $header){
					$nodeHeader = $this->sumHeader->get($header);
					if ($nodeHeader){
						$nodeHeader->data->nilai_orig += $val->data->nilai_orig;
						$nodeHeader->data->nilai += $val->data->nilai;
						foreach ($dataUbis->getArray() as $key => $itemUbis){
							eval("\$nodeHeader->data->nilai_orig_". $key ." += \$val->data->nilai_orig_". $key.";");
							eval("\$nodeHeader->data->nilai_". $key ." += \$val->data->nilai_". $key.";");
						}
						
					}
				}
			}
		}
		//error_log("Done Leveing");
		//perlu hitung ke summary
		$this->generateResultKKP($rootNode, $result);
		
		$result["total"] = $total;
		$rs = $db->execute("select
							 sum(b.nilai) as nilai,  b.curr
							, sum(b.nilai_orig) as nilai_orig
						 from bpc_cust_ap a
						 	   inner join bpc_cust_det b on b.kode_cust = a.kode_cust and b.kode_lokasi = a.kode_lokasi
						 where a.kode_cust like '$cust%' and b.kode_lokasi like '$cocd%'  and b.periode = '$periode'
						 group by b.curr 
						 order by b.curr");
		
		while ($row = $rs->FetchNextObject(false)) {
			$result["detailTotal"]["rs"]["rows"][] = (array)$row;
		}

		return $result;
	}

	function downloadReportCustARGroup($compCode, $cust, $periode){
		try{
			$db = $this->getDb();
			
			//error_log("Generate Report");
			uses("server_modules_codeplex_PHPExcel",false);
			$objPHPExcel = new PHPExcel();
			// Set document properties
			$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
							->setLastModifiedBy("FA")
							->setTitle("REPORT F4")
							->setSubject("F4")
							->setDescription("Report F4 (PIUTANG)")
							->setKeywords("F4")
								->setCategory("Intercompany");
	
	
				
			$objPHPExcel->setActiveSheetIndex(0);
			$sheet = $objPHPExcel->getActiveSheet();
			$sharedStyle1 = new PHPExcel_Style();
			$sharedStyle1->applyFromArray(
				array('fill' 	=> array(
											'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
											'color'		=> array('argb' => 'FFCCFFCC')
										),
					'alignment' => array(
                                      'wrap'       => true,
									  'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                            ),
					'borders' => array(
											'allborders'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										),
					'font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    )
					));
			$sharedStyle2 = new PHPExcel_Style();
			$sharedStyle2->applyFromArray(
				array('fill' 	=> array(
											'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
											'color'		=> array('argb' => 'FFFFD600')
										),
					'borders' => array(
											'allborders'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										),
					'font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    )
					));
			$style_num = new PHPExcel_Style();
			$style_num->applyFromArray(array('alignment' => array(
                                      'wrap'       => false,
                                      'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_RIGHT,
                                      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                            ),
                     ));
        	$style_title = array('font' =>
                                    array('color' =>
                                      array('rgb' => '000000'),
                                      'bold' => true,
                                    ),
                     );
			$rs = $db->execute("select nama from bpc_lokasi where cocd = '$compCode' ");
			$nama = "";
			if ($row = $rs->FetchNextObject(false)){
				$nama = $row->nama;
			}

			$sheet->setCellValueByColumnAndRow(0, 1, strtoupper($nama));
			$sheet->setCellValueByColumnAndRow(0, 2, "ANAK PERUSAHAAN PT TELKOM");
			$sheet->setCellValueByColumnAndRow(0, 3, "UTANG USAHA & HUTANG LAINNYA");
			$sheet->setCellValueByColumnAndRow(0, 4, "PER $periode");
			$sheet->getStyle("A1:A4")->applyFromArray($style_title);
			$sheet->getStyle("A1:A4")->getFont()->setSize(12);
			$sheet->mergeCells("A1:C1");
			$sheet->mergeCells("A2:C2");
			$sheet->mergeCells("A3:C3");
			$sheet->mergeCells("A4:C4");
			

			$sheet->getColumnDimension('A')->setWidth(5);
			$sheet->getColumnDimension('B')->setWidth(5);
			$sheet->getColumnDimension('C')->setWidth(35);
			$sheet->getColumnDimension('D')->setWidth(11);
			$sheet->getColumnDimension('E')->setWidth(15);
			$sheet->getColumnDimension('F')->setWidth(15);
			$sheet->getColumnDimension('G')->setWidth(15);
			$sheet->getColumnDimension('H')->setWidth(15);
			$sheet->getColumnDimension('I')->setWidth(15);
			$sheet->getColumnDimension('J')->setWidth(15);
			$sheet->getColumnDimension('K')->setWidth(15);
			$sheet->getColumnDimension('L')->setWidth(15);
			$sheet->getColumnDimension('M')->setWidth(15);
			$sheet->getColumnDimension('N')->setWidth(15);
			$sheet->getColumnDimension('O')->setWidth(15);
			$sheet->getColumnDimension('P')->setWidth(15);
			$sheet->getColumnDimension('Q')->setWidth(15);
			$sheet->getColumnDimension('R')->setWidth(15);
			$sheet->getColumnDimension('S')->setWidth(15);
			$sheet->getColumnDimension('T')->setWidth(15);
			$sheet->getColumnDimension('U')->setWidth(15);
			$sheet->getColumnDimension('V')->setWidth(15);
			$sheet->getColumnDimension('W')->setWidth(15);
			$sheet->getColumnDimension('X')->setWidth(15);
			$sheet->getColumnDimension('Y')->setWidth(15);
			$sheet->getColumnDimension('Z')->setWidth(15);
			$sheet->getColumnDimension('AA')->setWidth(15);
			$sheet->getColumnDimension('AB')->setWidth(15);
			$sheet->getColumnDimension('AC')->setWidth(15);
			$sheet->getColumnDimension('AD')->setWidth(15);

			$column = array("KETERANGAN","CUST. GROUP","MATA UANG"," NILAI DALAM MATA UANG ASAL (ORIGINAL) "," KURS VALUTA ASING ","SETARA RUPIAH (IDR)");
			//< 1 Bulan	1 - 3 Bulan	4 - 6 Bulan	7 - 12 Bulan	> 12 Bulan	Total (gross)
					
			$rs = $db->execute("select cocd, nama from bpc_lokasi where kode_induk in ( select kode_lokasi from bpc_lokasi where cocd = '$compCode' ) and not cocd in ('0','96','97','98','M','E')order by no_urut ");
			$fieldUbis = array();
			while ($row = $rs->FetchNextObject(false)){
				$column[] = $row->nama;
				$fieldUbis[] = $row->cocd;
			}
			$col = 0;
			$row = 7;
			
			foreach ($column as $key => $value){
				$sheet->setCellValueByColumnAndRow($col, $row, $value);
				$colAbjad = PHPExcel_Cell::stringFromColumnIndex($col);
				if ($key >= 6){
					$max = $col + 1;
					$end = PHPExcel_Cell::stringFromColumnIndex($max);
					$sheet->mergeCells($colAbjad."7:".$end."7");
					$sheet->setSharedStyle($sharedStyle1,$colAbjad. "7:".$end."7");
					$col += 2;
				}else if ($col == 0){
					$col = 3;
					$sheet->mergeCells("A7:C8");
					$sheet->setSharedStyle($sharedStyle1,"A7:C8");
				}else {
					$sheet->mergeCells($colAbjad."7:".$colAbjad."8");
					$sheet->setSharedStyle($sharedStyle1,$colAbjad. "7:".$colAbjad."8");
					$col++;
				}
			}
			$col = 8;
			foreach($fieldUbis as $key => $value){
				$colAbjad = PHPExcel_Cell::stringFromColumnIndex($col);
				$sheet->setSharedStyle($sharedStyle1,$colAbjad. "8:".$colAbjad."8");
				$sheet->setCellValueByColumnAndRow($col, 8, "NILAI ORIGINAL");
				$sheet->setCellValueByColumnAndRow($col + 1, 8, "SETARA IDR");
				$colAbjad = PHPExcel_Cell::stringFromColumnIndex($col + 1);
				$sheet->setSharedStyle($sharedStyle1,$colAbjad. "8:".$colAbjad."8");
				$col += 2;
			}
			
			$sheet->getRowDimension('7')->setRowHeight(40);
			//$sheet->mergeCells("A7:C7");

			$row+=3;
			$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
			
			$first = true;
			$totalCurr = array();
			$result = $this->reportJejerCustAP2($compCode, $cust, $periode);
			$totalCurr = new server_util_Map();
			$related = "";
			$row++;
			$tmpCode = "";
			$detailPrinted = false;
			foreach($result["rs"]["rows"] as $val){
				//error_log("Value ". json_encode($val));
				$rowVal = json_decode(json_encode($val));
				$sheet->setCellValueByColumnAndRow(0, $row, $rowVal->kode_klp);
				$nama = str_replace("&nbsp;","",$rowVal->nama);
				$level = "";
				for ($i = 0; $i < $rowVal->level_spasi - 2; $i++){
					$level .= "   ";
				}
				if ($rowVal->tipe != 'akun' && $rowVal->tipe != "TOTAL" ){
					//error_log("tmpCode $tmpCode level $rowVal->level_spasi $rowVal->kode_cust $rowVal->kode_induk");
					//$sheet->setCellValueByColumnAndRow( , $row, $nama);
					$sheet->setCellValueByColumnAndRow(0 + $rowVal->level_spasi, $row, $level . $nama);
					if (floatval($rowVal->level_spasi) <= 1){
						$rowTmp = json_decode(json_encode((array)$rowVal));
						$tmpCode = $rowVal->kode_induk;
					}
					$detailPrinted = false;
						
				}else{  
					$detailPrinted = true;
					
					$sheet->setCellValueByColumnAndRow(2, $row, $level . $nama);
					$sheet->setCellValueByColumnAndRow(3, $row, $rowVal->kode_cust);
					$sheet->setCellValueByColumnAndRow(4, $row, $rowVal->curr);
					$sheet->setCellValueByColumnAndRow(5, $row, $rowVal->nilai_orig);
					$sheet->setCellValueByColumnAndRow(6, $row, $rowVal->kurs);
					$sheet->setCellValueByColumnAndRow(7, $row, $rowVal->nilai);
					$startCol = 8;
					foreach($fieldUbis as $key => $cocd){
						$sheet->setCellValueByColumnAndRow($startCol, $row, $val["nilai_".$cocd]);
						$sheet->setCellValueByColumnAndRow($startCol + 1, $row, $val["nilai_orig_".$cocd]);
						$startCol+=2;
					}


					$sheet->getStyle("E$row:AD$row")->getNumberFormat()->setFormatCode('#,##0');
					if ($rowVal->tipe == "TOTAL"){
						$sheet->setSharedStyle($sharedStyle2,"A$row:AD$row");
						$sheet->getStyle("E$row:AD$row")->getNumberFormat()->setFormatCode('#,##0');
					}
				}
				$row++;
			}
			
			$sharedStyle3 = new PHPExcel_Style();
			$sharedStyle3->applyFromArray(
				array('borders' => array(
											'allborders'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										),
					'font' =>
                                    array('color' =>
                                      array('rgb' => '000000')
                                    )
					));
			

			$row += 3;
			$sheet->setCellValueByColumnAndRow(2, $row, "RINGKASAN");
			$sheet->getStyle("C$row:C$row")->getFont()->setItalic(true);
			$rowSummary = $result["detailTotal"]["rs"]["rows"];
			$row++;
			$sheet->setCellValueByColumnAndRow(2, $row, "Mata Uang");
			$sheet->setCellValueByColumnAndRow(3, $row, "Nilai dalam mata uang asing");
			$sheet->setCellValueByColumnAndRow(4, $row, "Kurs valuta asing");
			$sheet->setCellValueByColumnAndRow(5, $row, "Setara Rupiah (IDR)");
			$sheet->setSharedStyle($sharedStyle3,"C$row:F$row");
			$sheet->getStyle("C$row:F$row")->getFont()->setBold(true);
			//Mata Uang	Nilai dalam mata uang asing	 Kurs valuta asing 	Setara Rupiah (IDR)
			$rs = $db->execute("select curr, nilai from bpc_param_curr where kode_lokasi = '$compCode' and periode = (select max(periode) from bpc_param_curr where periode like '$periode%' ) ");
			$kurs = new server_util_Map();
			while ($line = $rs->FetchNextObject(false)){
				$kurs->set($line->curr, $line->nilai);
			}
			$row++;
			$total1 = 0;
			$total2 = 0;
			foreach($rowSummary as $val){
				$sheet->setCellValueByColumnAndRow(2, $row, $val["curr"]);
				$sheet->setCellValueByColumnAndRow(3, $row, $val["nilai_orig"]);
				$nilaiKurs = $kurs->get($val["curr"]);
				$sheet->setCellValueByColumnAndRow(4, $row, $nilaiKurs);
				$sheet->setCellValueByColumnAndRow(5, $row, $val["nilai"]);
				$sheet->setSharedStyle($sharedStyle3,"C$row:F$row");
				$total1 += $val["nilai_orig"];
				$total2 += $val["nilai"];
				$sheet->getStyle("C$row:F$row")->getNumberFormat()->setFormatCode('#,##0');
				$row++;
			}
			$sheet->mergeCells("C$row:E$row");
			$sheet->setSharedStyle($style_num,"C$row:C$row");
			$sheet->setCellValueByColumnAndRow(2, $row, "Total");
			$sheet->getStyle("E$row:E$row")->getFont()->setBold(true);
			$sheet->setCellValueByColumnAndRow(5, $row, $total2);
			$sheet->getStyle("F$row:F$row")->getNumberFormat()->setFormatCode('#,##0');
			$row++;
			$sheet->mergeCells("C$row:E$row");
			$sheet->setSharedStyle($style_num,"C$row:E$row");
			$sheet->setCellValueByColumnAndRow(2, $row, "PER POSISI KEUANGAN");
			$row++;
			$sheet->mergeCells("C$row:E$row");
			$sheet->setSharedStyle($style_num,"C$row:E$row");
			$sheet->setCellValueByColumnAndRow(2, $row, "SELISIH");
			$row++;
			$sheet->mergeCells("C$row:E$row");
			$sheet->setCellValueByColumnAndRow(2, $row, "kontrol cek = selisih seharusnya NIHIL");
			$sheet->setSharedStyle($style_num,"C$row:E$row");
			$sheet->getStyle("C$row:C$row")->getFont()->setBold(true);
			$sheet->getStyle("C$row:C$row")->getFont()->setItalic(true);
			

			// Set active sheet index to the first sheet, so Excel opens this as the first sheet
			$objPHPExcel->setActiveSheetIndex(0);
	
	
			// Save Excel 2007 file
			$namafile = MD5(date("r"));
			global $serverDir;
			$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
			$objWriter->save($serverDir . "/tmp/F4-$compCode.xlsx");
		
			return "/tmp/F4-$compCode.xlsx";
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}
	///----
	function reportNett($compCode, $periode){
	}
	function reportSummary($compCode, $periode){
		$db = $this->getDb();
		$rs = $db->execute("select cocd, nama from bpc_lokasi where kode_induk in ( select kode_lokasi from bpc_lokasi where cocd = '$compCode' ) and not cocd in ('0','96','97','98','M','E') ");
		$fields = "";
		$konsol = "9000";
		$dataUbis = new server_util_Map();
		while ($row = $rs->FetchNextObject(false)){
			//$fields .= ", 0 as bill_" . $row->cocd ." , 0 as unbill_" . $row->cocd;
			$fields .= ", sum(case when b.status_bill = 'Unbill' and b.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '".$row->cocd."'
												connect by kode_induk = prior kode_lokasi) then b.nilai else 0 end) as unbill_".$row->cocd."
					   , sum(case when b.status_bill <> 'Unbill' or b.status_bill is null and b.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '".$row->cocd."'
												connect by kode_induk = prior kode_lokasi)  then b.nilai else 0 end) as bill_".$row->cocd."
												";
		}
		$sql = "select a.kode_klp, a.nama,  a.level_spasi, a.rowindex
					, sum(case when b.status_bill = 'Unbill' then b.nilai else 0 end) as nilai_unbill
					, sum(case when b.status_bill <> 'Unbill' or b.status_bill is null then b.nilai else 0 end) as nilai_bill
					, sum( b.nilai ) as nilai
					$fields
				from bpc_conspack_m a
									left outer join (select a.kode_klp, b.kode_cust, c.nama
													, b.NILAI, b.nilai_orig
													, b.status_bill
													, b.kode_lokasi 
												from bpc_conspack_d a 
													inner join bpc_cust_sum b on b.kode_cust = a.kode_group
													inner join bpc_cust_group c on c.kode_cust = b.kode_cust 
														
									where a.kode_lokasi = '$konsol'  and a.modul = 'F4' and b.periode = '$periode'
										and b.kode_lokasi in (select kode_lokasi from bpc_lokasi start with kode_lokasi = '". $compCode."'
																connect by kode_induk = prior kode_lokasi)
									) b on b.kode_klp = a.kode_klp 
									where a.kode_lokasi = '$konsol' and a.modul = 'F4'  
									group by a.kode_klp, a.nama, a.level_spasi,  a.rowindex
									order by rowindex";

		$rs2 = $db->execute($sql);
		$result = array("rs" => array("rows" => array()));
		while ($row2 = $rs2->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array) $row2;
			/*
			foreach ($dataUbis->getArray() as $key => $itemUbis){
				$tmp = $itemUbis->get($row->kode_klp);
				eval("\$row->bill_$key = 0;");
				eval("\$row->unbill_$key = 0;");
			}
			*/
		}
		return $result;
	}
	function addCommentVendor($compCode, $vendor, $periode,  $keterangan){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$periode = date("Ym");
		$sql->add("delete bpc_vendor_ap_ket   where kode_lokasi = '$compCode' and periode = '$periode' and kode_vendor = '$vendor'  ");
		$sql->add("insert into bpc_vendor_ap_ket(kode_lokasi, kode_vendor, periode, keterangan)
						values('$compCode','$vendor','$periode','$keterangan') ");
		return $db->execArraySQL($sql);
	}
	function addCommentCust($compCode, $cust, $periode,  $keterangan){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$periode = date("Ym");
		$sql->add("delete bpc_cust_ar_ket   where kode_lokasi = '$compCode' and periode = '$periode' and kode_cust = '$cust'  ");
		$sql->add("insert into bpc_cust_ar_ket(kode_lokasi, kode_cust, periode, keterangan)
						values('$compCode','$cust','$periode','$keterangan') ");
		return $db->execArraySQL($sql);
	}
	// Approval
	function approval($user, $compCode, $periode){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$periode = date("Ym");
		$nobukti = $this->getNoBuktiOtomatis("bpc_arap_app", "no_bukti", $compCode .".".$periode .".", "00", " and kode_lokasi  = '$compCode'", null);
		$sql->add("update bpc_vendor_sum set status_app = '1' where kode_lokasi = '$compCode' and periode = '$periode'  ");
		$sql->add("update bpc_cust_sum set status_app = '1' where kode_lokasi = '$compCode' and periode = '$periode'  ");
		return $db->execArraySQL($sql);
		
	}

	// Approval
	function returnKKP($user, $compCode, $periode){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$periode = date("Ym");
		$nobukti = $this->getNoBuktiOtomatis("bpc_arap_app", "no_bukti", $compCode .".".$periode .".", "00", " and kode_lokasi  = '$compCode'", null);
		$sql->add("update bpc_vendor_sum set status_app = 'R' where kode_lokasi = '$compCode' and periode = '$periode'  ");
		$sql->add("update bpc_cust_sum set status_app = 'R' where kode_lokasi = '$compCode' and periode = '$periode'  ");
		return $db->execArraySQL($sql);
		
	}

	/*******************************************/
	/*   		    ZINTERCO                   */
	/*******************************************/
	function getDataInterco($compCode, $status, $p1, $p2, $vendor1, $vendor2){
		try{
			$db = $this->getDb();
			$sql = new server_util_arrayList();   
			
			
			$login = new server_util_Map();
			//query 
			$rfc = $this->getSAPConnection($compCode);
			if (isset($this->sapuser)){
				$login->set("user", $this->sapuser);
				$login->set("passwd", $this->sappwd);
			}else{
				return "Koneksi SAP tidak di temukan untuk Comp Code $compCode";
			}
			$sapImp = new server_util_Map(array(
													"IM_BUKRS" => $compCode,
													"IM_CLEAR" => $status
												));
			
			$rs = $db->execute("select min(d.kode_vendor) v1, max(d.kode_vendor) v2 from bpc_lokasi a, bpc_vendor_group b,  bpc_vendor_map c, bpc_vendor_ap d 
									where a.kode_vendor_group = b.kode_vendor
									and c.kode_group(+) = b.kode_vendor 
									and c.kode_vendor = d.kode_vendor(+)
									and c.kode_lokasi = d.kode_lokasi 
									and d.kode_vendor like '009%'");
			
			if ($row = $rs->FetchNextObject(false))
				{
					$vendor1 = $row->v1;
					$vendor2 = $row->v2;
				}

			$vendor = new server_util_arrayList();
			if ($vendor2 == ""){
				if ($vendor1 == "")
					$vendor1 = "*";
				$vendor->add(array("SIGN"=>"I","OPTION"=>"CP","LOW"=> $vendor1,"HIGH"=> $vendor2));
				if ($vendor1 == "*")
					$sql->add("delete from bpc_zinterco where kode_lokasi = '$compCode' and periode = '$periode' and kode_vendor like '%' ");
				else 
					$sql->add("delete from bpc_zinterco where kode_lokasi = '$compCode' and periode = '$periode' and kode_vendor = '$vendor1' ");	
			}else {
				$vendor->add(array("SIGN"=>"I","OPTION"=>"BT","LOW"=> $vendor1,"HIGH"=> $vendor2));
				$sql->add("delete from bpc_zinterco where kode_lokasi = '$compCode' and periode = '$periode' and kode_vendor BETWEEN '$vendor1' and '$vendor2' ");	
			}
			$budat = new server_util_arrayList();
			$budat->add(array("SIGN" => "I", "OPTION" =>"BT", "LOW" => $p1, "HIGH" => $p2));
			$sapExpTable = new server_util_Map(array("LINEITEMS"));
			$sapImpTable = new server_util_Map(array("T_LIFNR" => $vendor,"BUDAT" => $budat));
			//echo "Get SAP<br>";
			error_log("Request SAP RFC $vendor1 $vendor2");
			$dataSAP = $rfc->callRFC($login,"ZGET_ALL_ITEMS_FBL1N", $sapImp, $sapExpTable, $sapImpTable, null, true);
			error_log("Done SAP REq");
			//echo "done SAP<br>";
			/*
				//periode, kode_cust, kode_lokasi, curr, kurs, nilai, tgl_duedate, kurs_adj, userid, tgl_update, keterangan, ref_doc, tgl_post, tgl_entry, tgl_doc, kode_ba 
				BUKRS 	LIFNR 	UMSKS 	UMSKZ 	AUGDT 	AUGBL 	ZUONR 	GJAHR 	BELNR 	BUZEI 	BUDAT 	BLDAT 	WAERS 	XBLNR 	BLART 	MONAT 	BSCHL 	SHKZG 	GSBER 	DMBTR 	WRBTR 	SGTXT 	SAKNR 	HKONT 	KOSTL 	PRCTR 	VBUND
				1010 	PVR3001 			    20160428 	0100003592 	025V/120/0116 	2016 	0100000410 	4 	20160125 	20160125 	IDR 	025V/120/0116 	SA 	1 	31 	H 	PK02 	30533506.0000- 	30533506.0000- 	XL AXIATA-INV.91468815,LL SERVICES JANUARI 2016 	0020102002 	0020102002 		PK02A01 


				KODE_VENDOR = LIFNR
				AUGDT = TGL DOK CLEARING
				AUGBL = NO DOK CLEARING
				ZUONR = ASSIGNT NO
				BELNR = ACCounting doc NO
				BUZEI = Number of Line Item Within Accounting Document 
				BUDAT = POSTING DATE
				BLDAT = Document Date in Document
				WAERS = Currency
				XBLNR = Reference Document Number  
				BLART =	Document Type
				MONAT =	Periode
				BSCHL =	Posting key
				SHKZG =	Debet(S)/Credit(H)
				GSBER =	BS Area
				DMBTR =	Amount Local Curreny
				WRBTR =	Amount in Document
				SGTXT =	Keterangan
				SAKNR = GL akun number	
				HKONT = GL akun	
				KOSTL = Cost Center	
				PRCTR = Profit Center	
				VBUND = Trading Partner
				
				*/
			$output = $dataSAP->get("LINEITEMS");
			$result = array("rs" => array( "rows" => array()) );
			$groupKurs = new server_util_Map();
			foreach ($output->getArray() as $val){
				$line = $val->get(0);
				//error_log(json_encode($line->getArray()) );
				
				$vendor = $line->get("LIFNR");
				$curr = $line->get("WAERS");
				$clearDok = $line->get("AUGBL");
				$kurs = 1;
				$nilai_orig = floatval($line->get("WRBTR"));
				$nilai = floatval($line->get("DMBTR"));
				$ba = $line->get("GSBER");
				$dc = $line->get("SHKZG");
				$periode = $line->get("MONAT");
				$akun = $line->get("SAKNR");
				$noDok = $line->get("BELNR");

				$cc = $line->get("PRCTR");
				$pc = $line->get("KOSTL");
				$ket = $line->get("SGTXT");
				$postkey = $line->get("BSCHL");
				$docType = $line->get("BLART");
				$ref_doc = $line->get("XBLNR");

				$ket = str_replace("'","''", $ket);
				$ref_doc = str_replace("'","''", $ref_doc);
				$tgl_post = $line->get("BUDAT");
				$tgl_entry = $line->get("AUGDT");
				$tgl_doc = $line->get("BLDAT");
				$ba = $line->get("GSBER");
				$nama = "";
				/*
				{title : "Kode Vendor", width:80},
								{title : "Nama Vendor", width: 250},
								{title : "Currency", width: 80},
								{title : "Keterangan", width: 250},
								{title : "Nilai Original", width: 120}, 
								{title : "Nilai", width: 120},
								{title : "Tgl Dok", width: 80},
								{title : "No Dok", width: 100},
								{title : "Tgl Clear", width: 80},
								{title : "No Clear", width: 100},
								{title : "Tgl Posting", width: 80},
								{title : "BA", width: 80},
								{title : "DC", width: 50},
								{title : "Akun", width: 80},
								{title : "No Ref.", width: 100},
								{title : "No Posting", width: 100}
				*/
				$sql->add("insert into bpc_zinterco(KODE_LOKASI, KODE_VENDOR, PERIODE, NILAI_ORIG, NILAI, TGL_DOK, NO_DOK, KETERANGAN, TGL_CLEAR, TGL_POSTING, CURR, KODE_CC, KODE_PC, KODE_BA,
					DC,KODE_AKUN, POSTKEY, NO_REF, ROW_ID, NO_DOK_GL )
					values('$compCode','$vendor','$periode','$nilai_orig','$nilai','$tgl_doc','$clearDok','$ket','$tgl_entry','$tgl_post','$curr','$cc','$pc','$ba'
						,'$dc','$akun','$postkey','$ref_doc','0','$noDok' )");
				
				
				$result["rs"]["rows"][] = array("kode_vendor" => $vendor,
												"nama" => $nama,
												"keterangan" => $ket,
												"curr" => $curr,
												"nilai_orig" => $nilai_orig,
												"nilai" => $nilai,
												"tgl_dok" => $tgl_doc,
												"no_dok" => $clearDok,
												"tgl_clear" => $tgl_entry,
												"no_dok_gl" => $noDok,
												"tgl_posting" => $tgl_post,
												"ba" => $ba,
												"dc" => $dc,
												"pc" => $pc,
												"cc" => $cc,
												"akun" => $akun,
												"no_ref" => $ref_doc
											); 
											
			}

			error_log("done loop $db");
			$ret = $db->execArraySQL($sql);
			error_log("Return $ret");
			//error_log(json_encode($result));
			if ($ret == "process completed")
				return $result;
			else return $ret;
		}catch(Exception $e){
			error_log("Failed Process ");
			error_log($e->getMessage());
		}


	}
	
	/*
	PARAM NILAI
	*/
	function addParamNilai($compCode, $modul, $nilai, $userlog){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_param_nilai where kode_lokasi = '$compCode' and modul = '$modul' ");
		$sql->add("insert into bpc_param_nilai(kode_lokasi, nilai_min, modul, user_update, tgl_update)
					values('$compCode','$nilai', '$modul', '$userlog',now())");
		return $db->execArraySQL($sql);
	}
	function deleteParamNilai($compCode, $modul, $nilai, $userlog){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_param_nilai where kode_lokasi = '$compCode' and modul = '$modul' ");
		return $db->execArraySQL($sql);
	}
	function getParamNilai($compCode, $modul){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$rs = $db->execute("select nilai_min from bpc_param_nilai  where kode_lokasi = '$compCode' and modul = '$modul' ");
		$nilai = 0;
		if ($row = $rs->FetchNextObject(false)){
			$nilai = $row->nilai_min;
		}
		return $nilai;
	}

	/*
	buat Listdata
	*/
	
	function getListData($table, $field, $search, $page, $filter, $sort){
		$db = $this->getDb();
		
		$result = array("rows" => array(), "page" => 0, "maxpage" => 0, "totalrows" => 0);

		$fields = $field[0] .",".$field[1];
		$rs = $db->LimitQuery("select $fields from $table where (" . $field[0] ." like '$search%' or ". $field[1] ." like '%$search%'  ) $filter  $sort", 100, 0);
		while ($row = $rs->FetchNextObject(false)){
			$result["rows"][] = (array)$row;
		}
		return $result;
	}
	function getListSBU($kode, $nama, $filter, $page){//Unit Bisnis
		$db = $this->getDb();
		$user = $this->userid;//$_SESSION["user"];;
		//error_log("Get List $user");
		$rs = $db->execute("select cfu from exs_karyawan where nik = '$user'");
		if ($row = $rs->FetchNextObject(false))
			$cfu = $row->kode_lokasi;
		
		if ($kode != "" && $nama != ""){
			$rs = $db->execute("select kode_cfu, nama, level_spasi, rowindex from bpc_cfu where (kode_cfu like '$kode%' or nama like '%$nama%') and kode_cfu in (select kode_cfu from bpc_cfu start with kode_cfu = '$cfu' connect by kode_induk = prior kode_cfu)");
		}else if ($kode != ""){
			$rs = $db->execute("select kode_cfu, nama, level_spasi, rowindex from bpc_cfu where (kode_cfu like '$kode%') and kode_cfu in (select kode_cfu from bpc_cfu start with kode_cfu = '$cfu' connect by kode_induk = prior kode_cfu)");
		}else if ($nama != "")
			$rs = $db->execute("select kode_cfu, nama, level_spasi,  rowindex from bpc_cfu where (nama like '$$nama%') and kode_cfu in (select kode_cfu from bpc_cfu start with kode_cfu = '$cfu' connect by kode_induk = prior kode_cfu)");
		else $rs = $db->execute("select kode_cfu, nama, level_spasi,  rowindex from bpc_cfu where kode_cfu in (select kode_cfu from bpc_cfu start with kode_cfu = '$cfu' connect by kode_induk = prior kode_cfu)");
		
		$result = array("rs" => array("rows" => array()));
		$first = true;
		$level = 0;
		while ($row = $rs->FetchNextObject(false)){
			if ($first){
				$level = $row->level_spasi;
			}
			$row->level_spasi = $row->level_spasi - $level; 
			$result["rs"]["rows"][] = (array)$row;
			$first = false;
		}
		$result["totalPage"] = 0;
		return $result;
	}

	function getListCFU($kode, $nama, $filter, $page){
		$db = $this->getDb();
		$user = $this->userid;//$_SESSION["user"];;
		
		$rs = $db->execute("select cfu from exs_karyawan where nik = '$user'");
		$cfu = "";
		if ($row = $rs->FetchNextObject(false))
			$cfu = $row->cfu;
		

		$listCFU = explode(",", $cfu);
		$cfu = "";
		foreach($listCFU as $val){
			$cfu .= ",'$val'"; 
		}
		$cfu = substr($cfu,1,strlen($cfu));
		if ($kode != "" && $nama != ""){
			$rs = $db->execute("select kode_cfu, nama, level_spasi, rowindex from bpc_cfu where (kode_cfu like '$kode%' or nama like '%$nama%') and kode_cfu in (select kode_cfu from bpc_cfu start with kode_cfu in ($cfu) connect by kode_induk = prior kode_cfu) order by rowindex");
		}else if ($kode != ""){
			$rs = $db->execute("select kode_cfu, nama, level_spasi, rowindex from bpc_cfu where (kode_cfu like '$kode%') and kode_cfu in (select kode_cfu from bpc_cfu start with kode_cfu in ($cfu) connect by kode_induk = prior kode_cfu)  order by rowindex");
		}else if ($nama != "")
			$rs = $db->execute("select kode_cfu, nama, level_spasi,  rowindex from bpc_cfu where (nama like '$$nama%') and kode_cfu in (select kode_cfu from bpc_cfu start with kode_cfu in ($cfu) connect by kode_induk = prior kode_cfu)  order by rowindex");
		else $rs = $db->execute("select kode_cfu, nama, level_spasi,  rowindex from bpc_cfu where kode_cfu in (select kode_cfu from bpc_cfu start with kode_cfu in ($cfu) connect by kode_induk = prior kode_cfu) order by rowindex ");
		
		$result = array("rs" => array("rows" => array()));
		$first = true;
		$level = 0;
		while ($row = $rs->FetchNextObject(false)){
			if ($first){
				$level = $row->level_spasi;
			}
			$row->level_spasi = $row->level_spasi - $level; 
			$result["rs"]["rows"][] = (array)$row;
			$first = false;
		}
		$result["totalPage"] = 0;
		return $result;
	}
	function getListCFUAll($kode, $nama, $filter, $page){
		$db = $this->getDb();
		$user = $this->userid;//$_SESSION["user"];;

		if ($filter != ""){
			$filter2 = " and " . substr($filter, 6 , strlen($filter) );
		}
		
		$cfu = "";
		if ($kode != "" && $nama != ""){
			$rs = $db->execute("select kode_cfu, nama, level_spasi, rowindex from bpc_cfu where (kode_cfu like '$kode%' or nama like '%$nama%') $filter2  order by rowindex");
		}else if ($kode != ""){
			$rs = $db->execute("select kode_cfu, nama, level_spasi, rowindex from bpc_cfu where (kode_cfu like '$kode%') $filter2    order by rowindex");
		}else if ($nama != "")
			$rs = $db->execute("select kode_cfu, nama, level_spasi,  rowindex from bpc_cfu where (nama like '$$nama%') $filter2    order by rowindex");
		else $rs = $db->execute("select kode_cfu, nama, level_spasi,  rowindex from bpc_cfu $filter order by rowindex ");
		
		$result = array("rs" => array("rows" => array()));
		$first = true;
		$level = 0;
		while ($row = $rs->FetchNextObject(false)){
			if ($first){
				$level = $row->level_spasi;
			}
			$row->level_spasi = $row->level_spasi - $level; 
			$result["rs"]["rows"][] = (array)$row;
			$first = false;
		}
		$result["totalPage"] = 0;
		return $result;
	}

	function getListCompCode($kode, $nama, $filter, $page){
		$db = $this->getDb();
		$user = $this->userid;//$_SESSION["user"];;
		//error_log("Get List $user");
		$rs = $db->execute("select kode_lokasi from exs_hakakses where nik = '$user'");
		if ($row = $rs->FetchNextObject(false))
			$cocd = $row->kode_lokasi;
		
		if ($kode != "" && $nama != ""){
			$rs = $db->execute("select cocd, nama, level_spasi,no_urut as  rowindex from bpc_lokasi where (cocd like '$kode%' or nama like '%$nama%') and cocd in (select cocd from bpc_lokasi start with cocd = '$cocd' connect by kode_induk = prior kode_lokasi) order by no_urut");
		}else if ($kode != ""){
			$rs = $db->execute("select cocd, nama, level_spasi,no_urut as  rowindex from bpc_lokasi where (cocd like '$kode%') and cocd in (select cocd from bpc_lokasi start with cocd = '$cocd' connect by kode_induk = prior kode_lokasi) order by no_urut");
		}else if ($nama != "")
			$rs = $db->execute("select cocd, nama, level_spasi,no_urut as  rowindex from bpc_lokasi where (nama like '$$nama%') and cocd in (select cocd from bpc_lokasi start with cocd = '$cocd' connect by kode_induk = prior kode_lokasi) order by no_urut");
		else $rs = $db->execute("select cocd, nama, level_spasi,no_urut as  rowindex from bpc_lokasi where cocd in (select cocd from bpc_lokasi start with cocd = '$cocd' connect by kode_induk = prior kode_lokasi) order by no_urut");
		
		$result = array("rs" => array("rows" => array()));
		$first = true;
		$level = 0;
		while ($row = $rs->FetchNextObject(false)){
			if ($first){
				$level = $row->level_spasi;
			}
			$row->level_spasi = $row->level_spasi - $level; 
			$result["rs"]["rows"][] = (array)$row;
			$first = false;
		}
		$result["totalPage"] = 0;
		return $result;
	}
	function getListCompCodeAll($kode, $nama, $filter, $page){
		$db = $this->getDb();
		$user = $this->userid;//$_SESSION["user"];;
		//error_log("Get List $user");
		$rs = $db->execute("select kode_lokasi from bpc_lokasi order by no_urut");
		if ($row = $rs->FetchNextObject(false))
			$cocd = $row->kode_lokasi;
		
		if ($kode != "" && $nama != ""){
			$rs = $db->execute("select cocd, nama, level_spasi,no_urut as  rowindex from bpc_lokasi where (cocd like '$kode%' or nama like '%$nama%') and cocd in (select cocd from bpc_lokasi start with cocd = '$cocd' connect by kode_induk = prior kode_lokasi) order by no_urut");
		}else if ($kode != ""){
			$rs = $db->execute("select cocd, nama, level_spasi,no_urut as  rowindex from bpc_lokasi where (cocd like '$kode%') and cocd in (select cocd from bpc_lokasi start with cocd = '$cocd' connect by kode_induk = prior kode_lokasi) order by no_urut");
		}else if ($nama != "")
			$rs = $db->execute("select cocd, nama, level_spasi,no_urut as  rowindex from bpc_lokasi where (nama like '$$nama%') and cocd in (select cocd from bpc_lokasi start with cocd = '$cocd' connect by kode_induk = prior kode_lokasi) order by no_urut");
		else $rs = $db->execute("select cocd, nama, level_spasi,no_urut as  rowindex from bpc_lokasi where cocd in (select cocd from bpc_lokasi start with cocd = '$cocd' connect by kode_induk = prior kode_lokasi) order by no_urut");
		
		$result = array("rs" => array("rows" => array()));
		$first = true;
		$level = 0;
		while ($row = $rs->FetchNextObject(false)){
			if ($first){
				$level = $row->level_spasi;
			}
			$row->level_spasi = $row->level_spasi - $level; 
			$result["rs"]["rows"][] = (array)$row;
			$first = false;
		}
		$result["totalPage"] = 0;
		return $result;
	}
	function getListModelReport($kode, $nama, $filter, $page){
		$db = $this->getDb();
		$user = $this->userid;//$_SESSION["user"];;
		//error_log("Get List $user");
		
		if ($kode != "" && $nama != ""){
			$rs = $db->execute("select kode_fs, nama, 0 as level_spasi from bpc_fs where (kode_fs like '$kode%' or nama like '%$nama%') and $filter order by kode_fs");
		}else if ($kode != ""){
			$rs = $db->execute("select kode_fs, nama, 0 as level_spasi from bpc_fs where (kode_fs like '$kode%') and $filter order by kode_fs");
		}else if ($nama != "")
			$rs = $db->execute("select kode_fs, nama , 0 as level_spasi from bpc_fs where (nama like '$$nama%') and $filter order by kode_fs");
		else $rs = $db->execute("select kode_fs, nama, 0 as level_spasi  from bpc_fs where $filter  order by kode_fs");
		
		$result = array("rs" => array("rows" => array()));
		$first = true;
		$level = 0;
		while ($row = $rs->FetchNextObject(false)){
			if ($first){
				$level = $row->level_spasi;
			}
			$row->level_spasi = $row->level_spasi - $level; 
			$result["rs"]["rows"][] = (array)$row;
			$first = false;
		}
		$result["totalPage"] = 0;
		return $result;

	}
	function getListUnitBisnis($kode, $nama, $filter, $page){
		$db = $this->getDb();
		$user = $this->userid;//$_SESSION["user"];;
		$rs = $db->execute("select kode_ubis from exs_karyawan where nik = '$user'");
		if ($row = $rs->FetchNextObject(false)) {
			$tmp = explode(",",$row->kode_ubis);
			$cocd = "";
			foreach($tmp as $k){
				if ($cocd != "") $cocd .= ",";
 				$cocd .= "'$k'";
			}
		}

		if ($filter != ""){
			$filter2 = " and  $filter";
			$filter = " where $filter";
		}
		if ($kode != "" && $nama != ""){
			$rs = $db->execute("select kode_ubis, nama, level_spasi, rowindex from exs_ubis where (kode_ubis like '$kode%' or nama like '%$nama%') and kode_ubis in (select kode_ubis from exs_ubis $filter start with kode_ubis in ($cocd) connect by kode_induk = prior kode_ubis) $filter2 order by rowindex");
		}else if ($kode != ""){
			$rs = $db->execute("select kode_ubis, nama, level_spasi, rowindex from exs_ubis where (kode_ubis like '$kode%') and kode_ubis in (select kode_ubis from exs_ubis $filter start with kode_ubis in ($cocd) connect by kode_induk = prior kode_ubis) $filter2 order by rowindex");
		}else if ($nama != "")
			$rs = $db->execute("select kode_ubis, nama, level_spasi, rowindex from exs_ubis where (nama like '$$nama%') and kode_ubis in (select kode_ubis from exs_ubis $filter start with kode_ubis in ($cocd) connect by kode_induk = prior kode_ubis) $filter2 order by rowindex");
		else $rs = $db->execute("select kode_ubis, nama, level_spasi,  rowindex from exs_ubis where kode_ubis in (select kode_ubis from exs_ubis $filter start with kode_ubis in ($cocd) connect by kode_induk = prior kode_ubis) $filter2 order by rowindex");
		
		$result = array("rs" => array("rows" => array()));
		$first = true;
		$level = 0;
		while ($row = $rs->FetchNextObject(false)){
			if ($first){
				$level = $row->level_spasi;
			}
			$row->level_spasi = $row->level_spasi - $level; 
			$result["rs"]["rows"][] = (array)$row;
			$first = false;
		}
		$result["totalPage"] = 0;
		return $result;
	}
	function checkOtorisasi($user){
		return ;
	}
	function closeConsPack($periode){
		$db = $this->getDb();
		//insert data ke report
	}
	/*
	---- CLOSE CONSPACK
	*/
	
	function getFileContents($file){
		return file_get_contents($file);
	}
	function getListVendorCB($kode, $nama, $filter, $page){
		$db = $this->getDb();
		$user = $this->userid;//$_SESSION["user"];;
		//error_log("Get List $user");
		$rs = $db->execute("select kode_lokasi from exs_hakakses where nik = '$user'");
		if ($row = $rs->FetchNextObject(false))
			$cocd = $row->kode_lokasi;
		
		$start = ($page - 1) * $rowPerPage;
		$end = $start + $rowPerPage;
		$offset = 50;
		
		if ($kode != "" && $nama != ""){
			$sql = "select kode_vendor, nama  from bpc_vendor_ap where (kode_vendor like '$kode%' or nama like '%$nama%') $filter";
		}else if ($kode != ""){
			$sql = "select kode_vendor, nama  from bpc_vendor_ap where (kode_vendor like '$kode%') $filter ";
		}else if ($nama != "")
			$sql = "select kode_vendor, nama from bpc_vendor_ap where (nama like '$$nama%') $filter";
		else $sql = "select kode_vendor, nama  from bpc_vendor_ap where $filter ";

		$rs = $db->LimitQuery("select count(*) as total from ($sql) a ");
		if ($row = $rs->FetchNextObject(false))
			$total = $row->total;

		$rs = $db->LimitQuery($sql, $offset, $start);

		$result = array("rs" => array("rows" => array()));
		while ($row = $rs->FetchNextObject(false)){
			$result["rs"]["rows"][] = (array)$row;
			$first = false;
		}
		$result["totalPage"] = ceil($total / $offset);
		$result["page"] = $page;

		return $result;
	}
	function connectMySQL(){
		$dbName = "p4";
		$dbHost = "";
		$dbUser = "";
		$dbPass = "";
		$db = @mysqli_connect($dbHost, $dbUser, $dbPass);
		mysqli_select_db($db, $dbName);
		
		return $db;
	}
	function getUserProfile($nik){
		$db = $this->connectMySQL();	
		$dbRet = mysqli_query($db, "select * from v_karyawan where n_nik  = '$nik' ");
		$result = array("nama" => "", "posisi" => "");
        if ($row = mysqli_fetch_assoc($dbRet) ){
			$result["nama"] = $row["v_nama_karyawan"];
			$result["posisi"] = $row["v_short_posisi"];
		}
		return $result;
		
	}
	function getListKaryawan(){
		return new server_util_Map();

		$db = $this->connectMySQL();	
		$dbRet = mysqli_query($db, "select * from v_karyawan  ");
		$result = new server_util_Map();
        while ($row = mysqli_fetch_assoc($dbRet) ){
			$result->set($row["n_nik"], $row["v_nama_karyawan"]);
		}
		return $result;
		
	}
	function getListSPB($compCode, $ba, $tgl1, $tgl2, $status){
		$db = $this->getDb();
		//MANDT 	LAUFD 	LAUFI 	ZBUKR 	LIFNR 	KUNNR 	VBLNR 	PYORD 	TDPROCSS 	TDCOPIES 	LASTR 	SRTGB 	KOSTL 	BELNR 	XBLNR 	BUDAT 	BLDAT 	EBELN 	BEDAT 	GSBER 	PRPK 	TRIW 	ACDRK 	ANGTH 	REKNG 	LOGTR 	PERKD 	WAERS 	RWBTR 	ZNME1 	ZSTRA 	ZORT1 	ZPSTL 	ZBNKN 	ZBANK 	ZBRNC 	ZBNKY 	ZBNKS 	SGTXT 	TGBTR 	UMBTR 	PNBTR 	PHBTR1 	PHBTR2 	PHBTR3 	PHBTR5 	PHBTR4 	PHBTR6 	PHBTRDD 	SGORT1 	SGDAT1 	OFFCR1 	JOBTT1 	NIKNR1 	SGORT2 	SGDAT2 	OFFCR2 	JOBTT2 	NIKNR2 	UNAME 	UDATE 	UZEIT 	STATS 	SNAME 	SDATE 	SZEIT 	BUKRS 	HBKID 	HKTID 	REFNO 	PNAME 	PDATE 	PZEIT 	BTRCP 	STACH 	CHUSR 	CHDTE 	CHHRS 	BLUSR 	BLDTE 	BLHRS
		//error_log("listSPB");
		$result = array();
		//call RFC
		$user = $this->userid;//$_SESSION["user"];;
		error_log($user .":".$compCode);
		if (isset($user)){
			//$userData = $this->getUser($user);
			$rs = $db->execute("select modul from spro where kode_spro ='DEFSPB' and modul ='$user' ");
			if ($row = $rs->FetchNextObject(false))
			{
				//$compCode = $userData["kode_lokasi"];
				
				$listNIK = $this->getListKaryawan();
				error_log("get SAP Conn");
				$rfc = $this->getSAPConnection($compCode);
				$login = new server_util_Map();
				//query 
				error_log($this->sapuser );
				if (isset($this->sapuser)){
					$login->set("user", $this->sapuser);
					$login->set("passwd", $this->sappwd);
				}else{
					return "Koneksi SAP tidak di temukan untuk Comp Code $compCode";
				}
				$sapImp = new server_util_Map(array(
												"IM_BUKRS" => $compCode
											));
				$tgl = new server_util_arrayList();
				$tgl->add(array("SIGN"=>"I","OPTION"=>"BT","LOW"=>$tgl1,"HIGH"=>$tgl2));
				$gsber = new server_util_arrayList();
				$pyord = new server_util_arrayList();
				$state = new server_util_arrayList();
				if ($status == "Terbayar"){
					$state->add(array("SIGN"=>"I","OPTION"=>"BT","LOW"=>"3","HIGH"=>"4"));
				}else if ($status == "Outstanding"){
					$state->add(array("SIGN"=>"I","OPTION"=>"EQ","LOW"=>"0","HIGH"=>""));
					$state->add(array("SIGN"=>"I","OPTION"=>"EQ","LOW"=>"1","HIGH"=>""));
				}
				$sapExpTable = new server_util_Map(array("T_REPORT"));
				$sapImpTable = new server_util_Map(array("T_BUDAT" => $tgl,"T_GSBER" => $gsber,"T_PYORD" => $pyord, "T_STATS" => $state ));
				$tgl = new server_util_arrayList();
				$dataSAP = $rfc->callRFC($login,"ZRFC_FINEST_SPB_STATUS_V2", $sapImp, $sapExpTable, $sapImpTable, null, true);
				$output = $dataSAP->get("T_REPORT");
				//BUDAT : TGL POSTING
				//SRTGB : BA
				//BLDAT : TGL DOK
				//LAUFD : TGL 
				//LIFNR : Vendor
				//PYORD : NO SPB
				//SGTXT : keterangan
				//NILAI : TGBTR
				//NILAI ORI : RWBTR
				//WAERS : CURR 
				//STATS : 1 / APPROVE, 0 / PRINT
				//LAUFD : TGL CREATE 
				//BLDAT : TGL DOK
				//UNAME : user 
				//SNAME : Approval
				//SDATE : TGL APP
				//CompCode, BA, No SPB, Keterangan, Amount, Curr, Status SPB, Tg SPB, User, Approval
				$result = array("rs"=>array("rows" => array()));
				$db= $this->getDb();
				$sql = new server_util_arrayList();
				$sql->add("delete from bpc_listspb where cocd ='$compCode' ");
				foreach ($output->getArray() as $val){
					$line = $val->get(0);
					$ba = $line->get("SRTGB");
					$tglDok = $line->get("BLDAT");
					$vendor = $line->get("LIFNR");
					$nama = $line->get("ZNME1");
					
					$noSPB = $line->get("PYORD");
					$ket = $line->get("SGTXT");
					$amount = $line->get("TGBTR");
					$amount_ori = $line->get("RWBTR");
					$curr = $line->get("WAERS");
					$status = $line->get("STATS");
					$tglCreate = $line->get("LAUFD");
					$pembuat = $line->get("UNAME");
					$nama1 = $listNIK->get($pembuat);
					$approval = $line->get("SNAME");
					$nama2 = $listNIK->get($approval);
					$result["rs"]["rows"][] = array("cocd" => $compCode,
									"ba" => $ba, 
									"no_spb" => $noSPB,
									"ket" => $ket,
									"vendor" => $vendor,
									"nama" => $nama,
									"nilai" => $amount,
									"curr" => $curr,
									"nilai_orig" => $amount_ori,
									"status" => $status,
									"tgl" => $tglDok,
									"user" => $pembuat . ":".$nama1,
									"approval" => $approval .":".$nama2,
								);
					$ket = str_replace("'"," ",$ket);
					$nama = str_replace("'","`",$nama);
					
					$sql->add("insert into bpc_listspb(cocd, kode_vendor, nama, no_spb, ket, ba, nilai, curr, nilai_orig, status, tgl_dok, pembuat, approval, userid, tgl_update )
									values('$compCode','$vendor','$nama','$noSPB','$ket','$ba','$amount','$curr','$amount_ori','$status','$tglDok','$pembuat','$approval','$user',sysdate) ");
				}
				$ret = $db->execArraySQL($sql);
				return $result;
			}else return $this->getErrorMsg("CH002");

		}else {
			return "Session login sudah habis. Silakan login kembali";
		}
		
		return $result;

	}	
	function downloadListSPB($compCode){
		$this->cleanUp();
		$db = $this->getDb();

		$user = $this->userid;//$_SESSION["user"];;

		if (isset($user)){
			//$userData = $this->getUser($user);
			$rs = $db->execute("select modul from spro where kode_spro ='DEFSPB' and modul ='$user' ");
			if ($row = $rs->FetchNextObject(false)){
				error_log("Query 1");
				uses("server_modules_codeplex_PHPExcel",false);
				$objPHPExcel = new PHPExcel();
		
		
				// Set document properties
				$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
								->setLastModifiedBy("MA")
								->setTitle("Data Gagal Upload")
								->setSubject("RKAP")
								->setDescription("Gagal Upload untuk RKAP")
								->setKeywords("RKAP RKM")
									->setCategory("RKAP");
		
		
				// Add Data in your file
		
				$objPHPExcel->setActiveSheetIndex(0);
				$sheet = $objPHPExcel->getActiveSheet();
				$sharedStyle1 = new PHPExcel_Style();
				$sharedStyle1->applyFromArray(
					array('fill' 	=> array(
												'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
												'color'		=> array('argb' => 'FFCCFFCC')
											),
						'borders' => array(
												'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
												'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
											)
						));
				$row = 1;
				error_log("Query 2");
				$title = array("Nama Vendor","Kode","No SPB","Keterangan","BA","Nilai Original","Curr","Nilai IDR","Tgl","Status","NIK Buat","Nama Pembuat","NIK App","Nama Approval");
				$col = 0;
				foreach ($title as $key => $value){	
					$sheet->setCellValueByColumnAndRow($key, $row, $value);
				}
				$end = PHPExcel_Cell::stringFromColumnIndex($key);
				$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
				$row++;
				$first = true;
				error_log("Query 3");
				$listNIK = $this->getListKaryawan();
				
				$db = $this->getDb();
				$rs = $db->execute("select nama, kode_vendor, no_spb, ket, ba, nilai_orig, curr, nilai,status, approval, pembuat, tgl_dok from bpc_listspb where cocd = '$compCode' ");
				error_log("Query 2 ");
				$sheet->getColumnDimension('A')->setWidth(50);
				$sheet->getColumnDimension('D')->setWidth(50);
				while ($val = $rs->FetchNextObject(false)){
					$sheet->setCellValueByColumnAndRow(0, $row, $val->nama);
					$sheet->setCellValueByColumnAndRow(1, $row, $val->kode_vendor);
					$sheet->setCellValueByColumnAndRow(2, $row, $val->no_spb);
					$sheet->setCellValueByColumnAndRow(3, $row, $val->ket);
					$sheet->setCellValueByColumnAndRow(4, $row, $val->ba);
					$sheet->setCellValueByColumnAndRow(5, $row, $val->nilai_orig);
					$sheet->setCellValueByColumnAndRow(6, $row, $val->curr);
					$sheet->setCellValueByColumnAndRow(7, $row, $val->nilai);
					$sheet->setCellValueByColumnAndRow(8, $row, $val->tgl_dok);
					$sheet->setCellValueByColumnAndRow(9, $row, $val->status);
					$nama2 = $listNIK->get($val->pembuat);
					$nama1 = $listNIK->get($val->approval);
					
					$sheet->setCellValueByColumnAndRow(10, $row, $val->pembuat);
					$sheet->setCellValueByColumnAndRow(11, $row, $nama2);
					$sheet->setCellValueByColumnAndRow(12, $row, $val->approval);
					$sheet->setCellValueByColumnAndRow(13, $row, $nama1);

					$row++;
					$first = false;
				}
			
				// Rename worksheet
				$objPHPExcel->getActiveSheet()->setTitle('SPB');
		
		
				// Set active sheet index to the first sheet, so Excel opens this as the first sheet
				$objPHPExcel->setActiveSheetIndex(0);
		
		
				// Save Excel 2007 file
				$namafile = date("dmY");
				global $serverDir;
				$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
				$objWriter->save($serverDir . "/tmp/listSPB-$namafile.xlsx");
				$callEndTime = microtime(true);
				$callTime = $callEndTime - $callStartTime;
		
				return "/tmp/listSPB-$namafile.xlsx";
			}else {
				return "/blankPage.html";	
			}
		}else return "/blankPage.html";



		
	}
	function getErrorMsg($kode){
		$db = $this->getDb();

		$rs = $db->execute("select pesan from bpc_error_msg where kode = '$kode' ");
		if ($row = $rs->fetchNextObject(false)){
			return $row->pesan;
		}else return "";
	}
	function uploadRKAPElim($cfu ,$compCode, $ubis, $tahun, $data, $replace){
		return $this->budgetService->uploadRKAPElim($cfu, $compCode, $ubis, $tahun, $data, $replace);
	}
	function uploadRKAPAdjust($cfu ,$compCode, $ubis, $tahun, $data, $replace){
		return $this->budgetService->uploadRKAPAdjust($cfu, $compCode, $ubis, $tahun, $data, $replace);
	}
	function uploadDataTerimaElim($cfu, $compCode, $ubis, $tahun, $data, $replace ){
		return $this->budgetService->uploadDataTerimaElim($cfu, $compCode, $ubis, $tahun, $data, $replace);
	}
	function getDataRKAPElim($cfu,$compCode, $ubis, $tahun, $cfu2){
		return $this->budgetService->getDataRKAPElim($cfu, $compCode, $ubis, $tahun, $cfu2);
	}
	function uploadRKAPCAPEXElim($cfu, $compCode, $ubis, $tahun, $data, $replace){
		return $this->budgetService->uploadRKAPCAPEXElim($cfu, $compCode, $ubis, $tahun, $data, $replace);
	}
	function uploadDataCAPEXTerimaElim($cfu, $compCode, $ubis, $tahun, $data, $cfu2, $replace ){
		return $this->budgetService->uploadDataCAPEXTerimaElim($cfu, $compCode, $ubis, $tahun, $data, $cfu2,  $replace);
	}
	function getDataRKAPCAPEXElim($cfu,$compCode, $ubis, $tahun, $cfu2){
		return $this->budgetService->getDataRKAPCAPEXElim($cfu, $compCode, $ubis, $tahun, $cfu2);
	}
	function getLokasiUbisFromCFU($cfu){
		$db = $this->getDb();
		$rs = $db->execute("select a.kode_ubis, a.kode_lokasi
							, nvl(b.nama, '') as nama_ubis
							, nvl(c.nama, '') as nama_lokasi
						 from bpc_cfu a
						 	left outer join exs_ubis b on upper(b.kode_ubis) = upper(a.kode_ubis) and b.kode_lokasi = a.kode_lokasi
							 left outer join bpc_lokasi c on c.kode_lokasi = a.kode_lokasi  
						 	 where kode_cfu = '$cfu' ");
		if ($row = $rs->FetchNextObject(false)){
			return (array)$row;
		}else return array("kode_lokasi" =>"","kode_ubis" => "", "nama_ubis" => "", "nama_lokasi" => "");
	}
	function addStaging(){
		return $this->budgetService->addStaging();
	}
	function sendNotifikasiUpdate($compCode){
		$db = $this->getDb();
		
	}
	
	function sendRequestGroup($compCode, $vendor){
	
	}

	function uploadCashFlow($compCode, $data, $periode){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
        $sql->add("delete from bpc_cf where kode_lokasi = '$compCode' and periode = '$periode' ");
		$userlog = $this->userid;
        foreach ($data as $item){
            $sql->add("insert into bpc_cf (kode_cf, nama, kode_lokasi,periode,  rowindex, level_spasi,  userlog, nilai,  tgl_update, modul)values(
                            '$item->kode_cf', '$item->nama','$compCode','$periode','$item->rowindex','$item->level_spasi','$userlog', '$item->nilai', sysdate,'CF')");
            
            
        }
        return $db->execArraySQL($sql);
	}
	function summariesCF(&$item){
		//error_log($item->data->ubis);
		foreach ($item->childs as $key => $val){
			$line = $val;
			$this->summariesCF($line);
			$item->data->nilai += $line->data->nilai;
			$item->data->sawal += $line->data->sawal;
			$item->data->sakhir += $line->data->sakhir;
			if ($line->data->sum_header != "-") {
				$sumheader = explode(",",$line->data->sum_header);
				foreach ($sumheader as $header){
					$nodeHeader = $this->sumHeader->get($header);
					if ($nodeHeader){
						$nodeHeader->data->nilai += $line->data->nilai;
						$nodeHeader->data->sawal += $line->data->sawal;
						$nodeHeader->data->sakhir += $line->data->sakhir;
					}
				}
			}

		}
	}
	function generateResultCF($item, &$result, $neraca){
		foreach ($item->childs as $key => $val){
			
			$val->data->nilai2 = round($val->data->nilai / 1000000000,2);
			$result["rs"]["rows"][] = (array) $val->data;
			$this->generateResultCF($val, $result, $neraca);
		}
	}
	function generateCashFlow($compCode, $periode){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$rs = $db->execute("select a.kode_cf, a.kode_cf as kode_neraca,  a.nama, a.rowindex, a.level_spasi
										, nilai , nilai / 1000000000 as nilai2
										, b.sum_header, b.tipe
									from bpc_cf a 
										inner join BPC_CF_STRUKTUR b on b.kode_cf = a.kode_cf and b.modul = a.modul
									where periode = '$periode' and a.modul ='CF' and a.kode_lokasi = '$compCode' order by rowindex");	
			$node = "";
            $rootNode = new server_util_NodeNRC("00");
            $this->sumHeader = new server_util_Map();
            while ($row = $rs->FetchNextObject(false)){
                
				if ($node == ""){
                    $node = new server_util_NodeNRC($rootNode);
                }else if ($node->level == floatval($row->level_spasi) - 1 ){
                    $node = new server_util_NodeNRC($node);
                }else if ($node->level == floatval($row->level_spasi) ){
                    $node = new server_util_NodeNRC($node->owner);
                }else if ($node->level > floatval($row->level_spasi) ){
                    while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
                        $node = $node->owner;
                    }
                    $node = new server_util_NodeNRC($node->owner);
                }
                $node->setData($row);
                if ($row->tipe == "SUMMARY")
                    $this->sumHeader->set($row->kode_cf, $node);

            }
            //error_log($this->sumHeader->getLength());
            foreach ($rootNode->childs as $key => $val){
                $this->summariesCF($val);
                if ($val->data->sum_header != "-"){
                    $summaryHeader = explode(",",$val->data->sum_header);

                    foreach ($summaryHeader as $header){
                        $nodeHeader = $this->sumHeader->get($header);
                        if ($nodeHeader){
                            $nodeHeader->data->nilai += $val->data->nilai;
							$nodeHeader->data->sakhir += $val->data->sakhir;
							$nodeHeader->data->sawal += $val->data->sawal;
                        }
                    }
                }
            }
            $this->pembagi = $pembagi;
            //perlu hitung ke summary
            $result = array('rs' => array('rows' => array() ) );
            $this->generateResultCF($rootNode, $result);
			return ($result);
	}
	function genCF($compCode, $periode){
		$db = $this->getDb();
		$dataOperating1 = $this->generateOperating1($compCode, $periode);
		$dataOperating2 = $this->generateOperating2($compCode, $periode);
		$dataInvesting = $this->generateInvesting($compCode, $periode);
		$dataFinancing = $this->generateFinancing($compCode, $periode);
		$userlog = $this->userid;
		$sql = new server_util_arrayList();
		$sql->add("delete from bpc_cf where periode = '$periode' and kode_lokasi = '$compCode'");

		foreach ($dataOperating1["rs"]["rows"] as $key => $val){
			$item = json_decode(json_encode($val));
			$param = new server_util_Map();
			$param->set("tipe","param");
			$param->set("sql","insert into bpc_cf (kode_cf, nama, kode_lokasi,periode,  rowindex, level_spasi,  userlog, nilai,  tgl_update, modul)values(
                            :0, :1,:2,:3,:4,:5,:6,:7, sysdate,:8)");
			$param->set("value",array($item->kode_cf, $item->nama,$compCode,$periode,$item->rowindex,$item->level_spasi,$userlog, $item->nilai,'OPERATING1'));
			$sql->add($param);
            
		}
		foreach ($dataOperating2["rs"]["rows"] as $key => $val){
			$item = json_decode(json_encode($val));
			$param = new server_util_Map();
			$param->set("tipe","param");
			$param->set("sql","insert into bpc_cf (kode_cf, nama, kode_lokasi,periode,  rowindex, level_spasi,  userlog, nilai,  tgl_update, modul)values(
                            :0, :1,:2,:3,:4,:5,:6,:7, sysdate,:8)");
			$param->set("value",array($item->kode_cf, $item->nama,$compCode,$periode,$item->rowindex,$item->level_spasi,$userlog, $item->nilai,'OPERATING2'));
			$sql->add($param);
		}
		foreach ($dataFinancing["rs"]["rows"] as $key => $val){
			$item = json_decode(json_encode($val));
			$param = new server_util_Map();
			$param->set("tipe","param");
			$param->set("sql","insert into bpc_cf (kode_cf, nama, kode_lokasi,periode,  rowindex, level_spasi,  userlog, nilai,  tgl_update, modul)values(
                            :0, :1,:2,:3,:4,:5,:6,:7, sysdate,:8)");
			$param->set("value",array($item->kode_cf, $item->nama,$compCode,$periode,$item->rowindex,$item->level_spasi,$userlog, $item->nilai,'FINANCING'));
			$sql->add($param);
			
		}
		foreach ($dataInvesting["rs"]["rows"] as $key => $val){
			$item = json_decode(json_encode($val));
			$param = new server_util_Map();
			$param->set("tipe","param");
			$param->set("sql","insert into bpc_cf (kode_cf, nama, kode_lokasi,periode,  rowindex, level_spasi,  userlog, nilai,  tgl_update, modul)values(
                            :0, :1,:2,:3,:4,:5,:6,:7, sysdate,:8)");
			$param->set("value",array($item->kode_cf, $item->nama,$compCode,$periode,$item->rowindex,$item->level_spasi,$userlog, $item->nilai,'INVESTING'));
			$sql->add($param);
			
		}

		$ret = $db->execArraySQL($sql);
		$currentPeriode = date("Ym");

		error_log("Error $ret ");
		try{
			if ($ret == "process completed")
			{
				$sql = new server_util_arrayList();
				$rs = $db->execute("select ba_consol from bpc_lokasi where kode_lokasi = '$compCode' ");
				$row = $rs->FetchNextObject(false);
				$ba_consol = $row->ba_consol;
				$tahun = substr($periode,0,4);
				$tahun2 = floatval(substr($periode,0,4)) -1;
				
				if ($compCode != "9000")
					$filter = " and c.kode_ubis like '__$ba_consol%' and c.jenis = 'TB' ";
				$rs = $db->execute("select kode_cf, nama, level_spasi, rowindex, jenis_akun, 0 as nilai from bpc_cf_struktur where modul ='CF' order by rowindex ");
				while ($row = $rs->FetchNextObject(false)){
					$kode = $row->jenis_akun;
					$nilai = 0;
					if ($kode != "-") {
						if (strpos($kode,"-") > 1){
							$kode = explode("-", $kode);
							foreach ($kode as $key => $val){
								$rs2 = $db->execute("select nilai from bpc_cf where periode = '$periode' and kode_lokasi = '$compCode' and kode_cf= '$val' ");
								$row2 = $rs2->FetchNextObject(false);
								if ($key == 0)
									$nilai += $row2->nilai;
								else $nilai -= $row2->nilai;
							}
						}else if (strpos($kode,"+")){
							$kode = explode("+", $kode);
							
							foreach ($kode as $key => $val){
								$rs2 = $db->execute("select nilai from bpc_cf where periode = '$periode' and kode_lokasi = '$compCode' and kode_cf= '$val' ");
								$row2 = $rs2->FetchNextObject(false);
								$nilai += $row2->nilai;
							}
							
						}else { 
							$rs2 = $db->execute("select nilai from bpc_cf where periode = '$periode' and kode_lokasi = '$compCode' and kode_cf= '$kode' ");
							$row2 = $rs2->FetchNextObject(false);
							$nilai = $row2->nilai;
						}
					}
					if ($row->kode_cf == "CFB"){
						if ($tahun == '2017')
							$rs2 = $db->execute("select sum(nilai) as nilai from exs_kons_actual c 
    												where kode_akun in (select kode_akun from bpc_cf_mapping where kode_cf='CFB') and periode = '".$tahun2."12' and kode_lokasi = '$compCode' ");
						else 
							$rs2 = $db->execute("select sum(nilai) as nilai from bpc_sap_transcfu c 
    												where kode_akun in (select kode_akun from bpc_cf_mapping where kode_cf='CFB') $filter and periode <= '".$tahun."00' and periode like '$tahun%'  ");
						$row2 = $rs2->FetchNextObject(false);
						$nilai = $row2->nilai;
					}
					
					$param = new server_util_Map();
					$param->set("tipe","param");
					$param->set("sql","insert into bpc_cf (kode_cf, nama, kode_lokasi,periode,  rowindex, level_spasi,  userlog, nilai,  tgl_update, modul)values(
									:0, :1,:2,:3,:4,:5,:6,:7, sysdate,:8)");
					$param->set("value",array($row->kode_cf, $row->nama,$compCode,$periode,$row->rowindex,$row->level_spasi,$userlog, $nilai, 'CF'));
					$sql->add($param);
					/*
					$sql->add("insert into bpc_cf (kode_cf, nama, kode_lokasi,periode,  rowindex, level_spasi,  userlog, nilai,  tgl_update, modul)values(
									'$row->kode_cf', '$row->nama','$compCode','$periode','$row->rowindex','$row->level_spasi','$userlog', '$nilai', sysdate,'CF')");
					*/
				}
				$ret = $db->execArraySQL($sql);
				error_log("CF $compCode $periode $ret");
			}
			
		}catch(Exception $e){
			error_log($e->getMessage());
		}
		return $ret;
	}
	function saveCF($compCode, $periode){
		$db = $this->getDb();
		$tahun = substr($periode,0,4);
		/*
		for ($i = 1; i < 11; $i++){
			if ($i < 10) $periode = $tahun ."0".$i;
			else $periode = $tahun.$i;
			*/
			error_log("Proses $periode ");
			$rs = $db->execute("select kode_lokasi,nama from bpc_lokasi where ba_consol <> '-'  start with kode_lokasi = '$compCode' connect by kode_induk = prior kode_lokasi  ");
			$progress = "<table>";
			$progress .= "<tr><th>COCD</th><th>Status</th></tr>";
			while ($row = $rs->FetchNextObject(false)){
				$progress .= "<tr><td>" . $row->nama ."</td><td>".$this->genCF($row->kode_lokasi, $periode) ."</td></tr>";
			}
			$progress .= "<table>";
			error_log($progress);
			error_log("Done $periode ");
			
		//}
		return $progress;

	}
	function generateOperating1($compCode, $periode){
			$db = $this->getDb();
			$tahun = substr($periode,0,4);
			$tahun2 = (floatval($tahun) - 1);
			$periode2 = $tahun2 ."12";//15
			
			$currentPeriode = date("Ym");
			$periodeAwal = $tahun .'00';
			$filter = "";
			if ($compCode != "9000") {
				$rs = $db->execute("select ba_consol from bpc_lokasi where kode_lokasi = '$compCode' or kode_induk = '$compCode' ");
				
				while ($row = $rs->FetchNextObject(false) ){
					$ba_consol = $row->ba_consol;
					if ($filter != "") $filter .= " or "; 
					$filter .= "  c.kode_ubis like '__$ba_consol%'  ";
				}
				$filter = "and c.jenis = 'TB' and ( $filter ) ";
			}
			
			//cek data Consol 
			$rs = $db->execute("select distinct kode_lokasi from bpc_sap_transcfu c  where periode = '$periode' $filter  ");
			$isConsole = true;
			if ($row = $rs->FetchNextObject(false) ) {
				error_log("Enter Here Console");
				$isConsole = true;
				$sql = "select a.kode_cf, left_pad(a.nama, a.level_spasi) as nama, a.rowindex, a.level_spasi, a.sum_header, nvl(a.jenis_akun,'-') as jenis
						, 0 as nilai
						, 0 as sakhir
						, 0 as sawal

					from bpc_cf_struktur a 
					where a.modul = 'OPERATING1'
					union 
					select b.kode_akun, left_pad(nvl(d.nama,'-'), a.level_spasi + 1) as nama, a.rowindex, a.level_spasi + 1, a.sum_header, nvl(a.jenis_akun,'-') as jenis
						, case when a.jenis_akun = 'BS' then nvl(e.nilai,0) else 0 end - sum(case when a.jenis_akun ='BS' then 1 else 1 end * nvl(c.nilai,0) ) nilai
						, sum(case when a.jenis_akun ='BS' then 1 else 1 end * nvl(c.nilai,0) ) sakhir
						, case when a.jenis_akun = 'BS' then nvl(e.nilai,0) else 0 end as sawal
					from bpc_cf_struktur a 
					inner join bpc_cf_mapping b on b.kode_cf = a.kode_cf  and a.modul = b.modul
					left outer join bpc_sap_transcfu c on c.kode_akun  = b.kode_akun and c.periode between '$periodeAwal' and '$periode' $filter
					left outer join (select kode_akun, nilai from exs_kons_actual where kode_lokasi = '$compCode' and periode = '$periode2' ) e on e.kode_akun  = b.kode_akun 
					left outer join bpc_masakun d on d.kode_akun = c.kode_akun and d.kode_lokasi = '9000'
					where a.modul = 'OPERATING1'
					group by  d.nama, a.rowindex, a.level_spasi, a.sum_header, a.jenis_akun , b.kode_akun, e.nilai
					order by rowindex,level_spasi";
				$rs = $db->execute($sql);
			}else {
				error_log("Enter Here");
				$isConsole = false;
				switch (substr($periode,4,2)) {
					case "01" : $field = " jan "; break;
					case "02" : $field = " jan + feb ";break;
					case "03" : $field = " jan + feb + mar ";break;
					case "04" : $field = " jan + feb + mar + apr ";break;
					case "05" : $field = " jan + feb + mar + apr + mei ";break;
					case "06" : $field = " jan + feb + mar + apr + mei + jun ";break;
					case "07" : $field = " jan + feb + mar + apr + mei + jun + jul ";break;
					case "08" : $field = " jan + feb + mar + apr + mei + jun + jul + aug ";break;
					case "09" : $field = " jan + feb + mar + apr + mei + jun + jul + aug + sep ";break;
					case "10" : $field = " jan + feb + mar + apr + mei + jun + jul + aug + sep + okt";break;
					case "11" : $field = " jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop ";break;
					case "12" : $field = " jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des ";break;
				}
				$rs = $db->execute("select a.kode_cf, left_pad(a.nama, a.level_spasi) as nama, a.rowindex, a.level_spasi, a.sum_header, nvl(a.jenis_akun,'-') as jenis
										, 0 as nilai
										, 0 as sakhir
										, 0 as sawal

									from bpc_cf_struktur a 
									where a.modul = 'OPERATING1'
									union 
									select b.kode_akun, left_pad(nvl(d.nama,'-'), a.level_spasi + 1) as nama, a.rowindex, a.level_spasi + 1, a.sum_header, nvl(a.jenis_akun,'-') as jenis
										, sum(case when a.jenis_akun ='BS' then 1 else 1 end * ($field) ) as nilai
										, sum(case when a.jenis_akun ='BS' then 1 else 1 end * (cf + $field) ) as sakhir
										, sum(case when a.jenis_akun ='BS' then 1 else 1 end * (cf) ) as sawal
									from bpc_cf_struktur a 
									inner join bpc_cf_mapping b on b.kode_cf = a.kode_cf  and a.modul = b.modul
									left outer join cash_mactual c on c.kode_akun  = b.kode_akun and c.tahun = '".substr($periode,0,4)."'
									left outer join exs_masakun d on d.kode_akun = c.kode_akun and d.kode_lokasi = c.kode_lokasi
									where a.modul = 'OPERATING1' and c.kode_lokasi = '$compCode' 
									group by  d.nama, a.rowindex, a.level_spasi, a.sum_header, a.jenis_akun , b.kode_akun
									order by rowindex,level_spasi");
			}
			

			
			$node = "";
            $rootNode = new server_util_NodeNRC("00");
            $this->sumHeader = new server_util_Map();
            while ($row = $rs->FetchNextObject(false)){
                
				if ($row->jenis == "PL")
				{
					///$row->nilai = -$row->nilai;
				}
				if ($node == ""){
                    $node = new server_util_NodeNRC($rootNode);
                }else if ($node->level == floatval($row->level_spasi) - 1 ){
                    $node = new server_util_NodeNRC($node);
                }else if ($node->level == floatval($row->level_spasi) ){
                    $node = new server_util_NodeNRC($node->owner);
                }else if ($node->level > floatval($row->level_spasi) ){
                    while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
                        $node = $node->owner;
                    }
                    $node = new server_util_NodeNRC($node->owner);
                }
                $node->setData($row);
                if ($row->tipe == "SUMMARY")
                    $this->sumHeader->set($row->kode_neraca, $node);

            }
            //error_log($this->sumHeader->getLength());
            foreach ($rootNode->childs as $key => $val){
                $this->summariesCF($val);
                if ($val->data->sum_header != "-"){
                    $summaryHeader = explode(",",$val->data->sum_header);

                    foreach ($summaryHeader as $header){
                        $nodeHeader = $this->sumHeader->get($header);
                        if ($nodeHeader){
                            $nodeHeader->data->nilai += $val->data->nilai;
                        }
                    }
                }
            }
            $this->pembagi = $pembagi;
            //perlu hitung ke summary
            $result = array('rs' => array('rows' => array() ) );
            $this->generateResultCF($rootNode, $result);
			//error_log(json_encode($result));
            return ($result);  
		
	}
	function generateOperating2($compCode, $periode){
			$db = $this->getDb();
			$tahun = substr($periode,0,4);
			$periodeAwal = $tahun .'00';//00
			$tahun2 = (floatval($tahun) - 1);
			$periode2 = $tahun2 ."12";//15
			
			$filter = "";
			if ($compCode != "9000") {
				$rs = $db->execute("select ba_consol from bpc_lokasi where kode_lokasi = '$compCode' or kode_induk = '$compCode' ");
				
				while ($row = $rs->FetchNextObject(false) ){
					$ba_consol = $row->ba_consol;
					if ($filter != "") $filter .= " or "; 
					$filter .= "  c.kode_ubis like '__$ba_consol%'  ";
				}
				$filter = "and c.jenis = 'TB' and ( $filter ) ";
			}

			//error_log("select distinct kode_lokasi from bpc_sap_transcfu where kode_lokasi = '$compCode' and periode = '$periode'  ");
			$rs = $db->execute("select distinct kode_lokasi from bpc_sap_transcfu c where periode = '$periode' $filter  ");
			$isConsole = true;
			if ($row = $rs->FetchNextObject(false) ) {
				$isConsole = true;
				$sql = "select a.kode_cf, left_pad(a.nama, a.level_spasi) as nama, a.rowindex, a.level_spasi, a.sum_header, nvl(a.jenis_akun,'-') as jenis
							, 0 as nilai
							, 0 as sakhir
							, 0 as sawal

						from bpc_cf_struktur a 
						where a.modul = 'OPERATING2'
						union 
						select b.kode_akun, left_pad(nvl(d.nama,'-'), a.level_spasi + 1) as nama, a.rowindex, a.level_spasi + 1, a.sum_header, nvl(a.jenis_akun,'-') as jenis
							, case when a.jenis_akun = 'BS' then nvl(e.nilai,0) else 0 end -  sum(case when a.jenis_akun ='BS' then 1 else 1 end * nvl(c.nilai,0) )  as nilai
							, sum(case when a.jenis_akun ='BS' then 1 else 1 end * nvl(c.nilai,0) ) sakhir
							, case when a.jenis_akun = 'BS' then nvl(e.nilai,0) else 0 end as sawal
						from bpc_cf_struktur a 
						inner join bpc_cf_mapping b on b.kode_cf = a.kode_cf  and a.modul = b.modul
						left outer join bpc_sap_transcfu c on c.kode_akun  = b.kode_akun and c.periode between '$periodeAwal' and '$periode' $filter
						left outer join (select kode_akun, sum(nilai) nilai from exs_kons_actual where kode_lokasi = '$compCode' and periode = '$periode2' group by kode_akun ) e on e.kode_akun  = b.kode_akun 
						left outer join bpc_masakun d on d.kode_akun = c.kode_akun and d.kode_lokasi = '9000'
						where a.modul = 'OPERATING2'
						group by  d.nama, a.rowindex, a.level_spasi, a.sum_header, a.jenis_akun , b.kode_akun, e.nilai
						order by rowindex,level_spasi";
				error_log("CFOperating2 $sql");
				$rs = $db->execute($sql);
			}else {
				$isConsole = false;
				switch (substr($periode,4,2)) {
					case "01" : $field = " jan "; break;
					case "02" : $field = " jan + feb ";break;
					case "03" : $field = " jan + feb + mar ";break;
					case "04" : $field = " jan + feb + mar + apr ";break;
					case "05" : $field = " jan + feb + mar + apr + mei ";break;
					case "06" : $field = " jan + feb + mar + apr + mei + jun ";break;
					case "07" : $field = " jan + feb + mar + apr + mei + jun + jul ";break;
					case "08" : $field = " jan + feb + mar + apr + mei + jun + jul + aug ";break;
					case "09" : $field = " jan + feb + mar + apr + mei + jun + jul + aug + sep ";break;
					case "10" : $field = " jan + feb + mar + apr + mei + jun + jul + aug + sep + okt";break;
					case "11" : $field = " jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop ";break;
					case "12" : $field = " jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des ";break;
				}
				$sql = "select a.kode_cf, left_pad(a.nama, a.level_spasi) as nama, a.rowindex, a.level_spasi, a.sum_header, nvl(a.jenis_akun,'-') as jenis
					, 0 as nilai
					, 0 as sakhir
					, 0 as sawal

					from bpc_cf_struktur a 
					where a.modul = 'OPERATING2'
					union 
					select b.kode_akun, left_pad(nvl(d.nama,'-'), a.level_spasi + 1) as nama, a.rowindex, a.level_spasi + 1, a.sum_header, nvl(a.jenis_akun,'-') as jenis
						, sum(case when a.jenis_akun ='BS' then 1 else 1 end * ($field) ) as nilai
						, sum(case when a.jenis_akun ='BS' then 1 else 1 end * (cf + $field) ) as sakhir
						, sum(case when a.jenis_akun ='BS' then 1 else 1 end * (cf) ) as sawal
					from bpc_cf_struktur a 
					inner join bpc_cf_mapping b on b.kode_cf = a.kode_cf  and a.modul = b.modul
					left outer join cash_mactual c on c.kode_akun  = b.kode_akun and c.tahun = '".substr($periode,0,4)."'
					left outer join exs_masakun d on d.kode_akun = c.kode_akun and d.kode_lokasi = c.kode_lokasi
					where a.modul = 'OPERATING2' and c.kode_lokasi = '$compCode' 
					group by  d.nama, a.rowindex, a.level_spasi, a.sum_header, a.jenis_akun , b.kode_akun
					order by rowindex,level_spasi";
				error_log("CFOperating2 Uncons $sql");
				$rs = $db->execute($sql);
			}
			$node = "";
            $rootNode = new server_util_NodeNRC("00");
            $this->sumHeader = new server_util_Map();
            while ($row = $rs->FetchNextObject(false)){
                if ($row->jenis == "PL")
				{
				//	$row->nilai = -$row->nilai;
				}
				if ($node == ""){
                    $node = new server_util_NodeNRC($rootNode);
                }else if ($node->level == floatval($row->level_spasi) - 1 ){
                    $node = new server_util_NodeNRC($node);
                }else if ($node->level == floatval($row->level_spasi) ){
                    $node = new server_util_NodeNRC($node->owner);
                }else if ($node->level > floatval($row->level_spasi) ){
                    while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
                        $node = $node->owner;
                    }
                    $node = new server_util_NodeNRC($node->owner);
                }
                $node->setData($row);
                if ($row->tipe == "SUMMARY")
                    $this->sumHeader->set($row->kode_neraca, $node);

            }
            //error_log($this->sumHeader->getLength());
            foreach ($rootNode->childs as $key => $val){
                $this->summariesCF($val);
                if ($val->data->sum_header != "-"){
                    $summaryHeader = explode(",",$val->data->sum_header);

                    foreach ($summaryHeader as $header){
                        $nodeHeader = $this->sumHeader->get($header);
                        if ($nodeHeader){
                            $nodeHeader->data->nilai += $val->data->nilai;
                        }
                    }
                }
            }
            $this->pembagi = $pembagi;
            //perlu hitung ke summary
            $result = array('rs' => array('rows' => array() ) );
            $this->generateResultCF($rootNode, $result, $neraca);
            return ($result);
	}
	function generateInvesting($compCode, $periode){
		$db = $this->getDb();
			$tahun = substr($periode,0,4);
			$periodeAwal = $tahun .'00';//00
			$tahun2 = (floatval($tahun) - 1);
			$periode2 = $tahun2 ."12";//15
			
			
			$filter = "";
			if ($compCode != "9000") {
				$rs = $db->execute("select ba_consol from bpc_lokasi where kode_lokasi = '$compCode' or kode_induk = '$compCode' ");
				
				while ($row = $rs->FetchNextObject(false) ){
					$ba_consol = $row->ba_consol;
					if ($filter != "") $filter .= " or "; 
					$filter .= "  c.kode_ubis like '__$ba_consol%'  ";
				}
				$filter = "and c.jenis = 'TB' and ( $filter ) ";
			}
			
			$rs = $db->execute("select distinct kode_lokasi from bpc_sap_transcfu c where periode = '$periode' $filter  ");
			$isConsole = true;
			if ($row = $rs->FetchNextObject(false) ) {
				$isConsole = true;
				$rs = $db->execute("select a.kode_cf, left_pad(a.nama, a.level_spasi) as nama, a.rowindex, a.level_spasi, a.sum_header, nvl(a.jenis_akun,'-') as jenis
										, 0 as nilai
										, 0 as sakhir
										, 0 as sawal

									from bpc_cf_struktur a 
									where a.modul = 'INVESTING'
									union 
									select b.kode_akun, left_pad(nvl(d.nama,'-'), a.level_spasi + 1) as nama, a.rowindex, a.level_spasi + 1, a.sum_header, nvl(a.jenis_akun,'-') as jenis
										,case when a.jenis_akun = 'BS' then nvl(e.nilai,0) else 0 end  -  sum(case when a.jenis_akun ='BS' then 1 else 1 end * nvl(c.nilai,0) ) as nilai
										, sum(case when a.jenis_akun ='BS' then 1 else 1 end * nvl(c.nilai,0) ) sakhir
										, case when a.jenis_akun = 'BS' then nvl(e.nilai,0) else 0 end as sawal
									from bpc_cf_struktur a 
									inner join bpc_cf_mapping b on b.kode_cf = a.kode_cf  and a.modul = b.modul
									left outer join bpc_sap_transcfu c on c.kode_akun  = b.kode_akun and c.periode between '$periodeAwal' and '$periode' and c.jenis = nvl(b.tanda, c.jenis)  $filter
									left outer join (select kode_akun, nilai from exs_kons_actual where kode_lokasi = '$compCode' and periode = '$periode2' ) e on e.kode_akun  = b.kode_akun 
									left outer join bpc_masakun d on d.kode_akun = c.kode_akun and d.kode_lokasi = '9000'
									where a.modul = 'INVESTING'
									group by  d.nama, a.rowindex, a.level_spasi, a.sum_header, a.jenis_akun , b.kode_akun, e.nilai
									order by rowindex,level_spasi");	
			}else {
				$isConsole = false;
				switch (substr($periode,4,2)) {
					case "01" : $field = " jan "; break;
					case "02" : $field = " jan + feb ";break;
					case "03" : $field = " jan + feb + mar ";break;
					case "04" : $field = " jan + feb + mar + apr ";break;
					case "05" : $field = " jan + feb + mar + apr + mei ";break;
					case "06" : $field = " jan + feb + mar + apr + mei + jun ";break;
					case "07" : $field = " jan + feb + mar + apr + mei + jun + jul ";break;
					case "08" : $field = " jan + feb + mar + apr + mei + jun + jul + aug ";break;
					case "09" : $field = " jan + feb + mar + apr + mei + jun + jul + aug + sep ";break;
					case "10" : $field = " jan + feb + mar + apr + mei + jun + jul + aug + sep + okt";break;
					case "11" : $field = " jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop ";break;
					case "12" : $field = " jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des ";break;
				}
				$rs = $db->execute("select a.kode_cf, left_pad(a.nama, a.level_spasi) as nama, a.rowindex, a.level_spasi, a.sum_header, nvl(a.jenis_akun,'-') as jenis
										, 0 as nilai
										, 0 as sakhir
										, 0 as sawal

									from bpc_cf_struktur a 
									where a.modul = 'INVESTING'
									union 
									select b.kode_akun, left_pad(nvl(d.nama,'-'), a.level_spasi + 1) as nama, a.rowindex, a.level_spasi + 1, a.sum_header, nvl(a.jenis_akun,'-') as jenis
										, sum(case when a.jenis_akun ='BS' then 1 else 1 end * ($field) ) as nilai
										, sum(case when a.jenis_akun ='BS' then 1 else 1 end * (cf + $field) ) as sakhir
										, sum(case when a.jenis_akun ='BS' then 1 else 1 end * cf ) as sawal
									from bpc_cf_struktur a 
									inner join bpc_cf_mapping b on b.kode_cf = a.kode_cf  and a.modul = b.modul
									left outer join cash_mactual c on c.kode_akun  = b.kode_akun and c.tahun = '".substr($periode,0,4)."'
									left outer join exs_masakun d on d.kode_akun = c.kode_akun and d.kode_lokasi = c.kode_lokasi
									where a.modul = 'INVESTING' and c.kode_lokasi = '$compCode' 
									group by  d.nama, a.rowindex, a.level_spasi, a.sum_header, a.jenis_akun , b.kode_akun
									order by rowindex,level_spasi");
			}
		
			$node = "";
            $rootNode = new server_util_NodeNRC("00");
            $this->sumHeader = new server_util_Map();
            while ($row = $rs->FetchNextObject(false)){
                if ($row->jenis == "PL")
				{
					//$row->nilai = -$row->nilai;
				}
				if ($node == ""){
                    $node = new server_util_NodeNRC($rootNode);
                }else if ($node->level == floatval($row->level_spasi) - 1 ){
                    $node = new server_util_NodeNRC($node);
                }else if ($node->level == floatval($row->level_spasi) ){
                    $node = new server_util_NodeNRC($node->owner);
                }else if ($node->level > floatval($row->level_spasi) ){
                    while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
                        $node = $node->owner;
                    }
                    $node = new server_util_NodeNRC($node->owner);
                }
                $node->setData($row);
                if ($row->tipe == "SUMMARY")
                    $this->sumHeader->set($row->kode_neraca, $node);

            }
            //error_log($this->sumHeader->getLength());
            foreach ($rootNode->childs as $key => $val){
                $this->summariesCF($val);
                if ($val->data->sum_header != "-"){
                    $summaryHeader = explode(",",$val->data->sum_header);

                    foreach ($summaryHeader as $header){
                        $nodeHeader = $this->sumHeader->get($header);
                        if ($nodeHeader){
                           $nodeHeader->data->nilai += $val->data->nilai;
                        }
                    }
                }
            }
            $this->pembagi = $pembagi;
            //perlu hitung ke summary
            $result = array('rs' => array('rows' => array() ) );
            $this->generateResultCF($rootNode, $result, $neraca);
            return ($result);
	}
	function generateFinancing($compCode, $periode){
		$db = $this->getDb();
			$tahun = substr($periode,0,4);
			$periodeAwal = $tahun .'00';//00
			$tahun2 = (floatval($tahun) - 1);
			$periode2 = $tahun2 ."12";//15
			$filter = "";
			if ($compCode != "9000") {
				$rs = $db->execute("select ba_consol from bpc_lokasi where kode_lokasi = '$compCode' or kode_induk = '$compCode' ");
				
				while ($row = $rs->FetchNextObject(false) ){
					$ba_consol = $row->ba_consol;
					if ($filter != "") $filter .= " or "; 
					$filter .= "  c.kode_ubis like '__$ba_consol%'  ";
				}
				$filter = "and c.jenis = 'TB' and ( $filter ) ";
			}
			
			$rs = $db->execute("select distinct kode_lokasi from bpc_sap_transcfu c where periode = '$periode' $filter  ");
			$isConsole = true;
			if ($row = $rs->FetchNextObject(false) ) {
				$isConsole = true;
				$rs = $db->execute("select a.kode_cf, left_pad(a.nama, a.level_spasi) as nama, a.rowindex, a.level_spasi, a.sum_header, nvl(a.jenis_akun,'-') as jenis 
										, 0 as nilai
										, 0 as sakhir
										, 0 as sawal

									from bpc_cf_struktur a 
									where a.modul = 'FINANCING'
									union 
									select b.kode_akun, left_pad(nvl(d.nama,'-'), a.level_spasi + 1) as nama, a.rowindex, a.level_spasi + 1, a.sum_header, nvl(a.jenis_akun,'-') as jenis
										, case when a.jenis_akun = 'BS' then nvl(e.nilai,0) else 0 end - sum(case when a.jenis_akun ='BS' then 1 else 1 end * nvl(c.nilai,0) )  nilai
										,  sum(case when a.jenis_akun ='BS' then 1 else 1 end * nvl(c.nilai,0) ) sakhir
										, case when a.jenis_akun = 'BS' then nvl(e.nilai,0) else 0 end as sawal
									from bpc_cf_struktur a 
									inner join bpc_cf_mapping b on b.kode_cf = a.kode_cf  and a.modul = b.modul
									left outer join bpc_sap_transcfu c on c.kode_akun  = b.kode_akun and c.periode between '$periodeAwal' and '$periode' $filter
									left outer join (select kode_akun, nilai from exs_kons_actual where kode_lokasi = '$compCode' and periode = '$periode2' ) e on e.kode_akun  = b.kode_akun 
									left outer join bpc_masakun d on d.kode_akun = c.kode_akun and d.kode_lokasi = '9000'
									where a.modul = 'FINANCING'
									group by  d.nama, a.rowindex, a.level_spasi, a.sum_header, a.jenis_akun , b.kode_akun, e.nilai
									order by rowindex,level_spasi");	
			}else {
				$isConsole = false;
				switch (substr($periode,4,2)) {
					case "01" : $field = " jan "; break;
					case "02" : $field = " jan + feb ";break;
					case "03" : $field = " jan + feb + mar ";break;
					case "04" : $field = " jan + feb + mar + apr ";break;
					case "05" : $field = " jan + feb + mar + apr + mei ";break;
					case "06" : $field = " jan + feb + mar + apr + mei + jun ";break;
					case "07" : $field = " jan + feb + mar + apr + mei + jun + jul ";break;
					case "08" : $field = " jan + feb + mar + apr + mei + jun + jul + aug ";break;
					case "09" : $field = " jan + feb + mar + apr + mei + jun + jul + aug + sep ";break;
					case "10" : $field = " jan + feb + mar + apr + mei + jun + jul + aug + sep + okt";break;
					case "11" : $field = " jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop ";break;
					case "12" : $field = " jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des ";break;
				}
				$rs = $db->execute("select a.kode_cf, left_pad(a.nama, a.level_spasi) as nama, a.rowindex, a.level_spasi, a.sum_header, nvl(a.jenis_akun,'-') as jenis
										, 0 as nilai
										, 0 as sakhir
										, 0 as sawal

									from bpc_cf_struktur a 
									where a.modul = 'FINANCING'
									union 
									select b.kode_akun, left_pad(nvl(d.nama,'-'), a.level_spasi + 1) as nama, a.rowindex, a.level_spasi + 1, a.sum_header, nvl(a.jenis_akun,'-') as jenis
										, sum(case when a.jenis_akun ='BS' then 1 else 1 end * ($field) ) as nilai
										, sum(case when a.jenis_akun ='BS' then 1 else 1 end * (cf + $field) ) as sakhir
										, sum(case when a.jenis_akun ='BS' then 1 else 1 end * (cf) ) as sawal
									from bpc_cf_struktur a 
									inner join bpc_cf_mapping b on b.kode_cf = a.kode_cf  and a.modul = b.modul
									left outer join cash_mactual c on c.kode_akun  = b.kode_akun and c.tahun = '".substr($periode,0,4)."'
									left outer join exs_masakun d on d.kode_akun = c.kode_akun and d.kode_lokasi = c.kode_lokasi
									where a.modul = 'FINANCING' and c.kode_lokasi = '$compCode' 
									group by  d.nama, a.rowindex, a.level_spasi, a.sum_header, a.jenis_akun , b.kode_akun
									order by rowindex,level_spasi");
			}
			
			$node = "";
            $rootNode = new server_util_NodeNRC("00");
            $this->sumHeader = new server_util_Map();
            while ($row = $rs->FetchNextObject(false)){

				if ($row->kode_cf  =="PRFT_CALC"){
					$rs2 = $db->execute("select sum(nilai) as nilai from bpc_sap_tb where periode <= '$periode' and periode like '$tahun%' and not kode_akun in (select kode_akun from bpc_cf_mapping where kode_cf ='AKUNOTH') ");
					$row2 = $rs2->FetchNextObject(false);
					
					

					if ($row->jenis =="PL"){
						$row->nilai = $row2->nilai;
						$row->sakhir = $row2->nilai;
					}else {
						$row->sakhir = $row2->nilai;
						//$rs3 = $db->execute("select sum(nilai) as nilai from exs_kons_actual where periode = '$periode2' and kode_lokasi = '$compCode' and not kode_akun in (select kode_akun from bpc_cf_mapping where kode_cf ='AKUNOTH') ");
						$rs3 = $db->execute("select sum(nilai) as nilai from exs_kons_actual where periode = '$periode2' and kode_lokasi = '$compCode' and kode_akun ='PRFT_CALC'");
						$row3 = $rs3->FetchNextObject(false);
						$row->sawal = $row3->nilai;
						$row->nilai = $row3->nilai - $row2->nilai;
					}

 				}else if ($row->kode_cf =="NI"){
					$rs2 = $db->execute("select sum(nilai) as nilai from bpc_sap_tb where periode <= '$periode' and periode like '$tahun%' ");
					$row2 = $rs2->FetchNextObject(false);
					$row->nilai = $row2->nilai;
				}
                if ($row->jenis == "PL")
				{
					//$row->nilai = -$row->nilai;
				}
				if ($node == ""){
                    $node = new server_util_NodeNRC($rootNode);
                }else if ($node->level == floatval($row->level_spasi) - 1 ){
                    $node = new server_util_NodeNRC($node);
                }else if ($node->level == floatval($row->level_spasi) ){
                    $node = new server_util_NodeNRC($node->owner);
                }else if ($node->level > floatval($row->level_spasi) ){
                    while ($node->owner != $rootNode && $node->level > floatval($row->level_spasi) ) {
                        $node = $node->owner;
                    }
                    $node = new server_util_NodeNRC($node->owner);
                }
				//error_log(json_encode((array)$row));
                $node->setData($row);
                if ($row->tipe == "SUMMARY")
                    $this->sumHeader->set($row->kode_neraca, $node);

            }
            //error_log($this->sumHeader->getLength());
            foreach ($rootNode->childs as $key => $val){
                $this->summariesCF($val);
                if ($val->data->sum_header != "-"){
                    $summaryHeader = explode(",",$val->data->sum_header);

                    foreach ($summaryHeader as $header){
                        $nodeHeader = $this->sumHeader->get($header);
                        if ($nodeHeader){
                           $nodeHeader->data->nilai += $val->data->nilai;
                        }
                    }
                }
            }
            $this->pembagi = $pembagi;
            //perlu hitung ke summary
            $result = array('rs' => array('rows' => array() ) );
            $this->generateResultCF($rootNode, $result, $neraca);
            return ($result);
	}
	function copyRKM2SAP($compCode, $tahun, $ubis, $sapUser, $sapPwd){
		$rfc = $this->getSAPConnection($compCode);
		$login = new server_util_Map();
		//query 
		$login->set("user", $sapUser);
		$login->set("passwd", $sapPwd);
		/*
		ACTTYPE
		C(6)	VALID_FROM
		D(8)	VALID_TO
		D(8)	ACT_UNIT
		C(3)	ACT_UNIT_ISO
		C(3)	COSTCENTER_CAT
		C(8)	ACTIVITY_CAT
		C(1)	ALLOC_COST_ELEM
		C(10)	PRICE_INDICATOR
		C(3)	AVERAGE_PRICE_IND
		C(1)	PREDIS_FXD_COST
		C(1)	MANUAL_ACT_QTY
		C(1)	ACT_CAT_ACTUAL
		C(1)	ACT_PRICE_IND
		C(3)	LOCK_INDICATOR
		C(1)	OUTPUT_UNIT
		C(3)	OUTPUT_UNIT_ISO
		C(3)	OUTPUT_FACTOR
		P(3)	NAME
		C(20)	DESCRIPT
		C(40)

				*/

		//ZRFC_ACTTYPE_CREATEMULTIPLE
		//ACTIVITYTYPELIST
		//RETURN
		
		$db = $this->getDb();
		$filter = " and " . $this->getFilterUbis("",$ubis, $compCode);
		$rs = $db->execute("select distinct kode_rkm, nama from bpc_rkm 
					where tahun = '$tahun' and kode_lokasi ='$compCode'  $filter ");
		//$tahun = '2016';
		error_log("select distinct kode_rkm, nama from bpc_rkm 
			where tahun = '$tahun' and kode_lokasi ='$compCode'  $filter ");
		$data = new server_util_arrayList();
		while ($row = $rs->FetchNextObject(false)){
			$data->add(array("ACTTYPE" => $row->kode_rkm
							, "VALID_FROM" => $tahun ."0101"
							, "VALID_TO" => $tahun ."1231"
							, "ACT_UNIT" => "PKT"
							, "ACT_UNIT_ISO" =>""
							, "COSTCENTER_CAT" =>"*"
							, "ACTIVITY_CAT" => "4"
							, "ALLOC_COST_ELEM" => ""
							, "PRICE_INDICATOR" => ""
							, "AVERAGE_PRICE_IND" => ""
							, "PREDIS_FXD_COST" => ""
							, "MANUAL_ACT_QTY" => ""
							, "ACT_CAT_ACTUAL" => ""
							, "ACT_PRICE_IND" => ""
							, "LOCK_INDICATOR" => ""
							, "OUTPUT_UNIT" => ""
							, "OUTPUT_UNIT_ISO" => ""
							, "OUTPUT_FACTOR" => ""
							, "NAME" => $row->nama
							, "DESCRIPT" => $row->nama));
			error_log(print_r((array) $row, true));
		}

		$sapImp = new server_util_Map(array(
												"COAREA" => $compCode,
												"TESTRUN" => "",
											));
		$sapExpTable = new server_util_Map(array("RETURN"));
		$sapImpTable = new server_util_Map(array("ACTIVITYTYPELIST" => $data) );
		$dataSAP = $rfc->callRFC($login,"ZRFC_ACTTYPE_CREATEMULTIPLE", $sapImp, $sapExpTable, $sapImpTable, null, true);
		error_log(print_r($dataSAP->getArray(), true));
		$return = $dataSAP->get("RETURN")->getArray();
		error_log(print_r($return, true));
		return print_r($return, true);
	}
	
	function transferBudgetStructure($compCode, $model, $tahun, $ubis, $sapUser, $sapPwd, $version){
			$db = $this->getDb();
			$rfcLib = $this->getSAPConnection($compCode );
			$rfc = $rfcLib->login($sapUser, $sapPwd);
			$login = new server_util_Map();
			//query 
			$login->set("user", $sapUser);
			$login->set("passwd", $sapPwd);
	
			$filter = " and " . $this->getFilterUbis("a", $ubis, $compCode);//a.kode_rkm ,  //
			$filter2 = " and " . $this->getFilterUbis("b", $ubis, $compCode);//a.kode_rkm ,  //
			$rs = $db->execute("Select distinct a.kode_cc, a.kode_rkm ,  a.kode_akun 
								from bpc_mbudget_rkm_staging a 
								 left outer join bpc_mbudget_rkm b on b.kode_cc = a.kode_cc  
														 and b.kode_rkm = a.kode_rkm 
														and b.kode_akun = a.kode_akun 
														 and b.kode_lokasi = a.kode_lokasi 
														and b.tahun = a.tahun $filter2 
								 where a.tahun = '$tahun' and a.kode_lokasi = '$compCode' and not a.kode_akun like '4%'   $filter and b.kode_akun is null 
								 order by kode_cc, kode_akun, kode_rkm");
			$data = new server_util_arrayList();
			$coobject = new server_util_arrayList();
			$listIndex = new server_util_arrayList();
	
			$kp26ListIndex = new server_util_arrayList();
			$kp26ListIndex = new server_util_arrayList();
			$kp26Object = new server_util_arrayList();
			$kp26Data = new server_util_arrayList();
			$ke1data = new server_util_arrayList();
			$proseske1 = array();
			$i = 0;
			$ccrkm = array();
			while ($row = $rs->FetchNextObject(false)){
				$i++;
				$index = sprintf("%.06d",$i);
				
				if (substr($row->kode_akun,0,1) == "4" && !in_array($row->kode_cc . $row->kode_akun, $proseske1)){
					
				}else if (substr($row->kode_akun,0,1) != "4") {
					$coobject->add(array("OBJECT_INDEX" => $index, "COSTCENTER" => $row->kode_cc, "ACTTYPE" => "","CO_BUSPROC" =>"","ORDERID"=>"","WBS_ELEMENT"=>""));
					$listIndex->add(array("OBJECT_INDEX" => $index, "VALUE_INDEX" =>  $index,"ATTRIB_INDEX"=>"000000"));
					$data->add(array("VALUE_INDEX"=>$index,"COST_ELEM"=>$row->kode_akun
							,"RESOURCE"=>"","TRANS_CURRENCY_ISO"=>"","TRANS_CURR"=>""
							,"UNIT_ISO"=>"","UNIT_OF_MEASURE"=>""
							,"FIX_VAL_PER01"=>"0"
							,"FIX_VAL_PER02"=>"0"
							,"FIX_VAL_PER03"=>"0"
							,"FIX_VAL_PER04"=>"0"
							,"FIX_VAL_PER05"=>"0"
							,"FIX_VAL_PER06"=>"0"
							,"FIX_VAL_PER07"=>"0"
							,"FIX_VAL_PER08"=>"0"
							,"FIX_VAL_PER09"=>"0"
							,"FIX_VAL_PER10"=>"0"
							,"FIX_VAL_PER11"=>"0"
							,"FIX_VAL_PER12"=>"0","FIX_VAL_PER13"=>"","FIX_VAL_PER14"=>"","FIX_VAL_PER15"=>"","FIX_VAL_PER16"=>"","VAR_VAL_PER01"=>"","VAR_VAL_PER02"=>"","VAR_VAL_PER03"=>"","VAR_VAL_PER04"=>"","VAR_VAL_PER05"=>"","VAR_VAL_PER06"=>"","VAR_VAL_PER07"=>"","VAR_VAL_PER08"=>"","VAR_VAL_PER09"=>"","VAR_VAL_PER10"=>"","VAR_VAL_PER11"=>"","VAR_VAL_PER12"=>"","VAR_VAL_PER13"=>"","VAR_VAL_PER14"=>"","VAR_VAL_PER15"=>"","VAR_VAL_PER16"=>"","FIX_QUAN_PER01"=>"","FIX_QUAN_PER02"=>"","FIX_QUAN_PER03"=>"","FIX_QUAN_PER04"=>"","FIX_QUAN_PER05"=>"","FIX_QUAN_PER06"=>"","FIX_QUAN_PER07"=>"","FIX_QUAN_PER08"=>"","FIX_QUAN_PER09"=>"","FIX_QUAN_PER10"=>"","FIX_QUAN_PER11"=>"","FIX_QUAN_PER12"=>"","FIX_QUAN_PER13"=>"","FIX_QUAN_PER14"=>"","FIX_QUAN_PER15"=>"","FIX_QUAN_PER16"=>"","VAR_QUAN_PER01"=>"","VAR_QUAN_PER02"=>"","VAR_QUAN_PER03"=>"","VAR_QUAN_PER04"=>"","VAR_QUAN_PER05"=>"","VAR_QUAN_PER06"=>"","VAR_QUAN_PER07"=>"","VAR_QUAN_PER08"=>"","VAR_QUAN_PER09"=>"","VAR_QUAN_PER10"=>"","VAR_QUAN_PER11"=>"","VAR_QUAN_PER12"=>"","VAR_QUAN_PER13"=>"","VAR_QUAN_PER14"=>"","VAR_QUAN_PER15"=>"","VAR_QUAN_PER16"=>"","FUND"=>"","FUNCTION"=>"","GRANT_NBR"=>"","FUND_LONG"=>"","BUDGET_PERIOD"=>""));
				}			
				//KP26
				if (!in_array($row->kode_cc.$row->kode_rkm, $ccrkm) ){
	
					$ccrkm[] = $row->kode_cc.$row->kode_rkm;
					$kp26ListIndex->add(array("OBJECT_INDEX" => $index, "VALUE_INDEX" =>  $index,"ATTRIB_INDEX"=>"000000"));
					$kp26Object->add(array("OBJECT_INDEX" => $index, "COSTCENTER" => $row->kode_cc, "ACTTYPE" => $row->kode_rkm,"CO_BUSPROC" =>""));
					$kp26Data->add(array ("VALUE_INDEX"=>$index,
							"ACTVTY_QTY_PER01"=>"0",
							"ACTVTY_QTY_PER02"=>"0",
							"ACTVTY_QTY_PER03"=>"0",
							"ACTVTY_QTY_PER04"=>"0",
							"ACTVTY_QTY_PER05"=>"0",
							"ACTVTY_QTY_PER06"=>"0",
							"ACTVTY_QTY_PER07"=>"0",
							"ACTVTY_QTY_PER08"=>"0",
							"ACTVTY_QTY_PER09"=>"0",
							"ACTVTY_QTY_PER10"=>"0",
							"ACTVTY_QTY_PER11"=>"0",
							"ACTVTY_QTY_PER12"=>"0","ACTVTY_QTY_PER13"=>"","ACTVTY_QTY_PER14"=>"","ACTVTY_QTY_PER15"=>"","ACTVTY_QTY_PER16"=>"","ACTVTY_CAP_PER01"=>"","ACTVTY_CAP_PER02"=>"","ACTVTY_CAP_PER03"=>"","ACTVTY_CAP_PER04"=>"","ACTVTY_CAP_PER05"=>"","ACTVTY_CAP_PER06"=>"","ACTVTY_CAP_PER07"=>"","ACTVTY_CAP_PER08"=>"","ACTVTY_CAP_PER09"=>"","ACTVTY_CAP_PER10"=>"","ACTVTY_CAP_PER11"=>"","ACTVTY_CAP_PER12"=>"","ACTVTY_CAP_PER13"=>"","ACTVTY_CAP_PER14"=>"","ACTVTY_CAP_PER15"=>"","ACTVTY_CAP_PER16"=>"","PRICE_FIX_PER01"=>"","PRICE_FIX_PER02"=>"","PRICE_FIX_PER03"=>"","PRICE_FIX_PER04"=>"","PRICE_FIX_PER05"=>"","PRICE_FIX_PER06"=>"","PRICE_FIX_PER07"=>"","PRICE_FIX_PER08"=>"","PRICE_FIX_PER09"=>"","PRICE_FIX_PER10"=>"","PRICE_FIX_PER11"=>"","PRICE_FIX_PER12"=>"","PRICE_FIX_PER13"=>"","PRICE_FIX_PER14"=>"","PRICE_FIX_PER15"=>"","PRICE_FIX_PER16"=>"","PRICE_VAR_PER01"=>"","PRICE_VAR_PER02"=>"","PRICE_VAR_PER03"=>"","PRICE_VAR_PER04"=>"","PRICE_VAR_PER05"=>"","PRICE_VAR_PER06"=>"","PRICE_VAR_PER07"=>"","PRICE_VAR_PER08"=>"","PRICE_VAR_PER09"=>"","PRICE_VAR_PER10"=>"","PRICE_VAR_PER11"=>"","PRICE_VAR_PER12"=>"","PRICE_VAR_PER13"=>"","PRICE_VAR_PER14"=>"","PRICE_VAR_PER15"=>"","PRICE_VAR_PER16"=>"","PRICE_UNIT_PER01"=>"","PRICE_UNIT_PER02"=>"","PRICE_UNIT_PER03"=>"","PRICE_UNIT_PER04"=>"","PRICE_UNIT_PER05"=>"","PRICE_UNIT_PER06"=>"","PRICE_UNIT_PER07"=>"","PRICE_UNIT_PER08"=>"","PRICE_UNIT_PER09"=>"","PRICE_UNIT_PER10"=>"","PRICE_UNIT_PER11"=>"","PRICE_UNIT_PER12"=>"","PRICE_UNIT_PER13"=>"","PRICE_UNIT_PER14"=>"","PRICE_UNIT_PER15"=>"","PRICE_UNIT_PER16"=>"","EQUIVAL_NO_PER01"=>"","EQUIVAL_NO_PER02"=>"","EQUIVAL_NO_PER03"=>"","EQUIVAL_NO_PER04"=>"","EQUIVAL_NO_PER05"=>"","EQUIVAL_NO_PER06"=>"","EQUIVAL_NO_PER07"=>"","EQUIVAL_NO_PER08"=>"","EQUIVAL_NO_PER09"=>"","EQUIVAL_NO_PER10"=>"","EQUIVAL_NO_PER11"=>"","EQUIVAL_NO_PER12"=>"","EQUIVAL_NO_PER13"=>"","EQUIVAL_NO_PER14"=>"","EQUIVAL_NO_PER15"=>"","EQUIVAL_NO_PER16"=>"","UNIT_ISO"=>"","UNIT_OF_MEASURE"=>"","CURRENCY_ISO"=>"","CURRENCY"=>""));
				}
				
			
			}
			if (count($coobject) > 0){
				$res = $this->post2SAPKP26($rfcLib, $rfc, $compCode,$tahun, $kp26Object, $kp26ListIndex, $kp26Data, $sapUser, $sapPwd, $version);
				if (count($res) == 0)
				{
					return array("Reset KP26" => print_r($res, true) );
				}else return array("Reset KP26 Error" => print_r($res, true) );
			}
	}
	function transferSAP($compCode, $model, $tahun, $ubis, $sapUser, $sapPwd, $version){
		$db = $this->getDb();
		$rfcLib = $this->getSAPConnection($compCode );
		$rfc = $rfcLib->login($sapUser, $sapPwd);
		$login = new server_util_Map();
		//query 
		$login->set("user", $sapUser);
		$login->set("passwd", $sapPwd);

		$filter = " and " . $this->getFilterUbis("a", $ubis, $compCode);//a.kode_rkm ,  //
		$filter2 = " and " . $this->getFilterUbis("b", $ubis, $compCode);//a.kode_rkm ,  //
		$rs = $db->execute("Select distinct a.kode_cc, a.kode_rkm ,  a.kode_akun 
							from bpc_mbudget_rkm_staging a 
							 left outer join bpc_mbudget_rkm b on b.kode_cc = a.kode_cc  
							 						and b.kode_rkm = a.kode_rkm 
													and b.kode_akun = a.kode_akun 
							 						and b.kode_lokasi = a.kode_lokasi 
													and b.tahun = a.tahun $filter2 
							 where a.tahun = '$tahun' and a.kode_lokasi = '$compCode' and not a.kode_akun like '4%'   $filter and b.kode_akun is null 
							 order by kode_cc, kode_akun, kode_rkm");
		$data = new server_util_arrayList();
		$coobject = new server_util_arrayList();
		$listIndex = new server_util_arrayList();

		$kp26ListIndex = new server_util_arrayList();
		$kp26ListIndex = new server_util_arrayList();
		$kp26Object = new server_util_arrayList();
		$kp26Data = new server_util_arrayList();
		$ke1data = new server_util_arrayList();
		$proseske1 = array();
		$i = 0;
		$ccrkm = array();
		while ($row = $rs->FetchNextObject(false)){
			$i++;
			$index = sprintf("%.06d",$i);
			
			if (substr($row->kode_akun,0,1) == "4" && !in_array($row->kode_cc . $row->kode_akun, $proseske1)){
				
			}else if (substr($row->kode_akun,0,1) != "4") {
				$coobject->add(array("OBJECT_INDEX" => $index, "COSTCENTER" => $row->kode_cc, "ACTTYPE" => "","CO_BUSPROC" =>"","ORDERID"=>"","WBS_ELEMENT"=>""));
				$listIndex->add(array("OBJECT_INDEX" => $index, "VALUE_INDEX" =>  $index,"ATTRIB_INDEX"=>"000000"));
				$data->add(array("VALUE_INDEX"=>$index,"COST_ELEM"=>$row->kode_akun
						,"RESOURCE"=>"","TRANS_CURRENCY_ISO"=>"","TRANS_CURR"=>""
						,"UNIT_ISO"=>"","UNIT_OF_MEASURE"=>""
						,"FIX_VAL_PER01"=>"0"
						,"FIX_VAL_PER02"=>"0"
						,"FIX_VAL_PER03"=>"0"
						,"FIX_VAL_PER04"=>"0"
						,"FIX_VAL_PER05"=>"0"
						,"FIX_VAL_PER06"=>"0"
						,"FIX_VAL_PER07"=>"0"
						,"FIX_VAL_PER08"=>"0"
						,"FIX_VAL_PER09"=>"0"
						,"FIX_VAL_PER10"=>"0"
						,"FIX_VAL_PER11"=>"0"
						,"FIX_VAL_PER12"=>"0","FIX_VAL_PER13"=>"","FIX_VAL_PER14"=>"","FIX_VAL_PER15"=>"","FIX_VAL_PER16"=>"","VAR_VAL_PER01"=>"","VAR_VAL_PER02"=>"","VAR_VAL_PER03"=>"","VAR_VAL_PER04"=>"","VAR_VAL_PER05"=>"","VAR_VAL_PER06"=>"","VAR_VAL_PER07"=>"","VAR_VAL_PER08"=>"","VAR_VAL_PER09"=>"","VAR_VAL_PER10"=>"","VAR_VAL_PER11"=>"","VAR_VAL_PER12"=>"","VAR_VAL_PER13"=>"","VAR_VAL_PER14"=>"","VAR_VAL_PER15"=>"","VAR_VAL_PER16"=>"","FIX_QUAN_PER01"=>"","FIX_QUAN_PER02"=>"","FIX_QUAN_PER03"=>"","FIX_QUAN_PER04"=>"","FIX_QUAN_PER05"=>"","FIX_QUAN_PER06"=>"","FIX_QUAN_PER07"=>"","FIX_QUAN_PER08"=>"","FIX_QUAN_PER09"=>"","FIX_QUAN_PER10"=>"","FIX_QUAN_PER11"=>"","FIX_QUAN_PER12"=>"","FIX_QUAN_PER13"=>"","FIX_QUAN_PER14"=>"","FIX_QUAN_PER15"=>"","FIX_QUAN_PER16"=>"","VAR_QUAN_PER01"=>"","VAR_QUAN_PER02"=>"","VAR_QUAN_PER03"=>"","VAR_QUAN_PER04"=>"","VAR_QUAN_PER05"=>"","VAR_QUAN_PER06"=>"","VAR_QUAN_PER07"=>"","VAR_QUAN_PER08"=>"","VAR_QUAN_PER09"=>"","VAR_QUAN_PER10"=>"","VAR_QUAN_PER11"=>"","VAR_QUAN_PER12"=>"","VAR_QUAN_PER13"=>"","VAR_QUAN_PER14"=>"","VAR_QUAN_PER15"=>"","VAR_QUAN_PER16"=>"","FUND"=>"","FUNCTION"=>"","GRANT_NBR"=>"","FUND_LONG"=>"","BUDGET_PERIOD"=>""));
			}			
			//KP26
			if (!in_array($row->kode_cc.$row->kode_rkm, $ccrkm) ){

				$ccrkm[] = $row->kode_cc.$row->kode_rkm;
				$kp26ListIndex->add(array("OBJECT_INDEX" => $index, "VALUE_INDEX" =>  $index,"ATTRIB_INDEX"=>"000000"));
				$kp26Object->add(array("OBJECT_INDEX" => $index, "COSTCENTER" => $row->kode_cc, "ACTTYPE" => $row->kode_rkm,"CO_BUSPROC" =>""));
				$kp26Data->add(array ("VALUE_INDEX"=>$index,
						"ACTVTY_QTY_PER01"=>"0",
						"ACTVTY_QTY_PER02"=>"0",
						"ACTVTY_QTY_PER03"=>"0",
						"ACTVTY_QTY_PER04"=>"0",
						"ACTVTY_QTY_PER05"=>"0",
						"ACTVTY_QTY_PER06"=>"0",
						"ACTVTY_QTY_PER07"=>"0",
						"ACTVTY_QTY_PER08"=>"0",
						"ACTVTY_QTY_PER09"=>"0",
						"ACTVTY_QTY_PER10"=>"0",
						"ACTVTY_QTY_PER11"=>"0",
						"ACTVTY_QTY_PER12"=>"0","ACTVTY_QTY_PER13"=>"","ACTVTY_QTY_PER14"=>"","ACTVTY_QTY_PER15"=>"","ACTVTY_QTY_PER16"=>"","ACTVTY_CAP_PER01"=>"","ACTVTY_CAP_PER02"=>"","ACTVTY_CAP_PER03"=>"","ACTVTY_CAP_PER04"=>"","ACTVTY_CAP_PER05"=>"","ACTVTY_CAP_PER06"=>"","ACTVTY_CAP_PER07"=>"","ACTVTY_CAP_PER08"=>"","ACTVTY_CAP_PER09"=>"","ACTVTY_CAP_PER10"=>"","ACTVTY_CAP_PER11"=>"","ACTVTY_CAP_PER12"=>"","ACTVTY_CAP_PER13"=>"","ACTVTY_CAP_PER14"=>"","ACTVTY_CAP_PER15"=>"","ACTVTY_CAP_PER16"=>"","PRICE_FIX_PER01"=>"","PRICE_FIX_PER02"=>"","PRICE_FIX_PER03"=>"","PRICE_FIX_PER04"=>"","PRICE_FIX_PER05"=>"","PRICE_FIX_PER06"=>"","PRICE_FIX_PER07"=>"","PRICE_FIX_PER08"=>"","PRICE_FIX_PER09"=>"","PRICE_FIX_PER10"=>"","PRICE_FIX_PER11"=>"","PRICE_FIX_PER12"=>"","PRICE_FIX_PER13"=>"","PRICE_FIX_PER14"=>"","PRICE_FIX_PER15"=>"","PRICE_FIX_PER16"=>"","PRICE_VAR_PER01"=>"","PRICE_VAR_PER02"=>"","PRICE_VAR_PER03"=>"","PRICE_VAR_PER04"=>"","PRICE_VAR_PER05"=>"","PRICE_VAR_PER06"=>"","PRICE_VAR_PER07"=>"","PRICE_VAR_PER08"=>"","PRICE_VAR_PER09"=>"","PRICE_VAR_PER10"=>"","PRICE_VAR_PER11"=>"","PRICE_VAR_PER12"=>"","PRICE_VAR_PER13"=>"","PRICE_VAR_PER14"=>"","PRICE_VAR_PER15"=>"","PRICE_VAR_PER16"=>"","PRICE_UNIT_PER01"=>"","PRICE_UNIT_PER02"=>"","PRICE_UNIT_PER03"=>"","PRICE_UNIT_PER04"=>"","PRICE_UNIT_PER05"=>"","PRICE_UNIT_PER06"=>"","PRICE_UNIT_PER07"=>"","PRICE_UNIT_PER08"=>"","PRICE_UNIT_PER09"=>"","PRICE_UNIT_PER10"=>"","PRICE_UNIT_PER11"=>"","PRICE_UNIT_PER12"=>"","PRICE_UNIT_PER13"=>"","PRICE_UNIT_PER14"=>"","PRICE_UNIT_PER15"=>"","PRICE_UNIT_PER16"=>"","EQUIVAL_NO_PER01"=>"","EQUIVAL_NO_PER02"=>"","EQUIVAL_NO_PER03"=>"","EQUIVAL_NO_PER04"=>"","EQUIVAL_NO_PER05"=>"","EQUIVAL_NO_PER06"=>"","EQUIVAL_NO_PER07"=>"","EQUIVAL_NO_PER08"=>"","EQUIVAL_NO_PER09"=>"","EQUIVAL_NO_PER10"=>"","EQUIVAL_NO_PER11"=>"","EQUIVAL_NO_PER12"=>"","EQUIVAL_NO_PER13"=>"","EQUIVAL_NO_PER14"=>"","EQUIVAL_NO_PER15"=>"","EQUIVAL_NO_PER16"=>"","UNIT_ISO"=>"","UNIT_OF_MEASURE"=>"","CURRENCY_ISO"=>"","CURRENCY"=>""));
			}
			
		
		}
		if (count($coobject) > 0){
			$res = $this->post2SAPKP26($rfcLib, $rfc, $compCode,$tahun, $kp26Object, $kp26ListIndex, $kp26Data, $sapUser, $sapPwd, $version);
			if (count($res) == 0)
			{
				$res = $this->post2SAPKP06($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex, $data, $sapUser, $sapPwd, $version);
				if (count($res) > 0){
					return array("Reset KP06 Error" => print_r($res, true) );
				}
				//$res = $this->post2SAP7KE1($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex, $ke1data, $sapUser, $sapPwd);
				//if (count($res) > 0){
				//	return array("Reset 7KE1 Error" => print_r($res, true) );
				//}
			}else return array("Reset KP26 Error" => print_r($res, true) );
		}

		$rs = $db->execute("Select distinct a.kode_cc, a.kode_akun 
							from bpc_mbudget_rkm_staging a 
							 left outer join bpc_mbudget_rkm b on b.kode_cc = a.kode_cc  
							 				and b.kode_rkm = a.kode_rkm and b.kode_akun = a.kode_akun 
							 				and b.kode_lokasi = a.kode_lokasi and b.tahun = a.tahun $filter2 
							 where a.tahun = '$tahun' and a.kode_lokasi = '$compCode' and a.kode_akun like '4%'  $filter and b.kode_akun is null 
							 order by kode_cc, kode_akun ");
		
		while ($row = $rs->FetchNextObject(false)){
				$proseske1[] = $row->kode_cc . $row->kode_akun;
				$ke1data->add(array ("PROFIT_CTR"=> $row->kode_cc,
							"GL_ACCOUNT"=>"00" . $row->kode_akun,
							"CURRENCY_ISO"=>"IDR",
							"CURRENCY"=>"IDR",
							"HSLVT"=>"",
							"HSL01"=> 0,
							"HSL02"=> 0,
							"HSL03"=> 0,
							"HSL04"=> 0,
							"HSL05"=> 0,
							"HSL06"=> 0,
							"HSL07"=> 0,
							"HSL08"=> 0,
							"HSL09"=> 0,
							"HSL10"=> 0,
							"HSL11"=> 0,
							"HSL12"=> 0,
							"HSL13"=> "0",
							"HSL14"=> "0","HSL15"=>"0","HSL16"=>"0"));
		}
		error_log("Reset 7KE1 " . $ke1data->getLength());
		$res = $this->post2SAP7KE1($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex, $ke1data, $sapUser, $sapPwd, $version);
		if (count($res) > 0){
			error_log("Reset 7KE1 Error => " . print_r($res, true) );
			//return array("Reset 7KE1 Error" => print_r($res, true) );
		}
		$data = new server_util_arrayList();
		$coobject = new server_util_arrayList();
		$listIndex = new server_util_arrayList();
		$kp26ListIndex = new server_util_arrayList();
		$kp26Object = new server_util_arrayList();
		$kp26Data = new server_util_arrayList();
		///select dari staging yg tdk ada di data baru untuk di nolkan di SAP;
		//KP26
		$sql = new server_util_arrayList();	
		$sql->add("delete from bpc_mbudget_rkm_staging a where tahun = '$tahun' and kode_lokasi ='$compCode' $filter ");
		$sql->add("insert into bpc_mbudget_rkm_staging(tahun, kode_lokasi, kode_akun, kode_cc, kode_rkm, jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des ,kode_ubis, kode_cfu) 
							select tahun, kode_lokasi, kode_akun, kode_cc, kode_rkm
									, sum(decode(substr(kode_akun,1,1),'4',-jan,jan)) n1
									, sum(decode(substr(kode_akun,1,1),'4',-feb,feb)) n2
									, sum(decode(substr(kode_akun,1,1),'4',-mar,mar)) n3
									, sum(decode(substr(kode_akun,1,1),'4',-apr,apr)) n4
									, sum(decode(substr(kode_akun,1,1),'4',-mei,mei)) n5
									, sum(decode(substr(kode_akun,1,1),'4',-jun,jun)) n6
									, sum(decode(substr(kode_akun,1,1),'4',-jul,jul)) n7
									, sum(decode(substr(kode_akun,1,1),'4',-aug,aug)) n8
									, sum(decode(substr(kode_akun,1,1),'4',-sep,sep)) n9
									, sum(decode(substr(kode_akun,1,1),'4',-okt,okt)) n10
									, sum(decode(substr(kode_akun,1,1),'4',-nop,nop)) n11
									, sum(decode(substr(kode_akun,1,1),'4',-des,des)) n12
									, kode_ubis, kode_cfu
								from  bpc_mbudget_rkm a
							 where a.tahun = '$tahun' and a.kode_lokasi = '$compCode' $filter  
							 group by tahun, kode_lokasi, kode_akun, kode_cc, kode_rkm, kode_ubis, kode_cfu
							 order by kode_cc, kode_akun");
		$ret = $db->execArraySQL($sql);
		$rs = $db->execute("Select kode_cc, kode_rkm
									, sum(decode(substr(kode_akun,1,1),'4',-jan,jan)) n1
									, sum(decode(substr(kode_akun,1,1),'4',-feb,feb)) n2
									, sum(decode(substr(kode_akun,1,1),'4',-mar,mar)) n3
									, sum(decode(substr(kode_akun,1,1),'4',-apr,apr)) n4
									, sum(decode(substr(kode_akun,1,1),'4',-mei,mei)) n5
									, sum(decode(substr(kode_akun,1,1),'4',-jun,jun)) n6
									, sum(decode(substr(kode_akun,1,1),'4',-jul,jul)) n7
									, sum(decode(substr(kode_akun,1,1),'4',-aug,aug)) n8
									, sum(decode(substr(kode_akun,1,1),'4',-sep,sep)) n9
									, sum(decode(substr(kode_akun,1,1),'4',-okt,okt)) n10
									, sum(decode(substr(kode_akun,1,1),'4',-nop,nop)) n11
									, sum(decode(substr(kode_akun,1,1),'4',-des,des)) n12
								from  bpc_mbudget_rkm a
							where a.tahun = '$tahun' and a.kode_lokasi = '$compCode' $filter  
							group by kode_cc, kode_rkm 
							order by kode_cc, kode_rkm");
		$i = 0;
		$recordCount = 0;
		while ($row = $rs->FetchNextObject(false)){
			$i++;
			$index2 = sprintf("%.06d",$i);
			$kp26ListIndex->add(array("OBJECT_INDEX" => $index2, "VALUE_INDEX" =>  $index2,"ATTRIB_INDEX"=>"000000"));
			$kp26Object->add(array("OBJECT_INDEX" => $index2, "COSTCENTER" => $row->kode_cc, "ACTTYPE" => $row->kode_rkm,"CO_BUSPROC" =>""));
			$kp26Data->add(array ("VALUE_INDEX"=>$index2,
					"ACTVTY_QTY_PER01"=> $row->n1,
					"ACTVTY_QTY_PER02"=> $row->n2,
					"ACTVTY_QTY_PER03"=> $row->n3,
					"ACTVTY_QTY_PER04"=> $row->n4,
					"ACTVTY_QTY_PER05"=> $row->n5,
					"ACTVTY_QTY_PER06"=> $row->n6,
					"ACTVTY_QTY_PER07"=> $row->n7,
					"ACTVTY_QTY_PER08"=> $row->n8,
					"ACTVTY_QTY_PER09"=> $row->n9,
					"ACTVTY_QTY_PER10"=> $row->n10,
					"ACTVTY_QTY_PER11"=> $row->n11,
					"ACTVTY_QTY_PER12"=> $row->n12,"ACTVTY_QTY_PER13"=>"","ACTVTY_QTY_PER14"=>"","ACTVTY_QTY_PER15"=>"","ACTVTY_QTY_PER16"=>"","ACTVTY_CAP_PER01"=>"","ACTVTY_CAP_PER02"=>"","ACTVTY_CAP_PER03"=>"","ACTVTY_CAP_PER04"=>"","ACTVTY_CAP_PER05"=>"","ACTVTY_CAP_PER06"=>"","ACTVTY_CAP_PER07"=>"","ACTVTY_CAP_PER08"=>"","ACTVTY_CAP_PER09"=>"","ACTVTY_CAP_PER10"=>"","ACTVTY_CAP_PER11"=>"","ACTVTY_CAP_PER12"=>"","ACTVTY_CAP_PER13"=>"","ACTVTY_CAP_PER14"=>"","ACTVTY_CAP_PER15"=>"","ACTVTY_CAP_PER16"=>"","PRICE_FIX_PER01"=>"","PRICE_FIX_PER02"=>"","PRICE_FIX_PER03"=>"","PRICE_FIX_PER04"=>"","PRICE_FIX_PER05"=>"","PRICE_FIX_PER06"=>"","PRICE_FIX_PER07"=>"","PRICE_FIX_PER08"=>"","PRICE_FIX_PER09"=>"","PRICE_FIX_PER10"=>"","PRICE_FIX_PER11"=>"","PRICE_FIX_PER12"=>"","PRICE_FIX_PER13"=>"","PRICE_FIX_PER14"=>"","PRICE_FIX_PER15"=>"","PRICE_FIX_PER16"=>"","PRICE_VAR_PER01"=>"","PRICE_VAR_PER02"=>"","PRICE_VAR_PER03"=>"","PRICE_VAR_PER04"=>"","PRICE_VAR_PER05"=>"","PRICE_VAR_PER06"=>"","PRICE_VAR_PER07"=>"","PRICE_VAR_PER08"=>"","PRICE_VAR_PER09"=>"","PRICE_VAR_PER10"=>"","PRICE_VAR_PER11"=>"","PRICE_VAR_PER12"=>"","PRICE_VAR_PER13"=>"","PRICE_VAR_PER14"=>"","PRICE_VAR_PER15"=>"","PRICE_VAR_PER16"=>"","PRICE_UNIT_PER01"=>"","PRICE_UNIT_PER02"=>"","PRICE_UNIT_PER03"=>"","PRICE_UNIT_PER04"=>"","PRICE_UNIT_PER05"=>"","PRICE_UNIT_PER06"=>"","PRICE_UNIT_PER07"=>"","PRICE_UNIT_PER08"=>"","PRICE_UNIT_PER09"=>"","PRICE_UNIT_PER10"=>"","PRICE_UNIT_PER11"=>"","PRICE_UNIT_PER12"=>"","PRICE_UNIT_PER13"=>"","PRICE_UNIT_PER14"=>"","PRICE_UNIT_PER15"=>"","PRICE_UNIT_PER16"=>"","EQUIVAL_NO_PER01"=>"","EQUIVAL_NO_PER02"=>"","EQUIVAL_NO_PER03"=>"","EQUIVAL_NO_PER04"=>"","EQUIVAL_NO_PER05"=>"","EQUIVAL_NO_PER06"=>"","EQUIVAL_NO_PER07"=>"","EQUIVAL_NO_PER08"=>"","EQUIVAL_NO_PER09"=>"","EQUIVAL_NO_PER10"=>"","EQUIVAL_NO_PER11"=>"","EQUIVAL_NO_PER12"=>"","EQUIVAL_NO_PER13"=>"","EQUIVAL_NO_PER14"=>"","EQUIVAL_NO_PER15"=>"","EQUIVAL_NO_PER16"=>"","UNIT_ISO"=>"","UNIT_OF_MEASURE"=>"","CURRENCY_ISO"=>"","CURRENCY"=>""));
			error_log(print_r(array("index"=>$index2, "data" => (array) $row), true));
			if ($i % 3000 == 0){ //5
				$res = $this->post2SAPKP26($rfcLib, $rfc, $compCode, $tahun, $kp26Object, $kp26ListIndex, $kp26Data, $sapUser, $sapPwd, $version);
				if (count($res) > 0){
					return array("KP26 Error" => print_r($res, true) );
				}
				$kp26ListIndex = new server_util_arrayList();
				$kp26Object = new server_util_arrayList();
				$kp26Data = new server_util_arrayList();
			}
			//if ($recordCount == 8)
			//	break;
			$recordCount++;
		}
		if ($i > 0){
			$res = $this->post2SAPKP26($rfcLib, $rfc, $compCode,$tahun, $kp26Object, $kp26ListIndex, $kp26Data, $sapUser, $sapPwd, $version);
			if (count($res) > 0){
				return array("KP26 Error" => print_r($res, true) );	
			}
		}
		
		$i = 0;//, kode_rkm, kode_rkm 
		$rs = $db->execute("Select kode_akun, kode_cc
									, sum(decode(substr(kode_akun,1,1),'4',-jan,jan)) n1
									, sum(decode(substr(kode_akun,1,1),'4',-feb,feb)) n2
									, sum(decode(substr(kode_akun,1,1),'4',-mar,mar)) n3
									, sum(decode(substr(kode_akun,1,1),'4',-apr,apr)) n4
									, sum(decode(substr(kode_akun,1,1),'4',-mei,mei)) n5
									, sum(decode(substr(kode_akun,1,1),'4',-jun,jun)) n6
									, sum(decode(substr(kode_akun,1,1),'4',-jul,jul)) n7
									, sum(decode(substr(kode_akun,1,1),'4',-aug,aug)) n8
									, sum(decode(substr(kode_akun,1,1),'4',-sep,sep)) n9
									, sum(decode(substr(kode_akun,1,1),'4',-okt,okt)) n10
									, sum(decode(substr(kode_akun,1,1),'4',-nop,nop)) n11
									, sum(decode(substr(kode_akun,1,1),'4',-des,des)) n12
								from  bpc_mbudget_rkm a
							 where a.tahun = '$tahun' 
							 and  not substr(a.kode_akun,1,1) in ('4')  and a.kode_lokasi = '$compCode' $filter  
							 group by kode_akun, kode_cc
							 order by kode_cc, kode_akun");
		
		$recordCount = 0;	
		$ccrkm = array();
		$kode = "";
		
		while ($row = $rs->FetchNextObject(false)){
			$i++;
			$index = sprintf("%.06d",$i);
			
			$coobject->add(array("OBJECT_INDEX" => $index, "COSTCENTER" => $row->kode_cc, "ACTTYPE" => "","CO_BUSPROC" =>"","ORDERID"=>"","WBS_ELEMENT"=>""));
			$listIndex->add(array("OBJECT_INDEX" => $index, "VALUE_INDEX" =>  $index,"ATTRIB_INDEX"=>"000000"));
			$data->add(array("VALUE_INDEX"=>$index,"COST_ELEM"=>$row->kode_akun
					,"RESOURCE"=>"","TRANS_CURRENCY_ISO"=>"","TRANS_CURR"=>""
					,"UNIT_ISO"=>"","UNIT_OF_MEASURE"=>""
					,"FIX_VAL_PER01"=> $row->n1
					,"FIX_VAL_PER02"=> $row->n2
					,"FIX_VAL_PER03"=> $row->n3
					,"FIX_VAL_PER04"=> $row->n4
					,"FIX_VAL_PER05"=> $row->n5
					,"FIX_VAL_PER06"=> $row->n6
					,"FIX_VAL_PER07"=> $row->n7
					,"FIX_VAL_PER08"=> $row->n8
					,"FIX_VAL_PER09"=> $row->n9
					,"FIX_VAL_PER10"=> $row->n10
					,"FIX_VAL_PER11"=> $row->n11
					,"FIX_VAL_PER12"=> $row->n12,"FIX_VAL_PER13"=>"","FIX_VAL_PER14"=>"","FIX_VAL_PER15"=>"","FIX_VAL_PER16"=>"","VAR_VAL_PER01"=>"","VAR_VAL_PER02"=>"","VAR_VAL_PER03"=>"","VAR_VAL_PER04"=>"","VAR_VAL_PER05"=>"","VAR_VAL_PER06"=>"","VAR_VAL_PER07"=>"","VAR_VAL_PER08"=>"","VAR_VAL_PER09"=>"","VAR_VAL_PER10"=>"","VAR_VAL_PER11"=>"","VAR_VAL_PER12"=>"","VAR_VAL_PER13"=>"","VAR_VAL_PER14"=>"","VAR_VAL_PER15"=>"","VAR_VAL_PER16"=>"","FIX_QUAN_PER01"=>"","FIX_QUAN_PER02"=>"","FIX_QUAN_PER03"=>"","FIX_QUAN_PER04"=>"","FIX_QUAN_PER05"=>"","FIX_QUAN_PER06"=>"","FIX_QUAN_PER07"=>"","FIX_QUAN_PER08"=>"","FIX_QUAN_PER09"=>"","FIX_QUAN_PER10"=>"","FIX_QUAN_PER11"=>"","FIX_QUAN_PER12"=>"","FIX_QUAN_PER13"=>"","FIX_QUAN_PER14"=>"","FIX_QUAN_PER15"=>"","FIX_QUAN_PER16"=>"","VAR_QUAN_PER01"=>"","VAR_QUAN_PER02"=>"","VAR_QUAN_PER03"=>"","VAR_QUAN_PER04"=>"","VAR_QUAN_PER05"=>"","VAR_QUAN_PER06"=>"","VAR_QUAN_PER07"=>"","VAR_QUAN_PER08"=>"","VAR_QUAN_PER09"=>"","VAR_QUAN_PER10"=>"","VAR_QUAN_PER11"=>"","VAR_QUAN_PER12"=>"","VAR_QUAN_PER13"=>"","VAR_QUAN_PER14"=>"","VAR_QUAN_PER15"=>"","VAR_QUAN_PER16"=>"","FUND"=>"","FUNCTION"=>"","GRANT_NBR"=>"","FUND_LONG"=>"","BUDGET_PERIOD"=>""));
			
			
			error_log(print_r(array("index"=>$index, "data" => (array) $row), true));
			if ($i % 3000 == 0){ //5
				$res = $this->post2SAPKP06($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex, $data, $sapUser, $sapPwd, $version);
				if (count($res) > 0){
					return array("KP06 Error" => print_r($res, true) );
				}
				$data = new server_util_arrayList();
				$coobject = new server_util_arrayList();
				$listIndex = new server_util_arrayList();
			
			}
			//$sql->add("delete bpc_mbudget_rkm_staging where tahun = '$tahun' and kode_cc = '$row->kode_cc' and kode_rkm ='-' and kode_akun ='$row->kode_akun' and kode_lokasi ='$compCode'");
			//$sql->add("insert into bpc_mbudget_rkm_staging(tahun, kode_lokasi,kode_akun, kode_cc,kode_rkm,jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des, versi, progress, jenis, kode_ubis, ubis_upload )
			//			values('$tahun','$compCode','$row->kode_akun','$row->kode_cc','-','$row->jan','$row->feb','$row->mar','$row->apr','$row->mei','$row->jun','$row->jul','$row->aug','$row->sep','$row->okt','$row->nop','$row->des',
			//							'1','0','S','". substr($row->kode_ubis,0,4) ."','admin')");
			//if ($recordCount == 8)
			//	break;
			$recordCount++;
		}
		if ($i > 0){
			$res = $this->post2SAPKP06($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex, $data, $sapUser, $sapPwd, $version);
			if (count($res) > 0){
				return array("KP06 Error" => print_r($res, true) );
			}
			
		}

		$i = 0;//, kode_rkm, kode_rkm 
		$rs = $db->execute("Select kode_akun, kode_cc
									, sum(decode(substr(kode_akun,1,1),'4',-jan,jan)) n1
									, sum(decode(substr(kode_akun,1,1),'4',-feb,feb)) n2
									, sum(decode(substr(kode_akun,1,1),'4',-mar,mar)) n3
									, sum(decode(substr(kode_akun,1,1),'4',-apr,apr)) n4
									, sum(decode(substr(kode_akun,1,1),'4',-mei,mei)) n5
									, sum(decode(substr(kode_akun,1,1),'4',-jun,jun)) n6
									, sum(decode(substr(kode_akun,1,1),'4',-jul,jul)) n7
									, sum(decode(substr(kode_akun,1,1),'4',-aug,aug)) n8
									, sum(decode(substr(kode_akun,1,1),'4',-sep,sep)) n9
									, sum(decode(substr(kode_akun,1,1),'4',-okt,okt)) n10
									, sum(decode(substr(kode_akun,1,1),'4',-nop,nop)) n11
									, sum(decode(substr(kode_akun,1,1),'4',-des,des)) n12
								from  bpc_mbudget_rkm a
							 where a.tahun = '$tahun' and substr(a.kode_akun,1,1) in ('4')  and a.kode_lokasi = '$compCode' $filter  
							 group by kode_akun, kode_cc
							 order by kode_cc, kode_akun");
		
		$recordCount = 0;	
		$ccrkm = array();
		$kode = "";
		$data = new server_util_arrayList();
		while ($row = $rs->FetchNextObject(false)){
			$i++;
			$index = sprintf("%.06d",$i);
			
			$data->add(array ("PROFIT_CTR"=> $row->kode_cc,
							"GL_ACCOUNT"=>"00" . $row->kode_akun,
							"CURRENCY_ISO"=>"IDR",
							"CURRENCY"=>"IDR",
							"HSLVT"=>"",
							"HSL01"=> $row->n1 / 100,
							"HSL02"=> $row->n2 / 100,
							"HSL03"=> $row->n3 / 100,
							"HSL04"=> $row->n4 / 100,
							"HSL05"=> $row->n5 / 100,
							"HSL06"=> $row->n6 / 100,
							"HSL07"=> $row->n7 / 100,
							"HSL08"=> $row->n8 / 100,
							"HSL09"=> $row->n9 / 100,
							"HSL10"=> $row->n10 / 100,
							"HSL11"=> $row->n11 / 100,
							"HSL12"=> $row->n12 / 100,
							"HSL13"=> "0",
							"HSL14"=> "0","HSL15"=>"0","HSL16"=>"0"));
			
			error_log(print_r(array( "data" => (array) $row), true));
			if ($i % 3000 == 0){ //5
				$res = $this->post2SAP7KE1($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex, $data, $sapUser, $sapPwd, $version);
				if (count($res) > 0){
					//return array("7KE1 Error" => print_r($res, true) );
				}
				$data = new server_util_arrayList();
			}
			$recordCount++;
		}
		if ($i > 0){
			$res = $this->post2SAP7KE1($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex, $data, $sapUser, $sapPwd, $version);
			if (count($res) > 0){
				return array("7KE1 Error" => print_r($res, true) );
			}
		}
		return $res;
	}
	function transferSAPKP26($compCode, $model, $tahun, $ubis, $sapUser, $sapPwd, $version){
		$db = $this->getDb();
		$rfcLib = $this->getSAPConnection($compCode );
		$rfc = $rfcLib->login($sapUser, $sapPwd);
		$login = new server_util_Map();
		//query 
		$login->set("user", $sapUser);
		$login->set("passwd", $sapPwd);

		$filter = " and " . $this->getFilterUbis("a", $ubis, $compCode);//a.kode_rkm ,  //
		$filter2 = " and " . $this->getFilterUbis("b", $ubis, $compCode);//a.kode_rkm ,  //
		$rs = $db->execute("Select distinct a.kode_cc, a.kode_rkm ,  a.kode_akun 
							from bpc_mbudget_rkm_staging a 
							 left outer join bpc_mbudget_rkm b on b.kode_cc = a.kode_cc  
							 						and b.kode_rkm = a.kode_rkm 
													and b.kode_akun = a.kode_akun 
							 						and b.kode_lokasi = a.kode_lokasi 
													and b.tahun = a.tahun $filter2 
							 where a.tahun = '$tahun' and a.kode_lokasi = '$compCode' and not a.kode_akun like '4%'   $filter and b.kode_akun is null 
							 order by kode_cc, kode_akun, kode_rkm");
		$data = new server_util_arrayList();
		$coobject = new server_util_arrayList();
		$listIndex = new server_util_arrayList();

		$kp26ListIndex = new server_util_arrayList();
		$kp26ListIndex = new server_util_arrayList();
		$kp26Object = new server_util_arrayList();
		$kp26Data = new server_util_arrayList();
		$ke1data = new server_util_arrayList();
		$proseske1 = array();
		$i = 0;
		$ccrkm = array();
		while ($row = $rs->FetchNextObject(false)){
			$i++;
			$index = sprintf("%.06d",$i);
					
			//KP26
			if (!in_array($row->kode_cc.$row->kode_rkm, $ccrkm) ){

				$ccrkm[] = $row->kode_cc.$row->kode_rkm;
				$kp26ListIndex->add(array("OBJECT_INDEX" => $index, "VALUE_INDEX" =>  $index,"ATTRIB_INDEX"=>"000000"));
				$kp26Object->add(array("OBJECT_INDEX" => $index, "COSTCENTER" => $row->kode_cc, "ACTTYPE" => $row->kode_rkm,"CO_BUSPROC" =>""));
				$kp26Data->add(array ("VALUE_INDEX"=>$index,
						"ACTVTY_QTY_PER01"=>"0",
						"ACTVTY_QTY_PER02"=>"0",
						"ACTVTY_QTY_PER03"=>"0",
						"ACTVTY_QTY_PER04"=>"0",
						"ACTVTY_QTY_PER05"=>"0",
						"ACTVTY_QTY_PER06"=>"0",
						"ACTVTY_QTY_PER07"=>"0",
						"ACTVTY_QTY_PER08"=>"0",
						"ACTVTY_QTY_PER09"=>"0",
						"ACTVTY_QTY_PER10"=>"0",
						"ACTVTY_QTY_PER11"=>"0",
						"ACTVTY_QTY_PER12"=>"0","ACTVTY_QTY_PER13"=>"","ACTVTY_QTY_PER14"=>"","ACTVTY_QTY_PER15"=>"","ACTVTY_QTY_PER16"=>"","ACTVTY_CAP_PER01"=>"","ACTVTY_CAP_PER02"=>"","ACTVTY_CAP_PER03"=>"","ACTVTY_CAP_PER04"=>"","ACTVTY_CAP_PER05"=>"","ACTVTY_CAP_PER06"=>"","ACTVTY_CAP_PER07"=>"","ACTVTY_CAP_PER08"=>"","ACTVTY_CAP_PER09"=>"","ACTVTY_CAP_PER10"=>"","ACTVTY_CAP_PER11"=>"","ACTVTY_CAP_PER12"=>"","ACTVTY_CAP_PER13"=>"","ACTVTY_CAP_PER14"=>"","ACTVTY_CAP_PER15"=>"","ACTVTY_CAP_PER16"=>"","PRICE_FIX_PER01"=>"","PRICE_FIX_PER02"=>"","PRICE_FIX_PER03"=>"","PRICE_FIX_PER04"=>"","PRICE_FIX_PER05"=>"","PRICE_FIX_PER06"=>"","PRICE_FIX_PER07"=>"","PRICE_FIX_PER08"=>"","PRICE_FIX_PER09"=>"","PRICE_FIX_PER10"=>"","PRICE_FIX_PER11"=>"","PRICE_FIX_PER12"=>"","PRICE_FIX_PER13"=>"","PRICE_FIX_PER14"=>"","PRICE_FIX_PER15"=>"","PRICE_FIX_PER16"=>"","PRICE_VAR_PER01"=>"","PRICE_VAR_PER02"=>"","PRICE_VAR_PER03"=>"","PRICE_VAR_PER04"=>"","PRICE_VAR_PER05"=>"","PRICE_VAR_PER06"=>"","PRICE_VAR_PER07"=>"","PRICE_VAR_PER08"=>"","PRICE_VAR_PER09"=>"","PRICE_VAR_PER10"=>"","PRICE_VAR_PER11"=>"","PRICE_VAR_PER12"=>"","PRICE_VAR_PER13"=>"","PRICE_VAR_PER14"=>"","PRICE_VAR_PER15"=>"","PRICE_VAR_PER16"=>"","PRICE_UNIT_PER01"=>"","PRICE_UNIT_PER02"=>"","PRICE_UNIT_PER03"=>"","PRICE_UNIT_PER04"=>"","PRICE_UNIT_PER05"=>"","PRICE_UNIT_PER06"=>"","PRICE_UNIT_PER07"=>"","PRICE_UNIT_PER08"=>"","PRICE_UNIT_PER09"=>"","PRICE_UNIT_PER10"=>"","PRICE_UNIT_PER11"=>"","PRICE_UNIT_PER12"=>"","PRICE_UNIT_PER13"=>"","PRICE_UNIT_PER14"=>"","PRICE_UNIT_PER15"=>"","PRICE_UNIT_PER16"=>"","EQUIVAL_NO_PER01"=>"","EQUIVAL_NO_PER02"=>"","EQUIVAL_NO_PER03"=>"","EQUIVAL_NO_PER04"=>"","EQUIVAL_NO_PER05"=>"","EQUIVAL_NO_PER06"=>"","EQUIVAL_NO_PER07"=>"","EQUIVAL_NO_PER08"=>"","EQUIVAL_NO_PER09"=>"","EQUIVAL_NO_PER10"=>"","EQUIVAL_NO_PER11"=>"","EQUIVAL_NO_PER12"=>"","EQUIVAL_NO_PER13"=>"","EQUIVAL_NO_PER14"=>"","EQUIVAL_NO_PER15"=>"","EQUIVAL_NO_PER16"=>"","UNIT_ISO"=>"","UNIT_OF_MEASURE"=>"","CURRENCY_ISO"=>"","CURRENCY"=>""));
			}
			
		
		}
		if (count($coobject) > 0){
			$res = $this->post2SAPKP26($rfcLib, $rfc, $compCode,$tahun, $kp26Object, $kp26ListIndex, $kp26Data, $sapUser, $sapPwd, $version);
			if (count($res) == 0)
			{
				
			}else return array("Reset KP26 Error" => print_r($res, true) );
		}

		
		$data = new server_util_arrayList();
		$coobject = new server_util_arrayList();
		$listIndex = new server_util_arrayList();
		$kp26ListIndex = new server_util_arrayList();
		$kp26Object = new server_util_arrayList();
		$kp26Data = new server_util_arrayList();
		///select dari staging yg tdk ada di data baru untuk di nolkan di SAP;
		//KP26
		$sql = new server_util_arrayList();	
		$sql->add("delete from bpc_mbudget_rkm_staging a where tahun = '$tahun' and kode_lokasi ='$compCode' $filter ");
		$sql->add("insert into bpc_mbudget_rkm_staging(tahun, kode_lokasi, kode_akun, kode_cc, kode_rkm, jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des ,kode_ubis, kode_cfu) 
							select tahun, kode_lokasi, kode_akun, kode_cc, kode_rkm
									, sum(decode(substr(kode_akun,1,1),'4',-jan,jan)) n1
									, sum(decode(substr(kode_akun,1,1),'4',-feb,feb)) n2
									, sum(decode(substr(kode_akun,1,1),'4',-mar,mar)) n3
									, sum(decode(substr(kode_akun,1,1),'4',-apr,apr)) n4
									, sum(decode(substr(kode_akun,1,1),'4',-mei,mei)) n5
									, sum(decode(substr(kode_akun,1,1),'4',-jun,jun)) n6
									, sum(decode(substr(kode_akun,1,1),'4',-jul,jul)) n7
									, sum(decode(substr(kode_akun,1,1),'4',-aug,aug)) n8
									, sum(decode(substr(kode_akun,1,1),'4',-sep,sep)) n9
									, sum(decode(substr(kode_akun,1,1),'4',-okt,okt)) n10
									, sum(decode(substr(kode_akun,1,1),'4',-nop,nop)) n11
									, sum(decode(substr(kode_akun,1,1),'4',-des,des)) n12
									, kode_ubis, kode_cfu
								from  bpc_mbudget_rkm a
							 where a.tahun = '$tahun' and a.kode_lokasi = '$compCode' $filter  
							 group by tahun, kode_lokasi, kode_akun, kode_cc, kode_rkm, kode_ubis, kode_cfu
							 order by kode_cc, kode_akun");
		$ret = $db->execArraySQL($sql);
		$rs = $db->execute("Select kode_cc, kode_rkm
									, sum(decode(substr(kode_akun,1,1),'4',-jan,jan)) n1
									, sum(decode(substr(kode_akun,1,1),'4',-feb,feb)) n2
									, sum(decode(substr(kode_akun,1,1),'4',-mar,mar)) n3
									, sum(decode(substr(kode_akun,1,1),'4',-apr,apr)) n4
									, sum(decode(substr(kode_akun,1,1),'4',-mei,mei)) n5
									, sum(decode(substr(kode_akun,1,1),'4',-jun,jun)) n6
									, sum(decode(substr(kode_akun,1,1),'4',-jul,jul)) n7
									, sum(decode(substr(kode_akun,1,1),'4',-aug,aug)) n8
									, sum(decode(substr(kode_akun,1,1),'4',-sep,sep)) n9
									, sum(decode(substr(kode_akun,1,1),'4',-okt,okt)) n10
									, sum(decode(substr(kode_akun,1,1),'4',-nop,nop)) n11
									, sum(decode(substr(kode_akun,1,1),'4',-des,des)) n12
								from  bpc_mbudget_rkm a
							where a.tahun = '$tahun' and a.kode_lokasi = '$compCode' $filter  
							group by kode_cc, kode_rkm 
							order by kode_cc, kode_rkm");
		$i = 0;
		$recordCount = 0;
		while ($row = $rs->FetchNextObject(false)){
			$i++;
			$index2 = sprintf("%.06d",$i);
			$kp26ListIndex->add(array("OBJECT_INDEX" => $index2, "VALUE_INDEX" =>  $index2,"ATTRIB_INDEX"=>"000000"));
			$kp26Object->add(array("OBJECT_INDEX" => $index2, "COSTCENTER" => $row->kode_cc, "ACTTYPE" => $row->kode_rkm,"CO_BUSPROC" =>""));
			$kp26Data->add(array ("VALUE_INDEX"=>$index2,
					"ACTVTY_QTY_PER01"=> $row->n1,
					"ACTVTY_QTY_PER02"=> $row->n2,
					"ACTVTY_QTY_PER03"=> $row->n3,
					"ACTVTY_QTY_PER04"=> $row->n4,
					"ACTVTY_QTY_PER05"=> $row->n5,
					"ACTVTY_QTY_PER06"=> $row->n6,
					"ACTVTY_QTY_PER07"=> $row->n7,
					"ACTVTY_QTY_PER08"=> $row->n8,
					"ACTVTY_QTY_PER09"=> $row->n9,
					"ACTVTY_QTY_PER10"=> $row->n10,
					"ACTVTY_QTY_PER11"=> $row->n11,
					"ACTVTY_QTY_PER12"=> $row->n12,"ACTVTY_QTY_PER13"=>"","ACTVTY_QTY_PER14"=>"","ACTVTY_QTY_PER15"=>"","ACTVTY_QTY_PER16"=>"","ACTVTY_CAP_PER01"=>"","ACTVTY_CAP_PER02"=>"","ACTVTY_CAP_PER03"=>"","ACTVTY_CAP_PER04"=>"","ACTVTY_CAP_PER05"=>"","ACTVTY_CAP_PER06"=>"","ACTVTY_CAP_PER07"=>"","ACTVTY_CAP_PER08"=>"","ACTVTY_CAP_PER09"=>"","ACTVTY_CAP_PER10"=>"","ACTVTY_CAP_PER11"=>"","ACTVTY_CAP_PER12"=>"","ACTVTY_CAP_PER13"=>"","ACTVTY_CAP_PER14"=>"","ACTVTY_CAP_PER15"=>"","ACTVTY_CAP_PER16"=>"","PRICE_FIX_PER01"=>"","PRICE_FIX_PER02"=>"","PRICE_FIX_PER03"=>"","PRICE_FIX_PER04"=>"","PRICE_FIX_PER05"=>"","PRICE_FIX_PER06"=>"","PRICE_FIX_PER07"=>"","PRICE_FIX_PER08"=>"","PRICE_FIX_PER09"=>"","PRICE_FIX_PER10"=>"","PRICE_FIX_PER11"=>"","PRICE_FIX_PER12"=>"","PRICE_FIX_PER13"=>"","PRICE_FIX_PER14"=>"","PRICE_FIX_PER15"=>"","PRICE_FIX_PER16"=>"","PRICE_VAR_PER01"=>"","PRICE_VAR_PER02"=>"","PRICE_VAR_PER03"=>"","PRICE_VAR_PER04"=>"","PRICE_VAR_PER05"=>"","PRICE_VAR_PER06"=>"","PRICE_VAR_PER07"=>"","PRICE_VAR_PER08"=>"","PRICE_VAR_PER09"=>"","PRICE_VAR_PER10"=>"","PRICE_VAR_PER11"=>"","PRICE_VAR_PER12"=>"","PRICE_VAR_PER13"=>"","PRICE_VAR_PER14"=>"","PRICE_VAR_PER15"=>"","PRICE_VAR_PER16"=>"","PRICE_UNIT_PER01"=>"","PRICE_UNIT_PER02"=>"","PRICE_UNIT_PER03"=>"","PRICE_UNIT_PER04"=>"","PRICE_UNIT_PER05"=>"","PRICE_UNIT_PER06"=>"","PRICE_UNIT_PER07"=>"","PRICE_UNIT_PER08"=>"","PRICE_UNIT_PER09"=>"","PRICE_UNIT_PER10"=>"","PRICE_UNIT_PER11"=>"","PRICE_UNIT_PER12"=>"","PRICE_UNIT_PER13"=>"","PRICE_UNIT_PER14"=>"","PRICE_UNIT_PER15"=>"","PRICE_UNIT_PER16"=>"","EQUIVAL_NO_PER01"=>"","EQUIVAL_NO_PER02"=>"","EQUIVAL_NO_PER03"=>"","EQUIVAL_NO_PER04"=>"","EQUIVAL_NO_PER05"=>"","EQUIVAL_NO_PER06"=>"","EQUIVAL_NO_PER07"=>"","EQUIVAL_NO_PER08"=>"","EQUIVAL_NO_PER09"=>"","EQUIVAL_NO_PER10"=>"","EQUIVAL_NO_PER11"=>"","EQUIVAL_NO_PER12"=>"","EQUIVAL_NO_PER13"=>"","EQUIVAL_NO_PER14"=>"","EQUIVAL_NO_PER15"=>"","EQUIVAL_NO_PER16"=>"","UNIT_ISO"=>"","UNIT_OF_MEASURE"=>"","CURRENCY_ISO"=>"","CURRENCY"=>""));
			error_log(print_r(array("index"=>$index2, "data" => (array) $row), true));
			if ($i % 3000 == 0){ //5
				$res = $this->post2SAPKP26($rfcLib, $rfc, $compCode, $tahun, $kp26Object, $kp26ListIndex, $kp26Data, $sapUser, $sapPwd, $version);
				if (count($res) > 0){
					return array("KP26 Error" => print_r($res, true) );
				}
				$kp26ListIndex = new server_util_arrayList();
				$kp26Object = new server_util_arrayList();
				$kp26Data = new server_util_arrayList();
			}
			//if ($recordCount == 8)
			//	break;
			$recordCount++;
		}
		if ($i > 0){
			$res = $this->post2SAPKP26($rfcLib, $rfc, $compCode,$tahun, $kp26Object, $kp26ListIndex, $kp26Data, $sapUser, $sapPwd, $version);
			if (count($res) > 0){
				return array("KP26 Error" => print_r($res, true) );	
			}
		}
		
		$i = 0;//, kode_rkm, kode_rkm 
		$rs = $db->execute("Select kode_akun, kode_cc
									, sum(decode(substr(kode_akun,1,1),'4',-jan,jan)) n1
									, sum(decode(substr(kode_akun,1,1),'4',-feb,feb)) n2
									, sum(decode(substr(kode_akun,1,1),'4',-mar,mar)) n3
									, sum(decode(substr(kode_akun,1,1),'4',-apr,apr)) n4
									, sum(decode(substr(kode_akun,1,1),'4',-mei,mei)) n5
									, sum(decode(substr(kode_akun,1,1),'4',-jun,jun)) n6
									, sum(decode(substr(kode_akun,1,1),'4',-jul,jul)) n7
									, sum(decode(substr(kode_akun,1,1),'4',-aug,aug)) n8
									, sum(decode(substr(kode_akun,1,1),'4',-sep,sep)) n9
									, sum(decode(substr(kode_akun,1,1),'4',-okt,okt)) n10
									, sum(decode(substr(kode_akun,1,1),'4',-nop,nop)) n11
									, sum(decode(substr(kode_akun,1,1),'4',-des,des)) n12
								from  bpc_mbudget_rkm a
							 where a.tahun = '$tahun' 
							 and  not substr(a.kode_akun,1,1) in ('4')  and a.kode_lokasi = '$compCode' $filter  
							 group by kode_akun, kode_cc
							 order by kode_cc, kode_akun");
		
		$recordCount = 0;	
		$ccrkm = array();
		$kode = "";
		
		while ($row = $rs->FetchNextObject(false)){
			$i++;
			$index = sprintf("%.06d",$i);
			
			$coobject->add(array("OBJECT_INDEX" => $index, "COSTCENTER" => $row->kode_cc, "ACTTYPE" => "","CO_BUSPROC" =>"","ORDERID"=>"","WBS_ELEMENT"=>""));
			$listIndex->add(array("OBJECT_INDEX" => $index, "VALUE_INDEX" =>  $index,"ATTRIB_INDEX"=>"000000"));
			$data->add(array("VALUE_INDEX"=>$index,"COST_ELEM"=>$row->kode_akun
					,"RESOURCE"=>"","TRANS_CURRENCY_ISO"=>"","TRANS_CURR"=>""
					,"UNIT_ISO"=>"","UNIT_OF_MEASURE"=>""
					,"FIX_VAL_PER01"=> $row->n1
					,"FIX_VAL_PER02"=> $row->n2
					,"FIX_VAL_PER03"=> $row->n3
					,"FIX_VAL_PER04"=> $row->n4
					,"FIX_VAL_PER05"=> $row->n5
					,"FIX_VAL_PER06"=> $row->n6
					,"FIX_VAL_PER07"=> $row->n7
					,"FIX_VAL_PER08"=> $row->n8
					,"FIX_VAL_PER09"=> $row->n9
					,"FIX_VAL_PER10"=> $row->n10
					,"FIX_VAL_PER11"=> $row->n11
					,"FIX_VAL_PER12"=> $row->n12,"FIX_VAL_PER13"=>"","FIX_VAL_PER14"=>"","FIX_VAL_PER15"=>"","FIX_VAL_PER16"=>"","VAR_VAL_PER01"=>"","VAR_VAL_PER02"=>"","VAR_VAL_PER03"=>"","VAR_VAL_PER04"=>"","VAR_VAL_PER05"=>"","VAR_VAL_PER06"=>"","VAR_VAL_PER07"=>"","VAR_VAL_PER08"=>"","VAR_VAL_PER09"=>"","VAR_VAL_PER10"=>"","VAR_VAL_PER11"=>"","VAR_VAL_PER12"=>"","VAR_VAL_PER13"=>"","VAR_VAL_PER14"=>"","VAR_VAL_PER15"=>"","VAR_VAL_PER16"=>"","FIX_QUAN_PER01"=>"","FIX_QUAN_PER02"=>"","FIX_QUAN_PER03"=>"","FIX_QUAN_PER04"=>"","FIX_QUAN_PER05"=>"","FIX_QUAN_PER06"=>"","FIX_QUAN_PER07"=>"","FIX_QUAN_PER08"=>"","FIX_QUAN_PER09"=>"","FIX_QUAN_PER10"=>"","FIX_QUAN_PER11"=>"","FIX_QUAN_PER12"=>"","FIX_QUAN_PER13"=>"","FIX_QUAN_PER14"=>"","FIX_QUAN_PER15"=>"","FIX_QUAN_PER16"=>"","VAR_QUAN_PER01"=>"","VAR_QUAN_PER02"=>"","VAR_QUAN_PER03"=>"","VAR_QUAN_PER04"=>"","VAR_QUAN_PER05"=>"","VAR_QUAN_PER06"=>"","VAR_QUAN_PER07"=>"","VAR_QUAN_PER08"=>"","VAR_QUAN_PER09"=>"","VAR_QUAN_PER10"=>"","VAR_QUAN_PER11"=>"","VAR_QUAN_PER12"=>"","VAR_QUAN_PER13"=>"","VAR_QUAN_PER14"=>"","VAR_QUAN_PER15"=>"","VAR_QUAN_PER16"=>"","FUND"=>"","FUNCTION"=>"","GRANT_NBR"=>"","FUND_LONG"=>"","BUDGET_PERIOD"=>""));
			
			
			error_log(print_r(array("index"=>$index, "data" => (array) $row), true));
			if ($i % 3000 == 0){ //5
				$res = $this->post2SAPKP06($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex, $data, $sapUser, $sapPwd, $version);
				if (count($res) > 0){
					return array("KP06 Error" => print_r($res, true) );
				}
				$data = new server_util_arrayList();
				$coobject = new server_util_arrayList();
				$listIndex = new server_util_arrayList();
			
			}
			//$sql->add("delete bpc_mbudget_rkm_staging where tahun = '$tahun' and kode_cc = '$row->kode_cc' and kode_rkm ='-' and kode_akun ='$row->kode_akun' and kode_lokasi ='$compCode'");
			//$sql->add("insert into bpc_mbudget_rkm_staging(tahun, kode_lokasi,kode_akun, kode_cc,kode_rkm,jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des, versi, progress, jenis, kode_ubis, ubis_upload )
			//			values('$tahun','$compCode','$row->kode_akun','$row->kode_cc','-','$row->jan','$row->feb','$row->mar','$row->apr','$row->mei','$row->jun','$row->jul','$row->aug','$row->sep','$row->okt','$row->nop','$row->des',
			//							'1','0','S','". substr($row->kode_ubis,0,4) ."','admin')");
			//if ($recordCount == 8)
			//	break;
			$recordCount++;
		}
		if ($i > 0){
			$res = $this->post2SAPKP06($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex, $data, $sapUser, $sapPwd, $version);
			if (count($res) > 0){
				return array("KP06 Error" => print_r($res, true) );
			}
			
		}

		$i = 0;//, kode_rkm, kode_rkm 
		$rs = $db->execute("Select kode_akun, kode_cc
									, sum(decode(substr(kode_akun,1,1),'4',-jan,jan)) n1
									, sum(decode(substr(kode_akun,1,1),'4',-feb,feb)) n2
									, sum(decode(substr(kode_akun,1,1),'4',-mar,mar)) n3
									, sum(decode(substr(kode_akun,1,1),'4',-apr,apr)) n4
									, sum(decode(substr(kode_akun,1,1),'4',-mei,mei)) n5
									, sum(decode(substr(kode_akun,1,1),'4',-jun,jun)) n6
									, sum(decode(substr(kode_akun,1,1),'4',-jul,jul)) n7
									, sum(decode(substr(kode_akun,1,1),'4',-aug,aug)) n8
									, sum(decode(substr(kode_akun,1,1),'4',-sep,sep)) n9
									, sum(decode(substr(kode_akun,1,1),'4',-okt,okt)) n10
									, sum(decode(substr(kode_akun,1,1),'4',-nop,nop)) n11
									, sum(decode(substr(kode_akun,1,1),'4',-des,des)) n12
								from  bpc_mbudget_rkm a
							 where a.tahun = '$tahun' and substr(a.kode_akun,1,1) in ('4')  and a.kode_lokasi = '$compCode' $filter  
							 group by kode_akun, kode_cc
							 order by kode_cc, kode_akun");
		
		$recordCount = 0;	
		$ccrkm = array();
		$kode = "";
		$data = new server_util_arrayList();
		while ($row = $rs->FetchNextObject(false)){
			$i++;
			$index = sprintf("%.06d",$i);
			
			$data->add(array ("PROFIT_CTR"=> $row->kode_cc,
							"GL_ACCOUNT"=>"00" . $row->kode_akun,
							"CURRENCY_ISO"=>"IDR",
							"CURRENCY"=>"IDR",
							"HSLVT"=>"",
							"HSL01"=> $row->n1 / 100,
							"HSL02"=> $row->n2 / 100,
							"HSL03"=> $row->n3 / 100,
							"HSL04"=> $row->n4 / 100,
							"HSL05"=> $row->n5 / 100,
							"HSL06"=> $row->n6 / 100,
							"HSL07"=> $row->n7 / 100,
							"HSL08"=> $row->n8 / 100,
							"HSL09"=> $row->n9 / 100,
							"HSL10"=> $row->n10 / 100,
							"HSL11"=> $row->n11 / 100,
							"HSL12"=> $row->n12 / 100,
							"HSL13"=> "0",
							"HSL14"=> "0","HSL15"=>"0","HSL16"=>"0"));
			
			error_log(print_r(array( "data" => (array) $row), true));
			if ($i % 3000 == 0){ //5
				$res = $this->post2SAP7KE1($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex, $data, $sapUser, $sapPwd, $version);
				if (count($res) > 0){
					//return array("7KE1 Error" => print_r($res, true) );
				}
				$data = new server_util_arrayList();
			}
			$recordCount++;
		}
		if ($i > 0){
			$res = $this->post2SAP7KE1($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex, $data, $sapUser, $sapPwd, $version);
			if (count($res) > 0){
				return array("7KE1 Error" => print_r($res, true) );
			}
		}
		return $res;
	}
	function reset7KE1(){

	}
	function transferSAPRev($compCode, $model, $tahun, $ubis, $sapUser, $sapPwd, $version){
		$db = $this->getDb();
		$rfcLib = $this->getSAPConnection($compCode );
		$rfc = $rfcLib->login($sapUser, $sapPwd);
		$login = new server_util_Map();
		//query 
		$login->set("user", $sapUser);
		$login->set("passwd", $sapPwd);

		$filter = " and " . $this->getFilterUbis("a", $ubis, $compCode);//a.kode_rkm ,  //
		$filter2 = " and " . $this->getFilterUbis("b", $ubis, $compCode);//a.kode_rkm ,  //
		/*
		$rs = $db->execute("Select distinct a.kode_cc, a.kode_rkm 
							from bpc_mbudget_rkm_staging a 
							 left outer join bpc_mbudget_rkm b on b.kode_cc = a.kode_cc  and b.kode_rkm = a.kode_rkm and b.kode_akun = a.kode_akun 
							 				and b.kode_lokasi = a.kode_lokasi and b.tahun = a.tahun $filter2 
							 where a.tahun = '$tahun' and a.kode_lokasi = '$compCode' $filter  and b.kode_akun is null 
							 order by kode_cc, kode_akun, kode_rkm");
							 */

		$data = new server_util_arrayList();
		$coobject = new server_util_arrayList();
		$listIndex = new server_util_arrayList();

		$kp26ListIndex = new server_util_arrayList();
		$kp26ListIndex = new server_util_arrayList();
		$kp26Object = new server_util_arrayList();
		$kp26Data = new server_util_arrayList();
		$ke1data = new server_util_arrayList();
		$proseske1 = array();
		$i = 0;
		$ccrkm = array();
		
		$filter = "";
		$sql = new server_util_arrayList();
		
		$i = 0;
		$ccrkm = array();
		$data = new server_util_arrayList();
		$coobject = new server_util_arrayList();
		$listIndex = new server_util_arrayList();
		/*
		$rs = $db->execute("Select distinct a.kode_cc, a.kode_akun 
							from bpc_mbudget_rkm_staging a 
							 left outer join bpc_mbudget_rkm b on b.kode_cc = a.kode_cc  and b.kode_rkm = a.kode_rkm and b.kode_akun = a.kode_akun 
							 				and b.kode_lokasi = a.kode_lokasi and b.tahun = a.tahun $filter2 
							 where a.tahun = '$tahun' and a.kode_lokasi = '$compCode' and a.kode_akun like '4%'  $filter and b.kode_akun is null 
							 order by kode_cc, kode_akun ");
		
		while ($row = $rs->FetchNextObject(false)){
				$proseske1[] = $row->kode_cc . $row->kode_akun;
				$ke1data->add(array ("PROFIT_CTR"=> $row->kode_cc,
							"GL_ACCOUNT"=>"00" . $row->kode_akun,
							"CURRENCY_ISO"=>"IDR",
							"CURRENCY"=>"IDR",
							"HSLVT"=>"",
							"HSL01"=> 0,
							"HSL02"=> 0,
							"HSL03"=> 0,
							"HSL04"=> 0,
							"HSL05"=> 0,
							"HSL06"=> 0,
							"HSL07"=> 0,
							"HSL08"=> 0,
							"HSL09"=> 0,
							"HSL10"=> 0,
							"HSL11"=> 0,
							"HSL12"=> 0,
							"HSL13"=> "0",
							"HSL14"=> "0","HSL15"=>"0","HSL16"=>"0"));
		}
		*/
		error_log("Reset 7KE1 " . $ke1data->getLength());
		//$res = $this->post2SAP7KE1($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex, $ke1data, $sapUser, $sapPwd, $version);
		//if (count($res) > 0){
		//	error_log("Reset 7KE1 Error => " . print_r($res, true) );
			//return array("Reset 7KE1 Error" => print_r($res, true) );
		//}
		$data = new server_util_arrayList();
		$coobject = new server_util_arrayList();
		$listIndex = new server_util_arrayList();
		$kp26ListIndex = new server_util_arrayList();
		$kp26Object = new server_util_arrayList();
		$kp26Data = new server_util_arrayList();
		///select dari staging yg tdk ada di data baru untuk di nolkan di SAP;
		//KP26
		$sql = new server_util_arrayList();	
		$sql->add("delete from bpc_mbudget_rkm_staging a where tahun = '$tahun' and kode_akun like '4%' and kode_lokasi ='$compCode' $filter ");
		$sql->add("insert into bpc_mbudget_rkm_staging(tahun, kode_lokasi, kode_akun, kode_cc, kode_rkm, jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des ,kode_ubis, kode_cfu) 
							select tahun, kode_lokasi, kode_akun, kode_cc, kode_rkm
									, sum(decode(substr(kode_akun,1,1),'4',-jan,jan)) n1
									, sum(decode(substr(kode_akun,1,1),'4',-feb,feb)) n2
									, sum(decode(substr(kode_akun,1,1),'4',-mar,mar)) n3
									, sum(decode(substr(kode_akun,1,1),'4',-apr,apr)) n4
									, sum(decode(substr(kode_akun,1,1),'4',-mei,mei)) n5
									, sum(decode(substr(kode_akun,1,1),'4',-jun,jun)) n6
									, sum(decode(substr(kode_akun,1,1),'4',-jul,jul)) n7
									, sum(decode(substr(kode_akun,1,1),'4',-aug,aug)) n8
									, sum(decode(substr(kode_akun,1,1),'4',-sep,sep)) n9
									, sum(decode(substr(kode_akun,1,1),'4',-okt,okt)) n10
									, sum(decode(substr(kode_akun,1,1),'4',-nop,nop)) n11
									, sum(decode(substr(kode_akun,1,1),'4',-des,des)) n12
									, kode_ubis, kode_cfu
								from  bpc_mbudget_rkm a
							 where a.tahun = '$tahun' and a.kode_lokasi = '$compCode' and kode_akun like '4%' $filter  
							 group by tahun, kode_lokasi, kode_akun, kode_cc, kode_rkm, kode_ubis, kode_cfu
							 order by kode_cc, kode_akun");
		$ret = $db->execArraySQL($sql);
		
		$i = 0;//, kode_rkm, kode_rkm 
		$rs = $db->execute("Select kode_akun, kode_cc
									, sum(decode(substr(kode_akun,1,1),'4',-jan,jan)) n1
									, sum(decode(substr(kode_akun,1,1),'4',-feb,feb)) n2
									, sum(decode(substr(kode_akun,1,1),'4',-mar,mar)) n3
									, sum(decode(substr(kode_akun,1,1),'4',-apr,apr)) n4
									, sum(decode(substr(kode_akun,1,1),'4',-mei,mei)) n5
									, sum(decode(substr(kode_akun,1,1),'4',-jun,jun)) n6
									, sum(decode(substr(kode_akun,1,1),'4',-jul,jul)) n7
									, sum(decode(substr(kode_akun,1,1),'4',-aug,aug)) n8
									, sum(decode(substr(kode_akun,1,1),'4',-sep,sep)) n9
									, sum(decode(substr(kode_akun,1,1),'4',-okt,okt)) n10
									, sum(decode(substr(kode_akun,1,1),'4',-nop,nop)) n11
									, sum(decode(substr(kode_akun,1,1),'4',-des,des)) n12
								from  bpc_mbudget_rkm a
							 where a.tahun = '$tahun' and substr(a.kode_akun,1,1) in ('4')  and a.kode_lokasi = '$compCode' $filter  
							 group by kode_akun, kode_cc
							 order by kode_cc, kode_akun");
		
		$recordCount = 0;	
		$ccrkm = array();
		$kode = "";
		$data = new server_util_arrayList();
		while ($row = $rs->FetchNextObject(false)){
			$i++;
			$index = sprintf("%.06d",$i);
			
			$data->add(array ("PROFIT_CTR"=> $row->kode_cc,
							"GL_ACCOUNT"=>"00" . $row->kode_akun,
							"CURRENCY_ISO"=>"IDR",
							"CURRENCY"=>"IDR",
							"HSLVT"=>"",
							"HSL01"=> number_format(round($row->n1) / 100,2,'.',''),
							"HSL02"=> number_format(round($row->n2) / 100,2,'.',''),
							"HSL03"=> number_format(round($row->n3) / 100,2,'.',''),
							"HSL04"=> number_format(round($row->n4) / 100,2,'.',''),
							"HSL05"=> number_format(round($row->n5) / 100,2,'.',''),
							"HSL06"=> number_format(round($row->n6) / 100,2,'.',''),
							"HSL07"=> number_format(round($row->n7) / 100,2,'.',''),
							"HSL08"=> number_format(round($row->n8) / 100,2,'.',''),
							"HSL09"=> number_format(round($row->n9) / 100,2,'.',''),
							"HSL10"=> number_format(round($row->n10) / 100,2,'.',''),
							"HSL11"=> number_format(round($row->n11) / 100,2,'.',''),
							"HSL12"=> number_format(round($row->n12) / 100,2,'.',''),
							"HSL13"=> "0",
							"HSL14"=> "0","HSL15"=>"0","HSL16"=>"0"));
			
			//error_log(print_r(array( "data" => (array) $row), true));
			if ($i % 10 == 0){ //5
				$res = $this->post2SAP7KE1($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex, $data, $sapUser, $sapPwd, $version);
				if (count($res) > 0){
					//return array("7KE1 Error " => print_r($res, true) );
					//return array("7KE1 Error" => print_r($res, true) );
				}
				$data = new server_util_arrayList();
			}
			$recordCount++;
		}
		if ($data->getLength() > 0){
			$res = $this->post2SAP7KE1($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex, $data, $sapUser, $sapPwd, $version);
			if (count($res) > 0){
				return array("7KE1 Error" => print_r($res, true) );
			}
		}
		return $res;
	}
	function transferSAPExp($compCode, $model, $tahun, $ubis, $sapUser, $sapPwd, $version){
		$db = $this->getDb();
		$rfcLib = $this->getSAPConnection($compCode );
		$rfc = $rfcLib->login($sapUser, $sapPwd);
		$login = new server_util_Map();
		//query 
		$login->set("user", $sapUser);
		$login->set("passwd", $sapPwd);

		$filter = " and " . $this->getFilterUbis("a", $ubis, $compCode);//a.kode_rkm ,  //
		$filter2 = " and " . $this->getFilterUbis("b", $ubis, $compCode);//a.kode_rkm ,  //
		$rs = $db->execute("Select distinct a.kode_cc, a.kode_rkm ,  a.kode_akun 
							from bpc_mbudget_rkm_staging a 
							 left outer join bpc_mbudget_rkm b on b.kode_cc = a.kode_cc  and b.kode_rkm = a.kode_rkm and b.kode_akun = a.kode_akun 
							 				and b.kode_lokasi = a.kode_lokasi and b.tahun = a.tahun $filter2 
							 where a.tahun = '$tahun' and a.kode_lokasi = '$compCode' $filter 
							 and not a.kode_akun like '4%' and b.kode_akun is null 
							 order by kode_cc, kode_akun, kode_rkm");
		$data = new server_util_arrayList();
		$coobject = new server_util_arrayList();
		$listIndex = new server_util_arrayList();

		$kp26ListIndex = new server_util_arrayList();
		$kp26ListIndex = new server_util_arrayList();
		$kp26Object = new server_util_arrayList();
		$kp26Data = new server_util_arrayList();
		$ke1data = new server_util_arrayList();
		$proseske1 = array();
		$i = 0;
		$ccrkm = array();
		$filter = "";
		$sql = new server_util_arrayList();
		while ($row = $rs->FetchNextObject(false)){
			$i++;
			$index = sprintf("%.06d",$i);
			
			if (substr($row->kode_akun,0,1) == "4" && !in_array($row->kode_cc . $row->kode_akun, $proseske1)){
				
			}else if (substr($row->kode_akun,0,1) != "4") {
				$coobject->add(array("OBJECT_INDEX" => $index, "COSTCENTER" => $row->kode_cc, "ACTTYPE" => "","CO_BUSPROC" =>"","ORDERID"=>"","WBS_ELEMENT"=>""));
				$listIndex->add(array("OBJECT_INDEX" => $index, "VALUE_INDEX" =>  $index,"ATTRIB_INDEX"=>"000000"));
				$data->add(array("VALUE_INDEX"=>$index,"COST_ELEM"=>$row->kode_akun
						,"RESOURCE"=>"","TRANS_CURRENCY_ISO"=>"","TRANS_CURR"=>""
						,"UNIT_ISO"=>"","UNIT_OF_MEASURE"=>""
						,"FIX_VAL_PER01"=>"0"
						,"FIX_VAL_PER02"=>"0"
						,"FIX_VAL_PER03"=>"0"
						,"FIX_VAL_PER04"=>"0"
						,"FIX_VAL_PER05"=>"0"
						,"FIX_VAL_PER06"=>"0"
						,"FIX_VAL_PER07"=>"0"
						,"FIX_VAL_PER08"=>"0"
						,"FIX_VAL_PER09"=>"0"
						,"FIX_VAL_PER10"=>"0"
						,"FIX_VAL_PER11"=>"0"
						,"FIX_VAL_PER12"=>"0","FIX_VAL_PER13"=>"","FIX_VAL_PER14"=>"","FIX_VAL_PER15"=>"","FIX_VAL_PER16"=>"","VAR_VAL_PER01"=>"","VAR_VAL_PER02"=>"","VAR_VAL_PER03"=>"","VAR_VAL_PER04"=>"","VAR_VAL_PER05"=>"","VAR_VAL_PER06"=>"","VAR_VAL_PER07"=>"","VAR_VAL_PER08"=>"","VAR_VAL_PER09"=>"","VAR_VAL_PER10"=>"","VAR_VAL_PER11"=>"","VAR_VAL_PER12"=>"","VAR_VAL_PER13"=>"","VAR_VAL_PER14"=>"","VAR_VAL_PER15"=>"","VAR_VAL_PER16"=>"","FIX_QUAN_PER01"=>"","FIX_QUAN_PER02"=>"","FIX_QUAN_PER03"=>"","FIX_QUAN_PER04"=>"","FIX_QUAN_PER05"=>"","FIX_QUAN_PER06"=>"","FIX_QUAN_PER07"=>"","FIX_QUAN_PER08"=>"","FIX_QUAN_PER09"=>"","FIX_QUAN_PER10"=>"","FIX_QUAN_PER11"=>"","FIX_QUAN_PER12"=>"","FIX_QUAN_PER13"=>"","FIX_QUAN_PER14"=>"","FIX_QUAN_PER15"=>"","FIX_QUAN_PER16"=>"","VAR_QUAN_PER01"=>"","VAR_QUAN_PER02"=>"","VAR_QUAN_PER03"=>"","VAR_QUAN_PER04"=>"","VAR_QUAN_PER05"=>"","VAR_QUAN_PER06"=>"","VAR_QUAN_PER07"=>"","VAR_QUAN_PER08"=>"","VAR_QUAN_PER09"=>"","VAR_QUAN_PER10"=>"","VAR_QUAN_PER11"=>"","VAR_QUAN_PER12"=>"","VAR_QUAN_PER13"=>"","VAR_QUAN_PER14"=>"","VAR_QUAN_PER15"=>"","VAR_QUAN_PER16"=>"","FUND"=>"","FUNCTION"=>"","GRANT_NBR"=>"","FUND_LONG"=>"","BUDGET_PERIOD"=>""));
				
			}			
			//KP26
			if (!in_array($row->kode_cc.$row->kode_rkm, $ccrkm) ){

				$ccrkm[] = $row->kode_cc.$row->kode_rkm;
				$kp26ListIndex->add(array("OBJECT_INDEX" => $index, "VALUE_INDEX" =>  $index,"ATTRIB_INDEX"=>"000000"));
				$kp26Object->add(array("OBJECT_INDEX" => $index, "COSTCENTER" => $row->kode_cc, "ACTTYPE" => $row->kode_rkm,"CO_BUSPROC" =>""));
				$kp26Data->add(array ("VALUE_INDEX"=>$index,
						"ACTVTY_QTY_PER01"=>"0",
						"ACTVTY_QTY_PER02"=>"0",
						"ACTVTY_QTY_PER03"=>"0",
						"ACTVTY_QTY_PER04"=>"0",
						"ACTVTY_QTY_PER05"=>"0",
						"ACTVTY_QTY_PER06"=>"0",
						"ACTVTY_QTY_PER07"=>"0",
						"ACTVTY_QTY_PER08"=>"0",
						"ACTVTY_QTY_PER09"=>"0",
						"ACTVTY_QTY_PER10"=>"0",
						"ACTVTY_QTY_PER11"=>"0",
						"ACTVTY_QTY_PER12"=>"0","ACTVTY_QTY_PER13"=>"","ACTVTY_QTY_PER14"=>"","ACTVTY_QTY_PER15"=>"","ACTVTY_QTY_PER16"=>"","ACTVTY_CAP_PER01"=>"","ACTVTY_CAP_PER02"=>"","ACTVTY_CAP_PER03"=>"","ACTVTY_CAP_PER04"=>"","ACTVTY_CAP_PER05"=>"","ACTVTY_CAP_PER06"=>"","ACTVTY_CAP_PER07"=>"","ACTVTY_CAP_PER08"=>"","ACTVTY_CAP_PER09"=>"","ACTVTY_CAP_PER10"=>"","ACTVTY_CAP_PER11"=>"","ACTVTY_CAP_PER12"=>"","ACTVTY_CAP_PER13"=>"","ACTVTY_CAP_PER14"=>"","ACTVTY_CAP_PER15"=>"","ACTVTY_CAP_PER16"=>"","PRICE_FIX_PER01"=>"","PRICE_FIX_PER02"=>"","PRICE_FIX_PER03"=>"","PRICE_FIX_PER04"=>"","PRICE_FIX_PER05"=>"","PRICE_FIX_PER06"=>"","PRICE_FIX_PER07"=>"","PRICE_FIX_PER08"=>"","PRICE_FIX_PER09"=>"","PRICE_FIX_PER10"=>"","PRICE_FIX_PER11"=>"","PRICE_FIX_PER12"=>"","PRICE_FIX_PER13"=>"","PRICE_FIX_PER14"=>"","PRICE_FIX_PER15"=>"","PRICE_FIX_PER16"=>"","PRICE_VAR_PER01"=>"","PRICE_VAR_PER02"=>"","PRICE_VAR_PER03"=>"","PRICE_VAR_PER04"=>"","PRICE_VAR_PER05"=>"","PRICE_VAR_PER06"=>"","PRICE_VAR_PER07"=>"","PRICE_VAR_PER08"=>"","PRICE_VAR_PER09"=>"","PRICE_VAR_PER10"=>"","PRICE_VAR_PER11"=>"","PRICE_VAR_PER12"=>"","PRICE_VAR_PER13"=>"","PRICE_VAR_PER14"=>"","PRICE_VAR_PER15"=>"","PRICE_VAR_PER16"=>"","PRICE_UNIT_PER01"=>"","PRICE_UNIT_PER02"=>"","PRICE_UNIT_PER03"=>"","PRICE_UNIT_PER04"=>"","PRICE_UNIT_PER05"=>"","PRICE_UNIT_PER06"=>"","PRICE_UNIT_PER07"=>"","PRICE_UNIT_PER08"=>"","PRICE_UNIT_PER09"=>"","PRICE_UNIT_PER10"=>"","PRICE_UNIT_PER11"=>"","PRICE_UNIT_PER12"=>"","PRICE_UNIT_PER13"=>"","PRICE_UNIT_PER14"=>"","PRICE_UNIT_PER15"=>"","PRICE_UNIT_PER16"=>"","EQUIVAL_NO_PER01"=>"","EQUIVAL_NO_PER02"=>"","EQUIVAL_NO_PER03"=>"","EQUIVAL_NO_PER04"=>"","EQUIVAL_NO_PER05"=>"","EQUIVAL_NO_PER06"=>"","EQUIVAL_NO_PER07"=>"","EQUIVAL_NO_PER08"=>"","EQUIVAL_NO_PER09"=>"","EQUIVAL_NO_PER10"=>"","EQUIVAL_NO_PER11"=>"","EQUIVAL_NO_PER12"=>"","EQUIVAL_NO_PER13"=>"","EQUIVAL_NO_PER14"=>"","EQUIVAL_NO_PER15"=>"","EQUIVAL_NO_PER16"=>"","UNIT_ISO"=>"","UNIT_OF_MEASURE"=>"","CURRENCY_ISO"=>"","CURRENCY"=>""));
			}
		
		}

		if (count($coobject) > 0){
			$res = $this->post2SAPKP26($rfcLib, $rfc, $compCode,$tahun, $kp26Object, $kp26ListIndex, $kp26Data, $sapUser, $sapPwd, $version);
			if (count($res) == 0)
			{
				error_log("Done Reset KP26");	
			}else return array("Reset KP26 Error" => print_r($res, true) );
		}
			
		$res = $this->post2SAPKP06($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex, $data, $sapUser, $sapPwd, $version);
		if (count($res) > 0){
			return array("Reset KP06 Error" => print_r($res, true) );
		}else error_log("Done Reset KP06");	


		
		$data = new server_util_arrayList();
		$coobject = new server_util_arrayList();
		$listIndex = new server_util_arrayList();
		$kp26ListIndex = new server_util_arrayList();
		$kp26Object = new server_util_arrayList();
		$kp26Data = new server_util_arrayList();
		///select dari staging yg tdk ada di data baru untuk di nolkan di SAP;
		//KP26
		$sql = new server_util_arrayList();	
		$sql->add("delete from bpc_mbudget_rkm_staging a where tahun = '$tahun' and kode_lokasi ='$compCode' and not kode_akun like '4%' $filter ");
		$sql->add("insert into bpc_mbudget_rkm_staging(tahun, kode_lokasi, kode_akun, kode_cc, kode_rkm, jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des ,kode_ubis, kode_cfu) 
							select tahun, kode_lokasi, kode_akun, kode_cc, kode_rkm
									, sum(decode(substr(kode_akun,1,1),'4',-jan,jan)) n1
									, sum(decode(substr(kode_akun,1,1),'4',-feb,feb)) n2
									, sum(decode(substr(kode_akun,1,1),'4',-mar,mar)) n3
									, sum(decode(substr(kode_akun,1,1),'4',-apr,apr)) n4
									, sum(decode(substr(kode_akun,1,1),'4',-mei,mei)) n5
									, sum(decode(substr(kode_akun,1,1),'4',-jun,jun)) n6
									, sum(decode(substr(kode_akun,1,1),'4',-jul,jul)) n7
									, sum(decode(substr(kode_akun,1,1),'4',-aug,aug)) n8
									, sum(decode(substr(kode_akun,1,1),'4',-sep,sep)) n9
									, sum(decode(substr(kode_akun,1,1),'4',-okt,okt)) n10
									, sum(decode(substr(kode_akun,1,1),'4',-nop,nop)) n11
									, sum(decode(substr(kode_akun,1,1),'4',-des,des)) n12
									, kode_ubis, kode_cfu
								from  bpc_mbudget_rkm a
							 where a.tahun = '$tahun' and a.kode_lokasi = '$compCode' and not kode_akun like '4%' $filter  
							 group by tahun, kode_lokasi, kode_akun, kode_cc, kode_rkm, kode_ubis, kode_cfu
							 order by kode_cc, kode_akun");
		$ret = $db->execArraySQL($sql);
		
		$rs = $db->execute("Select kode_cc, kode_rkm
									, sum(decode(substr(kode_akun,1,1),'4',-jan,jan)) n1
									, sum(decode(substr(kode_akun,1,1),'4',-feb,feb)) n2
									, sum(decode(substr(kode_akun,1,1),'4',-mar,mar)) n3
									, sum(decode(substr(kode_akun,1,1),'4',-apr,apr)) n4
									, sum(decode(substr(kode_akun,1,1),'4',-mei,mei)) n5
									, sum(decode(substr(kode_akun,1,1),'4',-jun,jun)) n6
									, sum(decode(substr(kode_akun,1,1),'4',-jul,jul)) n7
									, sum(decode(substr(kode_akun,1,1),'4',-aug,aug)) n8
									, sum(decode(substr(kode_akun,1,1),'4',-sep,sep)) n9
									, sum(decode(substr(kode_akun,1,1),'4',-okt,okt)) n10
									, sum(decode(substr(kode_akun,1,1),'4',-nop,nop)) n11
									, sum(decode(substr(kode_akun,1,1),'4',-des,des)) n12
								from  bpc_mbudget_rkm a
							where a.tahun = '$tahun' and a.kode_lokasi = '$compCode' and not a.kode_akun like '4%'  $filter  
							group by kode_cc, kode_rkm 
							order by kode_cc, kode_rkm");
		$i = 0;
		$recordCount = 0;
		error_log("Proses KP26");
		while ($row = $rs->FetchNextObject(false)){
			$i++;
			$index2 = sprintf("%.06d",$i);
			$kp26ListIndex->add(array("OBJECT_INDEX" => $index2, "VALUE_INDEX" =>  $index2,"ATTRIB_INDEX"=>"000000"));
			$kp26Object->add(array("OBJECT_INDEX" => $index2, "COSTCENTER" => $row->kode_cc, "ACTTYPE" => $row->kode_rkm,"CO_BUSPROC" =>""));
			$kp26Data->add(array ("VALUE_INDEX"=>$index2,
					"ACTVTY_QTY_PER01"=> 1,//$row->n1,
					"ACTVTY_QTY_PER02"=> 1,//$row->n2,
					"ACTVTY_QTY_PER03"=> 1, //$row->n3,
					"ACTVTY_QTY_PER04"=> 1, //$row->n4,
					"ACTVTY_QTY_PER05"=> 1, //$row->n5,
					"ACTVTY_QTY_PER06"=> 1, //$row->n6,
					"ACTVTY_QTY_PER07"=> 1, //$row->n7,
					"ACTVTY_QTY_PER08"=> 1, //$row->n8,
					"ACTVTY_QTY_PER09"=> 1, //$row->n9,
					"ACTVTY_QTY_PER10"=> 1, //$row->n10,
					"ACTVTY_QTY_PER11"=> 1, //$row->n11,
					"ACTVTY_QTY_PER12"=> 1, //$row->n12,
					"ACTVTY_QTY_PER13"=>"","ACTVTY_QTY_PER14"=>"","ACTVTY_QTY_PER15"=>"","ACTVTY_QTY_PER16"=>"","ACTVTY_CAP_PER01"=>"","ACTVTY_CAP_PER02"=>"","ACTVTY_CAP_PER03"=>"","ACTVTY_CAP_PER04"=>"","ACTVTY_CAP_PER05"=>"","ACTVTY_CAP_PER06"=>"","ACTVTY_CAP_PER07"=>"","ACTVTY_CAP_PER08"=>"","ACTVTY_CAP_PER09"=>"","ACTVTY_CAP_PER10"=>"","ACTVTY_CAP_PER11"=>"","ACTVTY_CAP_PER12"=>"","ACTVTY_CAP_PER13"=>"","ACTVTY_CAP_PER14"=>"","ACTVTY_CAP_PER15"=>"","ACTVTY_CAP_PER16"=>"","PRICE_FIX_PER01"=>"","PRICE_FIX_PER02"=>"","PRICE_FIX_PER03"=>"","PRICE_FIX_PER04"=>"","PRICE_FIX_PER05"=>"","PRICE_FIX_PER06"=>"","PRICE_FIX_PER07"=>"","PRICE_FIX_PER08"=>"","PRICE_FIX_PER09"=>"","PRICE_FIX_PER10"=>"","PRICE_FIX_PER11"=>"","PRICE_FIX_PER12"=>"","PRICE_FIX_PER13"=>"","PRICE_FIX_PER14"=>"","PRICE_FIX_PER15"=>"","PRICE_FIX_PER16"=>"","PRICE_VAR_PER01"=>"","PRICE_VAR_PER02"=>"","PRICE_VAR_PER03"=>"","PRICE_VAR_PER04"=>"","PRICE_VAR_PER05"=>"","PRICE_VAR_PER06"=>"","PRICE_VAR_PER07"=>"","PRICE_VAR_PER08"=>"","PRICE_VAR_PER09"=>"","PRICE_VAR_PER10"=>"","PRICE_VAR_PER11"=>"","PRICE_VAR_PER12"=>"","PRICE_VAR_PER13"=>"","PRICE_VAR_PER14"=>"","PRICE_VAR_PER15"=>"","PRICE_VAR_PER16"=>"","PRICE_UNIT_PER01"=>"","PRICE_UNIT_PER02"=>"","PRICE_UNIT_PER03"=>"","PRICE_UNIT_PER04"=>"","PRICE_UNIT_PER05"=>"","PRICE_UNIT_PER06"=>"","PRICE_UNIT_PER07"=>"","PRICE_UNIT_PER08"=>"","PRICE_UNIT_PER09"=>"","PRICE_UNIT_PER10"=>"","PRICE_UNIT_PER11"=>"","PRICE_UNIT_PER12"=>"","PRICE_UNIT_PER13"=>"","PRICE_UNIT_PER14"=>"","PRICE_UNIT_PER15"=>"","PRICE_UNIT_PER16"=>"","EQUIVAL_NO_PER01"=>"","EQUIVAL_NO_PER02"=>"","EQUIVAL_NO_PER03"=>"","EQUIVAL_NO_PER04"=>"","EQUIVAL_NO_PER05"=>"","EQUIVAL_NO_PER06"=>"","EQUIVAL_NO_PER07"=>"","EQUIVAL_NO_PER08"=>"","EQUIVAL_NO_PER09"=>"","EQUIVAL_NO_PER10"=>"","EQUIVAL_NO_PER11"=>"","EQUIVAL_NO_PER12"=>"","EQUIVAL_NO_PER13"=>"","EQUIVAL_NO_PER14"=>"","EQUIVAL_NO_PER15"=>"","EQUIVAL_NO_PER16"=>"","UNIT_ISO"=>"","UNIT_OF_MEASURE"=>"","CURRENCY_ISO"=>"","CURRENCY"=>""));
			//error_log(print_r(array("index"=>$index2, "dataKP26" => (array) $row), true));
			if ($i % 3000 == 0){ //5
				$res = $this->post2SAPKP26($rfcLib, $rfc, $compCode, $tahun, $kp26Object, $kp26ListIndex, $kp26Data, $sapUser, $sapPwd, $version);
				if (count($res) > 0){
					return array("KP26 Error" => print_r($res, true) );
				}
				error_log("Done KP26 $i " . print_r($res, true) );
				$kp26ListIndex = new server_util_arrayList();
				$kp26Object = new server_util_arrayList();
				$kp26Data = new server_util_arrayList();
			}
			//if ($recordCount == 8)
			//	break;
			$recordCount++;
		}
		if ($kp26Data->getLength() > 0){
			$res = $this->post2SAPKP26($rfcLib, $rfc, $compCode,$tahun, $kp26Object, $kp26ListIndex, $kp26Data, $sapUser, $sapPwd, $version);
			if (count($res) > 0){
				return array("KP26 Error" => print_r($res, true) );	
			}
			error_log("Done KP26 $i " . print_r($res, true) );
		}
		error_log("Proses KP06");
		$i = 0;
		$recordCount = 0;
		//, kode_rkm, kode_rkm 
		$rs = $db->execute("Select kode_akun, kode_cc
									, sum(decode(substr(kode_akun,1,1),'4',-jan,jan)) n1
									, sum(decode(substr(kode_akun,1,1),'4',-feb,feb)) n2
									, sum(decode(substr(kode_akun,1,1),'4',-mar,mar)) n3
									, sum(decode(substr(kode_akun,1,1),'4',-apr,apr)) n4
									, sum(decode(substr(kode_akun,1,1),'4',-mei,mei)) n5
									, sum(decode(substr(kode_akun,1,1),'4',-jun,jun)) n6
									, sum(decode(substr(kode_akun,1,1),'4',-jul,jul)) n7
									, sum(decode(substr(kode_akun,1,1),'4',-aug,aug)) n8
									, sum(decode(substr(kode_akun,1,1),'4',-sep,sep)) n9
									, sum(decode(substr(kode_akun,1,1),'4',-okt,okt)) n10
									, sum(decode(substr(kode_akun,1,1),'4',-nop,nop)) n11
									, sum(decode(substr(kode_akun,1,1),'4',-des,des)) n12
								from  bpc_mbudget_rkm a
							 where a.tahun = '$tahun' and  not substr(a.kode_akun,1,1) in ('4')  
							 	and a.kode_lokasi = '$compCode'
								 $filter  
							 group by kode_akun, kode_cc
							 order by kode_cc, kode_akun");//and progress  <> '4'
		
		$recordCount = 0;	
		$ccrkm = array();
		$kode = "";
		
		while ($row = $rs->FetchNextObject(false)){
			$i++;
			$index = sprintf("%.06d",$i);
			$sql->add("update bpc_mbudget_rkm set progress='4' where tahun = '$tahun' and kode_lokasi = '$compCode' and concat(kode_cc, kode_akun) =  '".$row->kode_cc . $row->kode_akun."' ");

			$coobject->add(array("OBJECT_INDEX" => $index, "COSTCENTER" => $row->kode_cc, "ACTTYPE" => "","CO_BUSPROC" =>"","ORDERID"=>"","WBS_ELEMENT"=>""));
			$listIndex->add(array("OBJECT_INDEX" => $index, "VALUE_INDEX" =>  $index,"ATTRIB_INDEX"=>"000000"));
			$data->add(array("VALUE_INDEX"=>$index,"COST_ELEM"=>$row->kode_akun
					,"RESOURCE"=>"","TRANS_CURRENCY_ISO"=>"","TRANS_CURR"=>""
					,"UNIT_ISO"=>"","UNIT_OF_MEASURE"=>""
					,"FIX_VAL_PER01"=> sprintf("%f",round($row->n1))
					,"FIX_VAL_PER02"=> sprintf("%f",round($row->n2))
					,"FIX_VAL_PER03"=> sprintf("%f",round($row->n3))
					,"FIX_VAL_PER04"=> sprintf("%f",round($row->n4))
					,"FIX_VAL_PER05"=> sprintf("%f",round($row->n5))
					,"FIX_VAL_PER06"=> sprintf("%f",round($row->n6))
					,"FIX_VAL_PER07"=> sprintf("%f",round($row->n7))
					,"FIX_VAL_PER08"=> sprintf("%f",round($row->n8))
					,"FIX_VAL_PER09"=> sprintf("%f",round($row->n9))
					,"FIX_VAL_PER10"=> sprintf("%f",round($row->n10))
					,"FIX_VAL_PER11"=> sprintf("%f",round($row->n11))
					,"FIX_VAL_PER12"=> sprintf("%f",round($row->n12)),
					"FIX_VAL_PER13"=>"","FIX_VAL_PER14"=>"","FIX_VAL_PER15"=>"","FIX_VAL_PER16"=>"","VAR_VAL_PER01"=>"","VAR_VAL_PER02"=>"","VAR_VAL_PER03"=>"","VAR_VAL_PER04"=>"","VAR_VAL_PER05"=>"","VAR_VAL_PER06"=>"","VAR_VAL_PER07"=>"","VAR_VAL_PER08"=>"","VAR_VAL_PER09"=>"","VAR_VAL_PER10"=>"","VAR_VAL_PER11"=>"","VAR_VAL_PER12"=>"","VAR_VAL_PER13"=>"","VAR_VAL_PER14"=>"","VAR_VAL_PER15"=>"","VAR_VAL_PER16"=>"","FIX_QUAN_PER01"=>"","FIX_QUAN_PER02"=>"","FIX_QUAN_PER03"=>"","FIX_QUAN_PER04"=>"","FIX_QUAN_PER05"=>"","FIX_QUAN_PER06"=>"","FIX_QUAN_PER07"=>"","FIX_QUAN_PER08"=>"","FIX_QUAN_PER09"=>"","FIX_QUAN_PER10"=>"","FIX_QUAN_PER11"=>"","FIX_QUAN_PER12"=>"","FIX_QUAN_PER13"=>"","FIX_QUAN_PER14"=>"","FIX_QUAN_PER15"=>"","FIX_QUAN_PER16"=>"","VAR_QUAN_PER01"=>"","VAR_QUAN_PER02"=>"","VAR_QUAN_PER03"=>"","VAR_QUAN_PER04"=>"","VAR_QUAN_PER05"=>"","VAR_QUAN_PER06"=>"","VAR_QUAN_PER07"=>"","VAR_QUAN_PER08"=>"","VAR_QUAN_PER09"=>"","VAR_QUAN_PER10"=>"","VAR_QUAN_PER11"=>"","VAR_QUAN_PER12"=>"","VAR_QUAN_PER13"=>"","VAR_QUAN_PER14"=>"","VAR_QUAN_PER15"=>"","VAR_QUAN_PER16"=>"","FUND"=>"","FUNCTION"=>"","GRANT_NBR"=>"","FUND_LONG"=>"","BUDGET_PERIOD"=>""));
			
			
			//error_log(print_r(array("index"=>$index, "dataKP06" => (array) $row), true));
			if ($i % 4000 == 0){ //5
				$res = $this->post2SAPKP06($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex, $data, $sapUser, $sapPwd, $version);
				$ret = $db->execArraySQL($sql);
				if (count($res) > 0){
					return array("KP06 Error" => print_r($res, true) ,"sql" => $ret);
				}
				
				$sql = new server_util_arrayList();
				$data = new server_util_arrayList();
				$coobject = new server_util_arrayList();
				$listIndex = new server_util_arrayList();
				
				$rfcLib = $this->getSAPConnection($compCode );
				$rfc = $rfcLib->login($sapUser, $sapPwd);
			
			}
		
			$recordCount++;
		}
		if ($i > 0){
			$res = $this->post2SAPKP06($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex, $data, $sapUser, $sapPwd, $version);
			$ret = $db->execArraySQL($sql);
			if (count($res) > 0){
				return array("KP06 Error" => print_r($res, true),"sql" => $ret);
			}
			
			
		}
		return $res;
	}
	function post2SAPKP06($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex ,$data, $sapUser, $sapPwd, $version){
		try{
			error_log("Proses Batch KP06 " . count($coobject->getArray()) );
			error_log("Data Batch KP06 " . print_r(array($coobject->getArray(), $data->getArray()), true) );
			//$rfcLib = $this->getSAPConnection($compCode, true);
			$login = new server_util_Map();
			//query 
			$login->set("user", $sapUser);
			$login->set("passwd", $sapPwd);
			$sapImp = new server_util_Map(array(
													"DELTA" => "",
													"TESTRUN" => "",
													"HEADERINFO" => array ("CO_AREA"=>$compCode,"FISC_YEAR"=>$tahun,"PERIOD_FROM"=>"01","PERIOD_TO"=>"12","VERSION"=> "00$version","DOC_HDR_TX"=>"","PLAN_CURRTYPE"=>"C")
												));
			$sapExpTable = new server_util_Map(array("RETURN"));
			$sapImpTable = new server_util_Map(array("CONTRL" => new server_util_arrayList(),"COOBJECT" => $coobject,"INDEXSTRUCTURE" => $listIndex,"PERVALUE" => $data,"TOTVALUE"  => new server_util_arrayList()));
			$dataSAP = $rfcLib->callRFC($login,"ZRFC_COSTACTPLN_POSTPRIMCOST", $sapImp, $sapExpTable, $sapImpTable, null, true, false);
			error_log("Done");
			$return = $dataSAP->get("RETURN")->getArray();
			error_log("KP06 =>" .print_r($return, true));
			return $return;
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}
	function post2SAPKP26($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex ,$data, $sapUser, $sapPwd, $version){
		try{
			error_log("Proses Batch KP26 " . count($coobject->getArray()) );
			//error_log("Data Batch KP26 " . print_r(array($coobject->getArray() , $data->getArray()), true) );
			//$rfcLib = $this->getSAPConnection($compCode, true);
			$login = new server_util_Map();
			//query 
			$login->set("user", $sapUser);
			$login->set("passwd", $sapPwd);
			$sapImp = new server_util_Map(array(
													"DELTA" => "",
													"TESTRUN" => "",
													"HEADERINFO" => array ("CO_AREA"=>$compCode,"FISC_YEAR"=>$tahun,"PERIOD_FROM"=>"01","PERIOD_TO"=>"12","VERSION"=> "00$version","DOC_HDR_TX"=>"","PLAN_CURRTYPE"=>"C")
												));
			$sapExpTable = new server_util_Map(array("RETURN"));
			$sapImpTable = new server_util_Map(array("CONTRL" => new server_util_arrayList(),"COOBJECT" => $coobject,"INDEXSTRUCTURE" => $listIndex,"PERVALUE" => $data,"TOTVALUE"  => new server_util_arrayList()));
			$dataSAP = $rfcLib->callRFC($login,"ZRFC_COSTACTPLN_POSTACTOUTPUT", $sapImp, $sapExpTable, $sapImpTable, null, false, true, $rfc);
			error_log("Done");
			$return = $dataSAP->get("RETURN")->getArray();
			error_log("KP26 =>" . print_r($return, true));
			return $return;
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}
	function post2SAP7KE1($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex ,$data, $sapUser, $sapPwd, $version){
		try{
			if ($data->getLength() == 0)
				return array();
			error_log("Proses Batch 7KE1 " . $data->getLength() );
			error_log("Proses Batch 7KE1 " . print_r($data->getArray(),true) );
			/*
			CO_AREA
			COMP_CODE
			FISC_YEAR
			PERIOD_FROM
			PERIOD_TO
			VERSION
			CURRENCY_KSL_ISO
			CURRENCY_KSL
			CURRENCY_HSL_ISO
			CURRENCY_HSL
			FY_VARIANT
			CURRENCY_TYPE
			*/
			$login = new server_util_Map();
			//query 
			$login->set("user", $sapUser);
			$login->set("passwd", $sapPwd);
			$sapImp = new server_util_Map(array(
													"DELTA" => "X",
													"TESTRUN" => "",
													"HEADERINFO" => array (	"CO_AREA"=>$compCode,
																			"COMP_CODE"=>$compCode,
																			"FISC_YEAR"=>$tahun,
																			"PERIOD_FROM"=>"001",
																			"PERIOD_TO"=>"012",
																			"VERSION"=> "00$version",
																			"CURRENCY_KSL_ISO" => "IDR",
																			"CURRENCY_KSL" => "IDR",
																			"CURRENCY_HSL_ISO" => "IDR",
																			"CURRENCY_HSL" => "IDR",
																			"FY_VARIANT" => "K4",
																			"CURRENCY_TYPE"=>"H")
												));
			$sapExpTable = new server_util_Map(array("RETURN"));
			$sapImpTable = new server_util_Map(array("PERVALUE" => $data));
			$dataSAP = $rfcLib->callRFC($login,"ZPCA_POST_RFC_PLANDATA", $sapImp, $sapExpTable, $sapImpTable, null, false, true, $rfc);
			error_log("Done");
			$return = $dataSAP->get("RETURN")->getArray();
			
			error_log("7KE1 =>" . print_r($return, true));
			
			return $return;
		}catch(Exception $e){
			error_log($e->getMessage());
		}
	}
	function transferParsial($compCode, $tahun, $ubis, $sapUser, $sapPwd, $version, $list){
		$db = $this->getDb();
		$rfcLib = $this->getSAPConnection($compCode );
		$rfc = $rfcLib->login($sapUser, $sapPwd);
		$login = new server_util_Map();
		//query 
		$login->set("user", $sapUser);
		$login->set("passwd", $sapPwd);


		$databebab = new server_util_arrayList();
		$coobject = new server_util_arrayList();
		$listIndex = new server_util_arrayList();

		$ke1data = new server_util_arrayList();
		$i = 0;
		foreach ($list->getArray() as $key => $val ){
			$sql = new server_util_arrayList();
			$sql->add("delete from bpc_mbudget_rkm_staging a where tahun = '$tahun' and kode_akun = '$val->kode_akun' and kode_cc = '$val->kode_cc' and kode_lokasi ='$compCode'  ");
			$sql->add("insert into bpc_mbudget_rkm_staging(tahun, kode_lokasi, kode_akun, kode_cc, kode_rkm, jan, feb, mar, apr, mei, jun, jul, aug, sep, okt, nop, des ,kode_ubis, kode_cfu) 
								select tahun, kode_lokasi, kode_akun, kode_cc, kode_rkm
										, sum(decode(substr(kode_akun,1,1),'4',-jan,jan)) n1
										, sum(decode(substr(kode_akun,1,1),'4',-feb,feb)) n2
										, sum(decode(substr(kode_akun,1,1),'4',-mar,mar)) n3
										, sum(decode(substr(kode_akun,1,1),'4',-apr,apr)) n4
										, sum(decode(substr(kode_akun,1,1),'4',-mei,mei)) n5
										, sum(decode(substr(kode_akun,1,1),'4',-jun,jun)) n6
										, sum(decode(substr(kode_akun,1,1),'4',-jul,jul)) n7
										, sum(decode(substr(kode_akun,1,1),'4',-aug,aug)) n8
										, sum(decode(substr(kode_akun,1,1),'4',-sep,sep)) n9
										, sum(decode(substr(kode_akun,1,1),'4',-okt,okt)) n10
										, sum(decode(substr(kode_akun,1,1),'4',-nop,nop)) n11
										, sum(decode(substr(kode_akun,1,1),'4',-des,des)) n12
										, kode_ubis, kode_cfu
									from  bpc_mbudget_rkm a
								where a.tahun = '$tahun' and a.kode_lokasi = '$compCode' and kode_akun = '$val->kode_akun' and kode_cc = '$val->kode_cc' 
								group by tahun, kode_lokasi, kode_akun, kode_cc, kode_rkm, kode_ubis, kode_cfu
								order by kode_cc, kode_akun");
			$ret = $db->execArraySQL($sql);
			$rs = $db->execute("Select kode_akun, kode_cc
					, sum(decode(substr(kode_akun,1,1),'4',-jan,jan)) n1
					, sum(decode(substr(kode_akun,1,1),'4',-feb,feb)) n2
					, sum(decode(substr(kode_akun,1,1),'4',-mar,mar)) n3
					, sum(decode(substr(kode_akun,1,1),'4',-apr,apr)) n4
					, sum(decode(substr(kode_akun,1,1),'4',-mei,mei)) n5
					, sum(decode(substr(kode_akun,1,1),'4',-jun,jun)) n6
					, sum(decode(substr(kode_akun,1,1),'4',-jul,jul)) n7
					, sum(decode(substr(kode_akun,1,1),'4',-aug,aug)) n8
					, sum(decode(substr(kode_akun,1,1),'4',-sep,sep)) n9
					, sum(decode(substr(kode_akun,1,1),'4',-okt,okt)) n10
					, sum(decode(substr(kode_akun,1,1),'4',-nop,nop)) n11
					, sum(decode(substr(kode_akun,1,1),'4',-des,des)) n12
				from  bpc_mbudget_rkm a
				where a.tahun = '$tahun' and kode_akun = '$val->kode_akun' and kode_cc = '$val->kode_cc'  and a.kode_lokasi = '$compCode'   
				group by kode_akun, kode_cc
				order by kode_cc, kode_akun");
			if (substr($val->kode_akun,0,1) == '4' ){
				while ($row = $rs->FetchNextObject(false)){
					$ke1data->add(array ("PROFIT_CTR"=> $row->kode_cc,
							"GL_ACCOUNT"=>"00" . $row->kode_akun,
							"CURRENCY_ISO"=>"IDR",
							"CURRENCY"=>"IDR",
							"HSLVT"=>"",
							"HSL01"=> round($row->n1) / 100,
							"HSL02"=> round($row->n2) / 100,
							"HSL03"=> round($row->n3) / 100,
							"HSL04"=> round($row->n4) / 100,
							"HSL05"=> round($row->n5) / 100,
							"HSL06"=> round($row->n6) / 100,
							"HSL07"=> round($row->n7) / 100,
							"HSL08"=> round($row->n8) / 100,
							"HSL09"=> round($row->n9) / 100,
							"HSL10"=> round($row->n10) / 100,
							"HSL11"=> round($row->n11) / 100,
							"HSL12"=> round($row->n12) / 100,
							"HSL13"=> "0",
							"HSL14"=> "0","HSL15"=>"0","HSL16"=>"0"));
				}
			}else {
				while ($row = $rs->FetchNextObject(false)){
					$i++;
					$index = sprintf("%.06d",$i);
					$coobject->add(array("OBJECT_INDEX" => $index, "COSTCENTER" => $row->kode_cc, "ACTTYPE" => "","CO_BUSPROC" =>"","ORDERID"=>"","WBS_ELEMENT"=>""));
					$listIndex->add(array("OBJECT_INDEX" => $index, "VALUE_INDEX" =>  $index,"ATTRIB_INDEX"=>"000000"));
					$data->add(array("VALUE_INDEX"=>$index,"COST_ELEM"=>$row->kode_akun
							,"RESOURCE"=>"","TRANS_CURRENCY_ISO"=>"","TRANS_CURR"=>""
							,"UNIT_ISO"=>"","UNIT_OF_MEASURE"=>""
							,"FIX_VAL_PER01"=> round($row->n1)
							,"FIX_VAL_PER02"=> round($row->n2)
							,"FIX_VAL_PER03"=> round($row->n3)
							,"FIX_VAL_PER04"=> round($row->n4)
							,"FIX_VAL_PER05"=> round($row->n5)
							,"FIX_VAL_PER06"=> round($row->n6)
							,"FIX_VAL_PER07"=> round($row->n7)
							,"FIX_VAL_PER08"=> round($row->n8)
							,"FIX_VAL_PER09"=> round($row->n9)
							,"FIX_VAL_PER10"=> round($row->n10)
							,"FIX_VAL_PER11"=> round($row->n11)
							,"FIX_VAL_PER12"=> round($row->n12),"FIX_VAL_PER13"=>"","FIX_VAL_PER14"=>"","FIX_VAL_PER15"=>"","FIX_VAL_PER16"=>"","VAR_VAL_PER01"=>"","VAR_VAL_PER02"=>"","VAR_VAL_PER03"=>"","VAR_VAL_PER04"=>"","VAR_VAL_PER05"=>"","VAR_VAL_PER06"=>"","VAR_VAL_PER07"=>"","VAR_VAL_PER08"=>"","VAR_VAL_PER09"=>"","VAR_VAL_PER10"=>"","VAR_VAL_PER11"=>"","VAR_VAL_PER12"=>"","VAR_VAL_PER13"=>"","VAR_VAL_PER14"=>"","VAR_VAL_PER15"=>"","VAR_VAL_PER16"=>"","FIX_QUAN_PER01"=>"","FIX_QUAN_PER02"=>"","FIX_QUAN_PER03"=>"","FIX_QUAN_PER04"=>"","FIX_QUAN_PER05"=>"","FIX_QUAN_PER06"=>"","FIX_QUAN_PER07"=>"","FIX_QUAN_PER08"=>"","FIX_QUAN_PER09"=>"","FIX_QUAN_PER10"=>"","FIX_QUAN_PER11"=>"","FIX_QUAN_PER12"=>"","FIX_QUAN_PER13"=>"","FIX_QUAN_PER14"=>"","FIX_QUAN_PER15"=>"","FIX_QUAN_PER16"=>"","VAR_QUAN_PER01"=>"","VAR_QUAN_PER02"=>"","VAR_QUAN_PER03"=>"","VAR_QUAN_PER04"=>"","VAR_QUAN_PER05"=>"","VAR_QUAN_PER06"=>"","VAR_QUAN_PER07"=>"","VAR_QUAN_PER08"=>"","VAR_QUAN_PER09"=>"","VAR_QUAN_PER10"=>"","VAR_QUAN_PER11"=>"","VAR_QUAN_PER12"=>"","VAR_QUAN_PER13"=>"","VAR_QUAN_PER14"=>"","VAR_QUAN_PER15"=>"","VAR_QUAN_PER16"=>"","FUND"=>"","FUNCTION"=>"","GRANT_NBR"=>"","FUND_LONG"=>"","BUDGET_PERIOD"=>""));
				}
			}
		}
		if (count($data) > 0){
			$res = $this->post2SAPKP06($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex, $data, $sapUser, $sapPwd, $version);
			if (count($res) > 0){
				return array("KP06 Error" => print_r($res, true) );
			}
			
		}
		if (count($ke1data) > 0){
			$res = $this->post2SAP7KE1($rfcLib, $rfc, $compCode, $tahun, $coobject, $listIndex, $ke1data, $sapUser, $sapPwd, $version);
			if (count($res) > 0){
				return array("7KE1 Error" => print_r($res, true) );
			}
		}
		return "completed";

	}
	function transportToFipart($tahun){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add(" delete from exs_mbudget where tahun = '$tahun' ");
		$sql->add(" delete from bpc_budget_osd where periode like '$tahun%' ");
		$sql->add(" insert into exs_mbudget 
					select a.kode_akun, kode_cc
							, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * jan) as jan
							, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * feb) as feb
							, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * mar) as mar
							, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * apr) as apr
							, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * mei) as mei
							, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * jun) as jun
							, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * jul) as jul
							, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * aug) as aug
							, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * sep) as sep
							, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * okt) as okt
							, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * nop) as nop
							, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * des) as des
							, tahun, '-','S',sysdate, '".$tahun."01',a.kode_lokasi
				from bpc_mbudget_rkm a 
					left outer join EXS_MASAKUN b on b.kode_akun = a.kode_akun and b.kode_lokasi = a.kode_lokasi 
				where tahun ='$tahun' and a.kode_lokasi = '1000'
				group by tahun, a.kode_akun, kode_cc,a.kode_lokasi");
		$sql->add(" insert into bpc_budget_osd
					select '-', a.kode_akun
					, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) )  as total
					, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * jan) as jan
					, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * feb) as feb
					, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * mar) as mar
					, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * apr) as apr
					, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * mei) as mei
					, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * jun) as jun
					, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * jul) as jul
					, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * aug) as aug
					, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * sep) as sep
					, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * okt) as okt
					, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * nop) as nop
					, sum(decode(substr(a.kode_akun,1,1),'4',-1,1) * des) as des
					, '-', '-', '-', '-','-','-','".$tahun."01', sysdate, (select distinct concat('TG', decode(length(ba_consol) , 1, concat(ba_consol,'0'), ba_consol) ) from bpc_lokasi x where x.kode_lokasi = a.kode_lokasi) 
					, kode_cfu, a.kode_lokasi, a.kode_lokasi, nvl(a.kode_lawan,'-'), nvl(a.kode_lokasi2,'-')
					from bpc_mbudget_rkm a
					left outer join bpc_MASAKUN b on b.kode_akun = a.kode_akun and b.kode_lokasi = '9000'
					where tahun ='$tahun'
					group by tahun,  a.kode_akun,kode_cfu, a.kode_lokasi,nvl(a.kode_lawan,'-'), nvl(a.kode_lokasi2,'-')");
		$ret = $db->execArraySQL($sql);
		return $ret;
	}
	/// TCMS
	function uploadSHL($lokasi, $periode, $jenis, $data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from cash_saldo_shl where kode_lokasi = '$lokasi' and periode = '$periode' and jenis = '$jenis' ");
		foreach($data as $key =>  $val){
			$val->cocd = trim($val->cocd);
			$sql->add("insert into cash_saldo_shl(kode_lokasi, COMP_CODE
						, PERIODE
						, NO_KONTRAK
						, CURR
						, NILAI_HUTANG
						, ANGS_POKOK
						, SALDO_POKOK
						, RATE
						, KURS
						, SALDO_IDR
						, TGL_DUEDATE
						, PERIODE_BAYAR
						, TGL_UPDATE
						, USER_UPDATE
						, jenis )values('$lokasi','$val->cocd','$periode','$val->kontrak','$val->curr'
											,'$val->nilai_hutang','$val->angs','$val->saldo_pokok','$val->rate','$val->kurs','$val->saldo','$val->duedate','$val->periode',sysdate, '$this->userid','$jenis')");
		}
		$ret = $db->execArraySQL($sql);
		return $ret;

	}
	function uploadRKAPCF($periode, $lokasi, $data){
		$db = $this->getDb();
		$tahun = substr($periode,0,4);
		$sql = new server_util_arrayList();
		$sql->add("delete from cash_rkap_cf where kode_lokasi = '$lokasi' and tahun = '$tahun' and periode = '$periode' ");
		foreach($data as $key =>  $val){

			$sql->add("insert into cash_rkap_cf(nourut, kode_lokasi, periode, kode_cf, nama, tahun, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11,n12, tgl_update, user_update)
				values
				($key, '$lokasi','$periode','$val->kode','$val->nama','$tahun','$val->n1','$val->n2','$val->n3','$val->n4','$val->n5','$val->n6','$val->n7','$val->n8','$val->n9','$val->n10','$val->n11','$val->n12',sysdate,'$this->userid')");
		}
		$ret = $db->execArraySQL($sql);
		return $ret;
	}

	function uploadSekuritas($periode, $lokasi, $data){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from cash_sekuritas where kode_lokasi = '$lokasi' and periode = '$periode' ");
		foreach($data as $key =>  $val){
			$sql->add("insert into cash_sekuritas(kode_lokasi,periode, nama, nilai, tgl_update, user_update)
				values
				('$lokasi','$periode','$val->nama','$val->nilai',sysdate,'$this->user')");
		}
		$ret = $db->execArraySQL($sql);
		return $ret;
	}
	// WACC, DER, DSR, DEB2EBITDA
	function addRatio($lokasi, $periode, $rasio){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from cash_ratio where kode_lokasi = '$lokasi' and periode = '$periode' and kode = '$rasio->kode'");
		$sql->add("insert into cash_ratio (kode_lokasi, kode, nama, persen, periode, tgl_update, user_update )values
					('$lokasi','$rasio->kode','$rasio->nama','$rasio->persen','$periode',sysdate, '$this->userid')");

		$ret = $db->execArraySQL($sql);
		return $ret;
	}
	function getRatio($lokasi, $periode, $kode){
		$db = $this->getDb();
		$rs = $db->execute("select kode, nama, persen from cash_ratio where kode_lokasi = '$lokasi' and periode = '$periode' and kode = '$kode' ");
		if ($row = $rs->FetchNextObject(false)){
			return (array)$row;
		}else return array("nama" => "", "persen" => 0);

	}

	// Sekuritas
	function addSekuritas($lokasi, $periode, $rasio){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from cash_sekuritas where kode_lokasi = '$lokasi' and periode = '$periode' and kode = '$rasio->kode'");
		$sql->add("insert into cash_sekuritas (kode_lokasi, kode, nama, nilai, periode, tgl_update, user_update )values
					('$lokasi','$rasio->kode','$rasio->nama','". floatval($rasio->amount)."','$periode',sysdate, '$this->userid')");

		$ret = $db->execArraySQL($sql);
		return $ret;
	}
	function getSekuritas($lokasi, $periode, $kode){
		$db = $this->getDb();
		$rs = $db->execute("select kode, nama, nilai from cash_sekuritas where kode_lokasi = '$lokasi' and periode = '$periode' and kode = '$kode' ");
		if ($row = $rs->FetchNextObject(false)){
			return (array)$row;
		}else return array("nama" => "", "persen" => 0);

	}

	function addSummariesSaham($lokasi, $periode, $keterangan, $file){
		$db = $this->getDb();
		$sql = new server_util_arrayList();
		$sql->add("delete from cash_saham_summary where kode_lokasi = '$lokasi' and periode = '$periode' ");
		$param = new server_util_Map();
		$param->set("tipe","param");
		$param->set("sql","insert into cash_saham_summary(kode_lokasi, periode, keterangan,nama_file, tgl_update, user_update )values(:0,:1,:2,:3,sysdate, :4)");
		$param->set("value", array($lokasi, $periode, $keterangan, $file, $this->userid));
		$sql->add($param);
		$ret = $db->execArraySQL($sql);
		return $ret;
	}

	function callServices($service, $method, $param){
		try{
			uses("services_".$service);
			eval("\$handler = new services_".$service."();");
			$handler->setUserId($this->userid);
			$handlerFunc = array($handler, $method);
			if (is_callable($handlerFunc))
			{
				try
				{
					$result = call_user_func_array($handlerFunc, $param);
					//error_log(json_encode($result) );
					return $result;
				}
				catch (Exception $e)
				{
					error_log($e->getMessage());
					return "Internal Service Error : " . $e;
				}
			}
			else
			{
				error_log("Procedure Note Found ");
				return  "Procedure not found : " . $method;
			}
		}catch(Exception $e){
			error_log($e->getMessage());
			return "Gagal Generate Data " . $e;
		}

	}
	//$induk,$model, $periode, $tipe, $pembagi
	function getRawDataCFU($cfu, $lokasi, $ubis, $periode){
		global $satuan;
		 try{
            $db = $this->getDb();
            if ($induk == "") $induk = $this->cfu;//= "CFU0"
            $pembagi = 1000000000;
            $thn1 = substr($periode,0,4);
            $thn2 = floatval(substr($periode,0,4)) - 1;
            $bln = substr($periode,4,2);
            
            $lastPeriode = $periode;
            $rs = $db->execute("select max(periode) as periode from bpc_budget_osd where periode like '$thn1%'");
            if ($row = $rs->FetchNextObject(false)){
                $lastPeriode = $row->periode;
            }
            
            $lokasi = "9000";
            if (floatval($bln) == 1){
                $thn3 = floatval(substr($periode,0,4)) - 1;
                $bln2 = "12";
            }else {
                $thn3 = $thn1;
                $bln2 = floatval($bln) - 1;
                $bln2 = $bln2 < 10 ? "0$bln2" : $bln2;
            }
            $periode2 = $thn3 . $bln2;
            $addFilter = "";
            
            if (strtoupper($tipe) == "GROSS" || $tipe == ""){
                $addFilter = " and not z.kode_cfu in ('CFUE','CFU205','CFUF','CFUG','CFUD')  ";//'CFU40C',
                $jenis = " and t.jenis in ('TB')";
                $filterBudget = " and not a.kode_cfu in ('CFUE','CFU205') ";//'CFU40C',
            }else if (strtoupper($tipe) == "NETT"){
                $jenis = " and t.jenis in ('TB','RL','IJ') and t.kode_cfu = case when t.kode_cfu2='-' then t.kode_cfu else t.kode_cfu2 end ";//,'AD'
                $filterBudget = " and not a.kode_cfu in ('CFUE') ";
            }else {
                $jenis = "  ";
                $filterBudget = "  ";
            }
                    
            if ($induk != "CFU0"){
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi and ( t.kode_induk = '$induk' ) ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                                   and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                if (strlen($induk) > 4)
                    $field = "z.kode_cfu ";
                else $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons, t.kode_ubis) > 0 ";
               
				$forSubCFU = "and t.kode_cfu = substr('$induk', 0,length(t.kode_cfu)) ";
            }else {
                $join1 = "inner join bpc_cfu t on t.kode_lokasi = z.kode_lokasi ";
                $join2 = "inner join exs_ubis u on u.kode_ubis = y.kode_ubis and u.kode_lokasi = t.kode_lokasi
                                                               and (u.kode_induk = t.kode_ubis  or u.kode_ubis in (select a.kode_ubis from exs_ubis a inner join exs_ubis b on b.kode_ubis = a.kode_induk and b.kode_lokasi = a.kode_lokasi where b.kode_induk = t.kode_ubis and b.kode_lokasi = t.kode_lokasi))";
                $field = "z.kode_induk ";
                $filterCons = " and  instr(z.kode_ubis_cons, t.kode_ubis) > 0   ";
                
				$forSubCFU = "  ";
            }
            $addFilter = $addFilter . $filterCons; 
			$filterCFU = " and a.kode_cfu in ( SELECT kode_cfu
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu)";
			$filterCFU2 = " and t.kode_lokasi in ( SELECT kode_lokasi
							FROM bpc_cfu
							start with kode_induk ='$induk' or kode_cfu = '$induk'
							CONNECT BY kode_induk = PRIOR kode_cfu) $forSubCFU ";
			//inner join bpc_cfu z on t.kode_cfu = substr(z.kode_cfu,0,length(t.kode_cfu)) $addFilter
            $sql2 = "select distinct a.kode_neraca, y.kode_akun, y.nama, y.jenis as jenis_akun 
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_neraca a
                                                inner join bpc_relakun x on x.kode_neraca = a.kode_neraca and x.kode_fs= a.kode_fs and x.kode_lokasi = a.kode_lokasi
                                                inner join bpc_masakun y on y.kode_akun = x.kode_akun and y.kode_lokasi = x.kode_lokasi
                                                left outer join (select x.kode_akun
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as n12
																			, sum(nvl(t.nilai,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) c on c.kode_akun = x.kode_akun
                                                 left outer join (select x.kode_akun
												 							, sum(nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as n12
																			, sum(nvl(t.nilai,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn2."%'  $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_akun
                                                                ) e on e.kode_akun = x.kode_akun
                                            where a.kode_fs = '$model' and a.kode_lokasi = '$lokasi' 
                                            and ( nvl(c.nt,0) <> 0 or c.n1 <> 0 or c.n2 <> 0 or c.n3 <> 0 or c.n4 <> 0 or c.n5 <> 0 or c.n6 <> 0 or c.n7 <> 0
											  or c.n8 <> 0 or c.n9 <> 0 or c.n10 <> 0 or c.n11 <> 0 or c.n12 <> 0
											  or 
											  nvl(e.nt,0) <> 0 or e.n1 <> 0 or e.n2 <> 0 or e.n3 <> 0 or e.n4 <> 0 or e.n5 <> 0 or e.n6 <> 0 or e.n7 <> 0
											  or e.n8 <> 0 or e.n9 <> 0 or e.n10 <> 0 or e.n11 <> 0 or e.n12 <> 0    )
											group by a.kode_neraca, y.kode_akun, y.nama, y.jenis
                                            union
                                            select distinct 'UNMAPPED', a.kode_akun, a.nama , a.jenis as jenis_akun
                                                        , sum(nvl(c.n1,0)) as n1
														, sum(nvl(c.n2,0)) as n2
														, sum(nvl(c.n3,0)) as n3
														, sum(nvl(c.n4,0)) as n4
														, sum(nvl(c.n5,0)) as n5
														, sum(nvl(c.n6,0)) as n6
														, sum(nvl(c.n7,0)) as n7
														, sum(nvl(c.n8,0)) as n8
														, sum(nvl(c.n9,0)) as n9
														, sum(nvl(c.n10,0)) as n10
														, sum(nvl(c.n11,0)) as n11
														, sum(nvl(c.n12,0)) as n12
														, sum(nvl(c.nt,0)) as nt	
														, sum(nvl(e.n1,0)) as m1
														, sum(nvl(e.n2,0)) as m2
														, sum(nvl(e.n3,0)) as m3
														, sum(nvl(e.n4,0)) as m4
														, sum(nvl(e.n5,0)) as m5
														, sum(nvl(e.n6,0)) as m6
														, sum(nvl(e.n7,0)) as m7
														, sum(nvl(e.n8,0)) as m8
														, sum(nvl(e.n9,0)) as m9
														, sum(nvl(e.n10,0)) as m10
														, sum(nvl(e.n11,0)) as m11
														, sum(nvl(e.n12,0)) as m12
														, sum(nvl(e.nt,0)) as mt	
                                                from bpc_masakun a
                                                left outer join bpc_relakun x on x.kode_akun = a.kode_akun and x.kode_fs ='$model' and x.kode_lokasi = a.kode_lokasi
                                               left outer join (select x.kode_akun
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as n12
																			, sum(nvl(t.nilai,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn1."%' $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) c on c.kode_akun = a.kode_akun
                                                 left outer join (select x.kode_akun
												 							, sum(nvl(case when substr(t.periode,5,2) = '01' then t.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '02' then t.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(t.periode,5,2) = '03' then t.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '04' then t.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(t.periode,5,2) = '05' then t.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '06' then t.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(t.periode,5,2) = '07' then t.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '08' then t.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(t.periode,5,2) = '09' then t.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '10' then t.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(t.periode,5,2) = '11' then t.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(t.periode,5,2) = '12' then t.nilai else 0 end,0)) as n12
																			, sum(nvl(t.nilai,0)) as nt
                                                                    from bpc_masakun x
                                                                    inner join bpc_sap_tb t on t.kode_akun = x.kode_akun and t.periode like '".$thn2."%'  $jenis
                                                                    left outer join bpc_relakun w on w.kode_akun = x.kode_akun and w.kode_lokasi = x.kode_lokasi and w.kode_fs = '$model'
                                                                    where x.kode_lokasi = '$lokasi' and w.kode_akun is null  $filterCFU2 group by x.kode_akun
                                                                    having sum(nvl(t.nilai,0)) <> 0
                                                                ) e on e.kode_akun = a.kode_akun
                                            where a.kode_lokasi = '$lokasi' and x.kode_akun is null 
                                            and (nvl(c.nt,0) <> 0 )
											group by  a.kode_akun, a.nama, a.jenis
                                            order by kode_neraca, kode_akun";
            
            //error_log("getDataEXSUMCFU2 => $sql2 ");
			$rs = $db->execute($sql2);
            $result = new server_util_Map();        
            $neraca = "";
            while ($row = $rs->FetchNextObject(false)){
				 if ($row->jenis_akun == "PENDAPATAN"){
					$row->n1 = ($row->n1) * -1;
					$row->n2 = ($row->n2) * -1;
					$row->n3 = ($row->n3) * -1;
					$row->n4 = ($row->n4) * -1;
					$row->n5 = ($row->n5) * -1;
					$row->n6 = ($row->n6) * -1;
					$row->n7 = ($row->n7) * -1;
					$row->n8 = ($row->n8) * -1;
					$row->n9 = ($row->n9) * -1;
					$row->n10 = ($row->n10) * -1;
					$row->n11 = ($row->n11) * -1;
					$row->n12 = ($row->n12) * -1;
					$row->nt = ($row->nt) * -1;
					$row->m1 = ($row->m1) * -1;
					$row->m2 = ($row->m2) * -1;
					$row->m3 = ($row->m3) * -1;
					$row->m4 = ($row->m4) * -1;
					$row->m5 = ($row->m5) * -1;
					$row->m6 = ($row->m6) * -1;
					$row->m7 = ($row->m7) * -1;
					$row->m8 = ($row->m8) * -1;
					$row->m9 = ($row->m9) * -1;
					$row->m10 = ($row->m10) * -1;
					$row->m11 = ($row->m11) * -1;
					$row->m12 = ($row->m12) * -1;
					$row->mt = ($row->mt) * -1;
					$row->jenis = "INC";
				}else {
					$row->jenis = "EXP";

				}

				$row->n1 = round($row->n1 / $this->pembagi);
				$row->n2 = round($row->n2/ $this->pembagi);
				$row->n3 = round($row->n3/ $this->pembagi);
				$row->n4 = round($row->n4/ $this->pembagi);
				$row->n5 = round($row->n5/ $this->pembagi);
				$row->n6 = round($row->n6/ $this->pembagi);
				$row->n7 = round($row->n7/ $this->pembagi);
				$row->n8 = round($row->n8/ $this->pembagi);
				$row->n9 = round($row->n9/ $this->pembagi);
				$row->n10 = round($row->n10/ $this->pembagi);
				$row->n11 = round($row->n11/ $this->pembagi);
				$row->n12 = round($row->n12/ $this->pembagi);
				$row->nt = round($row->nt/ $this->pembagi);
				$row->m1 = round($row->m1/ $this->pembagi);
				$row->m2 = round($row->m2/ $this->pembagi);
				$row->m3 = round($row->m3/ $this->pembagi);
				$row->m4 = round($row->m4/ $this->pembagi);
				$row->m5 = round($row->m5/ $this->pembagi);
				$row->m6 = round($row->m6/ $this->pembagi);
				$row->m7 = round($row->m7/ $this->pembagi);
				$row->m8 = round($row->m8/ $this->pembagi);
				$row->m9 = round($row->m9/ $this->pembagi);
				$row->m10 = round($row->m10/ $this->pembagi);
				$row->m11 = round($row->m11/ $this->pembagi);
				$row->m12 = round($row->m12/ $this->pembagi);
				$row->mt = round($row->mt/ $this->pembagi);

                if ($neraca != $row->kode_neraca){
                    $neraca = $row->kode_neraca;
                    $item = array();
                }
				
                $item[] = $row;
                $result->set($neraca, $item);
                
            }
            return $result;
        }catch(Exception $e){
            error_log($e->getMessage());
        }
		
	}
	function getRawDataUnconsActual($lokasi, $ubis, $periode){
		$db = $this->getDb();
		$this->cleanUp();
		$tahun = substr($periode, 0, 4);
		$thn1 = $tahun;
		 
 		//error_log("Generate File ");
		// Set document properties
		error_log("get data");
		$rs = $db->execute("select a.kode_cc, a.kode_akun, b.kode_ubis, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * jan as jan, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * feb as feb, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * mar as mar, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * apr as apr, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * mei as mei, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * jun as jun, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * jul as jul, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * aug as aug, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * sep as sep, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * okt as okt, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * nop as nop, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * des as des
											, case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as total
											from exs_mactual a
											inner join exs_cc b on b.kode_cc = a.kode_cc and a.kode_lokasi = b.kode_lokasi
											inner join exs_ubis z on z.kode_ubis = b.kode_ubis and z.kode_lokasi = b.kode_lokasi
											inner join exs_masakun c on c.kode_akun = a.kode_akun and c.kode_lokasi = a.kode_lokasi 
											where tahun='$tahun' and a.jenis = 'S' and a.kode_lokasi = '$lokasi' and z.kode_ubis in (select kode_ubis from exs_ubis where kode_lokasi = '$lokasi' start with kode_ubis = '$ubis' connect by kode_induk = prior kode_ubis);

		");
		error_log("done data");
		$result = array("rs" => array("rows" => array()) );
		while ($val = $rs->FetchNextObject(false)) {
            $result["rs"]["rows"][] = (array)$val;

		}
		return $result;
	}
	function downloadRawDataUnconsActual($lokasi, $ubis, $periode){
		$db = $this->getDb();
		$this->cleanUp();
		error_log("$lokasi $ubis");
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
		$tahun = substr($periode, 0, 4);
		$thn1 = $tahun;
		 
 		error_log("Generate File ");
		// Set document properties
		error_log("get data");
		$rs = $db->execute("select a.kode_cc, a.kode_akun, b.kode_ubis, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * jan as jan, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * feb as feb, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * mar as mar, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * apr as apr, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * mei as mei, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * jun as jun, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * jul as jul, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * aug as aug, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * sep as sep, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * okt as okt, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * nop as nop, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * des as des
											, case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as total
											from exs_mactual a
											inner join exs_cc b on b.kode_cc = a.kode_cc and a.kode_lokasi = b.kode_lokasi
											inner join exs_ubis z on z.kode_ubis = b.kode_ubis and z.kode_lokasi = b.kode_lokasi
											inner join exs_masakun c on c.kode_akun = a.kode_akun and c.kode_lokasi = a.kode_lokasi 
											where tahun='$tahun' and a.jenis = 'S' and a.kode_lokasi = '$lokasi' and z.kode_ubis in (select kode_ubis from exs_ubis where kode_lokasi = '$lokasi' start with kode_ubis = '$ubis' connect by kode_induk = prior kode_ubis)");
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 		error_log("Generate File ");	

		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									),
				'alignment' => array(
                                    	'wrap'       => true,
                                        'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                                        'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                                        ),
				 ));
		
		$column = array("CC","Akun","Ubis","Jan $thn1","Feb $thn1","Mar $thn1","Apr $thn1","Mei $thn1","Jun $thn1","Jul $thn1","Agt $thn1","Sep $thn1","Okt $thn1","Nop $thn1","Des $thn1","Total $thn1");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        $row = 2;
        while ($val = $rs->FetchNextObject(false)) {
            $row++;
            $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_cc);
            $sheet->setCellValueByColumnAndRow(1, $row, $val->kode_akun);
            $sheet->setCellValueByColumnAndRow(2, $row, $val->kode_ubis);
            $sheet->setCellValueByColumnAndRow(3, $row, $val->jan);
            $sheet->setCellValueByColumnAndRow(4, $row, $val->feb);
            $sheet->setCellValueByColumnAndRow(5, $row, $val->mar);
            $sheet->setCellValueByColumnAndRow(6, $row, $val->apr);
			$sheet->setCellValueByColumnAndRow(7, $row, $val->mei);
            $sheet->setCellValueByColumnAndRow(8, $row, $val->jun);
            $sheet->setCellValueByColumnAndRow(9, $row, $val->jul);
            $sheet->setCellValueByColumnAndRow(10, $row, $val->aug);
			$sheet->setCellValueByColumnAndRow(11, $row, $val->sep);
            $sheet->setCellValueByColumnAndRow(12, $row, $val->okt);
            $sheet->setCellValueByColumnAndRow(13, $row, $val->nop);
            $sheet->setCellValueByColumnAndRow(14, $row, $val->des);

		}
		$sheet->setTitle("$tahun");
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
		
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/RawData-$tahun-_$namafile.xlsx");
	
 		error_log("Done generate $namafile");
		return "/tmp/RawData-$tahun-_$namafile.xlsx";
	}
	function downloadRawDataUnconsBudget($lokasi, $ubis, $periode){
		$db = $this->getDb();
		$this->cleanUp();
		error_log("$lokasi $ubis");
		uses("server_modules_codeplex_PHPExcel",false);
		$objPHPExcel = new PHPExcel();
		$tahun = substr($periode, 0, 4);
		$thn1 = $tahun;
		 
 		error_log("Generate File ");
		// Set document properties
		error_log("get data");
		$rs = $db->execute("select a.kode_cc, a.kode_akun, b.kode_ubis, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * jan as jan, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * feb as feb, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * mar as mar, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * apr as apr, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * mei as mei, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * jun as jun, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * jul as jul, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * aug as aug, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * sep as sep, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * okt as okt, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * nop as nop, 
			case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * des as des
											, case when upper(c.jenis) = 'PENDAPATAN' then -1 else 1 end * (jan + feb + mar + apr + mei + jun + jul + aug + sep + okt + nop + des) as total
											from exs_mbudget a
											inner join exs_cc b on b.kode_cc = a.kode_cc and a.kode_lokasi = b.kode_lokasi
											inner join exs_ubis z on z.kode_ubis = b.kode_ubis and z.kode_lokasi = b.kode_lokasi
											inner join exs_masakun c on c.kode_akun = a.kode_akun and c.kode_lokasi = a.kode_lokasi 
											where tahun='$tahun' and a.jenis = 'S' and a.kode_lokasi = '$lokasi' and z.kode_ubis in (select kode_ubis from exs_ubis where kode_lokasi = '$lokasi' start with kode_ubis = '$ubis' connect by kode_induk = prior kode_ubis)");
		$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
						 ->setLastModifiedBy("MA")
						 ->setTitle("Template RKAP")
						 ->setSubject("RKAP")
						 ->setDescription("Template RKAP")
						  ->setKeywords("RKAP Template")
							 ->setCategory("RKAP");
 		error_log("Generate File ");	

		$objPHPExcel->setActiveSheetIndex(0);
		$sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
										'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
										'color'		=> array('argb' => 'FFCCFFCC')
									),
				  'borders' => array(
										'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
										'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
									),
				'alignment' => array(
                                    	'wrap'       => true,
                                        'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                                        'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
                                        ),
				 ));
		
		$column = array("CC","Akun","Ubis","Jan $thn1","Feb $thn1","Mar $thn1","Apr $thn1","Mei $thn1","Jun $thn1","Jul $thn1","Agt $thn1","Sep $thn1","Okt $thn1","Nop $thn1","Des $thn1","Total $thn1");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
        $row = 2;
        while ($val = $rs->FetchNextObject(false)) {
            $row++;
            $sheet->setCellValueByColumnAndRow(0, $row, $val->kode_cc);
            $sheet->setCellValueByColumnAndRow(1, $row, $val->kode_akun);
            $sheet->setCellValueByColumnAndRow(2, $row, $val->kode_ubis);
            $sheet->setCellValueByColumnAndRow(3, $row, $val->jan);
            $sheet->setCellValueByColumnAndRow(4, $row, $val->feb);
            $sheet->setCellValueByColumnAndRow(5, $row, $val->mar);
            $sheet->setCellValueByColumnAndRow(6, $row, $val->apr);
			$sheet->setCellValueByColumnAndRow(7, $row, $val->mei);
            $sheet->setCellValueByColumnAndRow(8, $row, $val->jun);
            $sheet->setCellValueByColumnAndRow(9, $row, $val->jul);
            $sheet->setCellValueByColumnAndRow(10, $row, $val->aug);
			$sheet->setCellValueByColumnAndRow(11, $row, $val->sep);
            $sheet->setCellValueByColumnAndRow(12, $row, $val->okt);
            $sheet->setCellValueByColumnAndRow(13, $row, $val->nop);
            $sheet->setCellValueByColumnAndRow(14, $row, $val->des);

		}
		$sheet->setTitle("$tahun");
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);
		
 
		// Save Excel 2007 file
		$namafile = MD5(date("r"));
 		global $serverDir;
 		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save($serverDir . "/tmp/RawData-$tahun-_$namafile.xlsx");
	
 		error_log("Done generate $namafile");
		return "/tmp/RawData-$tahun-_$namafile.xlsx";
	}
	function getDataElim($cfu, $lokasi, $ubis, $periode){
		$db = $this->getDb();
		/*
		select x.kode_neraca
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '01' then a.nilai else 0 end,0)) as n1
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '02' then a.nilai else 0 end,0)) as n2
																			, sum(nvl(case when substr(a.periode,5,2) = '03' then a.nilai else 0 end,0)) as n3
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '04' then a.nilai else 0 end,0)) as n4
																			, sum(nvl(case when substr(a.periode,5,2) = '05' then a.nilai else 0 end,0)) as n5
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '06' then a.nilai else 0 end,0)) as n6
																			, sum(nvl(case when substr(a.periode,5,2) = '07' then a.nilai else 0 end,0)) as n7
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '08' then a.nilai else 0 end,0)) as n8
																			, sum(nvl(case when substr(a.periode,5,2) = '09' then a.nilai else 0 end,0)) as n9
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '10' then a.nilai else 0 end,0)) as n10
																			, sum(nvl(case when substr(a.periode,5,2) = '11' then a.nilai else 0 end,0)) as n11
                                                                            , sum(nvl(case when substr(a.periode,5,2) = '12' then a.nilai else 0 end,0)) as n12
																			, sum(nvl(case when substr(a.periode,5,2) between '01' and '12' then a.nilai else 0 end,0)) as nt
                                                                    from bpc_relakun x
                                                                    inner join bpc_masakun x1 on x1.kode_akun = x.kode_akun and x1.kode_lokasi = x.kode_lokasi 
                                                                    inner join bpc_sap_tb a on a.kode_akun = x.kode_akun and a.periode like '".$thn1."%' $jenis
                                                                    where x.kode_fs = '$model' and x.kode_lokasi = '$lokasi' $filterCFU2 group by x.kode_neraca
		
		*/
	}
	// function downloadCashFlow($compCode, $periode){
	// 	$this->getDb();
		
	// 	$this->cleanUp();
	// 	uses("server_modules_codeplex_PHPExcel",false);
	// 	$objPHPExcel = new PHPExcel();
	
	
	// 	// Set document properties
	// 	$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
	// 					 ->setLastModifiedBy("MA")
	// 					 ->setTitle("Template Cash Flow")
	// 					 ->setSubject("Cash Flow")
	// 					 ->setDescription("Template Cash Flow")
	// 					 ->setKeywords("Cash Flow Template")
	// 					 ->setCategory("Cash Flow");
		
	// 	$dataOperating1 = $this->generateOperating1($compCode, $periode);
	// 	$dataOperating2 = $this->generateOperating2($compCode, $periode);
	// 	$dataInvesting = $this->generateInvesting($compCode, $periode);
	// 	$dataFinancing = $this->generateFinancing($compCode, $periode);
			
	// 	$objPHPExcel->setActiveSheetIndex(0);
	// 	$sheet = $objPHPExcel->getActiveSheet();
	// 	$sharedStyle1 = new PHPExcel_Style();
	// 	$sharedStyle1->applyFromArray(
	// 		array('fill' 	=> array(
	// 									'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
	// 									'color'		=> array('argb' => 'FFCCFFCC')
	// 								),
	// 			  'borders' => array(
	// 									'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
	// 									'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
	// 								)
	// 			 ));
	// 	$column = array("Uraian","Kode","Beginning","Ending","Full Amount","Miliar","Jenis");
	// 	$col = 0;
	// 	$row = 1;
	// 	foreach ($column as $value){	
	// 		$sheet->setCellValueByColumnAndRow($col, $row, $value);
	// 		$col++;
	// 	}
	// 	$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
	// 	$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
		
	// 	foreach ($dataOperating1["rs"]["rows"] as $val){
	// 		$row++;
	// 		$val  = json_decode(json_encode($val));
	// 		$sheet->setCellValueByColumnAndRow(0, $row, $val->nama);
	// 		$sheet->setCellValueByColumnAndRow(1, $row, $val->kode_cf);
	// 		$sheet->setCellValueByColumnAndRow(2, $row, $val->sawal);
	// 		$sheet->setCellValueByColumnAndRow(3, $row, $val->sakhir);
	// 		$sheet->setCellValueByColumnAndRow(4, $row, $val->nilai1);
	// 		$sheet->setCellValueByColumnAndRow(5, $row, $val->nilai2);
	// 		$sheet->setCellValueByColumnAndRow(6, $row, $val->jenis);
			
	// 	}
	
	// 	// Set active sheet index to the first sheet, so Excel opens this as the first sheet
	// 	$objPHPExcel->setActiveSheetIndex(0);
	
	
	// 	// Save Excel 2007 file
	// 	$namafile = MD5(date("r"));
	// 	 global $serverDir;
	// 	 $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
	// 	$objWriter->save($serverDir . "/tmp/CFU_$namafile.xlsx");
	
	
	// 	return "/tmp/CFU_$namafile.xlsx";
	// }

	function addSheet(&$sheet, $data){
		// $sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
								'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
								'color'		=> array('argb' => 'FFCCFFCC')
							),
			'borders' => array(
								'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
								'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
							)
			));
		$column = array("Uraian","Kode","Beginning","Ending","Full Amount","Miliar","Jenis","level");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
	   
		foreach ($data["rs"]["rows"] as $val){
			$row++;
			$val  = json_decode(json_encode($val));
			$sheet->setCellValueByColumnAndRow(0, $row, str_replace("&nbsp;"," ", $val->nama));
			$sheet->setCellValueByColumnAndRow(1, $row, $val->kode_cf);
			$sheet->setCellValueByColumnAndRow(2, $row, $val->sawal);
			$sheet->setCellValueByColumnAndRow(3, $row, $val->sakhir);
			$sheet->setCellValueByColumnAndRow(4, $row, $val->nilai);
			$sheet->setCellValueByColumnAndRow(5, $row, $val->nilai2);
			$sheet->setCellValueByColumnAndRow(6, $row, $val->jenis);
			$sheet->setCellValueByColumnAndRow(7, $row, $val->level_spasi);
			
		}
	
	}

	function addSheetCF(&$sheet, $data){
		// $sheet = $objPHPExcel->getActiveSheet();
		$sharedStyle1 = new PHPExcel_Style();
		$sharedStyle1->applyFromArray(
			array('fill' 	=> array(
								'type'		=> PHPExcel_Style_Fill::FILL_SOLID,
								'color'		=> array('argb' => 'FFCCFFCC')
							),
			'borders' => array(
								'bottom'	=> array('style' => PHPExcel_Style_Border::BORDER_THIN),
								'right'		=> array('style' => PHPExcel_Style_Border::BORDER_THIN)
							)
			));
		$column = array("Uraian","Kode","Full Amount","Miliar","lvl");
		$col = 0;
		$row = 1;
		foreach ($column as $value){	
			$sheet->setCellValueByColumnAndRow($col, $row, $value);
			$col++;
		}
		$end = PHPExcel_Cell::stringFromColumnIndex($col-1);
		$sheet->setSharedStyle($sharedStyle1,"A1:".$end."1");
	   
		foreach ($data["rs"]["rows"] as $val){
			$row++;
			$val  = json_decode(json_encode($val));
			$sheet->setCellValueByColumnAndRow(0, $row, str_replace("&nbsp;"," ", $val->nama) );
			$sheet->setCellValueByColumnAndRow(1, $row, $val->kode_cf);
			$sheet->setCellValueByColumnAndRow(2, $row, $val->nilai);
			$sheet->setCellValueByColumnAndRow(3, $row, $val->nilai2);
			$sheet->setCellValueByColumnAndRow(4, $row, $val->level_spasi);
			
		}
	
	}
	
	
	function downloadCashFlow($compCode, $periode){
			$this->getDb();
			
			$this->cleanUp();
			uses("server_modules_codeplex_PHPExcel",false);
			$objPHPExcel = new PHPExcel();
	 
			// Set document properties
			$objPHPExcel->getProperties()->setCreator("PT TELKOM ")
							 ->setLastModifiedBy("MA")
							 ->setTitle("Template Cash Flow")
							 ->setSubject("Cash Flow")
							 ->setDescription("Template Cash Flow")
							 ->setKeywords("Cash Flow Template")
							 ->setCategory("Cash Flow");
			
			$dataOperating1 = $this->generateOperating1($compCode, $periode);
			$dataOperating2 = $this->generateOperating2($compCode, $periode);
			$dataInvesting = $this->generateInvesting($compCode, $periode);
			$dataFinancing = $this->generateFinancing($compCode, $periode);
			$dataCF = $this->generateCashFlow($compCode, $periode);
			
	
			$sheet1 = $objPHPExcel->getActiveSheet(); 
			$sheet1->setTitle("OPERATING1");
			$this->addSheet($sheet1, $dataOperating1);
			
			$sheet2 = $objPHPExcel->createSheet();  
			$sheet2->setTitle("OPERATING2");
			$this->addSheet($sheet2, $dataOperating2);
	
			$sheet3 = $objPHPExcel->createSheet();  
			$sheet3->setTitle("INVESTING");
			$this->addSheet($sheet3,  $dataInvesting);
	
			$sheet4 = $objPHPExcel->createSheet();  
			$sheet4->setTitle("FINANCING");
			$this->addSheet($sheet4, $dataFinancing);

			$sheet5 = $objPHPExcel->createSheet();  
			$sheet5->setTitle("REPORT CF");
			$this->addSheetCF($sheet5, $dataCF);

			
		
			$objPHPExcel->setActiveSheetIndex(0);
			
			// Save Excel 2007 file
			$namafile = MD5(date("r"));
			 global $serverDir;
			 $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
			$objWriter->save($serverDir . "/tmp/CF_$namafile.xlsx");
		
	 
			return "/tmp/CF_$namafile.xlsx";
		}
	function getPesanAdmin(){
		$db = $this->getDb();
		$rs = $db->execute("select pesan, tanggal from exs_adminmsg order by tanggal desc");
		if ($row = $rs->FetchNextObject(false)){
			$info = $row->pesan;
		}
		$periode=  date("Y");
		$bln = date("m");
		if ($bln == "01"){
			$periode=  floatval($periode) - 1;	
		}
		$rs = $db->execute("select distinct tgl_upd, to_char(tgl_upd, 'Dy, DD MON YYYY HH24:MI') as tgl from exs_mactual where tahun = :0 and jenis = 'S' order by tgl_upd desc", array($periode));
		if ($row = $rs->FetchNextObject(false)){
			$synch = $row->tgl;
		}
		$tahun = date("Y");
		if ($bln == "01"){
			$tahun=  floatval($tahun) - 1;	
		}
		$compCode = "1000";
		$rs = $db->execute("select distinct a.kode_akun ,c.nama from exs_mactual a
			inner join exs_cc b on b.kode_cc = a.kode_cc and b.kode_lokasi = a.kode_lokasi 
			left outer join exs_masakun c on c.kode_akun = a.kode_akun and c.kode_lokasi = a.kode_lokasi 
			left outer join exs_relakun b on b.kode_akun = a.kode_akun and b.kode_lokasi = :1 and b.kode_fs = 'LCD'
			where b.kode_akun is null and a.kode_lokasi = '1000' and a.tahun = :0 and not ( a.kode_cc like 'TA%' or a.kode_cc like 'PK%' ) " , array($tahun, $compCode));
		$akun = "";
		while ($row = $rs->FetchNextObject(false)){
			$akun .= $row->kode_akun . " <br>";
		}

		$compCode = "9000";
		$rs = $db->execute("select distinct a.kode_akun ,c.nama from bpc_sap_tb a
			left outer join bpc_masakun c on c.kode_akun = a.kode_akun and c.kode_lokasi = :1 
			left outer join bpc_relakun b on b.kode_akun = a.kode_akun and b.kode_lokasi = :1 and b.kode_fs = 'LCD'
			where b.kode_akun is null and substr(a.periode,0,4)  = :0" , array($tahun, $compCode));
		$akun2 = "";
		while ($row = $rs->FetchNextObject(false)){
			$akun2 .= $row->kode_akun . " <br>";
		}

		$result = array("info" => $info, "synch" => $synch ,"akun" => $akun, "consol" => $akun2);
		return $result;
	}

}
?>